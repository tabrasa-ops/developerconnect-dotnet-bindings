/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractTax4506s
    /// </summary>
    [DataContract]
    public partial class LoanContractTax4506s :  IEquatable<LoanContractTax4506s>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets AccountTranscript
        /// </summary>
        [DataMember(Name="accountTranscript", EmitDefaultValue=false)]
        public bool? AccountTranscript { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name="city", EmitDefaultValue=false)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets CostForEachPeriod
        /// </summary>
        [DataMember(Name="costForEachPeriod", EmitDefaultValue=false)]
        public double? CostForEachPeriod { get; set; }

        /// <summary>
        /// Gets or Sets CurrentFirst
        /// </summary>
        [DataMember(Name="currentFirst", EmitDefaultValue=false)]
        public string CurrentFirst { get; set; }

        /// <summary>
        /// Gets or Sets CurrentLast
        /// </summary>
        [DataMember(Name="currentLast", EmitDefaultValue=false)]
        public string CurrentLast { get; set; }

        /// <summary>
        /// Gets or Sets First
        /// </summary>
        [DataMember(Name="first", EmitDefaultValue=false)]
        public string First { get; set; }

        /// <summary>
        /// Gets or Sets FormsSeriesTranscript
        /// </summary>
        [DataMember(Name="formsSeriesTranscript", EmitDefaultValue=false)]
        public bool? FormsSeriesTranscript { get; set; }

        /// <summary>
        /// Gets or Sets HistoryId
        /// </summary>
        [DataMember(Name="historyId", EmitDefaultValue=false)]
        public string HistoryId { get; set; }

        /// <summary>
        /// Gets or Sets HistoryIndicator
        /// </summary>
        [DataMember(Name="historyIndicator", EmitDefaultValue=false)]
        public bool? HistoryIndicator { get; set; }

        /// <summary>
        /// Gets or Sets IfTaxRecordNotFound
        /// </summary>
        [DataMember(Name="ifTaxRecordNotFound", EmitDefaultValue=false)]
        public bool? IfTaxRecordNotFound { get; set; }

        /// <summary>
        /// Gets or Sets Last
        /// </summary>
        [DataMember(Name="last", EmitDefaultValue=false)]
        public string Last { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdatedDate
        /// </summary>
        [DataMember(Name="lastUpdatedDate", EmitDefaultValue=false)]
        public DateTime? LastUpdatedDate { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdatedHistory
        /// </summary>
        [DataMember(Name="lastUpdatedHistory", EmitDefaultValue=false)]
        public int? LastUpdatedHistory { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdatedTime
        /// </summary>
        [DataMember(Name="lastUpdatedTime", EmitDefaultValue=false)]
        public string LastUpdatedTime { get; set; }

        /// <summary>
        /// Gets or Sets NotifiedIrsIdentityTheftIndicator
        /// </summary>
        [DataMember(Name="notifiedIrsIdentityTheftIndicator", EmitDefaultValue=false)]
        public bool? NotifiedIrsIdentityTheftIndicator { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfPeriods
        /// </summary>
        [DataMember(Name="numberOfPeriods", EmitDefaultValue=false)]
        public int? NumberOfPeriods { get; set; }

        /// <summary>
        /// Gets or Sets Person
        /// </summary>
        [DataMember(Name="person", EmitDefaultValue=false)]
        public string Person { get; set; }

        /// <summary>
        /// Gets or Sets RecordOfAccount
        /// </summary>
        [DataMember(Name="recordOfAccount", EmitDefaultValue=false)]
        public bool? RecordOfAccount { get; set; }

        /// <summary>
        /// Gets or Sets RequestorPhoneNumber
        /// </summary>
        [DataMember(Name="requestorPhoneNumber", EmitDefaultValue=false)]
        public string RequestorPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets RequestYear1
        /// </summary>
        [DataMember(Name="requestYear1", EmitDefaultValue=false)]
        public DateTime? RequestYear1 { get; set; }

        /// <summary>
        /// Gets or Sets RequestYear2
        /// </summary>
        [DataMember(Name="requestYear2", EmitDefaultValue=false)]
        public DateTime? RequestYear2 { get; set; }

        /// <summary>
        /// Gets or Sets RequestYear3
        /// </summary>
        [DataMember(Name="requestYear3", EmitDefaultValue=false)]
        public DateTime? RequestYear3 { get; set; }

        /// <summary>
        /// Gets or Sets RequestYear4
        /// </summary>
        [DataMember(Name="requestYear4", EmitDefaultValue=false)]
        public DateTime? RequestYear4 { get; set; }

        /// <summary>
        /// Gets or Sets RequestYear5
        /// </summary>
        [DataMember(Name="requestYear5", EmitDefaultValue=false)]
        public DateTime? RequestYear5 { get; set; }

        /// <summary>
        /// Gets or Sets RequestYear6
        /// </summary>
        [DataMember(Name="requestYear6", EmitDefaultValue=false)]
        public DateTime? RequestYear6 { get; set; }

        /// <summary>
        /// Gets or Sets RequestYear7
        /// </summary>
        [DataMember(Name="requestYear7", EmitDefaultValue=false)]
        public DateTime? RequestYear7 { get; set; }

        /// <summary>
        /// Gets or Sets RequestYear8
        /// </summary>
        [DataMember(Name="requestYear8", EmitDefaultValue=false)]
        public DateTime? RequestYear8 { get; set; }

        /// <summary>
        /// Gets or Sets ReturnAddress
        /// </summary>
        [DataMember(Name="returnAddress", EmitDefaultValue=false)]
        public string ReturnAddress { get; set; }

        /// <summary>
        /// Gets or Sets ReturnCity
        /// </summary>
        [DataMember(Name="returnCity", EmitDefaultValue=false)]
        public string ReturnCity { get; set; }

        /// <summary>
        /// Gets or Sets ReturnState
        /// </summary>
        [DataMember(Name="returnState", EmitDefaultValue=false)]
        public string ReturnState { get; set; }

        /// <summary>
        /// Gets or Sets ReturnTranscript
        /// </summary>
        [DataMember(Name="returnTranscript", EmitDefaultValue=false)]
        public bool? ReturnTranscript { get; set; }

        /// <summary>
        /// Gets or Sets ReturnZip
        /// </summary>
        [DataMember(Name="returnZip", EmitDefaultValue=false)]
        public string ReturnZip { get; set; }

        /// <summary>
        /// Gets or Sets SelectedRecordNumber
        /// </summary>
        [DataMember(Name="selectedRecordNumber", EmitDefaultValue=false)]
        public string SelectedRecordNumber { get; set; }

        /// <summary>
        /// Gets or Sets SendAddress
        /// </summary>
        [DataMember(Name="sendAddress", EmitDefaultValue=false)]
        public string SendAddress { get; set; }

        /// <summary>
        /// Gets or Sets SendCity
        /// </summary>
        [DataMember(Name="sendCity", EmitDefaultValue=false)]
        public string SendCity { get; set; }

        /// <summary>
        /// Gets or Sets SendFirst
        /// </summary>
        [DataMember(Name="sendFirst", EmitDefaultValue=false)]
        public string SendFirst { get; set; }

        /// <summary>
        /// Gets or Sets SendLast
        /// </summary>
        [DataMember(Name="sendLast", EmitDefaultValue=false)]
        public string SendLast { get; set; }

        /// <summary>
        /// Gets or Sets SendPhone
        /// </summary>
        [DataMember(Name="sendPhone", EmitDefaultValue=false)]
        public string SendPhone { get; set; }

        /// <summary>
        /// Gets or Sets SendState
        /// </summary>
        [DataMember(Name="sendState", EmitDefaultValue=false)]
        public string SendState { get; set; }

        /// <summary>
        /// Gets or Sets SendZip
        /// </summary>
        [DataMember(Name="sendZip", EmitDefaultValue=false)]
        public string SendZip { get; set; }

        /// <summary>
        /// Gets or Sets SpouseFirst
        /// </summary>
        [DataMember(Name="spouseFirst", EmitDefaultValue=false)]
        public string SpouseFirst { get; set; }

        /// <summary>
        /// Gets or Sets SpouseLast
        /// </summary>
        [DataMember(Name="spouseLast", EmitDefaultValue=false)]
        public string SpouseLast { get; set; }

        /// <summary>
        /// Gets or Sets SpouseSSN
        /// </summary>
        [DataMember(Name="spouseSSN", EmitDefaultValue=false)]
        public string SpouseSSN { get; set; }

        /// <summary>
        /// Gets or Sets SpouseUseEIN
        /// </summary>
        [DataMember(Name="spouseUseEIN", EmitDefaultValue=false)]
        public bool? SpouseUseEIN { get; set; }

        /// <summary>
        /// Gets or Sets SSN
        /// </summary>
        [DataMember(Name="sSN", EmitDefaultValue=false)]
        public string SSN { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets Tax4506TIndicator
        /// </summary>
        [DataMember(Name="tax4506TIndicator", EmitDefaultValue=false)]
        public bool? Tax4506TIndicator { get; set; }

        /// <summary>
        /// Gets or Sets TaxFormNumber
        /// </summary>
        [DataMember(Name="taxFormNumber", EmitDefaultValue=false)]
        public string TaxFormNumber { get; set; }

        /// <summary>
        /// Gets or Sets TheseCopiesMustBeCertified
        /// </summary>
        [DataMember(Name="theseCopiesMustBeCertified", EmitDefaultValue=false)]
        public bool? TheseCopiesMustBeCertified { get; set; }

        /// <summary>
        /// Gets or Sets TotalCost
        /// </summary>
        [DataMember(Name="totalCost", EmitDefaultValue=false)]
        public double? TotalCost { get; set; }

        /// <summary>
        /// Gets or Sets UseEIN
        /// </summary>
        [DataMember(Name="useEIN", EmitDefaultValue=false)]
        public bool? UseEIN { get; set; }

        /// <summary>
        /// Gets or Sets UseWellsFargoRules
        /// </summary>
        [DataMember(Name="useWellsFargoRules", EmitDefaultValue=false)]
        public bool? UseWellsFargoRules { get; set; }

        /// <summary>
        /// Gets or Sets VerificationOfNonfiling
        /// </summary>
        [DataMember(Name="verificationOfNonfiling", EmitDefaultValue=false)]
        public bool? VerificationOfNonfiling { get; set; }

        /// <summary>
        /// Gets or Sets Zip
        /// </summary>
        [DataMember(Name="zip", EmitDefaultValue=false)]
        public string Zip { get; set; }

        /// <summary>
        /// Gets or Sets SignatoryAttestation
        /// </summary>
        [DataMember(Name="signatoryAttestation", EmitDefaultValue=false)]
        public bool? SignatoryAttestation { get; set; }

        /// <summary>
        /// Gets or Sets SignatoryAttestationT
        /// </summary>
        [DataMember(Name="signatoryAttestationT", EmitDefaultValue=false)]
        public bool? SignatoryAttestationT { get; set; }

        /// <summary>
        /// Gets or Sets Tax4506Index
        /// </summary>
        [DataMember(Name="tax4506Index", EmitDefaultValue=false)]
        public int? Tax4506Index { get; set; }

        /// <summary>
        /// Gets or Sets RequestorTitle
        /// </summary>
        [DataMember(Name="requestorTitle", EmitDefaultValue=false)]
        public string RequestorTitle { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractTax4506s {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AccountTranscript: ").Append(AccountTranscript).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  CostForEachPeriod: ").Append(CostForEachPeriod).Append("\n");
            sb.Append("  CurrentFirst: ").Append(CurrentFirst).Append("\n");
            sb.Append("  CurrentLast: ").Append(CurrentLast).Append("\n");
            sb.Append("  First: ").Append(First).Append("\n");
            sb.Append("  FormsSeriesTranscript: ").Append(FormsSeriesTranscript).Append("\n");
            sb.Append("  HistoryId: ").Append(HistoryId).Append("\n");
            sb.Append("  HistoryIndicator: ").Append(HistoryIndicator).Append("\n");
            sb.Append("  IfTaxRecordNotFound: ").Append(IfTaxRecordNotFound).Append("\n");
            sb.Append("  Last: ").Append(Last).Append("\n");
            sb.Append("  LastUpdatedDate: ").Append(LastUpdatedDate).Append("\n");
            sb.Append("  LastUpdatedHistory: ").Append(LastUpdatedHistory).Append("\n");
            sb.Append("  LastUpdatedTime: ").Append(LastUpdatedTime).Append("\n");
            sb.Append("  NotifiedIrsIdentityTheftIndicator: ").Append(NotifiedIrsIdentityTheftIndicator).Append("\n");
            sb.Append("  NumberOfPeriods: ").Append(NumberOfPeriods).Append("\n");
            sb.Append("  Person: ").Append(Person).Append("\n");
            sb.Append("  RecordOfAccount: ").Append(RecordOfAccount).Append("\n");
            sb.Append("  RequestorPhoneNumber: ").Append(RequestorPhoneNumber).Append("\n");
            sb.Append("  RequestYear1: ").Append(RequestYear1).Append("\n");
            sb.Append("  RequestYear2: ").Append(RequestYear2).Append("\n");
            sb.Append("  RequestYear3: ").Append(RequestYear3).Append("\n");
            sb.Append("  RequestYear4: ").Append(RequestYear4).Append("\n");
            sb.Append("  RequestYear5: ").Append(RequestYear5).Append("\n");
            sb.Append("  RequestYear6: ").Append(RequestYear6).Append("\n");
            sb.Append("  RequestYear7: ").Append(RequestYear7).Append("\n");
            sb.Append("  RequestYear8: ").Append(RequestYear8).Append("\n");
            sb.Append("  ReturnAddress: ").Append(ReturnAddress).Append("\n");
            sb.Append("  ReturnCity: ").Append(ReturnCity).Append("\n");
            sb.Append("  ReturnState: ").Append(ReturnState).Append("\n");
            sb.Append("  ReturnTranscript: ").Append(ReturnTranscript).Append("\n");
            sb.Append("  ReturnZip: ").Append(ReturnZip).Append("\n");
            sb.Append("  SelectedRecordNumber: ").Append(SelectedRecordNumber).Append("\n");
            sb.Append("  SendAddress: ").Append(SendAddress).Append("\n");
            sb.Append("  SendCity: ").Append(SendCity).Append("\n");
            sb.Append("  SendFirst: ").Append(SendFirst).Append("\n");
            sb.Append("  SendLast: ").Append(SendLast).Append("\n");
            sb.Append("  SendPhone: ").Append(SendPhone).Append("\n");
            sb.Append("  SendState: ").Append(SendState).Append("\n");
            sb.Append("  SendZip: ").Append(SendZip).Append("\n");
            sb.Append("  SpouseFirst: ").Append(SpouseFirst).Append("\n");
            sb.Append("  SpouseLast: ").Append(SpouseLast).Append("\n");
            sb.Append("  SpouseSSN: ").Append(SpouseSSN).Append("\n");
            sb.Append("  SpouseUseEIN: ").Append(SpouseUseEIN).Append("\n");
            sb.Append("  SSN: ").Append(SSN).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  Tax4506TIndicator: ").Append(Tax4506TIndicator).Append("\n");
            sb.Append("  TaxFormNumber: ").Append(TaxFormNumber).Append("\n");
            sb.Append("  TheseCopiesMustBeCertified: ").Append(TheseCopiesMustBeCertified).Append("\n");
            sb.Append("  TotalCost: ").Append(TotalCost).Append("\n");
            sb.Append("  UseEIN: ").Append(UseEIN).Append("\n");
            sb.Append("  UseWellsFargoRules: ").Append(UseWellsFargoRules).Append("\n");
            sb.Append("  VerificationOfNonfiling: ").Append(VerificationOfNonfiling).Append("\n");
            sb.Append("  Zip: ").Append(Zip).Append("\n");
            sb.Append("  SignatoryAttestation: ").Append(SignatoryAttestation).Append("\n");
            sb.Append("  SignatoryAttestationT: ").Append(SignatoryAttestationT).Append("\n");
            sb.Append("  Tax4506Index: ").Append(Tax4506Index).Append("\n");
            sb.Append("  RequestorTitle: ").Append(RequestorTitle).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractTax4506s);
        }

        /// <summary>
        /// Returns true if LoanContractTax4506s instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractTax4506s to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractTax4506s input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AccountTranscript == input.AccountTranscript ||
                    (this.AccountTranscript != null &&
                    this.AccountTranscript.Equals(input.AccountTranscript))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.City == input.City ||
                    (this.City != null &&
                    this.City.Equals(input.City))
                ) && 
                (
                    this.CostForEachPeriod == input.CostForEachPeriod ||
                    (this.CostForEachPeriod != null &&
                    this.CostForEachPeriod.Equals(input.CostForEachPeriod))
                ) && 
                (
                    this.CurrentFirst == input.CurrentFirst ||
                    (this.CurrentFirst != null &&
                    this.CurrentFirst.Equals(input.CurrentFirst))
                ) && 
                (
                    this.CurrentLast == input.CurrentLast ||
                    (this.CurrentLast != null &&
                    this.CurrentLast.Equals(input.CurrentLast))
                ) && 
                (
                    this.First == input.First ||
                    (this.First != null &&
                    this.First.Equals(input.First))
                ) && 
                (
                    this.FormsSeriesTranscript == input.FormsSeriesTranscript ||
                    (this.FormsSeriesTranscript != null &&
                    this.FormsSeriesTranscript.Equals(input.FormsSeriesTranscript))
                ) && 
                (
                    this.HistoryId == input.HistoryId ||
                    (this.HistoryId != null &&
                    this.HistoryId.Equals(input.HistoryId))
                ) && 
                (
                    this.HistoryIndicator == input.HistoryIndicator ||
                    (this.HistoryIndicator != null &&
                    this.HistoryIndicator.Equals(input.HistoryIndicator))
                ) && 
                (
                    this.IfTaxRecordNotFound == input.IfTaxRecordNotFound ||
                    (this.IfTaxRecordNotFound != null &&
                    this.IfTaxRecordNotFound.Equals(input.IfTaxRecordNotFound))
                ) && 
                (
                    this.Last == input.Last ||
                    (this.Last != null &&
                    this.Last.Equals(input.Last))
                ) && 
                (
                    this.LastUpdatedDate == input.LastUpdatedDate ||
                    (this.LastUpdatedDate != null &&
                    this.LastUpdatedDate.Equals(input.LastUpdatedDate))
                ) && 
                (
                    this.LastUpdatedHistory == input.LastUpdatedHistory ||
                    (this.LastUpdatedHistory != null &&
                    this.LastUpdatedHistory.Equals(input.LastUpdatedHistory))
                ) && 
                (
                    this.LastUpdatedTime == input.LastUpdatedTime ||
                    (this.LastUpdatedTime != null &&
                    this.LastUpdatedTime.Equals(input.LastUpdatedTime))
                ) && 
                (
                    this.NotifiedIrsIdentityTheftIndicator == input.NotifiedIrsIdentityTheftIndicator ||
                    (this.NotifiedIrsIdentityTheftIndicator != null &&
                    this.NotifiedIrsIdentityTheftIndicator.Equals(input.NotifiedIrsIdentityTheftIndicator))
                ) && 
                (
                    this.NumberOfPeriods == input.NumberOfPeriods ||
                    (this.NumberOfPeriods != null &&
                    this.NumberOfPeriods.Equals(input.NumberOfPeriods))
                ) && 
                (
                    this.Person == input.Person ||
                    (this.Person != null &&
                    this.Person.Equals(input.Person))
                ) && 
                (
                    this.RecordOfAccount == input.RecordOfAccount ||
                    (this.RecordOfAccount != null &&
                    this.RecordOfAccount.Equals(input.RecordOfAccount))
                ) && 
                (
                    this.RequestorPhoneNumber == input.RequestorPhoneNumber ||
                    (this.RequestorPhoneNumber != null &&
                    this.RequestorPhoneNumber.Equals(input.RequestorPhoneNumber))
                ) && 
                (
                    this.RequestYear1 == input.RequestYear1 ||
                    (this.RequestYear1 != null &&
                    this.RequestYear1.Equals(input.RequestYear1))
                ) && 
                (
                    this.RequestYear2 == input.RequestYear2 ||
                    (this.RequestYear2 != null &&
                    this.RequestYear2.Equals(input.RequestYear2))
                ) && 
                (
                    this.RequestYear3 == input.RequestYear3 ||
                    (this.RequestYear3 != null &&
                    this.RequestYear3.Equals(input.RequestYear3))
                ) && 
                (
                    this.RequestYear4 == input.RequestYear4 ||
                    (this.RequestYear4 != null &&
                    this.RequestYear4.Equals(input.RequestYear4))
                ) && 
                (
                    this.RequestYear5 == input.RequestYear5 ||
                    (this.RequestYear5 != null &&
                    this.RequestYear5.Equals(input.RequestYear5))
                ) && 
                (
                    this.RequestYear6 == input.RequestYear6 ||
                    (this.RequestYear6 != null &&
                    this.RequestYear6.Equals(input.RequestYear6))
                ) && 
                (
                    this.RequestYear7 == input.RequestYear7 ||
                    (this.RequestYear7 != null &&
                    this.RequestYear7.Equals(input.RequestYear7))
                ) && 
                (
                    this.RequestYear8 == input.RequestYear8 ||
                    (this.RequestYear8 != null &&
                    this.RequestYear8.Equals(input.RequestYear8))
                ) && 
                (
                    this.ReturnAddress == input.ReturnAddress ||
                    (this.ReturnAddress != null &&
                    this.ReturnAddress.Equals(input.ReturnAddress))
                ) && 
                (
                    this.ReturnCity == input.ReturnCity ||
                    (this.ReturnCity != null &&
                    this.ReturnCity.Equals(input.ReturnCity))
                ) && 
                (
                    this.ReturnState == input.ReturnState ||
                    (this.ReturnState != null &&
                    this.ReturnState.Equals(input.ReturnState))
                ) && 
                (
                    this.ReturnTranscript == input.ReturnTranscript ||
                    (this.ReturnTranscript != null &&
                    this.ReturnTranscript.Equals(input.ReturnTranscript))
                ) && 
                (
                    this.ReturnZip == input.ReturnZip ||
                    (this.ReturnZip != null &&
                    this.ReturnZip.Equals(input.ReturnZip))
                ) && 
                (
                    this.SelectedRecordNumber == input.SelectedRecordNumber ||
                    (this.SelectedRecordNumber != null &&
                    this.SelectedRecordNumber.Equals(input.SelectedRecordNumber))
                ) && 
                (
                    this.SendAddress == input.SendAddress ||
                    (this.SendAddress != null &&
                    this.SendAddress.Equals(input.SendAddress))
                ) && 
                (
                    this.SendCity == input.SendCity ||
                    (this.SendCity != null &&
                    this.SendCity.Equals(input.SendCity))
                ) && 
                (
                    this.SendFirst == input.SendFirst ||
                    (this.SendFirst != null &&
                    this.SendFirst.Equals(input.SendFirst))
                ) && 
                (
                    this.SendLast == input.SendLast ||
                    (this.SendLast != null &&
                    this.SendLast.Equals(input.SendLast))
                ) && 
                (
                    this.SendPhone == input.SendPhone ||
                    (this.SendPhone != null &&
                    this.SendPhone.Equals(input.SendPhone))
                ) && 
                (
                    this.SendState == input.SendState ||
                    (this.SendState != null &&
                    this.SendState.Equals(input.SendState))
                ) && 
                (
                    this.SendZip == input.SendZip ||
                    (this.SendZip != null &&
                    this.SendZip.Equals(input.SendZip))
                ) && 
                (
                    this.SpouseFirst == input.SpouseFirst ||
                    (this.SpouseFirst != null &&
                    this.SpouseFirst.Equals(input.SpouseFirst))
                ) && 
                (
                    this.SpouseLast == input.SpouseLast ||
                    (this.SpouseLast != null &&
                    this.SpouseLast.Equals(input.SpouseLast))
                ) && 
                (
                    this.SpouseSSN == input.SpouseSSN ||
                    (this.SpouseSSN != null &&
                    this.SpouseSSN.Equals(input.SpouseSSN))
                ) && 
                (
                    this.SpouseUseEIN == input.SpouseUseEIN ||
                    (this.SpouseUseEIN != null &&
                    this.SpouseUseEIN.Equals(input.SpouseUseEIN))
                ) && 
                (
                    this.SSN == input.SSN ||
                    (this.SSN != null &&
                    this.SSN.Equals(input.SSN))
                ) && 
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                ) && 
                (
                    this.Tax4506TIndicator == input.Tax4506TIndicator ||
                    (this.Tax4506TIndicator != null &&
                    this.Tax4506TIndicator.Equals(input.Tax4506TIndicator))
                ) && 
                (
                    this.TaxFormNumber == input.TaxFormNumber ||
                    (this.TaxFormNumber != null &&
                    this.TaxFormNumber.Equals(input.TaxFormNumber))
                ) && 
                (
                    this.TheseCopiesMustBeCertified == input.TheseCopiesMustBeCertified ||
                    (this.TheseCopiesMustBeCertified != null &&
                    this.TheseCopiesMustBeCertified.Equals(input.TheseCopiesMustBeCertified))
                ) && 
                (
                    this.TotalCost == input.TotalCost ||
                    (this.TotalCost != null &&
                    this.TotalCost.Equals(input.TotalCost))
                ) && 
                (
                    this.UseEIN == input.UseEIN ||
                    (this.UseEIN != null &&
                    this.UseEIN.Equals(input.UseEIN))
                ) && 
                (
                    this.UseWellsFargoRules == input.UseWellsFargoRules ||
                    (this.UseWellsFargoRules != null &&
                    this.UseWellsFargoRules.Equals(input.UseWellsFargoRules))
                ) && 
                (
                    this.VerificationOfNonfiling == input.VerificationOfNonfiling ||
                    (this.VerificationOfNonfiling != null &&
                    this.VerificationOfNonfiling.Equals(input.VerificationOfNonfiling))
                ) && 
                (
                    this.Zip == input.Zip ||
                    (this.Zip != null &&
                    this.Zip.Equals(input.Zip))
                ) && 
                (
                    this.SignatoryAttestation == input.SignatoryAttestation ||
                    (this.SignatoryAttestation != null &&
                    this.SignatoryAttestation.Equals(input.SignatoryAttestation))
                ) && 
                (
                    this.SignatoryAttestationT == input.SignatoryAttestationT ||
                    (this.SignatoryAttestationT != null &&
                    this.SignatoryAttestationT.Equals(input.SignatoryAttestationT))
                ) && 
                (
                    this.Tax4506Index == input.Tax4506Index ||
                    (this.Tax4506Index != null &&
                    this.Tax4506Index.Equals(input.Tax4506Index))
                ) && 
                (
                    this.RequestorTitle == input.RequestorTitle ||
                    (this.RequestorTitle != null &&
                    this.RequestorTitle.Equals(input.RequestorTitle))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AccountTranscript != null)
                    hashCode = hashCode * 59 + this.AccountTranscript.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.City != null)
                    hashCode = hashCode * 59 + this.City.GetHashCode();
                if (this.CostForEachPeriod != null)
                    hashCode = hashCode * 59 + this.CostForEachPeriod.GetHashCode();
                if (this.CurrentFirst != null)
                    hashCode = hashCode * 59 + this.CurrentFirst.GetHashCode();
                if (this.CurrentLast != null)
                    hashCode = hashCode * 59 + this.CurrentLast.GetHashCode();
                if (this.First != null)
                    hashCode = hashCode * 59 + this.First.GetHashCode();
                if (this.FormsSeriesTranscript != null)
                    hashCode = hashCode * 59 + this.FormsSeriesTranscript.GetHashCode();
                if (this.HistoryId != null)
                    hashCode = hashCode * 59 + this.HistoryId.GetHashCode();
                if (this.HistoryIndicator != null)
                    hashCode = hashCode * 59 + this.HistoryIndicator.GetHashCode();
                if (this.IfTaxRecordNotFound != null)
                    hashCode = hashCode * 59 + this.IfTaxRecordNotFound.GetHashCode();
                if (this.Last != null)
                    hashCode = hashCode * 59 + this.Last.GetHashCode();
                if (this.LastUpdatedDate != null)
                    hashCode = hashCode * 59 + this.LastUpdatedDate.GetHashCode();
                if (this.LastUpdatedHistory != null)
                    hashCode = hashCode * 59 + this.LastUpdatedHistory.GetHashCode();
                if (this.LastUpdatedTime != null)
                    hashCode = hashCode * 59 + this.LastUpdatedTime.GetHashCode();
                if (this.NotifiedIrsIdentityTheftIndicator != null)
                    hashCode = hashCode * 59 + this.NotifiedIrsIdentityTheftIndicator.GetHashCode();
                if (this.NumberOfPeriods != null)
                    hashCode = hashCode * 59 + this.NumberOfPeriods.GetHashCode();
                if (this.Person != null)
                    hashCode = hashCode * 59 + this.Person.GetHashCode();
                if (this.RecordOfAccount != null)
                    hashCode = hashCode * 59 + this.RecordOfAccount.GetHashCode();
                if (this.RequestorPhoneNumber != null)
                    hashCode = hashCode * 59 + this.RequestorPhoneNumber.GetHashCode();
                if (this.RequestYear1 != null)
                    hashCode = hashCode * 59 + this.RequestYear1.GetHashCode();
                if (this.RequestYear2 != null)
                    hashCode = hashCode * 59 + this.RequestYear2.GetHashCode();
                if (this.RequestYear3 != null)
                    hashCode = hashCode * 59 + this.RequestYear3.GetHashCode();
                if (this.RequestYear4 != null)
                    hashCode = hashCode * 59 + this.RequestYear4.GetHashCode();
                if (this.RequestYear5 != null)
                    hashCode = hashCode * 59 + this.RequestYear5.GetHashCode();
                if (this.RequestYear6 != null)
                    hashCode = hashCode * 59 + this.RequestYear6.GetHashCode();
                if (this.RequestYear7 != null)
                    hashCode = hashCode * 59 + this.RequestYear7.GetHashCode();
                if (this.RequestYear8 != null)
                    hashCode = hashCode * 59 + this.RequestYear8.GetHashCode();
                if (this.ReturnAddress != null)
                    hashCode = hashCode * 59 + this.ReturnAddress.GetHashCode();
                if (this.ReturnCity != null)
                    hashCode = hashCode * 59 + this.ReturnCity.GetHashCode();
                if (this.ReturnState != null)
                    hashCode = hashCode * 59 + this.ReturnState.GetHashCode();
                if (this.ReturnTranscript != null)
                    hashCode = hashCode * 59 + this.ReturnTranscript.GetHashCode();
                if (this.ReturnZip != null)
                    hashCode = hashCode * 59 + this.ReturnZip.GetHashCode();
                if (this.SelectedRecordNumber != null)
                    hashCode = hashCode * 59 + this.SelectedRecordNumber.GetHashCode();
                if (this.SendAddress != null)
                    hashCode = hashCode * 59 + this.SendAddress.GetHashCode();
                if (this.SendCity != null)
                    hashCode = hashCode * 59 + this.SendCity.GetHashCode();
                if (this.SendFirst != null)
                    hashCode = hashCode * 59 + this.SendFirst.GetHashCode();
                if (this.SendLast != null)
                    hashCode = hashCode * 59 + this.SendLast.GetHashCode();
                if (this.SendPhone != null)
                    hashCode = hashCode * 59 + this.SendPhone.GetHashCode();
                if (this.SendState != null)
                    hashCode = hashCode * 59 + this.SendState.GetHashCode();
                if (this.SendZip != null)
                    hashCode = hashCode * 59 + this.SendZip.GetHashCode();
                if (this.SpouseFirst != null)
                    hashCode = hashCode * 59 + this.SpouseFirst.GetHashCode();
                if (this.SpouseLast != null)
                    hashCode = hashCode * 59 + this.SpouseLast.GetHashCode();
                if (this.SpouseSSN != null)
                    hashCode = hashCode * 59 + this.SpouseSSN.GetHashCode();
                if (this.SpouseUseEIN != null)
                    hashCode = hashCode * 59 + this.SpouseUseEIN.GetHashCode();
                if (this.SSN != null)
                    hashCode = hashCode * 59 + this.SSN.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                if (this.Tax4506TIndicator != null)
                    hashCode = hashCode * 59 + this.Tax4506TIndicator.GetHashCode();
                if (this.TaxFormNumber != null)
                    hashCode = hashCode * 59 + this.TaxFormNumber.GetHashCode();
                if (this.TheseCopiesMustBeCertified != null)
                    hashCode = hashCode * 59 + this.TheseCopiesMustBeCertified.GetHashCode();
                if (this.TotalCost != null)
                    hashCode = hashCode * 59 + this.TotalCost.GetHashCode();
                if (this.UseEIN != null)
                    hashCode = hashCode * 59 + this.UseEIN.GetHashCode();
                if (this.UseWellsFargoRules != null)
                    hashCode = hashCode * 59 + this.UseWellsFargoRules.GetHashCode();
                if (this.VerificationOfNonfiling != null)
                    hashCode = hashCode * 59 + this.VerificationOfNonfiling.GetHashCode();
                if (this.Zip != null)
                    hashCode = hashCode * 59 + this.Zip.GetHashCode();
                if (this.SignatoryAttestation != null)
                    hashCode = hashCode * 59 + this.SignatoryAttestation.GetHashCode();
                if (this.SignatoryAttestationT != null)
                    hashCode = hashCode * 59 + this.SignatoryAttestationT.GetHashCode();
                if (this.Tax4506Index != null)
                    hashCode = hashCode * 59 + this.Tax4506Index.GetHashCode();
                if (this.RequestorTitle != null)
                    hashCode = hashCode * 59 + this.RequestorTitle.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
