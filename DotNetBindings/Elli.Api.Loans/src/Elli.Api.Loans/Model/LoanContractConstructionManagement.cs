/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractConstructionManagement
    /// </summary>
    [DataContract]
    public partial class LoanContractConstructionManagement :  IEquatable<LoanContractConstructionManagement>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets SecuredBySeparateProperty
        /// </summary>
        [DataMember(Name="securedBySeparateProperty", EmitDefaultValue=false)]
        public bool? SecuredBySeparateProperty { get; set; }

        /// <summary>
        /// Gets or Sets ConstCompletionDate
        /// </summary>
        [DataMember(Name="constCompletionDate", EmitDefaultValue=false)]
        public DateTime? ConstCompletionDate { get; set; }

        /// <summary>
        /// Gets or Sets MaxLTVPercent
        /// </summary>
        [DataMember(Name="maxLTVPercent", EmitDefaultValue=false)]
        public double? MaxLTVPercent { get; set; }

        /// <summary>
        /// Gets or Sets HoldbackPercent
        /// </summary>
        [DataMember(Name="holdbackPercent", EmitDefaultValue=false)]
        public double? HoldbackPercent { get; set; }

        /// <summary>
        /// Gets or Sets HoldbackAmount
        /// </summary>
        [DataMember(Name="holdbackAmount", EmitDefaultValue=false)]
        public double? HoldbackAmount { get; set; }

        /// <summary>
        /// Gets or Sets ProjectDelaySurchargePercent
        /// </summary>
        [DataMember(Name="projectDelaySurchargePercent", EmitDefaultValue=false)]
        public double? ProjectDelaySurchargePercent { get; set; }

        /// <summary>
        /// Gets or Sets ConstructionContractIssuedDate
        /// </summary>
        [DataMember(Name="constructionContractIssuedDate", EmitDefaultValue=false)]
        public DateTime? ConstructionContractIssuedDate { get; set; }

        /// <summary>
        /// Gets or Sets ConstructionContractReceivedDate
        /// </summary>
        [DataMember(Name="constructionContractReceivedDate", EmitDefaultValue=false)]
        public DateTime? ConstructionContractReceivedDate { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentLetterDate
        /// </summary>
        [DataMember(Name="commitmentLetterDate", EmitDefaultValue=false)]
        public DateTime? CommitmentLetterDate { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentExpirationDate
        /// </summary>
        [DataMember(Name="commitmentExpirationDate", EmitDefaultValue=false)]
        public DateTime? CommitmentExpirationDate { get; set; }

        /// <summary>
        /// Gets or Sets ReturnLendersCopyCommitmentDays
        /// </summary>
        [DataMember(Name="returnLendersCopyCommitmentDays", EmitDefaultValue=false)]
        public int? ReturnLendersCopyCommitmentDays { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutCommitmentIndicator
        /// </summary>
        [DataMember(Name="takeOutCommitmentIndicator", EmitDefaultValue=false)]
        public bool? TakeOutCommitmentIndicator { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutCommitmentDate
        /// </summary>
        [DataMember(Name="takeOutCommitmentDate", EmitDefaultValue=false)]
        public DateTime? TakeOutCommitmentDate { get; set; }

        /// <summary>
        /// Gets or Sets TitleInsuranceIndicator
        /// </summary>
        [DataMember(Name="titleInsuranceIndicator", EmitDefaultValue=false)]
        public bool? TitleInsuranceIndicator { get; set; }

        /// <summary>
        /// Gets or Sets TitleInsuranceDate
        /// </summary>
        [DataMember(Name="titleInsuranceDate", EmitDefaultValue=false)]
        public DateTime? TitleInsuranceDate { get; set; }

        /// <summary>
        /// Gets or Sets SurveyIndicator
        /// </summary>
        [DataMember(Name="surveyIndicator", EmitDefaultValue=false)]
        public bool? SurveyIndicator { get; set; }

        /// <summary>
        /// Gets or Sets SurveyDate
        /// </summary>
        [DataMember(Name="surveyDate", EmitDefaultValue=false)]
        public DateTime? SurveyDate { get; set; }

        /// <summary>
        /// Gets or Sets PermitsIndicator
        /// </summary>
        [DataMember(Name="permitsIndicator", EmitDefaultValue=false)]
        public bool? PermitsIndicator { get; set; }

        /// <summary>
        /// Gets or Sets PermitsDate
        /// </summary>
        [DataMember(Name="permitsDate", EmitDefaultValue=false)]
        public DateTime? PermitsDate { get; set; }

        /// <summary>
        /// Gets or Sets UtilityLettersIndicator
        /// </summary>
        [DataMember(Name="utilityLettersIndicator", EmitDefaultValue=false)]
        public bool? UtilityLettersIndicator { get; set; }

        /// <summary>
        /// Gets or Sets UtilityLettersDate
        /// </summary>
        [DataMember(Name="utilityLettersDate", EmitDefaultValue=false)]
        public DateTime? UtilityLettersDate { get; set; }

        /// <summary>
        /// Gets or Sets PlansAndSpecificationsIndicator
        /// </summary>
        [DataMember(Name="plansAndSpecificationsIndicator", EmitDefaultValue=false)]
        public bool? PlansAndSpecificationsIndicator { get; set; }

        /// <summary>
        /// Gets or Sets PlansAndSpecificationsDate
        /// </summary>
        [DataMember(Name="plansAndSpecificationsDate", EmitDefaultValue=false)]
        public DateTime? PlansAndSpecificationsDate { get; set; }

        /// <summary>
        /// Gets or Sets ConstructionContractIndicator
        /// </summary>
        [DataMember(Name="constructionContractIndicator", EmitDefaultValue=false)]
        public bool? ConstructionContractIndicator { get; set; }

        /// <summary>
        /// Gets or Sets BudgetIndicator
        /// </summary>
        [DataMember(Name="budgetIndicator", EmitDefaultValue=false)]
        public bool? BudgetIndicator { get; set; }

        /// <summary>
        /// Gets or Sets BudgetDate
        /// </summary>
        [DataMember(Name="budgetDate", EmitDefaultValue=false)]
        public DateTime? BudgetDate { get; set; }

        /// <summary>
        /// Gets or Sets ConstOnlyAmortizationType
        /// </summary>
        [DataMember(Name="constOnlyAmortizationType", EmitDefaultValue=false)]
        public string ConstOnlyAmortizationType { get; set; }

        /// <summary>
        /// Gets or Sets ContractorsAgreementIndicator
        /// </summary>
        [DataMember(Name="contractorsAgreementIndicator", EmitDefaultValue=false)]
        public bool? ContractorsAgreementIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ContractorsAgreementDate
        /// </summary>
        [DataMember(Name="contractorsAgreementDate", EmitDefaultValue=false)]
        public DateTime? ContractorsAgreementDate { get; set; }

        /// <summary>
        /// Gets or Sets ArchitectsCertificateIndicator
        /// </summary>
        [DataMember(Name="architectsCertificateIndicator", EmitDefaultValue=false)]
        public bool? ArchitectsCertificateIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ArchitectsCertificateDate
        /// </summary>
        [DataMember(Name="architectsCertificateDate", EmitDefaultValue=false)]
        public DateTime? ArchitectsCertificateDate { get; set; }

        /// <summary>
        /// Gets or Sets EnvironmentalAssessmentIndicator
        /// </summary>
        [DataMember(Name="environmentalAssessmentIndicator", EmitDefaultValue=false)]
        public bool? EnvironmentalAssessmentIndicator { get; set; }

        /// <summary>
        /// Gets or Sets EnvironmentalAssessmentDate
        /// </summary>
        [DataMember(Name="environmentalAssessmentDate", EmitDefaultValue=false)]
        public DateTime? EnvironmentalAssessmentDate { get; set; }

        /// <summary>
        /// Gets or Sets SoilReportIndicator
        /// </summary>
        [DataMember(Name="soilReportIndicator", EmitDefaultValue=false)]
        public bool? SoilReportIndicator { get; set; }

        /// <summary>
        /// Gets or Sets SoilReportDate
        /// </summary>
        [DataMember(Name="soilReportDate", EmitDefaultValue=false)]
        public DateTime? SoilReportDate { get; set; }

        /// <summary>
        /// Gets or Sets WaterTestIndicator
        /// </summary>
        [DataMember(Name="waterTestIndicator", EmitDefaultValue=false)]
        public bool? WaterTestIndicator { get; set; }

        /// <summary>
        /// Gets or Sets WaterTestDate
        /// </summary>
        [DataMember(Name="waterTestDate", EmitDefaultValue=false)]
        public DateTime? WaterTestDate { get; set; }

        /// <summary>
        /// Gets or Sets PercolationTestIndicator
        /// </summary>
        [DataMember(Name="percolationTestIndicator", EmitDefaultValue=false)]
        public bool? PercolationTestIndicator { get; set; }

        /// <summary>
        /// Gets or Sets PercolationTestDate
        /// </summary>
        [DataMember(Name="percolationTestDate", EmitDefaultValue=false)]
        public DateTime? PercolationTestDate { get; set; }

        /// <summary>
        /// Gets or Sets PaymentAndPerformanceBondsIndicator
        /// </summary>
        [DataMember(Name="paymentAndPerformanceBondsIndicator", EmitDefaultValue=false)]
        public bool? PaymentAndPerformanceBondsIndicator { get; set; }

        /// <summary>
        /// Gets or Sets PaymentAndPerformanceBondsDate
        /// </summary>
        [DataMember(Name="paymentAndPerformanceBondsDate", EmitDefaultValue=false)]
        public DateTime? PaymentAndPerformanceBondsDate { get; set; }

        /// <summary>
        /// Gets or Sets LienAgentNorthCarolinaIndicator
        /// </summary>
        [DataMember(Name="lienAgentNorthCarolinaIndicator", EmitDefaultValue=false)]
        public bool? LienAgentNorthCarolinaIndicator { get; set; }

        /// <summary>
        /// Gets or Sets LienAgentNorthCarolinaDate
        /// </summary>
        [DataMember(Name="lienAgentNorthCarolinaDate", EmitDefaultValue=false)]
        public DateTime? LienAgentNorthCarolinaDate { get; set; }

        /// <summary>
        /// Gets or Sets FloodHazardDeterminationIndicator
        /// </summary>
        [DataMember(Name="floodHazardDeterminationIndicator", EmitDefaultValue=false)]
        public bool? FloodHazardDeterminationIndicator { get; set; }

        /// <summary>
        /// Gets or Sets FloodHazardDeterminationDate
        /// </summary>
        [DataMember(Name="floodHazardDeterminationDate", EmitDefaultValue=false)]
        public DateTime? FloodHazardDeterminationDate { get; set; }

        /// <summary>
        /// Gets or Sets ListOfConstructionAgreementsIndicator
        /// </summary>
        [DataMember(Name="listOfConstructionAgreementsIndicator", EmitDefaultValue=false)]
        public bool? ListOfConstructionAgreementsIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ListOfConstructionAgreementsDate
        /// </summary>
        [DataMember(Name="listOfConstructionAgreementsDate", EmitDefaultValue=false)]
        public DateTime? ListOfConstructionAgreementsDate { get; set; }

        /// <summary>
        /// Gets or Sets OtherIndicator
        /// </summary>
        [DataMember(Name="otherIndicator", EmitDefaultValue=false)]
        public bool? OtherIndicator { get; set; }

        /// <summary>
        /// Gets or Sets OtherDate
        /// </summary>
        [DataMember(Name="otherDate", EmitDefaultValue=false)]
        public DateTime? OtherDate { get; set; }

        /// <summary>
        /// Gets or Sets OtherDescription
        /// </summary>
        [DataMember(Name="otherDescription", EmitDefaultValue=false)]
        public string OtherDescription { get; set; }

        /// <summary>
        /// Gets or Sets FutureAdvancePeriod
        /// </summary>
        [DataMember(Name="futureAdvancePeriod", EmitDefaultValue=false)]
        public int? FutureAdvancePeriod { get; set; }

        /// <summary>
        /// Gets or Sets MinimumDaysBetweenDisbursements
        /// </summary>
        [DataMember(Name="minimumDaysBetweenDisbursements", EmitDefaultValue=false)]
        public int? MinimumDaysBetweenDisbursements { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalDisbursementsConditions
        /// </summary>
        [DataMember(Name="additionalDisbursementsConditions", EmitDefaultValue=false)]
        public string AdditionalDisbursementsConditions { get; set; }

        /// <summary>
        /// Gets or Sets ConstructionPeriodIncludedInLoanTermFlag
        /// </summary>
        [DataMember(Name="constructionPeriodIncludedInLoanTermFlag", EmitDefaultValue=false)]
        public bool? ConstructionPeriodIncludedInLoanTermFlag { get; set; }

        /// <summary>
        /// Gets or Sets PartialPrepaymentsElection
        /// </summary>
        [DataMember(Name="partialPrepaymentsElection", EmitDefaultValue=false)]
        public string PartialPrepaymentsElection { get; set; }

        /// <summary>
        /// Gets or Sets AsCompletedPurchasePrice
        /// </summary>
        [DataMember(Name="asCompletedPurchasePrice", EmitDefaultValue=false)]
        public double? AsCompletedPurchasePrice { get; set; }

        /// <summary>
        /// Gets or Sets AsCompletedAppraisedValue
        /// </summary>
        [DataMember(Name="asCompletedAppraisedValue", EmitDefaultValue=false)]
        public double? AsCompletedAppraisedValue { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutLenderName
        /// </summary>
        [DataMember(Name="takeOutLenderName", EmitDefaultValue=false)]
        public string TakeOutLenderName { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutLenderNMLSNumber
        /// </summary>
        [DataMember(Name="takeOutLenderNMLSNumber", EmitDefaultValue=false)]
        public string TakeOutLenderNMLSNumber { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutLenderLicenseNumber
        /// </summary>
        [DataMember(Name="takeOutLenderLicenseNumber", EmitDefaultValue=false)]
        public string TakeOutLenderLicenseNumber { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutLenderAddress
        /// </summary>
        [DataMember(Name="takeOutLenderAddress", EmitDefaultValue=false)]
        public string TakeOutLenderAddress { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutLenderCity
        /// </summary>
        [DataMember(Name="takeOutLenderCity", EmitDefaultValue=false)]
        public string TakeOutLenderCity { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutLenderState
        /// </summary>
        [DataMember(Name="takeOutLenderState", EmitDefaultValue=false)]
        public string TakeOutLenderState { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutLenderZip
        /// </summary>
        [DataMember(Name="takeOutLenderZip", EmitDefaultValue=false)]
        public string TakeOutLenderZip { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutCommitmentIssuedDate
        /// </summary>
        [DataMember(Name="takeOutCommitmentIssuedDate", EmitDefaultValue=false)]
        public DateTime? TakeOutCommitmentIssuedDate { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutLenderContactName
        /// </summary>
        [DataMember(Name="takeOutLenderContactName", EmitDefaultValue=false)]
        public string TakeOutLenderContactName { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutLenderContactTitle
        /// </summary>
        [DataMember(Name="takeOutLenderContactTitle", EmitDefaultValue=false)]
        public string TakeOutLenderContactTitle { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutLenderPhone
        /// </summary>
        [DataMember(Name="takeOutLenderPhone", EmitDefaultValue=false)]
        public string TakeOutLenderPhone { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutLenderFax
        /// </summary>
        [DataMember(Name="takeOutLenderFax", EmitDefaultValue=false)]
        public string TakeOutLenderFax { get; set; }

        /// <summary>
        /// Gets or Sets TakeOutLenderEmail
        /// </summary>
        [DataMember(Name="takeOutLenderEmail", EmitDefaultValue=false)]
        public string TakeOutLenderEmail { get; set; }

        /// <summary>
        /// Gets or Sets CostImprovementsIncluded
        /// </summary>
        [DataMember(Name="costImprovementsIncluded", EmitDefaultValue=false)]
        public bool? CostImprovementsIncluded { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractConstructionManagement {\n");
            sb.Append("  SecuredBySeparateProperty: ").Append(SecuredBySeparateProperty).Append("\n");
            sb.Append("  ConstCompletionDate: ").Append(ConstCompletionDate).Append("\n");
            sb.Append("  MaxLTVPercent: ").Append(MaxLTVPercent).Append("\n");
            sb.Append("  HoldbackPercent: ").Append(HoldbackPercent).Append("\n");
            sb.Append("  HoldbackAmount: ").Append(HoldbackAmount).Append("\n");
            sb.Append("  ProjectDelaySurchargePercent: ").Append(ProjectDelaySurchargePercent).Append("\n");
            sb.Append("  ConstructionContractIssuedDate: ").Append(ConstructionContractIssuedDate).Append("\n");
            sb.Append("  ConstructionContractReceivedDate: ").Append(ConstructionContractReceivedDate).Append("\n");
            sb.Append("  CommitmentLetterDate: ").Append(CommitmentLetterDate).Append("\n");
            sb.Append("  CommitmentExpirationDate: ").Append(CommitmentExpirationDate).Append("\n");
            sb.Append("  ReturnLendersCopyCommitmentDays: ").Append(ReturnLendersCopyCommitmentDays).Append("\n");
            sb.Append("  TakeOutCommitmentIndicator: ").Append(TakeOutCommitmentIndicator).Append("\n");
            sb.Append("  TakeOutCommitmentDate: ").Append(TakeOutCommitmentDate).Append("\n");
            sb.Append("  TitleInsuranceIndicator: ").Append(TitleInsuranceIndicator).Append("\n");
            sb.Append("  TitleInsuranceDate: ").Append(TitleInsuranceDate).Append("\n");
            sb.Append("  SurveyIndicator: ").Append(SurveyIndicator).Append("\n");
            sb.Append("  SurveyDate: ").Append(SurveyDate).Append("\n");
            sb.Append("  PermitsIndicator: ").Append(PermitsIndicator).Append("\n");
            sb.Append("  PermitsDate: ").Append(PermitsDate).Append("\n");
            sb.Append("  UtilityLettersIndicator: ").Append(UtilityLettersIndicator).Append("\n");
            sb.Append("  UtilityLettersDate: ").Append(UtilityLettersDate).Append("\n");
            sb.Append("  PlansAndSpecificationsIndicator: ").Append(PlansAndSpecificationsIndicator).Append("\n");
            sb.Append("  PlansAndSpecificationsDate: ").Append(PlansAndSpecificationsDate).Append("\n");
            sb.Append("  ConstructionContractIndicator: ").Append(ConstructionContractIndicator).Append("\n");
            sb.Append("  BudgetIndicator: ").Append(BudgetIndicator).Append("\n");
            sb.Append("  BudgetDate: ").Append(BudgetDate).Append("\n");
            sb.Append("  ConstOnlyAmortizationType: ").Append(ConstOnlyAmortizationType).Append("\n");
            sb.Append("  ContractorsAgreementIndicator: ").Append(ContractorsAgreementIndicator).Append("\n");
            sb.Append("  ContractorsAgreementDate: ").Append(ContractorsAgreementDate).Append("\n");
            sb.Append("  ArchitectsCertificateIndicator: ").Append(ArchitectsCertificateIndicator).Append("\n");
            sb.Append("  ArchitectsCertificateDate: ").Append(ArchitectsCertificateDate).Append("\n");
            sb.Append("  EnvironmentalAssessmentIndicator: ").Append(EnvironmentalAssessmentIndicator).Append("\n");
            sb.Append("  EnvironmentalAssessmentDate: ").Append(EnvironmentalAssessmentDate).Append("\n");
            sb.Append("  SoilReportIndicator: ").Append(SoilReportIndicator).Append("\n");
            sb.Append("  SoilReportDate: ").Append(SoilReportDate).Append("\n");
            sb.Append("  WaterTestIndicator: ").Append(WaterTestIndicator).Append("\n");
            sb.Append("  WaterTestDate: ").Append(WaterTestDate).Append("\n");
            sb.Append("  PercolationTestIndicator: ").Append(PercolationTestIndicator).Append("\n");
            sb.Append("  PercolationTestDate: ").Append(PercolationTestDate).Append("\n");
            sb.Append("  PaymentAndPerformanceBondsIndicator: ").Append(PaymentAndPerformanceBondsIndicator).Append("\n");
            sb.Append("  PaymentAndPerformanceBondsDate: ").Append(PaymentAndPerformanceBondsDate).Append("\n");
            sb.Append("  LienAgentNorthCarolinaIndicator: ").Append(LienAgentNorthCarolinaIndicator).Append("\n");
            sb.Append("  LienAgentNorthCarolinaDate: ").Append(LienAgentNorthCarolinaDate).Append("\n");
            sb.Append("  FloodHazardDeterminationIndicator: ").Append(FloodHazardDeterminationIndicator).Append("\n");
            sb.Append("  FloodHazardDeterminationDate: ").Append(FloodHazardDeterminationDate).Append("\n");
            sb.Append("  ListOfConstructionAgreementsIndicator: ").Append(ListOfConstructionAgreementsIndicator).Append("\n");
            sb.Append("  ListOfConstructionAgreementsDate: ").Append(ListOfConstructionAgreementsDate).Append("\n");
            sb.Append("  OtherIndicator: ").Append(OtherIndicator).Append("\n");
            sb.Append("  OtherDate: ").Append(OtherDate).Append("\n");
            sb.Append("  OtherDescription: ").Append(OtherDescription).Append("\n");
            sb.Append("  FutureAdvancePeriod: ").Append(FutureAdvancePeriod).Append("\n");
            sb.Append("  MinimumDaysBetweenDisbursements: ").Append(MinimumDaysBetweenDisbursements).Append("\n");
            sb.Append("  AdditionalDisbursementsConditions: ").Append(AdditionalDisbursementsConditions).Append("\n");
            sb.Append("  ConstructionPeriodIncludedInLoanTermFlag: ").Append(ConstructionPeriodIncludedInLoanTermFlag).Append("\n");
            sb.Append("  PartialPrepaymentsElection: ").Append(PartialPrepaymentsElection).Append("\n");
            sb.Append("  AsCompletedPurchasePrice: ").Append(AsCompletedPurchasePrice).Append("\n");
            sb.Append("  AsCompletedAppraisedValue: ").Append(AsCompletedAppraisedValue).Append("\n");
            sb.Append("  TakeOutLenderName: ").Append(TakeOutLenderName).Append("\n");
            sb.Append("  TakeOutLenderNMLSNumber: ").Append(TakeOutLenderNMLSNumber).Append("\n");
            sb.Append("  TakeOutLenderLicenseNumber: ").Append(TakeOutLenderLicenseNumber).Append("\n");
            sb.Append("  TakeOutLenderAddress: ").Append(TakeOutLenderAddress).Append("\n");
            sb.Append("  TakeOutLenderCity: ").Append(TakeOutLenderCity).Append("\n");
            sb.Append("  TakeOutLenderState: ").Append(TakeOutLenderState).Append("\n");
            sb.Append("  TakeOutLenderZip: ").Append(TakeOutLenderZip).Append("\n");
            sb.Append("  TakeOutCommitmentIssuedDate: ").Append(TakeOutCommitmentIssuedDate).Append("\n");
            sb.Append("  TakeOutLenderContactName: ").Append(TakeOutLenderContactName).Append("\n");
            sb.Append("  TakeOutLenderContactTitle: ").Append(TakeOutLenderContactTitle).Append("\n");
            sb.Append("  TakeOutLenderPhone: ").Append(TakeOutLenderPhone).Append("\n");
            sb.Append("  TakeOutLenderFax: ").Append(TakeOutLenderFax).Append("\n");
            sb.Append("  TakeOutLenderEmail: ").Append(TakeOutLenderEmail).Append("\n");
            sb.Append("  CostImprovementsIncluded: ").Append(CostImprovementsIncluded).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractConstructionManagement);
        }

        /// <summary>
        /// Returns true if LoanContractConstructionManagement instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractConstructionManagement to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractConstructionManagement input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SecuredBySeparateProperty == input.SecuredBySeparateProperty ||
                    (this.SecuredBySeparateProperty != null &&
                    this.SecuredBySeparateProperty.Equals(input.SecuredBySeparateProperty))
                ) && 
                (
                    this.ConstCompletionDate == input.ConstCompletionDate ||
                    (this.ConstCompletionDate != null &&
                    this.ConstCompletionDate.Equals(input.ConstCompletionDate))
                ) && 
                (
                    this.MaxLTVPercent == input.MaxLTVPercent ||
                    (this.MaxLTVPercent != null &&
                    this.MaxLTVPercent.Equals(input.MaxLTVPercent))
                ) && 
                (
                    this.HoldbackPercent == input.HoldbackPercent ||
                    (this.HoldbackPercent != null &&
                    this.HoldbackPercent.Equals(input.HoldbackPercent))
                ) && 
                (
                    this.HoldbackAmount == input.HoldbackAmount ||
                    (this.HoldbackAmount != null &&
                    this.HoldbackAmount.Equals(input.HoldbackAmount))
                ) && 
                (
                    this.ProjectDelaySurchargePercent == input.ProjectDelaySurchargePercent ||
                    (this.ProjectDelaySurchargePercent != null &&
                    this.ProjectDelaySurchargePercent.Equals(input.ProjectDelaySurchargePercent))
                ) && 
                (
                    this.ConstructionContractIssuedDate == input.ConstructionContractIssuedDate ||
                    (this.ConstructionContractIssuedDate != null &&
                    this.ConstructionContractIssuedDate.Equals(input.ConstructionContractIssuedDate))
                ) && 
                (
                    this.ConstructionContractReceivedDate == input.ConstructionContractReceivedDate ||
                    (this.ConstructionContractReceivedDate != null &&
                    this.ConstructionContractReceivedDate.Equals(input.ConstructionContractReceivedDate))
                ) && 
                (
                    this.CommitmentLetterDate == input.CommitmentLetterDate ||
                    (this.CommitmentLetterDate != null &&
                    this.CommitmentLetterDate.Equals(input.CommitmentLetterDate))
                ) && 
                (
                    this.CommitmentExpirationDate == input.CommitmentExpirationDate ||
                    (this.CommitmentExpirationDate != null &&
                    this.CommitmentExpirationDate.Equals(input.CommitmentExpirationDate))
                ) && 
                (
                    this.ReturnLendersCopyCommitmentDays == input.ReturnLendersCopyCommitmentDays ||
                    (this.ReturnLendersCopyCommitmentDays != null &&
                    this.ReturnLendersCopyCommitmentDays.Equals(input.ReturnLendersCopyCommitmentDays))
                ) && 
                (
                    this.TakeOutCommitmentIndicator == input.TakeOutCommitmentIndicator ||
                    (this.TakeOutCommitmentIndicator != null &&
                    this.TakeOutCommitmentIndicator.Equals(input.TakeOutCommitmentIndicator))
                ) && 
                (
                    this.TakeOutCommitmentDate == input.TakeOutCommitmentDate ||
                    (this.TakeOutCommitmentDate != null &&
                    this.TakeOutCommitmentDate.Equals(input.TakeOutCommitmentDate))
                ) && 
                (
                    this.TitleInsuranceIndicator == input.TitleInsuranceIndicator ||
                    (this.TitleInsuranceIndicator != null &&
                    this.TitleInsuranceIndicator.Equals(input.TitleInsuranceIndicator))
                ) && 
                (
                    this.TitleInsuranceDate == input.TitleInsuranceDate ||
                    (this.TitleInsuranceDate != null &&
                    this.TitleInsuranceDate.Equals(input.TitleInsuranceDate))
                ) && 
                (
                    this.SurveyIndicator == input.SurveyIndicator ||
                    (this.SurveyIndicator != null &&
                    this.SurveyIndicator.Equals(input.SurveyIndicator))
                ) && 
                (
                    this.SurveyDate == input.SurveyDate ||
                    (this.SurveyDate != null &&
                    this.SurveyDate.Equals(input.SurveyDate))
                ) && 
                (
                    this.PermitsIndicator == input.PermitsIndicator ||
                    (this.PermitsIndicator != null &&
                    this.PermitsIndicator.Equals(input.PermitsIndicator))
                ) && 
                (
                    this.PermitsDate == input.PermitsDate ||
                    (this.PermitsDate != null &&
                    this.PermitsDate.Equals(input.PermitsDate))
                ) && 
                (
                    this.UtilityLettersIndicator == input.UtilityLettersIndicator ||
                    (this.UtilityLettersIndicator != null &&
                    this.UtilityLettersIndicator.Equals(input.UtilityLettersIndicator))
                ) && 
                (
                    this.UtilityLettersDate == input.UtilityLettersDate ||
                    (this.UtilityLettersDate != null &&
                    this.UtilityLettersDate.Equals(input.UtilityLettersDate))
                ) && 
                (
                    this.PlansAndSpecificationsIndicator == input.PlansAndSpecificationsIndicator ||
                    (this.PlansAndSpecificationsIndicator != null &&
                    this.PlansAndSpecificationsIndicator.Equals(input.PlansAndSpecificationsIndicator))
                ) && 
                (
                    this.PlansAndSpecificationsDate == input.PlansAndSpecificationsDate ||
                    (this.PlansAndSpecificationsDate != null &&
                    this.PlansAndSpecificationsDate.Equals(input.PlansAndSpecificationsDate))
                ) && 
                (
                    this.ConstructionContractIndicator == input.ConstructionContractIndicator ||
                    (this.ConstructionContractIndicator != null &&
                    this.ConstructionContractIndicator.Equals(input.ConstructionContractIndicator))
                ) && 
                (
                    this.BudgetIndicator == input.BudgetIndicator ||
                    (this.BudgetIndicator != null &&
                    this.BudgetIndicator.Equals(input.BudgetIndicator))
                ) && 
                (
                    this.BudgetDate == input.BudgetDate ||
                    (this.BudgetDate != null &&
                    this.BudgetDate.Equals(input.BudgetDate))
                ) && 
                (
                    this.ConstOnlyAmortizationType == input.ConstOnlyAmortizationType ||
                    (this.ConstOnlyAmortizationType != null &&
                    this.ConstOnlyAmortizationType.Equals(input.ConstOnlyAmortizationType))
                ) && 
                (
                    this.ContractorsAgreementIndicator == input.ContractorsAgreementIndicator ||
                    (this.ContractorsAgreementIndicator != null &&
                    this.ContractorsAgreementIndicator.Equals(input.ContractorsAgreementIndicator))
                ) && 
                (
                    this.ContractorsAgreementDate == input.ContractorsAgreementDate ||
                    (this.ContractorsAgreementDate != null &&
                    this.ContractorsAgreementDate.Equals(input.ContractorsAgreementDate))
                ) && 
                (
                    this.ArchitectsCertificateIndicator == input.ArchitectsCertificateIndicator ||
                    (this.ArchitectsCertificateIndicator != null &&
                    this.ArchitectsCertificateIndicator.Equals(input.ArchitectsCertificateIndicator))
                ) && 
                (
                    this.ArchitectsCertificateDate == input.ArchitectsCertificateDate ||
                    (this.ArchitectsCertificateDate != null &&
                    this.ArchitectsCertificateDate.Equals(input.ArchitectsCertificateDate))
                ) && 
                (
                    this.EnvironmentalAssessmentIndicator == input.EnvironmentalAssessmentIndicator ||
                    (this.EnvironmentalAssessmentIndicator != null &&
                    this.EnvironmentalAssessmentIndicator.Equals(input.EnvironmentalAssessmentIndicator))
                ) && 
                (
                    this.EnvironmentalAssessmentDate == input.EnvironmentalAssessmentDate ||
                    (this.EnvironmentalAssessmentDate != null &&
                    this.EnvironmentalAssessmentDate.Equals(input.EnvironmentalAssessmentDate))
                ) && 
                (
                    this.SoilReportIndicator == input.SoilReportIndicator ||
                    (this.SoilReportIndicator != null &&
                    this.SoilReportIndicator.Equals(input.SoilReportIndicator))
                ) && 
                (
                    this.SoilReportDate == input.SoilReportDate ||
                    (this.SoilReportDate != null &&
                    this.SoilReportDate.Equals(input.SoilReportDate))
                ) && 
                (
                    this.WaterTestIndicator == input.WaterTestIndicator ||
                    (this.WaterTestIndicator != null &&
                    this.WaterTestIndicator.Equals(input.WaterTestIndicator))
                ) && 
                (
                    this.WaterTestDate == input.WaterTestDate ||
                    (this.WaterTestDate != null &&
                    this.WaterTestDate.Equals(input.WaterTestDate))
                ) && 
                (
                    this.PercolationTestIndicator == input.PercolationTestIndicator ||
                    (this.PercolationTestIndicator != null &&
                    this.PercolationTestIndicator.Equals(input.PercolationTestIndicator))
                ) && 
                (
                    this.PercolationTestDate == input.PercolationTestDate ||
                    (this.PercolationTestDate != null &&
                    this.PercolationTestDate.Equals(input.PercolationTestDate))
                ) && 
                (
                    this.PaymentAndPerformanceBondsIndicator == input.PaymentAndPerformanceBondsIndicator ||
                    (this.PaymentAndPerformanceBondsIndicator != null &&
                    this.PaymentAndPerformanceBondsIndicator.Equals(input.PaymentAndPerformanceBondsIndicator))
                ) && 
                (
                    this.PaymentAndPerformanceBondsDate == input.PaymentAndPerformanceBondsDate ||
                    (this.PaymentAndPerformanceBondsDate != null &&
                    this.PaymentAndPerformanceBondsDate.Equals(input.PaymentAndPerformanceBondsDate))
                ) && 
                (
                    this.LienAgentNorthCarolinaIndicator == input.LienAgentNorthCarolinaIndicator ||
                    (this.LienAgentNorthCarolinaIndicator != null &&
                    this.LienAgentNorthCarolinaIndicator.Equals(input.LienAgentNorthCarolinaIndicator))
                ) && 
                (
                    this.LienAgentNorthCarolinaDate == input.LienAgentNorthCarolinaDate ||
                    (this.LienAgentNorthCarolinaDate != null &&
                    this.LienAgentNorthCarolinaDate.Equals(input.LienAgentNorthCarolinaDate))
                ) && 
                (
                    this.FloodHazardDeterminationIndicator == input.FloodHazardDeterminationIndicator ||
                    (this.FloodHazardDeterminationIndicator != null &&
                    this.FloodHazardDeterminationIndicator.Equals(input.FloodHazardDeterminationIndicator))
                ) && 
                (
                    this.FloodHazardDeterminationDate == input.FloodHazardDeterminationDate ||
                    (this.FloodHazardDeterminationDate != null &&
                    this.FloodHazardDeterminationDate.Equals(input.FloodHazardDeterminationDate))
                ) && 
                (
                    this.ListOfConstructionAgreementsIndicator == input.ListOfConstructionAgreementsIndicator ||
                    (this.ListOfConstructionAgreementsIndicator != null &&
                    this.ListOfConstructionAgreementsIndicator.Equals(input.ListOfConstructionAgreementsIndicator))
                ) && 
                (
                    this.ListOfConstructionAgreementsDate == input.ListOfConstructionAgreementsDate ||
                    (this.ListOfConstructionAgreementsDate != null &&
                    this.ListOfConstructionAgreementsDate.Equals(input.ListOfConstructionAgreementsDate))
                ) && 
                (
                    this.OtherIndicator == input.OtherIndicator ||
                    (this.OtherIndicator != null &&
                    this.OtherIndicator.Equals(input.OtherIndicator))
                ) && 
                (
                    this.OtherDate == input.OtherDate ||
                    (this.OtherDate != null &&
                    this.OtherDate.Equals(input.OtherDate))
                ) && 
                (
                    this.OtherDescription == input.OtherDescription ||
                    (this.OtherDescription != null &&
                    this.OtherDescription.Equals(input.OtherDescription))
                ) && 
                (
                    this.FutureAdvancePeriod == input.FutureAdvancePeriod ||
                    (this.FutureAdvancePeriod != null &&
                    this.FutureAdvancePeriod.Equals(input.FutureAdvancePeriod))
                ) && 
                (
                    this.MinimumDaysBetweenDisbursements == input.MinimumDaysBetweenDisbursements ||
                    (this.MinimumDaysBetweenDisbursements != null &&
                    this.MinimumDaysBetweenDisbursements.Equals(input.MinimumDaysBetweenDisbursements))
                ) && 
                (
                    this.AdditionalDisbursementsConditions == input.AdditionalDisbursementsConditions ||
                    (this.AdditionalDisbursementsConditions != null &&
                    this.AdditionalDisbursementsConditions.Equals(input.AdditionalDisbursementsConditions))
                ) && 
                (
                    this.ConstructionPeriodIncludedInLoanTermFlag == input.ConstructionPeriodIncludedInLoanTermFlag ||
                    (this.ConstructionPeriodIncludedInLoanTermFlag != null &&
                    this.ConstructionPeriodIncludedInLoanTermFlag.Equals(input.ConstructionPeriodIncludedInLoanTermFlag))
                ) && 
                (
                    this.PartialPrepaymentsElection == input.PartialPrepaymentsElection ||
                    (this.PartialPrepaymentsElection != null &&
                    this.PartialPrepaymentsElection.Equals(input.PartialPrepaymentsElection))
                ) && 
                (
                    this.AsCompletedPurchasePrice == input.AsCompletedPurchasePrice ||
                    (this.AsCompletedPurchasePrice != null &&
                    this.AsCompletedPurchasePrice.Equals(input.AsCompletedPurchasePrice))
                ) && 
                (
                    this.AsCompletedAppraisedValue == input.AsCompletedAppraisedValue ||
                    (this.AsCompletedAppraisedValue != null &&
                    this.AsCompletedAppraisedValue.Equals(input.AsCompletedAppraisedValue))
                ) && 
                (
                    this.TakeOutLenderName == input.TakeOutLenderName ||
                    (this.TakeOutLenderName != null &&
                    this.TakeOutLenderName.Equals(input.TakeOutLenderName))
                ) && 
                (
                    this.TakeOutLenderNMLSNumber == input.TakeOutLenderNMLSNumber ||
                    (this.TakeOutLenderNMLSNumber != null &&
                    this.TakeOutLenderNMLSNumber.Equals(input.TakeOutLenderNMLSNumber))
                ) && 
                (
                    this.TakeOutLenderLicenseNumber == input.TakeOutLenderLicenseNumber ||
                    (this.TakeOutLenderLicenseNumber != null &&
                    this.TakeOutLenderLicenseNumber.Equals(input.TakeOutLenderLicenseNumber))
                ) && 
                (
                    this.TakeOutLenderAddress == input.TakeOutLenderAddress ||
                    (this.TakeOutLenderAddress != null &&
                    this.TakeOutLenderAddress.Equals(input.TakeOutLenderAddress))
                ) && 
                (
                    this.TakeOutLenderCity == input.TakeOutLenderCity ||
                    (this.TakeOutLenderCity != null &&
                    this.TakeOutLenderCity.Equals(input.TakeOutLenderCity))
                ) && 
                (
                    this.TakeOutLenderState == input.TakeOutLenderState ||
                    (this.TakeOutLenderState != null &&
                    this.TakeOutLenderState.Equals(input.TakeOutLenderState))
                ) && 
                (
                    this.TakeOutLenderZip == input.TakeOutLenderZip ||
                    (this.TakeOutLenderZip != null &&
                    this.TakeOutLenderZip.Equals(input.TakeOutLenderZip))
                ) && 
                (
                    this.TakeOutCommitmentIssuedDate == input.TakeOutCommitmentIssuedDate ||
                    (this.TakeOutCommitmentIssuedDate != null &&
                    this.TakeOutCommitmentIssuedDate.Equals(input.TakeOutCommitmentIssuedDate))
                ) && 
                (
                    this.TakeOutLenderContactName == input.TakeOutLenderContactName ||
                    (this.TakeOutLenderContactName != null &&
                    this.TakeOutLenderContactName.Equals(input.TakeOutLenderContactName))
                ) && 
                (
                    this.TakeOutLenderContactTitle == input.TakeOutLenderContactTitle ||
                    (this.TakeOutLenderContactTitle != null &&
                    this.TakeOutLenderContactTitle.Equals(input.TakeOutLenderContactTitle))
                ) && 
                (
                    this.TakeOutLenderPhone == input.TakeOutLenderPhone ||
                    (this.TakeOutLenderPhone != null &&
                    this.TakeOutLenderPhone.Equals(input.TakeOutLenderPhone))
                ) && 
                (
                    this.TakeOutLenderFax == input.TakeOutLenderFax ||
                    (this.TakeOutLenderFax != null &&
                    this.TakeOutLenderFax.Equals(input.TakeOutLenderFax))
                ) && 
                (
                    this.TakeOutLenderEmail == input.TakeOutLenderEmail ||
                    (this.TakeOutLenderEmail != null &&
                    this.TakeOutLenderEmail.Equals(input.TakeOutLenderEmail))
                ) && 
                (
                    this.CostImprovementsIncluded == input.CostImprovementsIncluded ||
                    (this.CostImprovementsIncluded != null &&
                    this.CostImprovementsIncluded.Equals(input.CostImprovementsIncluded))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SecuredBySeparateProperty != null)
                    hashCode = hashCode * 59 + this.SecuredBySeparateProperty.GetHashCode();
                if (this.ConstCompletionDate != null)
                    hashCode = hashCode * 59 + this.ConstCompletionDate.GetHashCode();
                if (this.MaxLTVPercent != null)
                    hashCode = hashCode * 59 + this.MaxLTVPercent.GetHashCode();
                if (this.HoldbackPercent != null)
                    hashCode = hashCode * 59 + this.HoldbackPercent.GetHashCode();
                if (this.HoldbackAmount != null)
                    hashCode = hashCode * 59 + this.HoldbackAmount.GetHashCode();
                if (this.ProjectDelaySurchargePercent != null)
                    hashCode = hashCode * 59 + this.ProjectDelaySurchargePercent.GetHashCode();
                if (this.ConstructionContractIssuedDate != null)
                    hashCode = hashCode * 59 + this.ConstructionContractIssuedDate.GetHashCode();
                if (this.ConstructionContractReceivedDate != null)
                    hashCode = hashCode * 59 + this.ConstructionContractReceivedDate.GetHashCode();
                if (this.CommitmentLetterDate != null)
                    hashCode = hashCode * 59 + this.CommitmentLetterDate.GetHashCode();
                if (this.CommitmentExpirationDate != null)
                    hashCode = hashCode * 59 + this.CommitmentExpirationDate.GetHashCode();
                if (this.ReturnLendersCopyCommitmentDays != null)
                    hashCode = hashCode * 59 + this.ReturnLendersCopyCommitmentDays.GetHashCode();
                if (this.TakeOutCommitmentIndicator != null)
                    hashCode = hashCode * 59 + this.TakeOutCommitmentIndicator.GetHashCode();
                if (this.TakeOutCommitmentDate != null)
                    hashCode = hashCode * 59 + this.TakeOutCommitmentDate.GetHashCode();
                if (this.TitleInsuranceIndicator != null)
                    hashCode = hashCode * 59 + this.TitleInsuranceIndicator.GetHashCode();
                if (this.TitleInsuranceDate != null)
                    hashCode = hashCode * 59 + this.TitleInsuranceDate.GetHashCode();
                if (this.SurveyIndicator != null)
                    hashCode = hashCode * 59 + this.SurveyIndicator.GetHashCode();
                if (this.SurveyDate != null)
                    hashCode = hashCode * 59 + this.SurveyDate.GetHashCode();
                if (this.PermitsIndicator != null)
                    hashCode = hashCode * 59 + this.PermitsIndicator.GetHashCode();
                if (this.PermitsDate != null)
                    hashCode = hashCode * 59 + this.PermitsDate.GetHashCode();
                if (this.UtilityLettersIndicator != null)
                    hashCode = hashCode * 59 + this.UtilityLettersIndicator.GetHashCode();
                if (this.UtilityLettersDate != null)
                    hashCode = hashCode * 59 + this.UtilityLettersDate.GetHashCode();
                if (this.PlansAndSpecificationsIndicator != null)
                    hashCode = hashCode * 59 + this.PlansAndSpecificationsIndicator.GetHashCode();
                if (this.PlansAndSpecificationsDate != null)
                    hashCode = hashCode * 59 + this.PlansAndSpecificationsDate.GetHashCode();
                if (this.ConstructionContractIndicator != null)
                    hashCode = hashCode * 59 + this.ConstructionContractIndicator.GetHashCode();
                if (this.BudgetIndicator != null)
                    hashCode = hashCode * 59 + this.BudgetIndicator.GetHashCode();
                if (this.BudgetDate != null)
                    hashCode = hashCode * 59 + this.BudgetDate.GetHashCode();
                if (this.ConstOnlyAmortizationType != null)
                    hashCode = hashCode * 59 + this.ConstOnlyAmortizationType.GetHashCode();
                if (this.ContractorsAgreementIndicator != null)
                    hashCode = hashCode * 59 + this.ContractorsAgreementIndicator.GetHashCode();
                if (this.ContractorsAgreementDate != null)
                    hashCode = hashCode * 59 + this.ContractorsAgreementDate.GetHashCode();
                if (this.ArchitectsCertificateIndicator != null)
                    hashCode = hashCode * 59 + this.ArchitectsCertificateIndicator.GetHashCode();
                if (this.ArchitectsCertificateDate != null)
                    hashCode = hashCode * 59 + this.ArchitectsCertificateDate.GetHashCode();
                if (this.EnvironmentalAssessmentIndicator != null)
                    hashCode = hashCode * 59 + this.EnvironmentalAssessmentIndicator.GetHashCode();
                if (this.EnvironmentalAssessmentDate != null)
                    hashCode = hashCode * 59 + this.EnvironmentalAssessmentDate.GetHashCode();
                if (this.SoilReportIndicator != null)
                    hashCode = hashCode * 59 + this.SoilReportIndicator.GetHashCode();
                if (this.SoilReportDate != null)
                    hashCode = hashCode * 59 + this.SoilReportDate.GetHashCode();
                if (this.WaterTestIndicator != null)
                    hashCode = hashCode * 59 + this.WaterTestIndicator.GetHashCode();
                if (this.WaterTestDate != null)
                    hashCode = hashCode * 59 + this.WaterTestDate.GetHashCode();
                if (this.PercolationTestIndicator != null)
                    hashCode = hashCode * 59 + this.PercolationTestIndicator.GetHashCode();
                if (this.PercolationTestDate != null)
                    hashCode = hashCode * 59 + this.PercolationTestDate.GetHashCode();
                if (this.PaymentAndPerformanceBondsIndicator != null)
                    hashCode = hashCode * 59 + this.PaymentAndPerformanceBondsIndicator.GetHashCode();
                if (this.PaymentAndPerformanceBondsDate != null)
                    hashCode = hashCode * 59 + this.PaymentAndPerformanceBondsDate.GetHashCode();
                if (this.LienAgentNorthCarolinaIndicator != null)
                    hashCode = hashCode * 59 + this.LienAgentNorthCarolinaIndicator.GetHashCode();
                if (this.LienAgentNorthCarolinaDate != null)
                    hashCode = hashCode * 59 + this.LienAgentNorthCarolinaDate.GetHashCode();
                if (this.FloodHazardDeterminationIndicator != null)
                    hashCode = hashCode * 59 + this.FloodHazardDeterminationIndicator.GetHashCode();
                if (this.FloodHazardDeterminationDate != null)
                    hashCode = hashCode * 59 + this.FloodHazardDeterminationDate.GetHashCode();
                if (this.ListOfConstructionAgreementsIndicator != null)
                    hashCode = hashCode * 59 + this.ListOfConstructionAgreementsIndicator.GetHashCode();
                if (this.ListOfConstructionAgreementsDate != null)
                    hashCode = hashCode * 59 + this.ListOfConstructionAgreementsDate.GetHashCode();
                if (this.OtherIndicator != null)
                    hashCode = hashCode * 59 + this.OtherIndicator.GetHashCode();
                if (this.OtherDate != null)
                    hashCode = hashCode * 59 + this.OtherDate.GetHashCode();
                if (this.OtherDescription != null)
                    hashCode = hashCode * 59 + this.OtherDescription.GetHashCode();
                if (this.FutureAdvancePeriod != null)
                    hashCode = hashCode * 59 + this.FutureAdvancePeriod.GetHashCode();
                if (this.MinimumDaysBetweenDisbursements != null)
                    hashCode = hashCode * 59 + this.MinimumDaysBetweenDisbursements.GetHashCode();
                if (this.AdditionalDisbursementsConditions != null)
                    hashCode = hashCode * 59 + this.AdditionalDisbursementsConditions.GetHashCode();
                if (this.ConstructionPeriodIncludedInLoanTermFlag != null)
                    hashCode = hashCode * 59 + this.ConstructionPeriodIncludedInLoanTermFlag.GetHashCode();
                if (this.PartialPrepaymentsElection != null)
                    hashCode = hashCode * 59 + this.PartialPrepaymentsElection.GetHashCode();
                if (this.AsCompletedPurchasePrice != null)
                    hashCode = hashCode * 59 + this.AsCompletedPurchasePrice.GetHashCode();
                if (this.AsCompletedAppraisedValue != null)
                    hashCode = hashCode * 59 + this.AsCompletedAppraisedValue.GetHashCode();
                if (this.TakeOutLenderName != null)
                    hashCode = hashCode * 59 + this.TakeOutLenderName.GetHashCode();
                if (this.TakeOutLenderNMLSNumber != null)
                    hashCode = hashCode * 59 + this.TakeOutLenderNMLSNumber.GetHashCode();
                if (this.TakeOutLenderLicenseNumber != null)
                    hashCode = hashCode * 59 + this.TakeOutLenderLicenseNumber.GetHashCode();
                if (this.TakeOutLenderAddress != null)
                    hashCode = hashCode * 59 + this.TakeOutLenderAddress.GetHashCode();
                if (this.TakeOutLenderCity != null)
                    hashCode = hashCode * 59 + this.TakeOutLenderCity.GetHashCode();
                if (this.TakeOutLenderState != null)
                    hashCode = hashCode * 59 + this.TakeOutLenderState.GetHashCode();
                if (this.TakeOutLenderZip != null)
                    hashCode = hashCode * 59 + this.TakeOutLenderZip.GetHashCode();
                if (this.TakeOutCommitmentIssuedDate != null)
                    hashCode = hashCode * 59 + this.TakeOutCommitmentIssuedDate.GetHashCode();
                if (this.TakeOutLenderContactName != null)
                    hashCode = hashCode * 59 + this.TakeOutLenderContactName.GetHashCode();
                if (this.TakeOutLenderContactTitle != null)
                    hashCode = hashCode * 59 + this.TakeOutLenderContactTitle.GetHashCode();
                if (this.TakeOutLenderPhone != null)
                    hashCode = hashCode * 59 + this.TakeOutLenderPhone.GetHashCode();
                if (this.TakeOutLenderFax != null)
                    hashCode = hashCode * 59 + this.TakeOutLenderFax.GetHashCode();
                if (this.TakeOutLenderEmail != null)
                    hashCode = hashCode * 59 + this.TakeOutLenderEmail.GetHashCode();
                if (this.CostImprovementsIncluded != null)
                    hashCode = hashCode * 59 + this.CostImprovementsIncluded.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
