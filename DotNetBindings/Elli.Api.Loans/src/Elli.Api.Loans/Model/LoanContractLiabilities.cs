/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractLiabilities
    /// </summary>
    [DataContract]
    public partial class LoanContractLiabilities :  IEquatable<LoanContractLiabilities>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets EntityDeleted
        /// </summary>
        [DataMember(Name="entityDeleted", EmitDefaultValue=false)]
        public bool? EntityDeleted { get; set; }

        /// <summary>
        /// Gets or Sets AccountIdentifier
        /// </summary>
        [DataMember(Name="accountIdentifier", EmitDefaultValue=false)]
        public string AccountIdentifier { get; set; }

        /// <summary>
        /// Gets or Sets Attention
        /// </summary>
        [DataMember(Name="attention", EmitDefaultValue=false)]
        public string Attention { get; set; }

        /// <summary>
        /// Gets or Sets Date
        /// </summary>
        [DataMember(Name="date", EmitDefaultValue=false)]
        public DateTime? Date { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets ExclusionIndicator
        /// </summary>
        [DataMember(Name="exclusionIndicator", EmitDefaultValue=false)]
        public bool? ExclusionIndicator { get; set; }

        /// <summary>
        /// Gets or Sets HolderAddressCity
        /// </summary>
        [DataMember(Name="holderAddressCity", EmitDefaultValue=false)]
        public string HolderAddressCity { get; set; }

        /// <summary>
        /// Gets or Sets HolderAddressPostalCode
        /// </summary>
        [DataMember(Name="holderAddressPostalCode", EmitDefaultValue=false)]
        public string HolderAddressPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets HolderAddressState
        /// </summary>
        [DataMember(Name="holderAddressState", EmitDefaultValue=false)]
        public string HolderAddressState { get; set; }

        /// <summary>
        /// Gets or Sets HolderAddressStreetLine1
        /// </summary>
        [DataMember(Name="holderAddressStreetLine1", EmitDefaultValue=false)]
        public string HolderAddressStreetLine1 { get; set; }

        /// <summary>
        /// Gets or Sets HolderComments
        /// </summary>
        [DataMember(Name="holderComments", EmitDefaultValue=false)]
        public string HolderComments { get; set; }

        /// <summary>
        /// Gets or Sets HolderEmail
        /// </summary>
        [DataMember(Name="holderEmail", EmitDefaultValue=false)]
        public string HolderEmail { get; set; }

        /// <summary>
        /// Gets or Sets HolderFax
        /// </summary>
        [DataMember(Name="holderFax", EmitDefaultValue=false)]
        public string HolderFax { get; set; }

        /// <summary>
        /// Gets or Sets HolderName
        /// </summary>
        [DataMember(Name="holderName", EmitDefaultValue=false)]
        public string HolderName { get; set; }

        /// <summary>
        /// Gets or Sets HolderPhone
        /// </summary>
        [DataMember(Name="holderPhone", EmitDefaultValue=false)]
        public string HolderPhone { get; set; }

        /// <summary>
        /// Gets or Sets LiabilityIndex
        /// </summary>
        [DataMember(Name="liabilityIndex", EmitDefaultValue=false)]
        public int? LiabilityIndex { get; set; }

        /// <summary>
        /// Gets or Sets LiabilityType
        /// </summary>
        [DataMember(Name="liabilityType", EmitDefaultValue=false)]
        public string LiabilityType { get; set; }

        /// <summary>
        /// Gets or Sets MonthlyPaymentAmount
        /// </summary>
        [DataMember(Name="monthlyPaymentAmount", EmitDefaultValue=false)]
        public double? MonthlyPaymentAmount { get; set; }

        /// <summary>
        /// Gets or Sets MonthsToExclude
        /// </summary>
        [DataMember(Name="monthsToExclude", EmitDefaultValue=false)]
        public int? MonthsToExclude { get; set; }

        /// <summary>
        /// Gets or Sets NameInAccount
        /// </summary>
        [DataMember(Name="nameInAccount", EmitDefaultValue=false)]
        public string NameInAccount { get; set; }

        /// <summary>
        /// Gets or Sets NoLinkToDocTrackIndicator
        /// </summary>
        [DataMember(Name="noLinkToDocTrackIndicator", EmitDefaultValue=false)]
        public bool? NoLinkToDocTrackIndicator { get; set; }

        /// <summary>
        /// Gets or Sets Owner
        /// </summary>
        [DataMember(Name="owner", EmitDefaultValue=false)]
        public string Owner { get; set; }

        /// <summary>
        /// Gets or Sets PayoffStatusIndicator
        /// </summary>
        [DataMember(Name="payoffStatusIndicator", EmitDefaultValue=false)]
        public bool? PayoffStatusIndicator { get; set; }

        /// <summary>
        /// Gets or Sets PrepaymentPenaltyAmount
        /// </summary>
        [DataMember(Name="prepaymentPenaltyAmount", EmitDefaultValue=false)]
        public double? PrepaymentPenaltyAmount { get; set; }

        /// <summary>
        /// Gets or Sets PrintAttachmentIndicator
        /// </summary>
        [DataMember(Name="printAttachmentIndicator", EmitDefaultValue=false)]
        public bool? PrintAttachmentIndicator { get; set; }

        /// <summary>
        /// Gets or Sets RemainingTermMonths
        /// </summary>
        [DataMember(Name="remainingTermMonths", EmitDefaultValue=false)]
        public int? RemainingTermMonths { get; set; }

        /// <summary>
        /// Gets or Sets ReoId
        /// </summary>
        [DataMember(Name="reoId", EmitDefaultValue=false)]
        public string ReoId { get; set; }

        /// <summary>
        /// Gets or Sets RequestId
        /// </summary>
        [DataMember(Name="requestId", EmitDefaultValue=false)]
        public string RequestId { get; set; }

        /// <summary>
        /// Gets or Sets SubjectLoanResubordinationIndicator
        /// </summary>
        [DataMember(Name="subjectLoanResubordinationIndicator", EmitDefaultValue=false)]
        public bool? SubjectLoanResubordinationIndicator { get; set; }

        /// <summary>
        /// Gets or Sets SubjectPropertyIndicator
        /// </summary>
        [DataMember(Name="subjectPropertyIndicator", EmitDefaultValue=false)]
        public bool? SubjectPropertyIndicator { get; set; }

        /// <summary>
        /// Gets or Sets CurrentLienPosition
        /// </summary>
        [DataMember(Name="currentLienPosition", EmitDefaultValue=false)]
        public string CurrentLienPosition { get; set; }

        /// <summary>
        /// Gets or Sets ProposedLienPosition
        /// </summary>
        [DataMember(Name="proposedLienPosition", EmitDefaultValue=false)]
        public string ProposedLienPosition { get; set; }

        /// <summary>
        /// Gets or Sets BankLiabilityConsideredIndicator
        /// </summary>
        [DataMember(Name="bankLiabilityConsideredIndicator", EmitDefaultValue=false)]
        public bool? BankLiabilityConsideredIndicator { get; set; }

        /// <summary>
        /// Gets or Sets CreditLimit
        /// </summary>
        [DataMember(Name="creditLimit", EmitDefaultValue=false)]
        public double? CreditLimit { get; set; }

        /// <summary>
        /// Gets or Sets MortgageType
        /// </summary>
        [DataMember(Name="mortgageType", EmitDefaultValue=false)]
        public string MortgageType { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets TitleFax
        /// </summary>
        [DataMember(Name="titleFax", EmitDefaultValue=false)]
        public string TitleFax { get; set; }

        /// <summary>
        /// Gets or Sets TitlePhone
        /// </summary>
        [DataMember(Name="titlePhone", EmitDefaultValue=false)]
        public string TitlePhone { get; set; }

        /// <summary>
        /// Gets or Sets ToBePaidOffAmount
        /// </summary>
        [DataMember(Name="toBePaidOffAmount", EmitDefaultValue=false)]
        public double? ToBePaidOffAmount { get; set; }

        /// <summary>
        /// Gets or Sets UnpaidBalanceAmount
        /// </summary>
        [DataMember(Name="unpaidBalanceAmount", EmitDefaultValue=false)]
        public double? UnpaidBalanceAmount { get; set; }

        /// <summary>
        /// Gets or Sets DescriptionOfPurpose
        /// </summary>
        [DataMember(Name="descriptionOfPurpose", EmitDefaultValue=false)]
        public string DescriptionOfPurpose { get; set; }

        /// <summary>
        /// Gets or Sets IsDebtNotSecuredToSubjectPropertyIndicator
        /// </summary>
        [DataMember(Name="isDebtNotSecuredToSubjectPropertyIndicator", EmitDefaultValue=false)]
        public bool? IsDebtNotSecuredToSubjectPropertyIndicator { get; set; }

        /// <summary>
        /// Gets or Sets UCDPayoffType
        /// </summary>
        [DataMember(Name="uCDPayoffType", EmitDefaultValue=false)]
        public string UCDPayoffType { get; set; }

        /// <summary>
        /// Gets or Sets PayoffIncludedIndicator
        /// </summary>
        [DataMember(Name="payoffIncludedIndicator", EmitDefaultValue=false)]
        public bool? PayoffIncludedIndicator { get; set; }

        /// <summary>
        /// Gets or Sets VolIndex
        /// </summary>
        [DataMember(Name="volIndex", EmitDefaultValue=false)]
        public int? VolIndex { get; set; }

        /// <summary>
        /// Gets or Sets AccountIndicator
        /// </summary>
        [DataMember(Name="accountIndicator", EmitDefaultValue=false)]
        public bool? AccountIndicator { get; set; }

        /// <summary>
        /// Gets or Sets PrintUserNameIndicator
        /// </summary>
        [DataMember(Name="printUserNameIndicator", EmitDefaultValue=false)]
        public bool? PrintUserNameIndicator { get; set; }

        /// <summary>
        /// Gets or Sets Lates12Month30Day
        /// </summary>
        [DataMember(Name="lates12Month30Day", EmitDefaultValue=false)]
        public int? Lates12Month30Day { get; set; }

        /// <summary>
        /// Gets or Sets Lates24Month30Day
        /// </summary>
        [DataMember(Name="lates24Month30Day", EmitDefaultValue=false)]
        public int? Lates24Month30Day { get; set; }

        /// <summary>
        /// Gets or Sets Lates25Month30Day
        /// </summary>
        [DataMember(Name="lates25Month30Day", EmitDefaultValue=false)]
        public int? Lates25Month30Day { get; set; }

        /// <summary>
        /// Gets or Sets Lates12Month60Day
        /// </summary>
        [DataMember(Name="lates12Month60Day", EmitDefaultValue=false)]
        public int? Lates12Month60Day { get; set; }

        /// <summary>
        /// Gets or Sets Lates24Month60Day
        /// </summary>
        [DataMember(Name="lates24Month60Day", EmitDefaultValue=false)]
        public int? Lates24Month60Day { get; set; }

        /// <summary>
        /// Gets or Sets Lates25Month60Day
        /// </summary>
        [DataMember(Name="lates25Month60Day", EmitDefaultValue=false)]
        public int? Lates25Month60Day { get; set; }

        /// <summary>
        /// Gets or Sets Lates12Month90Day
        /// </summary>
        [DataMember(Name="lates12Month90Day", EmitDefaultValue=false)]
        public int? Lates12Month90Day { get; set; }

        /// <summary>
        /// Gets or Sets Lates24Month90Day
        /// </summary>
        [DataMember(Name="lates24Month90Day", EmitDefaultValue=false)]
        public int? Lates24Month90Day { get; set; }

        /// <summary>
        /// Gets or Sets Lates25Month90Day
        /// </summary>
        [DataMember(Name="lates25Month90Day", EmitDefaultValue=false)]
        public int? Lates25Month90Day { get; set; }

        /// <summary>
        /// Gets or Sets Lates12Month120Day
        /// </summary>
        [DataMember(Name="lates12Month120Day", EmitDefaultValue=false)]
        public int? Lates12Month120Day { get; set; }

        /// <summary>
        /// Gets or Sets Lates24Month120Day
        /// </summary>
        [DataMember(Name="lates24Month120Day", EmitDefaultValue=false)]
        public int? Lates24Month120Day { get; set; }

        /// <summary>
        /// Gets or Sets Lates25Month120Day
        /// </summary>
        [DataMember(Name="lates25Month120Day", EmitDefaultValue=false)]
        public int? Lates25Month120Day { get; set; }

        /// <summary>
        /// Gets or Sets Lates12Month150Day
        /// </summary>
        [DataMember(Name="lates12Month150Day", EmitDefaultValue=false)]
        public int? Lates12Month150Day { get; set; }

        /// <summary>
        /// Gets or Sets Lates24Month150Day
        /// </summary>
        [DataMember(Name="lates24Month150Day", EmitDefaultValue=false)]
        public int? Lates24Month150Day { get; set; }

        /// <summary>
        /// Gets or Sets Lates25Month150Day
        /// </summary>
        [DataMember(Name="lates25Month150Day", EmitDefaultValue=false)]
        public int? Lates25Month150Day { get; set; }

        /// <summary>
        /// Gets or Sets Contact
        /// </summary>
        [DataMember(Name="contact", EmitDefaultValue=false)]
        public EntityRefContract Contact { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractLiabilities {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  EntityDeleted: ").Append(EntityDeleted).Append("\n");
            sb.Append("  AccountIdentifier: ").Append(AccountIdentifier).Append("\n");
            sb.Append("  Attention: ").Append(Attention).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ExclusionIndicator: ").Append(ExclusionIndicator).Append("\n");
            sb.Append("  HolderAddressCity: ").Append(HolderAddressCity).Append("\n");
            sb.Append("  HolderAddressPostalCode: ").Append(HolderAddressPostalCode).Append("\n");
            sb.Append("  HolderAddressState: ").Append(HolderAddressState).Append("\n");
            sb.Append("  HolderAddressStreetLine1: ").Append(HolderAddressStreetLine1).Append("\n");
            sb.Append("  HolderComments: ").Append(HolderComments).Append("\n");
            sb.Append("  HolderEmail: ").Append(HolderEmail).Append("\n");
            sb.Append("  HolderFax: ").Append(HolderFax).Append("\n");
            sb.Append("  HolderName: ").Append(HolderName).Append("\n");
            sb.Append("  HolderPhone: ").Append(HolderPhone).Append("\n");
            sb.Append("  LiabilityIndex: ").Append(LiabilityIndex).Append("\n");
            sb.Append("  LiabilityType: ").Append(LiabilityType).Append("\n");
            sb.Append("  MonthlyPaymentAmount: ").Append(MonthlyPaymentAmount).Append("\n");
            sb.Append("  MonthsToExclude: ").Append(MonthsToExclude).Append("\n");
            sb.Append("  NameInAccount: ").Append(NameInAccount).Append("\n");
            sb.Append("  NoLinkToDocTrackIndicator: ").Append(NoLinkToDocTrackIndicator).Append("\n");
            sb.Append("  Owner: ").Append(Owner).Append("\n");
            sb.Append("  PayoffStatusIndicator: ").Append(PayoffStatusIndicator).Append("\n");
            sb.Append("  PrepaymentPenaltyAmount: ").Append(PrepaymentPenaltyAmount).Append("\n");
            sb.Append("  PrintAttachmentIndicator: ").Append(PrintAttachmentIndicator).Append("\n");
            sb.Append("  RemainingTermMonths: ").Append(RemainingTermMonths).Append("\n");
            sb.Append("  ReoId: ").Append(ReoId).Append("\n");
            sb.Append("  RequestId: ").Append(RequestId).Append("\n");
            sb.Append("  SubjectLoanResubordinationIndicator: ").Append(SubjectLoanResubordinationIndicator).Append("\n");
            sb.Append("  SubjectPropertyIndicator: ").Append(SubjectPropertyIndicator).Append("\n");
            sb.Append("  CurrentLienPosition: ").Append(CurrentLienPosition).Append("\n");
            sb.Append("  ProposedLienPosition: ").Append(ProposedLienPosition).Append("\n");
            sb.Append("  BankLiabilityConsideredIndicator: ").Append(BankLiabilityConsideredIndicator).Append("\n");
            sb.Append("  CreditLimit: ").Append(CreditLimit).Append("\n");
            sb.Append("  MortgageType: ").Append(MortgageType).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  TitleFax: ").Append(TitleFax).Append("\n");
            sb.Append("  TitlePhone: ").Append(TitlePhone).Append("\n");
            sb.Append("  ToBePaidOffAmount: ").Append(ToBePaidOffAmount).Append("\n");
            sb.Append("  UnpaidBalanceAmount: ").Append(UnpaidBalanceAmount).Append("\n");
            sb.Append("  DescriptionOfPurpose: ").Append(DescriptionOfPurpose).Append("\n");
            sb.Append("  IsDebtNotSecuredToSubjectPropertyIndicator: ").Append(IsDebtNotSecuredToSubjectPropertyIndicator).Append("\n");
            sb.Append("  UCDPayoffType: ").Append(UCDPayoffType).Append("\n");
            sb.Append("  PayoffIncludedIndicator: ").Append(PayoffIncludedIndicator).Append("\n");
            sb.Append("  VolIndex: ").Append(VolIndex).Append("\n");
            sb.Append("  AccountIndicator: ").Append(AccountIndicator).Append("\n");
            sb.Append("  PrintUserNameIndicator: ").Append(PrintUserNameIndicator).Append("\n");
            sb.Append("  Lates12Month30Day: ").Append(Lates12Month30Day).Append("\n");
            sb.Append("  Lates24Month30Day: ").Append(Lates24Month30Day).Append("\n");
            sb.Append("  Lates25Month30Day: ").Append(Lates25Month30Day).Append("\n");
            sb.Append("  Lates12Month60Day: ").Append(Lates12Month60Day).Append("\n");
            sb.Append("  Lates24Month60Day: ").Append(Lates24Month60Day).Append("\n");
            sb.Append("  Lates25Month60Day: ").Append(Lates25Month60Day).Append("\n");
            sb.Append("  Lates12Month90Day: ").Append(Lates12Month90Day).Append("\n");
            sb.Append("  Lates24Month90Day: ").Append(Lates24Month90Day).Append("\n");
            sb.Append("  Lates25Month90Day: ").Append(Lates25Month90Day).Append("\n");
            sb.Append("  Lates12Month120Day: ").Append(Lates12Month120Day).Append("\n");
            sb.Append("  Lates24Month120Day: ").Append(Lates24Month120Day).Append("\n");
            sb.Append("  Lates25Month120Day: ").Append(Lates25Month120Day).Append("\n");
            sb.Append("  Lates12Month150Day: ").Append(Lates12Month150Day).Append("\n");
            sb.Append("  Lates24Month150Day: ").Append(Lates24Month150Day).Append("\n");
            sb.Append("  Lates25Month150Day: ").Append(Lates25Month150Day).Append("\n");
            sb.Append("  Contact: ").Append(Contact).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractLiabilities);
        }

        /// <summary>
        /// Returns true if LoanContractLiabilities instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractLiabilities to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractLiabilities input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.EntityDeleted == input.EntityDeleted ||
                    (this.EntityDeleted != null &&
                    this.EntityDeleted.Equals(input.EntityDeleted))
                ) && 
                (
                    this.AccountIdentifier == input.AccountIdentifier ||
                    (this.AccountIdentifier != null &&
                    this.AccountIdentifier.Equals(input.AccountIdentifier))
                ) && 
                (
                    this.Attention == input.Attention ||
                    (this.Attention != null &&
                    this.Attention.Equals(input.Attention))
                ) && 
                (
                    this.Date == input.Date ||
                    (this.Date != null &&
                    this.Date.Equals(input.Date))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.ExclusionIndicator == input.ExclusionIndicator ||
                    (this.ExclusionIndicator != null &&
                    this.ExclusionIndicator.Equals(input.ExclusionIndicator))
                ) && 
                (
                    this.HolderAddressCity == input.HolderAddressCity ||
                    (this.HolderAddressCity != null &&
                    this.HolderAddressCity.Equals(input.HolderAddressCity))
                ) && 
                (
                    this.HolderAddressPostalCode == input.HolderAddressPostalCode ||
                    (this.HolderAddressPostalCode != null &&
                    this.HolderAddressPostalCode.Equals(input.HolderAddressPostalCode))
                ) && 
                (
                    this.HolderAddressState == input.HolderAddressState ||
                    (this.HolderAddressState != null &&
                    this.HolderAddressState.Equals(input.HolderAddressState))
                ) && 
                (
                    this.HolderAddressStreetLine1 == input.HolderAddressStreetLine1 ||
                    (this.HolderAddressStreetLine1 != null &&
                    this.HolderAddressStreetLine1.Equals(input.HolderAddressStreetLine1))
                ) && 
                (
                    this.HolderComments == input.HolderComments ||
                    (this.HolderComments != null &&
                    this.HolderComments.Equals(input.HolderComments))
                ) && 
                (
                    this.HolderEmail == input.HolderEmail ||
                    (this.HolderEmail != null &&
                    this.HolderEmail.Equals(input.HolderEmail))
                ) && 
                (
                    this.HolderFax == input.HolderFax ||
                    (this.HolderFax != null &&
                    this.HolderFax.Equals(input.HolderFax))
                ) && 
                (
                    this.HolderName == input.HolderName ||
                    (this.HolderName != null &&
                    this.HolderName.Equals(input.HolderName))
                ) && 
                (
                    this.HolderPhone == input.HolderPhone ||
                    (this.HolderPhone != null &&
                    this.HolderPhone.Equals(input.HolderPhone))
                ) && 
                (
                    this.LiabilityIndex == input.LiabilityIndex ||
                    (this.LiabilityIndex != null &&
                    this.LiabilityIndex.Equals(input.LiabilityIndex))
                ) && 
                (
                    this.LiabilityType == input.LiabilityType ||
                    (this.LiabilityType != null &&
                    this.LiabilityType.Equals(input.LiabilityType))
                ) && 
                (
                    this.MonthlyPaymentAmount == input.MonthlyPaymentAmount ||
                    (this.MonthlyPaymentAmount != null &&
                    this.MonthlyPaymentAmount.Equals(input.MonthlyPaymentAmount))
                ) && 
                (
                    this.MonthsToExclude == input.MonthsToExclude ||
                    (this.MonthsToExclude != null &&
                    this.MonthsToExclude.Equals(input.MonthsToExclude))
                ) && 
                (
                    this.NameInAccount == input.NameInAccount ||
                    (this.NameInAccount != null &&
                    this.NameInAccount.Equals(input.NameInAccount))
                ) && 
                (
                    this.NoLinkToDocTrackIndicator == input.NoLinkToDocTrackIndicator ||
                    (this.NoLinkToDocTrackIndicator != null &&
                    this.NoLinkToDocTrackIndicator.Equals(input.NoLinkToDocTrackIndicator))
                ) && 
                (
                    this.Owner == input.Owner ||
                    (this.Owner != null &&
                    this.Owner.Equals(input.Owner))
                ) && 
                (
                    this.PayoffStatusIndicator == input.PayoffStatusIndicator ||
                    (this.PayoffStatusIndicator != null &&
                    this.PayoffStatusIndicator.Equals(input.PayoffStatusIndicator))
                ) && 
                (
                    this.PrepaymentPenaltyAmount == input.PrepaymentPenaltyAmount ||
                    (this.PrepaymentPenaltyAmount != null &&
                    this.PrepaymentPenaltyAmount.Equals(input.PrepaymentPenaltyAmount))
                ) && 
                (
                    this.PrintAttachmentIndicator == input.PrintAttachmentIndicator ||
                    (this.PrintAttachmentIndicator != null &&
                    this.PrintAttachmentIndicator.Equals(input.PrintAttachmentIndicator))
                ) && 
                (
                    this.RemainingTermMonths == input.RemainingTermMonths ||
                    (this.RemainingTermMonths != null &&
                    this.RemainingTermMonths.Equals(input.RemainingTermMonths))
                ) && 
                (
                    this.ReoId == input.ReoId ||
                    (this.ReoId != null &&
                    this.ReoId.Equals(input.ReoId))
                ) && 
                (
                    this.RequestId == input.RequestId ||
                    (this.RequestId != null &&
                    this.RequestId.Equals(input.RequestId))
                ) && 
                (
                    this.SubjectLoanResubordinationIndicator == input.SubjectLoanResubordinationIndicator ||
                    (this.SubjectLoanResubordinationIndicator != null &&
                    this.SubjectLoanResubordinationIndicator.Equals(input.SubjectLoanResubordinationIndicator))
                ) && 
                (
                    this.SubjectPropertyIndicator == input.SubjectPropertyIndicator ||
                    (this.SubjectPropertyIndicator != null &&
                    this.SubjectPropertyIndicator.Equals(input.SubjectPropertyIndicator))
                ) && 
                (
                    this.CurrentLienPosition == input.CurrentLienPosition ||
                    (this.CurrentLienPosition != null &&
                    this.CurrentLienPosition.Equals(input.CurrentLienPosition))
                ) && 
                (
                    this.ProposedLienPosition == input.ProposedLienPosition ||
                    (this.ProposedLienPosition != null &&
                    this.ProposedLienPosition.Equals(input.ProposedLienPosition))
                ) && 
                (
                    this.BankLiabilityConsideredIndicator == input.BankLiabilityConsideredIndicator ||
                    (this.BankLiabilityConsideredIndicator != null &&
                    this.BankLiabilityConsideredIndicator.Equals(input.BankLiabilityConsideredIndicator))
                ) && 
                (
                    this.CreditLimit == input.CreditLimit ||
                    (this.CreditLimit != null &&
                    this.CreditLimit.Equals(input.CreditLimit))
                ) && 
                (
                    this.MortgageType == input.MortgageType ||
                    (this.MortgageType != null &&
                    this.MortgageType.Equals(input.MortgageType))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.TitleFax == input.TitleFax ||
                    (this.TitleFax != null &&
                    this.TitleFax.Equals(input.TitleFax))
                ) && 
                (
                    this.TitlePhone == input.TitlePhone ||
                    (this.TitlePhone != null &&
                    this.TitlePhone.Equals(input.TitlePhone))
                ) && 
                (
                    this.ToBePaidOffAmount == input.ToBePaidOffAmount ||
                    (this.ToBePaidOffAmount != null &&
                    this.ToBePaidOffAmount.Equals(input.ToBePaidOffAmount))
                ) && 
                (
                    this.UnpaidBalanceAmount == input.UnpaidBalanceAmount ||
                    (this.UnpaidBalanceAmount != null &&
                    this.UnpaidBalanceAmount.Equals(input.UnpaidBalanceAmount))
                ) && 
                (
                    this.DescriptionOfPurpose == input.DescriptionOfPurpose ||
                    (this.DescriptionOfPurpose != null &&
                    this.DescriptionOfPurpose.Equals(input.DescriptionOfPurpose))
                ) && 
                (
                    this.IsDebtNotSecuredToSubjectPropertyIndicator == input.IsDebtNotSecuredToSubjectPropertyIndicator ||
                    (this.IsDebtNotSecuredToSubjectPropertyIndicator != null &&
                    this.IsDebtNotSecuredToSubjectPropertyIndicator.Equals(input.IsDebtNotSecuredToSubjectPropertyIndicator))
                ) && 
                (
                    this.UCDPayoffType == input.UCDPayoffType ||
                    (this.UCDPayoffType != null &&
                    this.UCDPayoffType.Equals(input.UCDPayoffType))
                ) && 
                (
                    this.PayoffIncludedIndicator == input.PayoffIncludedIndicator ||
                    (this.PayoffIncludedIndicator != null &&
                    this.PayoffIncludedIndicator.Equals(input.PayoffIncludedIndicator))
                ) && 
                (
                    this.VolIndex == input.VolIndex ||
                    (this.VolIndex != null &&
                    this.VolIndex.Equals(input.VolIndex))
                ) && 
                (
                    this.AccountIndicator == input.AccountIndicator ||
                    (this.AccountIndicator != null &&
                    this.AccountIndicator.Equals(input.AccountIndicator))
                ) && 
                (
                    this.PrintUserNameIndicator == input.PrintUserNameIndicator ||
                    (this.PrintUserNameIndicator != null &&
                    this.PrintUserNameIndicator.Equals(input.PrintUserNameIndicator))
                ) && 
                (
                    this.Lates12Month30Day == input.Lates12Month30Day ||
                    (this.Lates12Month30Day != null &&
                    this.Lates12Month30Day.Equals(input.Lates12Month30Day))
                ) && 
                (
                    this.Lates24Month30Day == input.Lates24Month30Day ||
                    (this.Lates24Month30Day != null &&
                    this.Lates24Month30Day.Equals(input.Lates24Month30Day))
                ) && 
                (
                    this.Lates25Month30Day == input.Lates25Month30Day ||
                    (this.Lates25Month30Day != null &&
                    this.Lates25Month30Day.Equals(input.Lates25Month30Day))
                ) && 
                (
                    this.Lates12Month60Day == input.Lates12Month60Day ||
                    (this.Lates12Month60Day != null &&
                    this.Lates12Month60Day.Equals(input.Lates12Month60Day))
                ) && 
                (
                    this.Lates24Month60Day == input.Lates24Month60Day ||
                    (this.Lates24Month60Day != null &&
                    this.Lates24Month60Day.Equals(input.Lates24Month60Day))
                ) && 
                (
                    this.Lates25Month60Day == input.Lates25Month60Day ||
                    (this.Lates25Month60Day != null &&
                    this.Lates25Month60Day.Equals(input.Lates25Month60Day))
                ) && 
                (
                    this.Lates12Month90Day == input.Lates12Month90Day ||
                    (this.Lates12Month90Day != null &&
                    this.Lates12Month90Day.Equals(input.Lates12Month90Day))
                ) && 
                (
                    this.Lates24Month90Day == input.Lates24Month90Day ||
                    (this.Lates24Month90Day != null &&
                    this.Lates24Month90Day.Equals(input.Lates24Month90Day))
                ) && 
                (
                    this.Lates25Month90Day == input.Lates25Month90Day ||
                    (this.Lates25Month90Day != null &&
                    this.Lates25Month90Day.Equals(input.Lates25Month90Day))
                ) && 
                (
                    this.Lates12Month120Day == input.Lates12Month120Day ||
                    (this.Lates12Month120Day != null &&
                    this.Lates12Month120Day.Equals(input.Lates12Month120Day))
                ) && 
                (
                    this.Lates24Month120Day == input.Lates24Month120Day ||
                    (this.Lates24Month120Day != null &&
                    this.Lates24Month120Day.Equals(input.Lates24Month120Day))
                ) && 
                (
                    this.Lates25Month120Day == input.Lates25Month120Day ||
                    (this.Lates25Month120Day != null &&
                    this.Lates25Month120Day.Equals(input.Lates25Month120Day))
                ) && 
                (
                    this.Lates12Month150Day == input.Lates12Month150Day ||
                    (this.Lates12Month150Day != null &&
                    this.Lates12Month150Day.Equals(input.Lates12Month150Day))
                ) && 
                (
                    this.Lates24Month150Day == input.Lates24Month150Day ||
                    (this.Lates24Month150Day != null &&
                    this.Lates24Month150Day.Equals(input.Lates24Month150Day))
                ) && 
                (
                    this.Lates25Month150Day == input.Lates25Month150Day ||
                    (this.Lates25Month150Day != null &&
                    this.Lates25Month150Day.Equals(input.Lates25Month150Day))
                ) && 
                (
                    this.Contact == input.Contact ||
                    (this.Contact != null &&
                    this.Contact.Equals(input.Contact))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.EntityDeleted != null)
                    hashCode = hashCode * 59 + this.EntityDeleted.GetHashCode();
                if (this.AccountIdentifier != null)
                    hashCode = hashCode * 59 + this.AccountIdentifier.GetHashCode();
                if (this.Attention != null)
                    hashCode = hashCode * 59 + this.Attention.GetHashCode();
                if (this.Date != null)
                    hashCode = hashCode * 59 + this.Date.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.ExclusionIndicator != null)
                    hashCode = hashCode * 59 + this.ExclusionIndicator.GetHashCode();
                if (this.HolderAddressCity != null)
                    hashCode = hashCode * 59 + this.HolderAddressCity.GetHashCode();
                if (this.HolderAddressPostalCode != null)
                    hashCode = hashCode * 59 + this.HolderAddressPostalCode.GetHashCode();
                if (this.HolderAddressState != null)
                    hashCode = hashCode * 59 + this.HolderAddressState.GetHashCode();
                if (this.HolderAddressStreetLine1 != null)
                    hashCode = hashCode * 59 + this.HolderAddressStreetLine1.GetHashCode();
                if (this.HolderComments != null)
                    hashCode = hashCode * 59 + this.HolderComments.GetHashCode();
                if (this.HolderEmail != null)
                    hashCode = hashCode * 59 + this.HolderEmail.GetHashCode();
                if (this.HolderFax != null)
                    hashCode = hashCode * 59 + this.HolderFax.GetHashCode();
                if (this.HolderName != null)
                    hashCode = hashCode * 59 + this.HolderName.GetHashCode();
                if (this.HolderPhone != null)
                    hashCode = hashCode * 59 + this.HolderPhone.GetHashCode();
                if (this.LiabilityIndex != null)
                    hashCode = hashCode * 59 + this.LiabilityIndex.GetHashCode();
                if (this.LiabilityType != null)
                    hashCode = hashCode * 59 + this.LiabilityType.GetHashCode();
                if (this.MonthlyPaymentAmount != null)
                    hashCode = hashCode * 59 + this.MonthlyPaymentAmount.GetHashCode();
                if (this.MonthsToExclude != null)
                    hashCode = hashCode * 59 + this.MonthsToExclude.GetHashCode();
                if (this.NameInAccount != null)
                    hashCode = hashCode * 59 + this.NameInAccount.GetHashCode();
                if (this.NoLinkToDocTrackIndicator != null)
                    hashCode = hashCode * 59 + this.NoLinkToDocTrackIndicator.GetHashCode();
                if (this.Owner != null)
                    hashCode = hashCode * 59 + this.Owner.GetHashCode();
                if (this.PayoffStatusIndicator != null)
                    hashCode = hashCode * 59 + this.PayoffStatusIndicator.GetHashCode();
                if (this.PrepaymentPenaltyAmount != null)
                    hashCode = hashCode * 59 + this.PrepaymentPenaltyAmount.GetHashCode();
                if (this.PrintAttachmentIndicator != null)
                    hashCode = hashCode * 59 + this.PrintAttachmentIndicator.GetHashCode();
                if (this.RemainingTermMonths != null)
                    hashCode = hashCode * 59 + this.RemainingTermMonths.GetHashCode();
                if (this.ReoId != null)
                    hashCode = hashCode * 59 + this.ReoId.GetHashCode();
                if (this.RequestId != null)
                    hashCode = hashCode * 59 + this.RequestId.GetHashCode();
                if (this.SubjectLoanResubordinationIndicator != null)
                    hashCode = hashCode * 59 + this.SubjectLoanResubordinationIndicator.GetHashCode();
                if (this.SubjectPropertyIndicator != null)
                    hashCode = hashCode * 59 + this.SubjectPropertyIndicator.GetHashCode();
                if (this.CurrentLienPosition != null)
                    hashCode = hashCode * 59 + this.CurrentLienPosition.GetHashCode();
                if (this.ProposedLienPosition != null)
                    hashCode = hashCode * 59 + this.ProposedLienPosition.GetHashCode();
                if (this.BankLiabilityConsideredIndicator != null)
                    hashCode = hashCode * 59 + this.BankLiabilityConsideredIndicator.GetHashCode();
                if (this.CreditLimit != null)
                    hashCode = hashCode * 59 + this.CreditLimit.GetHashCode();
                if (this.MortgageType != null)
                    hashCode = hashCode * 59 + this.MortgageType.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.TitleFax != null)
                    hashCode = hashCode * 59 + this.TitleFax.GetHashCode();
                if (this.TitlePhone != null)
                    hashCode = hashCode * 59 + this.TitlePhone.GetHashCode();
                if (this.ToBePaidOffAmount != null)
                    hashCode = hashCode * 59 + this.ToBePaidOffAmount.GetHashCode();
                if (this.UnpaidBalanceAmount != null)
                    hashCode = hashCode * 59 + this.UnpaidBalanceAmount.GetHashCode();
                if (this.DescriptionOfPurpose != null)
                    hashCode = hashCode * 59 + this.DescriptionOfPurpose.GetHashCode();
                if (this.IsDebtNotSecuredToSubjectPropertyIndicator != null)
                    hashCode = hashCode * 59 + this.IsDebtNotSecuredToSubjectPropertyIndicator.GetHashCode();
                if (this.UCDPayoffType != null)
                    hashCode = hashCode * 59 + this.UCDPayoffType.GetHashCode();
                if (this.PayoffIncludedIndicator != null)
                    hashCode = hashCode * 59 + this.PayoffIncludedIndicator.GetHashCode();
                if (this.VolIndex != null)
                    hashCode = hashCode * 59 + this.VolIndex.GetHashCode();
                if (this.AccountIndicator != null)
                    hashCode = hashCode * 59 + this.AccountIndicator.GetHashCode();
                if (this.PrintUserNameIndicator != null)
                    hashCode = hashCode * 59 + this.PrintUserNameIndicator.GetHashCode();
                if (this.Lates12Month30Day != null)
                    hashCode = hashCode * 59 + this.Lates12Month30Day.GetHashCode();
                if (this.Lates24Month30Day != null)
                    hashCode = hashCode * 59 + this.Lates24Month30Day.GetHashCode();
                if (this.Lates25Month30Day != null)
                    hashCode = hashCode * 59 + this.Lates25Month30Day.GetHashCode();
                if (this.Lates12Month60Day != null)
                    hashCode = hashCode * 59 + this.Lates12Month60Day.GetHashCode();
                if (this.Lates24Month60Day != null)
                    hashCode = hashCode * 59 + this.Lates24Month60Day.GetHashCode();
                if (this.Lates25Month60Day != null)
                    hashCode = hashCode * 59 + this.Lates25Month60Day.GetHashCode();
                if (this.Lates12Month90Day != null)
                    hashCode = hashCode * 59 + this.Lates12Month90Day.GetHashCode();
                if (this.Lates24Month90Day != null)
                    hashCode = hashCode * 59 + this.Lates24Month90Day.GetHashCode();
                if (this.Lates25Month90Day != null)
                    hashCode = hashCode * 59 + this.Lates25Month90Day.GetHashCode();
                if (this.Lates12Month120Day != null)
                    hashCode = hashCode * 59 + this.Lates12Month120Day.GetHashCode();
                if (this.Lates24Month120Day != null)
                    hashCode = hashCode * 59 + this.Lates24Month120Day.GetHashCode();
                if (this.Lates25Month120Day != null)
                    hashCode = hashCode * 59 + this.Lates25Month120Day.GetHashCode();
                if (this.Lates12Month150Day != null)
                    hashCode = hashCode * 59 + this.Lates12Month150Day.GetHashCode();
                if (this.Lates24Month150Day != null)
                    hashCode = hashCode * 59 + this.Lates24Month150Day.GetHashCode();
                if (this.Lates25Month150Day != null)
                    hashCode = hashCode * 59 + this.Lates25Month150Day.GetHashCode();
                if (this.Contact != null)
                    hashCode = hashCode * 59 + this.Contact.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
