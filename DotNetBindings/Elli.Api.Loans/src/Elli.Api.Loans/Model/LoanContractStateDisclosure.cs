/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractStateDisclosure
    /// </summary>
    [DataContract]
    public partial class LoanContractStateDisclosure :  IEquatable<LoanContractStateDisclosure>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets AcceptedByBorrowerIndicator
        /// </summary>
        [DataMember(Name="acceptedByBorrowerIndicator", EmitDefaultValue=false)]
        public bool? AcceptedByBorrowerIndicator { get; set; }

        /// <summary>
        /// Gets or Sets AcceptedDate
        /// </summary>
        [DataMember(Name="acceptedDate", EmitDefaultValue=false)]
        public DateTime? AcceptedDate { get; set; }

        /// <summary>
        /// Gets or Sets ActingOtherDescription1
        /// </summary>
        [DataMember(Name="actingOtherDescription1", EmitDefaultValue=false)]
        public string ActingOtherDescription1 { get; set; }

        /// <summary>
        /// Gets or Sets ActingOtherDescription2
        /// </summary>
        [DataMember(Name="actingOtherDescription2", EmitDefaultValue=false)]
        public string ActingOtherDescription2 { get; set; }

        /// <summary>
        /// Gets or Sets ActingOthersIndicator
        /// </summary>
        [DataMember(Name="actingOthersIndicator", EmitDefaultValue=false)]
        public bool? ActingOthersIndicator { get; set; }

        /// <summary>
        /// Gets or Sets AdvFeeAgmtInEfctNumDay
        /// </summary>
        [DataMember(Name="advFeeAgmtInEfctNumDay", EmitDefaultValue=false)]
        public int? AdvFeeAgmtInEfctNumDay { get; set; }

        /// <summary>
        /// Gets or Sets AdvisoryCondition1
        /// </summary>
        [DataMember(Name="advisoryCondition1", EmitDefaultValue=false)]
        public string AdvisoryCondition1 { get; set; }

        /// <summary>
        /// Gets or Sets AdvisoryCondition2
        /// </summary>
        [DataMember(Name="advisoryCondition2", EmitDefaultValue=false)]
        public string AdvisoryCondition2 { get; set; }

        /// <summary>
        /// Gets or Sets AdvisoryCondition3
        /// </summary>
        [DataMember(Name="advisoryCondition3", EmitDefaultValue=false)]
        public string AdvisoryCondition3 { get; set; }

        /// <summary>
        /// Gets or Sets AdvisoryCondition4
        /// </summary>
        [DataMember(Name="advisoryCondition4", EmitDefaultValue=false)]
        public string AdvisoryCondition4 { get; set; }

        /// <summary>
        /// Gets or Sets AmendedAcquisitionCost
        /// </summary>
        [DataMember(Name="amendedAcquisitionCost", EmitDefaultValue=false)]
        public double? AmendedAcquisitionCost { get; set; }

        /// <summary>
        /// Gets or Sets ApplicationDate
        /// </summary>
        [DataMember(Name="applicationDate", EmitDefaultValue=false)]
        public DateTime? ApplicationDate { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalContact
        /// </summary>
        [DataMember(Name="appraisalContact", EmitDefaultValue=false)]
        public string AppraisalContact { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalDeposit
        /// </summary>
        [DataMember(Name="appraisalDeposit", EmitDefaultValue=false)]
        public double? AppraisalDeposit { get; set; }

        /// <summary>
        /// Gets or Sets Areas
        /// </summary>
        [DataMember(Name="areas", EmitDefaultValue=false)]
        public string Areas { get; set; }

        /// <summary>
        /// Gets or Sets AsAttorneyIndicator
        /// </summary>
        [DataMember(Name="asAttorneyIndicator", EmitDefaultValue=false)]
        public bool? AsAttorneyIndicator { get; set; }

        /// <summary>
        /// Gets or Sets AsRealBrokerIndicator
        /// </summary>
        [DataMember(Name="asRealBrokerIndicator", EmitDefaultValue=false)]
        public bool? AsRealBrokerIndicator { get; set; }

        /// <summary>
        /// Gets or Sets AttorneyForTheBuyerIndicator
        /// </summary>
        [DataMember(Name="attorneyForTheBuyerIndicator", EmitDefaultValue=false)]
        public bool? AttorneyForTheBuyerIndicator { get; set; }

        /// <summary>
        /// Gets or Sets AttorneyForTheLenderIndicator
        /// </summary>
        [DataMember(Name="attorneyForTheLenderIndicator", EmitDefaultValue=false)]
        public bool? AttorneyForTheLenderIndicator { get; set; }

        /// <summary>
        /// Gets or Sets AttorneyForTheSellerIndicator
        /// </summary>
        [DataMember(Name="attorneyForTheSellerIndicator", EmitDefaultValue=false)]
        public bool? AttorneyForTheSellerIndicator { get; set; }

        /// <summary>
        /// Gets or Sets AZCmplBlankSpcsDoc1BlankFldDesc1
        /// </summary>
        [DataMember(Name="aZCmplBlankSpcsDoc1BlankFldDesc1", EmitDefaultValue=false)]
        public string AZCmplBlankSpcsDoc1BlankFldDesc1 { get; set; }

        /// <summary>
        /// Gets or Sets AZCmplBlankSpcsDoc1BlankFldDesc2
        /// </summary>
        [DataMember(Name="aZCmplBlankSpcsDoc1BlankFldDesc2", EmitDefaultValue=false)]
        public string AZCmplBlankSpcsDoc1BlankFldDesc2 { get; set; }

        /// <summary>
        /// Gets or Sets AZCmplBlankSpcsDoc1BlankFldDesc3
        /// </summary>
        [DataMember(Name="aZCmplBlankSpcsDoc1BlankFldDesc3", EmitDefaultValue=false)]
        public string AZCmplBlankSpcsDoc1BlankFldDesc3 { get; set; }

        /// <summary>
        /// Gets or Sets AZCmplBlankSpcsDoc1Nm
        /// </summary>
        [DataMember(Name="aZCmplBlankSpcsDoc1Nm", EmitDefaultValue=false)]
        public string AZCmplBlankSpcsDoc1Nm { get; set; }

        /// <summary>
        /// Gets or Sets AZCmplBlankSpcsDoc2Nm
        /// </summary>
        [DataMember(Name="aZCmplBlankSpcsDoc2Nm", EmitDefaultValue=false)]
        public string AZCmplBlankSpcsDoc2Nm { get; set; }

        /// <summary>
        /// Gets or Sets AZCmplBlankSpcsDoc3Nm
        /// </summary>
        [DataMember(Name="aZCmplBlankSpcsDoc3Nm", EmitDefaultValue=false)]
        public string AZCmplBlankSpcsDoc3Nm { get; set; }

        /// <summary>
        /// Gets or Sets BasedOnOthersDescription
        /// </summary>
        [DataMember(Name="basedOnOthersDescription", EmitDefaultValue=false)]
        public string BasedOnOthersDescription { get; set; }

        /// <summary>
        /// Gets or Sets BasedOnOthersIndicator
        /// </summary>
        [DataMember(Name="basedOnOthersIndicator", EmitDefaultValue=false)]
        public bool? BasedOnOthersIndicator { get; set; }

        /// <summary>
        /// Gets or Sets BasedOnWholesaleOptionsIndicator
        /// </summary>
        [DataMember(Name="basedOnWholesaleOptionsIndicator", EmitDefaultValue=false)]
        public bool? BasedOnWholesaleOptionsIndicator { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerElectsEstablishEscrowAmount
        /// </summary>
        [DataMember(Name="borrowerElectsEstablishEscrowAmount", EmitDefaultValue=false)]
        public double? BorrowerElectsEstablishEscrowAmount { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerElectsEstablishEscrowIndicator
        /// </summary>
        [DataMember(Name="borrowerElectsEstablishEscrowIndicator", EmitDefaultValue=false)]
        public bool? BorrowerElectsEstablishEscrowIndicator { get; set; }

        /// <summary>
        /// Gets or Sets BrokerageFeeAddition1
        /// </summary>
        [DataMember(Name="brokerageFeeAddition1", EmitDefaultValue=false)]
        public double? BrokerageFeeAddition1 { get; set; }

        /// <summary>
        /// Gets or Sets BrokerageFeeAddition2
        /// </summary>
        [DataMember(Name="brokerageFeeAddition2", EmitDefaultValue=false)]
        public double? BrokerageFeeAddition2 { get; set; }

        /// <summary>
        /// Gets or Sets BrokerageFeeAddition3
        /// </summary>
        [DataMember(Name="brokerageFeeAddition3", EmitDefaultValue=false)]
        public double? BrokerageFeeAddition3 { get; set; }

        /// <summary>
        /// Gets or Sets BrokerageFeeAmount1
        /// </summary>
        [DataMember(Name="brokerageFeeAmount1", EmitDefaultValue=false)]
        public double? BrokerageFeeAmount1 { get; set; }

        /// <summary>
        /// Gets or Sets BrokerageFeeAmount2
        /// </summary>
        [DataMember(Name="brokerageFeeAmount2", EmitDefaultValue=false)]
        public double? BrokerageFeeAmount2 { get; set; }

        /// <summary>
        /// Gets or Sets BrokerageFeeAmount3
        /// </summary>
        [DataMember(Name="brokerageFeeAmount3", EmitDefaultValue=false)]
        public double? BrokerageFeeAmount3 { get; set; }

        /// <summary>
        /// Gets or Sets BrokerageFeeDays
        /// </summary>
        [DataMember(Name="brokerageFeeDays", EmitDefaultValue=false)]
        public int? BrokerageFeeDays { get; set; }

        /// <summary>
        /// Gets or Sets BrokerageFeePercent1
        /// </summary>
        [DataMember(Name="brokerageFeePercent1", EmitDefaultValue=false)]
        public double? BrokerageFeePercent1 { get; set; }

        /// <summary>
        /// Gets or Sets BrokerageFeePercent2
        /// </summary>
        [DataMember(Name="brokerageFeePercent2", EmitDefaultValue=false)]
        public double? BrokerageFeePercent2 { get; set; }

        /// <summary>
        /// Gets or Sets BrokerageFeePercent3
        /// </summary>
        [DataMember(Name="brokerageFeePercent3", EmitDefaultValue=false)]
        public double? BrokerageFeePercent3 { get; set; }

        /// <summary>
        /// Gets or Sets BrokerAuthorizedSigningRepName
        /// </summary>
        [DataMember(Name="brokerAuthorizedSigningRepName", EmitDefaultValue=false)]
        public string BrokerAuthorizedSigningRepName { get; set; }

        /// <summary>
        /// Gets or Sets BrokerAuthorizedSigningRepTitle
        /// </summary>
        [DataMember(Name="brokerAuthorizedSigningRepTitle", EmitDefaultValue=false)]
        public string BrokerAuthorizedSigningRepTitle { get; set; }

        /// <summary>
        /// Gets or Sets BrokerForTheSeller
        /// </summary>
        [DataMember(Name="brokerForTheSeller", EmitDefaultValue=false)]
        public string BrokerForTheSeller { get; set; }

        /// <summary>
        /// Gets or Sets BrokerLicense
        /// </summary>
        [DataMember(Name="brokerLicense", EmitDefaultValue=false)]
        public string BrokerLicense { get; set; }

        /// <summary>
        /// Gets or Sets BrokerName
        /// </summary>
        [DataMember(Name="brokerName", EmitDefaultValue=false)]
        public string BrokerName { get; set; }

        /// <summary>
        /// Gets or Sets BrokerPayAddition
        /// </summary>
        [DataMember(Name="brokerPayAddition", EmitDefaultValue=false)]
        public double? BrokerPayAddition { get; set; }

        /// <summary>
        /// Gets or Sets BrokerPayAmount
        /// </summary>
        [DataMember(Name="brokerPayAmount", EmitDefaultValue=false)]
        public double? BrokerPayAmount { get; set; }

        /// <summary>
        /// Gets or Sets BrokerPayIndicator
        /// </summary>
        [DataMember(Name="brokerPayIndicator", EmitDefaultValue=false)]
        public bool? BrokerPayIndicator { get; set; }

        /// <summary>
        /// Gets or Sets BrokerPayPercent
        /// </summary>
        [DataMember(Name="brokerPayPercent", EmitDefaultValue=false)]
        public double? BrokerPayPercent { get; set; }

        /// <summary>
        /// Gets or Sets CHARMBookletIndicator
        /// </summary>
        [DataMember(Name="cHARMBookletIndicator", EmitDefaultValue=false)]
        public bool? CHARMBookletIndicator { get; set; }

        /// <summary>
        /// Gets or Sets CheckPayableTo
        /// </summary>
        [DataMember(Name="checkPayableTo", EmitDefaultValue=false)]
        public string CheckPayableTo { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentAmount
        /// </summary>
        [DataMember(Name="commitmentAmount", EmitDefaultValue=false)]
        public double? CommitmentAmount { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentCondition1
        /// </summary>
        [DataMember(Name="commitmentCondition1", EmitDefaultValue=false)]
        public string CommitmentCondition1 { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentCondition2
        /// </summary>
        [DataMember(Name="commitmentCondition2", EmitDefaultValue=false)]
        public string CommitmentCondition2 { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentFee
        /// </summary>
        [DataMember(Name="commitmentFee", EmitDefaultValue=false)]
        public double? CommitmentFee { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentPercent
        /// </summary>
        [DataMember(Name="commitmentPercent", EmitDefaultValue=false)]
        public double? CommitmentPercent { get; set; }

        /// <summary>
        /// Gets or Sets CompensationAddition
        /// </summary>
        [DataMember(Name="compensationAddition", EmitDefaultValue=false)]
        public double? CompensationAddition { get; set; }

        /// <summary>
        /// Gets or Sets CompensationPercent
        /// </summary>
        [DataMember(Name="compensationPercent", EmitDefaultValue=false)]
        public double? CompensationPercent { get; set; }

        /// <summary>
        /// Gets or Sets CreditDeposit
        /// </summary>
        [DataMember(Name="creditDeposit", EmitDefaultValue=false)]
        public double? CreditDeposit { get; set; }

        /// <summary>
        /// Gets or Sets CreditIsUsedForReason
        /// </summary>
        [DataMember(Name="creditIsUsedForReason", EmitDefaultValue=false)]
        public string CreditIsUsedForReason { get; set; }

        /// <summary>
        /// Gets or Sets CreditReportContact
        /// </summary>
        [DataMember(Name="creditReportContact", EmitDefaultValue=false)]
        public string CreditReportContact { get; set; }

        /// <summary>
        /// Gets or Sets DaysBeforeClosing
        /// </summary>
        [DataMember(Name="daysBeforeClosing", EmitDefaultValue=false)]
        public int? DaysBeforeClosing { get; set; }

        /// <summary>
        /// Gets or Sets DepositReceipt
        /// </summary>
        [DataMember(Name="depositReceipt", EmitDefaultValue=false)]
        public double? DepositReceipt { get; set; }

        /// <summary>
        /// Gets or Sets DepositRefundableIndicator
        /// </summary>
        [DataMember(Name="depositRefundableIndicator", EmitDefaultValue=false)]
        public bool? DepositRefundableIndicator { get; set; }

        /// <summary>
        /// Gets or Sets DirectContact
        /// </summary>
        [DataMember(Name="directContact", EmitDefaultValue=false)]
        public string DirectContact { get; set; }

        /// <summary>
        /// Gets or Sets DirectPayAmount
        /// </summary>
        [DataMember(Name="directPayAmount", EmitDefaultValue=false)]
        public double? DirectPayAmount { get; set; }

        /// <summary>
        /// Gets or Sets DirectPayClosing
        /// </summary>
        [DataMember(Name="directPayClosing", EmitDefaultValue=false)]
        public double? DirectPayClosing { get; set; }

        /// <summary>
        /// Gets or Sets DirectPayCommitment
        /// </summary>
        [DataMember(Name="directPayCommitment", EmitDefaultValue=false)]
        public double? DirectPayCommitment { get; set; }

        /// <summary>
        /// Gets or Sets DirectPayIndicator
        /// </summary>
        [DataMember(Name="directPayIndicator", EmitDefaultValue=false)]
        public bool? DirectPayIndicator { get; set; }

        /// <summary>
        /// Gets or Sets DirectPayPercent
        /// </summary>
        [DataMember(Name="directPayPercent", EmitDefaultValue=false)]
        public double? DirectPayPercent { get; set; }

        /// <summary>
        /// Gets or Sets DisclosureDeliveredBy
        /// </summary>
        [DataMember(Name="disclosureDeliveredBy", EmitDefaultValue=false)]
        public string DisclosureDeliveredBy { get; set; }

        /// <summary>
        /// Gets or Sets DisclosureDeliveredByOtherMethod
        /// </summary>
        [DataMember(Name="disclosureDeliveredByOtherMethod", EmitDefaultValue=false)]
        public string DisclosureDeliveredByOtherMethod { get; set; }

        /// <summary>
        /// Gets or Sets DisclosureDeliveredDate
        /// </summary>
        [DataMember(Name="disclosureDeliveredDate", EmitDefaultValue=false)]
        public DateTime? DisclosureDeliveredDate { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedChargeShownOnGFEIndicator
        /// </summary>
        [DataMember(Name="estimatedChargeShownOnGFEIndicator", EmitDefaultValue=false)]
        public bool? EstimatedChargeShownOnGFEIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ExpirationDate
        /// </summary>
        [DataMember(Name="expirationDate", EmitDefaultValue=false)]
        public DateTime? ExpirationDate { get; set; }

        /// <summary>
        /// Gets or Sets FederallySubsidizedAmount
        /// </summary>
        [DataMember(Name="federallySubsidizedAmount", EmitDefaultValue=false)]
        public double? FederallySubsidizedAmount { get; set; }

        /// <summary>
        /// Gets or Sets FederallySubsidizedAmountPercentage
        /// </summary>
        [DataMember(Name="federallySubsidizedAmountPercentage", EmitDefaultValue=false)]
        public double? FederallySubsidizedAmountPercentage { get; set; }

        /// <summary>
        /// Gets or Sets FeeReceived1
        /// </summary>
        [DataMember(Name="feeReceived1", EmitDefaultValue=false)]
        public double? FeeReceived1 { get; set; }

        /// <summary>
        /// Gets or Sets FeeReceived2
        /// </summary>
        [DataMember(Name="feeReceived2", EmitDefaultValue=false)]
        public double? FeeReceived2 { get; set; }

        /// <summary>
        /// Gets or Sets FeeReceivedByLender
        /// </summary>
        [DataMember(Name="feeReceivedByLender", EmitDefaultValue=false)]
        public string FeeReceivedByLender { get; set; }

        /// <summary>
        /// Gets or Sets FeesReceiving
        /// </summary>
        [DataMember(Name="feesReceiving", EmitDefaultValue=false)]
        public double? FeesReceiving { get; set; }

        /// <summary>
        /// Gets or Sets FloridaApplicationFee
        /// </summary>
        [DataMember(Name="floridaApplicationFee", EmitDefaultValue=false)]
        public double? FloridaApplicationFee { get; set; }

        /// <summary>
        /// Gets or Sets FloridaOtherFee1
        /// </summary>
        [DataMember(Name="floridaOtherFee1", EmitDefaultValue=false)]
        public double? FloridaOtherFee1 { get; set; }

        /// <summary>
        /// Gets or Sets FloridaOtherFee2
        /// </summary>
        [DataMember(Name="floridaOtherFee2", EmitDefaultValue=false)]
        public double? FloridaOtherFee2 { get; set; }

        /// <summary>
        /// Gets or Sets FloridaOtherFeeTo1
        /// </summary>
        [DataMember(Name="floridaOtherFeeTo1", EmitDefaultValue=false)]
        public string FloridaOtherFeeTo1 { get; set; }

        /// <summary>
        /// Gets or Sets FloridaOtherFeeTo2
        /// </summary>
        [DataMember(Name="floridaOtherFeeTo2", EmitDefaultValue=false)]
        public string FloridaOtherFeeTo2 { get; set; }

        /// <summary>
        /// Gets or Sets FloridaOtherFeeTo3
        /// </summary>
        [DataMember(Name="floridaOtherFeeTo3", EmitDefaultValue=false)]
        public string FloridaOtherFeeTo3 { get; set; }

        /// <summary>
        /// Gets or Sets FloridaOtherFeeTo4
        /// </summary>
        [DataMember(Name="floridaOtherFeeTo4", EmitDefaultValue=false)]
        public string FloridaOtherFeeTo4 { get; set; }

        /// <summary>
        /// Gets or Sets FurtherFeesEarnedByMortgageBroker
        /// </summary>
        [DataMember(Name="furtherFeesEarnedByMortgageBroker", EmitDefaultValue=false)]
        public string FurtherFeesEarnedByMortgageBroker { get; set; }

        /// <summary>
        /// Gets or Sets GFEFeeReceived1
        /// </summary>
        [DataMember(Name="gFEFeeReceived1", EmitDefaultValue=false)]
        public double? GFEFeeReceived1 { get; set; }

        /// <summary>
        /// Gets or Sets GFEFeeReceived2
        /// </summary>
        [DataMember(Name="gFEFeeReceived2", EmitDefaultValue=false)]
        public double? GFEFeeReceived2 { get; set; }

        /// <summary>
        /// Gets or Sets HUDBookletIndicator
        /// </summary>
        [DataMember(Name="hUDBookletIndicator", EmitDefaultValue=false)]
        public bool? HUDBookletIndicator { get; set; }

        /// <summary>
        /// Gets or Sets IndependentContractorIndicator
        /// </summary>
        [DataMember(Name="independentContractorIndicator", EmitDefaultValue=false)]
        public bool? IndependentContractorIndicator { get; set; }

        /// <summary>
        /// Gets or Sets IndexUsed
        /// </summary>
        [DataMember(Name="indexUsed", EmitDefaultValue=false)]
        public string IndexUsed { get; set; }

        /// <summary>
        /// Gets or Sets InformationAboutTheIndexCanBeFound
        /// </summary>
        [DataMember(Name="informationAboutTheIndexCanBeFound", EmitDefaultValue=false)]
        public string InformationAboutTheIndexCanBeFound { get; set; }

        /// <summary>
        /// Gets or Sets IsEstimateIndicator
        /// </summary>
        [DataMember(Name="isEstimateIndicator", EmitDefaultValue=false)]
        public bool? IsEstimateIndicator { get; set; }

        /// <summary>
        /// Gets or Sets KsUcccElectionIndicator
        /// </summary>
        [DataMember(Name="ksUcccElectionIndicator", EmitDefaultValue=false)]
        public bool? KsUcccElectionIndicator { get; set; }

        /// <summary>
        /// Gets or Sets KyHomeSolicationLoanIndicator
        /// </summary>
        [DataMember(Name="kyHomeSolicationLoanIndicator", EmitDefaultValue=false)]
        public bool? KyHomeSolicationLoanIndicator { get; set; }

        /// <summary>
        /// Gets or Sets LeaseAgreementDate
        /// </summary>
        [DataMember(Name="leaseAgreementDate", EmitDefaultValue=false)]
        public DateTime? LeaseAgreementDate { get; set; }

        /// <summary>
        /// Gets or Sets LenderDate
        /// </summary>
        [DataMember(Name="lenderDate", EmitDefaultValue=false)]
        public DateTime? LenderDate { get; set; }

        /// <summary>
        /// Gets or Sets LenderName
        /// </summary>
        [DataMember(Name="lenderName", EmitDefaultValue=false)]
        public string LenderName { get; set; }

        /// <summary>
        /// Gets or Sets LenderPaid
        /// </summary>
        [DataMember(Name="lenderPaid", EmitDefaultValue=false)]
        public double? LenderPaid { get; set; }

        /// <summary>
        /// Gets or Sets LenderPayAmount
        /// </summary>
        [DataMember(Name="lenderPayAmount", EmitDefaultValue=false)]
        public double? LenderPayAmount { get; set; }

        /// <summary>
        /// Gets or Sets LenderPayIndicator
        /// </summary>
        [DataMember(Name="lenderPayIndicator", EmitDefaultValue=false)]
        public bool? LenderPayIndicator { get; set; }

        /// <summary>
        /// Gets or Sets LenderPayMaxPoint
        /// </summary>
        [DataMember(Name="lenderPayMaxPoint", EmitDefaultValue=false)]
        public double? LenderPayMaxPoint { get; set; }

        /// <summary>
        /// Gets or Sets LenderPayPercent
        /// </summary>
        [DataMember(Name="lenderPayPercent", EmitDefaultValue=false)]
        public double? LenderPayPercent { get; set; }

        /// <summary>
        /// Gets or Sets LenderPayPoint
        /// </summary>
        [DataMember(Name="lenderPayPoint", EmitDefaultValue=false)]
        public double? LenderPayPoint { get; set; }

        /// <summary>
        /// Gets or Sets LenderPayUnknownIndicator
        /// </summary>
        [DataMember(Name="lenderPayUnknownIndicator", EmitDefaultValue=false)]
        public bool? LenderPayUnknownIndicator { get; set; }

        /// <summary>
        /// Gets or Sets LenderStatus
        /// </summary>
        [DataMember(Name="lenderStatus", EmitDefaultValue=false)]
        public string LenderStatus { get; set; }

        /// <summary>
        /// Gets or Sets LessorName
        /// </summary>
        [DataMember(Name="lessorName", EmitDefaultValue=false)]
        public string LessorName { get; set; }

        /// <summary>
        /// Gets or Sets LoanTermsFixedThroughDateofLoanClosingIndicator
        /// </summary>
        [DataMember(Name="loanTermsFixedThroughDateofLoanClosingIndicator", EmitDefaultValue=false)]
        public bool? LoanTermsFixedThroughDateofLoanClosingIndicator { get; set; }

        /// <summary>
        /// Gets or Sets LockInFee
        /// </summary>
        [DataMember(Name="lockInFee", EmitDefaultValue=false)]
        public double? LockInFee { get; set; }

        /// <summary>
        /// Gets or Sets MethodDescription
        /// </summary>
        [DataMember(Name="methodDescription", EmitDefaultValue=false)]
        public string MethodDescription { get; set; }

        /// <summary>
        /// Gets or Sets MethodDetermine
        /// </summary>
        [DataMember(Name="methodDetermine", EmitDefaultValue=false)]
        public string MethodDetermine { get; set; }

        /// <summary>
        /// Gets or Sets MortgageAgreementIndicator
        /// </summary>
        [DataMember(Name="mortgageAgreementIndicator", EmitDefaultValue=false)]
        public bool? MortgageAgreementIndicator { get; set; }

        /// <summary>
        /// Gets or Sets MtgBrokerLicense
        /// </summary>
        [DataMember(Name="mtgBrokerLicense", EmitDefaultValue=false)]
        public string MtgBrokerLicense { get; set; }

        /// <summary>
        /// Gets or Sets NameOfLicensee
        /// </summary>
        [DataMember(Name="nameOfLicensee", EmitDefaultValue=false)]
        public string NameOfLicensee { get; set; }

        /// <summary>
        /// Gets or Sets NewMoneyAmount
        /// </summary>
        [DataMember(Name="newMoneyAmount", EmitDefaultValue=false)]
        public double? NewMoneyAmount { get; set; }

        /// <summary>
        /// Gets or Sets NewYorkApplicationFee
        /// </summary>
        [DataMember(Name="newYorkApplicationFee", EmitDefaultValue=false)]
        public double? NewYorkApplicationFee { get; set; }

        /// <summary>
        /// Gets or Sets NewYorkAppraisalFee
        /// </summary>
        [DataMember(Name="newYorkAppraisalFee", EmitDefaultValue=false)]
        public double? NewYorkAppraisalFee { get; set; }

        /// <summary>
        /// Gets or Sets NewYorkCreditReportFee
        /// </summary>
        [DataMember(Name="newYorkCreditReportFee", EmitDefaultValue=false)]
        public double? NewYorkCreditReportFee { get; set; }

        /// <summary>
        /// Gets or Sets NewYorkFees
        /// </summary>
        [DataMember(Name="newYorkFees", EmitDefaultValue=false)]
        public List<LoanContractStateDisclosureNewYorkFees> NewYorkFees { get; set; }

        /// <summary>
        /// Gets or Sets NewYorkPrimaryLenders
        /// </summary>
        [DataMember(Name="newYorkPrimaryLenders", EmitDefaultValue=false)]
        public List<LoanContractStateDisclosureNewYorkPrimaryLenders> NewYorkPrimaryLenders { get; set; }

        /// <summary>
        /// Gets or Sets NewYorkProcessingFee
        /// </summary>
        [DataMember(Name="newYorkProcessingFee", EmitDefaultValue=false)]
        public double? NewYorkProcessingFee { get; set; }

        /// <summary>
        /// Gets or Sets NotRefundableAmount
        /// </summary>
        [DataMember(Name="notRefundableAmount", EmitDefaultValue=false)]
        public double? NotRefundableAmount { get; set; }

        /// <summary>
        /// Gets or Sets OfferRetailPriceIndicator
        /// </summary>
        [DataMember(Name="offerRetailPriceIndicator", EmitDefaultValue=false)]
        public bool? OfferRetailPriceIndicator { get; set; }

        /// <summary>
        /// Gets or Sets OriginalAcquisitionCost
        /// </summary>
        [DataMember(Name="originalAcquisitionCost", EmitDefaultValue=false)]
        public double? OriginalAcquisitionCost { get; set; }

        /// <summary>
        /// Gets or Sets OriginationFeeChargedAmount
        /// </summary>
        [DataMember(Name="originationFeeChargedAmount", EmitDefaultValue=false)]
        public double? OriginationFeeChargedAmount { get; set; }

        /// <summary>
        /// Gets or Sets OriginationFeeChargedIndicator
        /// </summary>
        [DataMember(Name="originationFeeChargedIndicator", EmitDefaultValue=false)]
        public bool? OriginationFeeChargedIndicator { get; set; }

        /// <summary>
        /// Gets or Sets OriginationFeeDecreasesRate
        /// </summary>
        [DataMember(Name="originationFeeDecreasesRate", EmitDefaultValue=false)]
        public double? OriginationFeeDecreasesRate { get; set; }

        /// <summary>
        /// Gets or Sets OriginationFeeIncreasesRate
        /// </summary>
        [DataMember(Name="originationFeeIncreasesRate", EmitDefaultValue=false)]
        public double? OriginationFeeIncreasesRate { get; set; }

        /// <summary>
        /// Gets or Sets OriginationFeeInterestRateImpactedStatus
        /// </summary>
        [DataMember(Name="originationFeeInterestRateImpactedStatus", EmitDefaultValue=false)]
        public string OriginationFeeInterestRateImpactedStatus { get; set; }

        /// <summary>
        /// Gets or Sets OriginationFeePaidBy
        /// </summary>
        [DataMember(Name="originationFeePaidBy", EmitDefaultValue=false)]
        public string OriginationFeePaidBy { get; set; }

        /// <summary>
        /// Gets or Sets PaidByBorrower
        /// </summary>
        [DataMember(Name="paidByBorrower", EmitDefaultValue=false)]
        public double? PaidByBorrower { get; set; }

        /// <summary>
        /// Gets or Sets PaidByLender
        /// </summary>
        [DataMember(Name="paidByLender", EmitDefaultValue=false)]
        public double? PaidByLender { get; set; }

        /// <summary>
        /// Gets or Sets PaidByOther1
        /// </summary>
        [DataMember(Name="paidByOther1", EmitDefaultValue=false)]
        public double? PaidByOther1 { get; set; }

        /// <summary>
        /// Gets or Sets PaidByOther2
        /// </summary>
        [DataMember(Name="paidByOther2", EmitDefaultValue=false)]
        public double? PaidByOther2 { get; set; }

        /// <summary>
        /// Gets or Sets PaidByOtherDescription1
        /// </summary>
        [DataMember(Name="paidByOtherDescription1", EmitDefaultValue=false)]
        public string PaidByOtherDescription1 { get; set; }

        /// <summary>
        /// Gets or Sets PaidByOtherDescription2
        /// </summary>
        [DataMember(Name="paidByOtherDescription2", EmitDefaultValue=false)]
        public string PaidByOtherDescription2 { get; set; }

        /// <summary>
        /// Gets or Sets PreviousMortgageAmountOne
        /// </summary>
        [DataMember(Name="previousMortgageAmountOne", EmitDefaultValue=false)]
        public double? PreviousMortgageAmountOne { get; set; }

        /// <summary>
        /// Gets or Sets PreviousMortgageAmountTwo
        /// </summary>
        [DataMember(Name="previousMortgageAmountTwo", EmitDefaultValue=false)]
        public double? PreviousMortgageAmountTwo { get; set; }

        /// <summary>
        /// Gets or Sets PrintCertificationOfCosts
        /// </summary>
        [DataMember(Name="printCertificationOfCosts", EmitDefaultValue=false)]
        public bool? PrintCertificationOfCosts { get; set; }

        /// <summary>
        /// Gets or Sets PrintInterestRateReductionRider
        /// </summary>
        [DataMember(Name="printInterestRateReductionRider", EmitDefaultValue=false)]
        public bool? PrintInterestRateReductionRider { get; set; }

        /// <summary>
        /// Gets or Sets PrintMDDeliveryIndicator
        /// </summary>
        [DataMember(Name="printMDDeliveryIndicator", EmitDefaultValue=false)]
        public bool? PrintMDDeliveryIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ProvidedBy
        /// </summary>
        [DataMember(Name="providedBy", EmitDefaultValue=false)]
        public string ProvidedBy { get; set; }

        /// <summary>
        /// Gets or Sets QuestionContact
        /// </summary>
        [DataMember(Name="questionContact", EmitDefaultValue=false)]
        public string QuestionContact { get; set; }

        /// <summary>
        /// Gets or Sets QuestionContactPhone
        /// </summary>
        [DataMember(Name="questionContactPhone", EmitDefaultValue=false)]
        public string QuestionContactPhone { get; set; }

        /// <summary>
        /// Gets or Sets QuestionContactTollFree
        /// </summary>
        [DataMember(Name="questionContactTollFree", EmitDefaultValue=false)]
        public string QuestionContactTollFree { get; set; }

        /// <summary>
        /// Gets or Sets RateLockHonoredIndicator
        /// </summary>
        [DataMember(Name="rateLockHonoredIndicator", EmitDefaultValue=false)]
        public bool? RateLockHonoredIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedBy
        /// </summary>
        [DataMember(Name="receivedBy", EmitDefaultValue=false)]
        public string ReceivedBy { get; set; }

        /// <summary>
        /// Gets or Sets RefinancingFee
        /// </summary>
        [DataMember(Name="refinancingFee", EmitDefaultValue=false)]
        public double? RefinancingFee { get; set; }

        /// <summary>
        /// Gets or Sets RefundableBy
        /// </summary>
        [DataMember(Name="refundableBy", EmitDefaultValue=false)]
        public string RefundableBy { get; set; }

        /// <summary>
        /// Gets or Sets RefundableIndicator
        /// </summary>
        [DataMember(Name="refundableIndicator", EmitDefaultValue=false)]
        public bool? RefundableIndicator { get; set; }

        /// <summary>
        /// Gets or Sets RefundableType
        /// </summary>
        [DataMember(Name="refundableType", EmitDefaultValue=false)]
        public string RefundableType { get; set; }

        /// <summary>
        /// Gets or Sets RefundCondition1
        /// </summary>
        [DataMember(Name="refundCondition1", EmitDefaultValue=false)]
        public string RefundCondition1 { get; set; }

        /// <summary>
        /// Gets or Sets RefundCondition2
        /// </summary>
        [DataMember(Name="refundCondition2", EmitDefaultValue=false)]
        public string RefundCondition2 { get; set; }

        /// <summary>
        /// Gets or Sets RefundCondition3
        /// </summary>
        [DataMember(Name="refundCondition3", EmitDefaultValue=false)]
        public string RefundCondition3 { get; set; }

        /// <summary>
        /// Gets or Sets RefundCondition4
        /// </summary>
        [DataMember(Name="refundCondition4", EmitDefaultValue=false)]
        public string RefundCondition4 { get; set; }

        /// <summary>
        /// Gets or Sets RefundCondition5
        /// </summary>
        [DataMember(Name="refundCondition5", EmitDefaultValue=false)]
        public string RefundCondition5 { get; set; }

        /// <summary>
        /// Gets or Sets RefundCondition6
        /// </summary>
        [DataMember(Name="refundCondition6", EmitDefaultValue=false)]
        public string RefundCondition6 { get; set; }

        /// <summary>
        /// Gets or Sets ScheduleOfChargesEstimatedFinalIndicator
        /// </summary>
        [DataMember(Name="scheduleOfChargesEstimatedFinalIndicator", EmitDefaultValue=false)]
        public string ScheduleOfChargesEstimatedFinalIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ScRegulatoryAgencyType
        /// </summary>
        [DataMember(Name="scRegulatoryAgencyType", EmitDefaultValue=false)]
        public string ScRegulatoryAgencyType { get; set; }

        /// <summary>
        /// Gets or Sets RegulatorAddress
        /// </summary>
        [DataMember(Name="regulatorAddress", EmitDefaultValue=false)]
        public string RegulatorAddress { get; set; }

        /// <summary>
        /// Gets or Sets RegulatorWebAddress
        /// </summary>
        [DataMember(Name="regulatorWebAddress", EmitDefaultValue=false)]
        public string RegulatorWebAddress { get; set; }

        /// <summary>
        /// Gets or Sets RegulatorCity
        /// </summary>
        [DataMember(Name="regulatorCity", EmitDefaultValue=false)]
        public string RegulatorCity { get; set; }

        /// <summary>
        /// Gets or Sets RegulatorState
        /// </summary>
        [DataMember(Name="regulatorState", EmitDefaultValue=false)]
        public string RegulatorState { get; set; }

        /// <summary>
        /// Gets or Sets RegulatorZipCode
        /// </summary>
        [DataMember(Name="regulatorZipCode", EmitDefaultValue=false)]
        public string RegulatorZipCode { get; set; }

        /// <summary>
        /// Gets or Sets RegulatorPhone
        /// </summary>
        [DataMember(Name="regulatorPhone", EmitDefaultValue=false)]
        public string RegulatorPhone { get; set; }

        /// <summary>
        /// Gets or Sets RegulatorTollFreePhone
        /// </summary>
        [DataMember(Name="regulatorTollFreePhone", EmitDefaultValue=false)]
        public string RegulatorTollFreePhone { get; set; }

        /// <summary>
        /// Gets or Sets RegulatorMailingAddress
        /// </summary>
        [DataMember(Name="regulatorMailingAddress", EmitDefaultValue=false)]
        public string RegulatorMailingAddress { get; set; }

        /// <summary>
        /// Gets or Sets RegulatorMailingCity
        /// </summary>
        [DataMember(Name="regulatorMailingCity", EmitDefaultValue=false)]
        public string RegulatorMailingCity { get; set; }

        /// <summary>
        /// Gets or Sets RegulatorMailingState
        /// </summary>
        [DataMember(Name="regulatorMailingState", EmitDefaultValue=false)]
        public string RegulatorMailingState { get; set; }

        /// <summary>
        /// Gets or Sets RegulatorMailingZipCode
        /// </summary>
        [DataMember(Name="regulatorMailingZipCode", EmitDefaultValue=false)]
        public string RegulatorMailingZipCode { get; set; }

        /// <summary>
        /// Gets or Sets SelectDivisionFeesIndicator
        /// </summary>
        [DataMember(Name="selectDivisionFeesIndicator", EmitDefaultValue=false)]
        public bool? SelectDivisionFeesIndicator { get; set; }

        /// <summary>
        /// Gets or Sets SelectPrimaryLenderIndicator
        /// </summary>
        [DataMember(Name="selectPrimaryLenderIndicator", EmitDefaultValue=false)]
        public bool? SelectPrimaryLenderIndicator { get; set; }

        /// <summary>
        /// Gets or Sets SelectPrivateLenderIndicator
        /// </summary>
        [DataMember(Name="selectPrivateLenderIndicator", EmitDefaultValue=false)]
        public bool? SelectPrivateLenderIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ServicingFeeChargedAmount
        /// </summary>
        [DataMember(Name="servicingFeeChargedAmount", EmitDefaultValue=false)]
        public double? ServicingFeeChargedAmount { get; set; }

        /// <summary>
        /// Gets or Sets ServicingFeeChargedIndicator
        /// </summary>
        [DataMember(Name="servicingFeeChargedIndicator", EmitDefaultValue=false)]
        public bool? ServicingFeeChargedIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ServicingFeePaidBy
        /// </summary>
        [DataMember(Name="servicingFeePaidBy", EmitDefaultValue=false)]
        public string ServicingFeePaidBy { get; set; }

        /// <summary>
        /// Gets or Sets ServicingFeePaidFrequence
        /// </summary>
        [DataMember(Name="servicingFeePaidFrequence", EmitDefaultValue=false)]
        public string ServicingFeePaidFrequence { get; set; }

        /// <summary>
        /// Gets or Sets SignedByBorrowerIndicator
        /// </summary>
        [DataMember(Name="signedByBorrowerIndicator", EmitDefaultValue=false)]
        public bool? SignedByBorrowerIndicator { get; set; }

        /// <summary>
        /// Gets or Sets SpecificARMIndicator
        /// </summary>
        [DataMember(Name="specificARMIndicator", EmitDefaultValue=false)]
        public bool? SpecificARMIndicator { get; set; }

        /// <summary>
        /// Gets or Sets SubmitToLenderIndicator
        /// </summary>
        [DataMember(Name="submitToLenderIndicator", EmitDefaultValue=false)]
        public bool? SubmitToLenderIndicator { get; set; }

        /// <summary>
        /// Gets or Sets TaxExemptAcquisitionCostCertificationAssessments
        /// </summary>
        [DataMember(Name="taxExemptAcquisitionCostCertificationAssessments", EmitDefaultValue=false)]
        public double? TaxExemptAcquisitionCostCertificationAssessments { get; set; }

        /// <summary>
        /// Gets or Sets TaxExemptAcquisitionCostCertificationOther
        /// </summary>
        [DataMember(Name="taxExemptAcquisitionCostCertificationOther", EmitDefaultValue=false)]
        public string TaxExemptAcquisitionCostCertificationOther { get; set; }

        /// <summary>
        /// Gets or Sets TaxExemptAcquisitionCostCertificationOtherAmount
        /// </summary>
        [DataMember(Name="taxExemptAcquisitionCostCertificationOtherAmount", EmitDefaultValue=false)]
        public double? TaxExemptAcquisitionCostCertificationOtherAmount { get; set; }

        /// <summary>
        /// Gets or Sets TaxExemptAcquisitionCostCertificationOwnersTitleInsurance
        /// </summary>
        [DataMember(Name="taxExemptAcquisitionCostCertificationOwnersTitleInsurance", EmitDefaultValue=false)]
        public double? TaxExemptAcquisitionCostCertificationOwnersTitleInsurance { get; set; }

        /// <summary>
        /// Gets or Sets TaxExemptAcquisitionCostCertificationRealEstateCommission
        /// </summary>
        [DataMember(Name="taxExemptAcquisitionCostCertificationRealEstateCommission", EmitDefaultValue=false)]
        public double? TaxExemptAcquisitionCostCertificationRealEstateCommission { get; set; }

        /// <summary>
        /// Gets or Sets TaxExemptAcquisitionCostCertificationRepairsImprovements
        /// </summary>
        [DataMember(Name="taxExemptAcquisitionCostCertificationRepairsImprovements", EmitDefaultValue=false)]
        public double? TaxExemptAcquisitionCostCertificationRepairsImprovements { get; set; }

        /// <summary>
        /// Gets or Sets TaxExemptAcquisitionCostCertificationSurvey
        /// </summary>
        [DataMember(Name="taxExemptAcquisitionCostCertificationSurvey", EmitDefaultValue=false)]
        public double? TaxExemptAcquisitionCostCertificationSurvey { get; set; }

        /// <summary>
        /// Gets or Sets TaxExemptAcquisitionCostCertificationTotalAdjustments
        /// </summary>
        [DataMember(Name="taxExemptAcquisitionCostCertificationTotalAdjustments", EmitDefaultValue=false)]
        public double? TaxExemptAcquisitionCostCertificationTotalAdjustments { get; set; }

        /// <summary>
        /// Gets or Sets TermsChange
        /// </summary>
        [DataMember(Name="termsChange", EmitDefaultValue=false)]
        public string TermsChange { get; set; }

        /// <summary>
        /// Gets or Sets TexasApplicationFee
        /// </summary>
        [DataMember(Name="texasApplicationFee", EmitDefaultValue=false)]
        public double? TexasApplicationFee { get; set; }

        /// <summary>
        /// Gets or Sets TexasAppraisalFee
        /// </summary>
        [DataMember(Name="texasAppraisalFee", EmitDefaultValue=false)]
        public double? TexasAppraisalFee { get; set; }

        /// <summary>
        /// Gets or Sets TexasCreditReportFee
        /// </summary>
        [DataMember(Name="texasCreditReportFee", EmitDefaultValue=false)]
        public double? TexasCreditReportFee { get; set; }

        /// <summary>
        /// Gets or Sets TexasOtherFee1
        /// </summary>
        [DataMember(Name="texasOtherFee1", EmitDefaultValue=false)]
        public double? TexasOtherFee1 { get; set; }

        /// <summary>
        /// Gets or Sets TexasOtherFee2
        /// </summary>
        [DataMember(Name="texasOtherFee2", EmitDefaultValue=false)]
        public double? TexasOtherFee2 { get; set; }

        /// <summary>
        /// Gets or Sets TexasOtherFeeContact1
        /// </summary>
        [DataMember(Name="texasOtherFeeContact1", EmitDefaultValue=false)]
        public string TexasOtherFeeContact1 { get; set; }

        /// <summary>
        /// Gets or Sets TexasOtherFeeContact2
        /// </summary>
        [DataMember(Name="texasOtherFeeContact2", EmitDefaultValue=false)]
        public string TexasOtherFeeContact2 { get; set; }

        /// <summary>
        /// Gets or Sets TexasProcessingFee
        /// </summary>
        [DataMember(Name="texasProcessingFee", EmitDefaultValue=false)]
        public double? TexasProcessingFee { get; set; }

        /// <summary>
        /// Gets or Sets ThirdPartyFee
        /// </summary>
        [DataMember(Name="thirdPartyFee", EmitDefaultValue=false)]
        public double? ThirdPartyFee { get; set; }

        /// <summary>
        /// Gets or Sets TotalFee
        /// </summary>
        [DataMember(Name="totalFee", EmitDefaultValue=false)]
        public double? TotalFee { get; set; }

        /// <summary>
        /// Gets or Sets TransferFeeChargedAmount
        /// </summary>
        [DataMember(Name="transferFeeChargedAmount", EmitDefaultValue=false)]
        public double? TransferFeeChargedAmount { get; set; }

        /// <summary>
        /// Gets or Sets TransferFeeChargedIndicator
        /// </summary>
        [DataMember(Name="transferFeeChargedIndicator", EmitDefaultValue=false)]
        public bool? TransferFeeChargedIndicator { get; set; }

        /// <summary>
        /// Gets or Sets TransferFeePaidBy
        /// </summary>
        [DataMember(Name="transferFeePaidBy", EmitDefaultValue=false)]
        public string TransferFeePaidBy { get; set; }

        /// <summary>
        /// Gets or Sets TxVeteransLandBoardIndicator
        /// </summary>
        [DataMember(Name="txVeteransLandBoardIndicator", EmitDefaultValue=false)]
        public bool? TxVeteransLandBoardIndicator { get; set; }

        /// <summary>
        /// Gets or Sets TypeOfProperty
        /// </summary>
        [DataMember(Name="typeOfProperty", EmitDefaultValue=false)]
        public string TypeOfProperty { get; set; }

        /// <summary>
        /// Gets or Sets UnderwritingContact
        /// </summary>
        [DataMember(Name="underwritingContact", EmitDefaultValue=false)]
        public string UnderwritingContact { get; set; }

        /// <summary>
        /// Gets or Sets UnderwritingFee
        /// </summary>
        [DataMember(Name="underwritingFee", EmitDefaultValue=false)]
        public double? UnderwritingFee { get; set; }

        /// <summary>
        /// Gets or Sets YSPChargedAmount
        /// </summary>
        [DataMember(Name="ySPChargedAmount", EmitDefaultValue=false)]
        public double? YSPChargedAmount { get; set; }

        /// <summary>
        /// Gets or Sets YSPChargedIndicator
        /// </summary>
        [DataMember(Name="ySPChargedIndicator", EmitDefaultValue=false)]
        public bool? YSPChargedIndicator { get; set; }

        /// <summary>
        /// Gets or Sets YSPDecreasesRate
        /// </summary>
        [DataMember(Name="ySPDecreasesRate", EmitDefaultValue=false)]
        public double? YSPDecreasesRate { get; set; }

        /// <summary>
        /// Gets or Sets YSPIncreasesRate
        /// </summary>
        [DataMember(Name="ySPIncreasesRate", EmitDefaultValue=false)]
        public double? YSPIncreasesRate { get; set; }

        /// <summary>
        /// Gets or Sets YSPInterestRateImpactedStatus
        /// </summary>
        [DataMember(Name="ySPInterestRateImpactedStatus", EmitDefaultValue=false)]
        public string YSPInterestRateImpactedStatus { get; set; }

        /// <summary>
        /// Gets or Sets YSPPaidBy
        /// </summary>
        [DataMember(Name="ySPPaidBy", EmitDefaultValue=false)]
        public string YSPPaidBy { get; set; }

        /// <summary>
        /// Gets or Sets InLicensedNo
        /// </summary>
        [DataMember(Name="inLicensedNo", EmitDefaultValue=false)]
        public string InLicensedNo { get; set; }

        /// <summary>
        /// Gets or Sets InLicensedType
        /// </summary>
        [DataMember(Name="inLicensedType", EmitDefaultValue=false)]
        public string InLicensedType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractStateDisclosure {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AcceptedByBorrowerIndicator: ").Append(AcceptedByBorrowerIndicator).Append("\n");
            sb.Append("  AcceptedDate: ").Append(AcceptedDate).Append("\n");
            sb.Append("  ActingOtherDescription1: ").Append(ActingOtherDescription1).Append("\n");
            sb.Append("  ActingOtherDescription2: ").Append(ActingOtherDescription2).Append("\n");
            sb.Append("  ActingOthersIndicator: ").Append(ActingOthersIndicator).Append("\n");
            sb.Append("  AdvFeeAgmtInEfctNumDay: ").Append(AdvFeeAgmtInEfctNumDay).Append("\n");
            sb.Append("  AdvisoryCondition1: ").Append(AdvisoryCondition1).Append("\n");
            sb.Append("  AdvisoryCondition2: ").Append(AdvisoryCondition2).Append("\n");
            sb.Append("  AdvisoryCondition3: ").Append(AdvisoryCondition3).Append("\n");
            sb.Append("  AdvisoryCondition4: ").Append(AdvisoryCondition4).Append("\n");
            sb.Append("  AmendedAcquisitionCost: ").Append(AmendedAcquisitionCost).Append("\n");
            sb.Append("  ApplicationDate: ").Append(ApplicationDate).Append("\n");
            sb.Append("  AppraisalContact: ").Append(AppraisalContact).Append("\n");
            sb.Append("  AppraisalDeposit: ").Append(AppraisalDeposit).Append("\n");
            sb.Append("  Areas: ").Append(Areas).Append("\n");
            sb.Append("  AsAttorneyIndicator: ").Append(AsAttorneyIndicator).Append("\n");
            sb.Append("  AsRealBrokerIndicator: ").Append(AsRealBrokerIndicator).Append("\n");
            sb.Append("  AttorneyForTheBuyerIndicator: ").Append(AttorneyForTheBuyerIndicator).Append("\n");
            sb.Append("  AttorneyForTheLenderIndicator: ").Append(AttorneyForTheLenderIndicator).Append("\n");
            sb.Append("  AttorneyForTheSellerIndicator: ").Append(AttorneyForTheSellerIndicator).Append("\n");
            sb.Append("  AZCmplBlankSpcsDoc1BlankFldDesc1: ").Append(AZCmplBlankSpcsDoc1BlankFldDesc1).Append("\n");
            sb.Append("  AZCmplBlankSpcsDoc1BlankFldDesc2: ").Append(AZCmplBlankSpcsDoc1BlankFldDesc2).Append("\n");
            sb.Append("  AZCmplBlankSpcsDoc1BlankFldDesc3: ").Append(AZCmplBlankSpcsDoc1BlankFldDesc3).Append("\n");
            sb.Append("  AZCmplBlankSpcsDoc1Nm: ").Append(AZCmplBlankSpcsDoc1Nm).Append("\n");
            sb.Append("  AZCmplBlankSpcsDoc2Nm: ").Append(AZCmplBlankSpcsDoc2Nm).Append("\n");
            sb.Append("  AZCmplBlankSpcsDoc3Nm: ").Append(AZCmplBlankSpcsDoc3Nm).Append("\n");
            sb.Append("  BasedOnOthersDescription: ").Append(BasedOnOthersDescription).Append("\n");
            sb.Append("  BasedOnOthersIndicator: ").Append(BasedOnOthersIndicator).Append("\n");
            sb.Append("  BasedOnWholesaleOptionsIndicator: ").Append(BasedOnWholesaleOptionsIndicator).Append("\n");
            sb.Append("  BorrowerElectsEstablishEscrowAmount: ").Append(BorrowerElectsEstablishEscrowAmount).Append("\n");
            sb.Append("  BorrowerElectsEstablishEscrowIndicator: ").Append(BorrowerElectsEstablishEscrowIndicator).Append("\n");
            sb.Append("  BrokerageFeeAddition1: ").Append(BrokerageFeeAddition1).Append("\n");
            sb.Append("  BrokerageFeeAddition2: ").Append(BrokerageFeeAddition2).Append("\n");
            sb.Append("  BrokerageFeeAddition3: ").Append(BrokerageFeeAddition3).Append("\n");
            sb.Append("  BrokerageFeeAmount1: ").Append(BrokerageFeeAmount1).Append("\n");
            sb.Append("  BrokerageFeeAmount2: ").Append(BrokerageFeeAmount2).Append("\n");
            sb.Append("  BrokerageFeeAmount3: ").Append(BrokerageFeeAmount3).Append("\n");
            sb.Append("  BrokerageFeeDays: ").Append(BrokerageFeeDays).Append("\n");
            sb.Append("  BrokerageFeePercent1: ").Append(BrokerageFeePercent1).Append("\n");
            sb.Append("  BrokerageFeePercent2: ").Append(BrokerageFeePercent2).Append("\n");
            sb.Append("  BrokerageFeePercent3: ").Append(BrokerageFeePercent3).Append("\n");
            sb.Append("  BrokerAuthorizedSigningRepName: ").Append(BrokerAuthorizedSigningRepName).Append("\n");
            sb.Append("  BrokerAuthorizedSigningRepTitle: ").Append(BrokerAuthorizedSigningRepTitle).Append("\n");
            sb.Append("  BrokerForTheSeller: ").Append(BrokerForTheSeller).Append("\n");
            sb.Append("  BrokerLicense: ").Append(BrokerLicense).Append("\n");
            sb.Append("  BrokerName: ").Append(BrokerName).Append("\n");
            sb.Append("  BrokerPayAddition: ").Append(BrokerPayAddition).Append("\n");
            sb.Append("  BrokerPayAmount: ").Append(BrokerPayAmount).Append("\n");
            sb.Append("  BrokerPayIndicator: ").Append(BrokerPayIndicator).Append("\n");
            sb.Append("  BrokerPayPercent: ").Append(BrokerPayPercent).Append("\n");
            sb.Append("  CHARMBookletIndicator: ").Append(CHARMBookletIndicator).Append("\n");
            sb.Append("  CheckPayableTo: ").Append(CheckPayableTo).Append("\n");
            sb.Append("  CommitmentAmount: ").Append(CommitmentAmount).Append("\n");
            sb.Append("  CommitmentCondition1: ").Append(CommitmentCondition1).Append("\n");
            sb.Append("  CommitmentCondition2: ").Append(CommitmentCondition2).Append("\n");
            sb.Append("  CommitmentFee: ").Append(CommitmentFee).Append("\n");
            sb.Append("  CommitmentPercent: ").Append(CommitmentPercent).Append("\n");
            sb.Append("  CompensationAddition: ").Append(CompensationAddition).Append("\n");
            sb.Append("  CompensationPercent: ").Append(CompensationPercent).Append("\n");
            sb.Append("  CreditDeposit: ").Append(CreditDeposit).Append("\n");
            sb.Append("  CreditIsUsedForReason: ").Append(CreditIsUsedForReason).Append("\n");
            sb.Append("  CreditReportContact: ").Append(CreditReportContact).Append("\n");
            sb.Append("  DaysBeforeClosing: ").Append(DaysBeforeClosing).Append("\n");
            sb.Append("  DepositReceipt: ").Append(DepositReceipt).Append("\n");
            sb.Append("  DepositRefundableIndicator: ").Append(DepositRefundableIndicator).Append("\n");
            sb.Append("  DirectContact: ").Append(DirectContact).Append("\n");
            sb.Append("  DirectPayAmount: ").Append(DirectPayAmount).Append("\n");
            sb.Append("  DirectPayClosing: ").Append(DirectPayClosing).Append("\n");
            sb.Append("  DirectPayCommitment: ").Append(DirectPayCommitment).Append("\n");
            sb.Append("  DirectPayIndicator: ").Append(DirectPayIndicator).Append("\n");
            sb.Append("  DirectPayPercent: ").Append(DirectPayPercent).Append("\n");
            sb.Append("  DisclosureDeliveredBy: ").Append(DisclosureDeliveredBy).Append("\n");
            sb.Append("  DisclosureDeliveredByOtherMethod: ").Append(DisclosureDeliveredByOtherMethod).Append("\n");
            sb.Append("  DisclosureDeliveredDate: ").Append(DisclosureDeliveredDate).Append("\n");
            sb.Append("  EstimatedChargeShownOnGFEIndicator: ").Append(EstimatedChargeShownOnGFEIndicator).Append("\n");
            sb.Append("  ExpirationDate: ").Append(ExpirationDate).Append("\n");
            sb.Append("  FederallySubsidizedAmount: ").Append(FederallySubsidizedAmount).Append("\n");
            sb.Append("  FederallySubsidizedAmountPercentage: ").Append(FederallySubsidizedAmountPercentage).Append("\n");
            sb.Append("  FeeReceived1: ").Append(FeeReceived1).Append("\n");
            sb.Append("  FeeReceived2: ").Append(FeeReceived2).Append("\n");
            sb.Append("  FeeReceivedByLender: ").Append(FeeReceivedByLender).Append("\n");
            sb.Append("  FeesReceiving: ").Append(FeesReceiving).Append("\n");
            sb.Append("  FloridaApplicationFee: ").Append(FloridaApplicationFee).Append("\n");
            sb.Append("  FloridaOtherFee1: ").Append(FloridaOtherFee1).Append("\n");
            sb.Append("  FloridaOtherFee2: ").Append(FloridaOtherFee2).Append("\n");
            sb.Append("  FloridaOtherFeeTo1: ").Append(FloridaOtherFeeTo1).Append("\n");
            sb.Append("  FloridaOtherFeeTo2: ").Append(FloridaOtherFeeTo2).Append("\n");
            sb.Append("  FloridaOtherFeeTo3: ").Append(FloridaOtherFeeTo3).Append("\n");
            sb.Append("  FloridaOtherFeeTo4: ").Append(FloridaOtherFeeTo4).Append("\n");
            sb.Append("  FurtherFeesEarnedByMortgageBroker: ").Append(FurtherFeesEarnedByMortgageBroker).Append("\n");
            sb.Append("  GFEFeeReceived1: ").Append(GFEFeeReceived1).Append("\n");
            sb.Append("  GFEFeeReceived2: ").Append(GFEFeeReceived2).Append("\n");
            sb.Append("  HUDBookletIndicator: ").Append(HUDBookletIndicator).Append("\n");
            sb.Append("  IndependentContractorIndicator: ").Append(IndependentContractorIndicator).Append("\n");
            sb.Append("  IndexUsed: ").Append(IndexUsed).Append("\n");
            sb.Append("  InformationAboutTheIndexCanBeFound: ").Append(InformationAboutTheIndexCanBeFound).Append("\n");
            sb.Append("  IsEstimateIndicator: ").Append(IsEstimateIndicator).Append("\n");
            sb.Append("  KsUcccElectionIndicator: ").Append(KsUcccElectionIndicator).Append("\n");
            sb.Append("  KyHomeSolicationLoanIndicator: ").Append(KyHomeSolicationLoanIndicator).Append("\n");
            sb.Append("  LeaseAgreementDate: ").Append(LeaseAgreementDate).Append("\n");
            sb.Append("  LenderDate: ").Append(LenderDate).Append("\n");
            sb.Append("  LenderName: ").Append(LenderName).Append("\n");
            sb.Append("  LenderPaid: ").Append(LenderPaid).Append("\n");
            sb.Append("  LenderPayAmount: ").Append(LenderPayAmount).Append("\n");
            sb.Append("  LenderPayIndicator: ").Append(LenderPayIndicator).Append("\n");
            sb.Append("  LenderPayMaxPoint: ").Append(LenderPayMaxPoint).Append("\n");
            sb.Append("  LenderPayPercent: ").Append(LenderPayPercent).Append("\n");
            sb.Append("  LenderPayPoint: ").Append(LenderPayPoint).Append("\n");
            sb.Append("  LenderPayUnknownIndicator: ").Append(LenderPayUnknownIndicator).Append("\n");
            sb.Append("  LenderStatus: ").Append(LenderStatus).Append("\n");
            sb.Append("  LessorName: ").Append(LessorName).Append("\n");
            sb.Append("  LoanTermsFixedThroughDateofLoanClosingIndicator: ").Append(LoanTermsFixedThroughDateofLoanClosingIndicator).Append("\n");
            sb.Append("  LockInFee: ").Append(LockInFee).Append("\n");
            sb.Append("  MethodDescription: ").Append(MethodDescription).Append("\n");
            sb.Append("  MethodDetermine: ").Append(MethodDetermine).Append("\n");
            sb.Append("  MortgageAgreementIndicator: ").Append(MortgageAgreementIndicator).Append("\n");
            sb.Append("  MtgBrokerLicense: ").Append(MtgBrokerLicense).Append("\n");
            sb.Append("  NameOfLicensee: ").Append(NameOfLicensee).Append("\n");
            sb.Append("  NewMoneyAmount: ").Append(NewMoneyAmount).Append("\n");
            sb.Append("  NewYorkApplicationFee: ").Append(NewYorkApplicationFee).Append("\n");
            sb.Append("  NewYorkAppraisalFee: ").Append(NewYorkAppraisalFee).Append("\n");
            sb.Append("  NewYorkCreditReportFee: ").Append(NewYorkCreditReportFee).Append("\n");
            sb.Append("  NewYorkFees: ").Append(NewYorkFees).Append("\n");
            sb.Append("  NewYorkPrimaryLenders: ").Append(NewYorkPrimaryLenders).Append("\n");
            sb.Append("  NewYorkProcessingFee: ").Append(NewYorkProcessingFee).Append("\n");
            sb.Append("  NotRefundableAmount: ").Append(NotRefundableAmount).Append("\n");
            sb.Append("  OfferRetailPriceIndicator: ").Append(OfferRetailPriceIndicator).Append("\n");
            sb.Append("  OriginalAcquisitionCost: ").Append(OriginalAcquisitionCost).Append("\n");
            sb.Append("  OriginationFeeChargedAmount: ").Append(OriginationFeeChargedAmount).Append("\n");
            sb.Append("  OriginationFeeChargedIndicator: ").Append(OriginationFeeChargedIndicator).Append("\n");
            sb.Append("  OriginationFeeDecreasesRate: ").Append(OriginationFeeDecreasesRate).Append("\n");
            sb.Append("  OriginationFeeIncreasesRate: ").Append(OriginationFeeIncreasesRate).Append("\n");
            sb.Append("  OriginationFeeInterestRateImpactedStatus: ").Append(OriginationFeeInterestRateImpactedStatus).Append("\n");
            sb.Append("  OriginationFeePaidBy: ").Append(OriginationFeePaidBy).Append("\n");
            sb.Append("  PaidByBorrower: ").Append(PaidByBorrower).Append("\n");
            sb.Append("  PaidByLender: ").Append(PaidByLender).Append("\n");
            sb.Append("  PaidByOther1: ").Append(PaidByOther1).Append("\n");
            sb.Append("  PaidByOther2: ").Append(PaidByOther2).Append("\n");
            sb.Append("  PaidByOtherDescription1: ").Append(PaidByOtherDescription1).Append("\n");
            sb.Append("  PaidByOtherDescription2: ").Append(PaidByOtherDescription2).Append("\n");
            sb.Append("  PreviousMortgageAmountOne: ").Append(PreviousMortgageAmountOne).Append("\n");
            sb.Append("  PreviousMortgageAmountTwo: ").Append(PreviousMortgageAmountTwo).Append("\n");
            sb.Append("  PrintCertificationOfCosts: ").Append(PrintCertificationOfCosts).Append("\n");
            sb.Append("  PrintInterestRateReductionRider: ").Append(PrintInterestRateReductionRider).Append("\n");
            sb.Append("  PrintMDDeliveryIndicator: ").Append(PrintMDDeliveryIndicator).Append("\n");
            sb.Append("  ProvidedBy: ").Append(ProvidedBy).Append("\n");
            sb.Append("  QuestionContact: ").Append(QuestionContact).Append("\n");
            sb.Append("  QuestionContactPhone: ").Append(QuestionContactPhone).Append("\n");
            sb.Append("  QuestionContactTollFree: ").Append(QuestionContactTollFree).Append("\n");
            sb.Append("  RateLockHonoredIndicator: ").Append(RateLockHonoredIndicator).Append("\n");
            sb.Append("  ReceivedBy: ").Append(ReceivedBy).Append("\n");
            sb.Append("  RefinancingFee: ").Append(RefinancingFee).Append("\n");
            sb.Append("  RefundableBy: ").Append(RefundableBy).Append("\n");
            sb.Append("  RefundableIndicator: ").Append(RefundableIndicator).Append("\n");
            sb.Append("  RefundableType: ").Append(RefundableType).Append("\n");
            sb.Append("  RefundCondition1: ").Append(RefundCondition1).Append("\n");
            sb.Append("  RefundCondition2: ").Append(RefundCondition2).Append("\n");
            sb.Append("  RefundCondition3: ").Append(RefundCondition3).Append("\n");
            sb.Append("  RefundCondition4: ").Append(RefundCondition4).Append("\n");
            sb.Append("  RefundCondition5: ").Append(RefundCondition5).Append("\n");
            sb.Append("  RefundCondition6: ").Append(RefundCondition6).Append("\n");
            sb.Append("  ScheduleOfChargesEstimatedFinalIndicator: ").Append(ScheduleOfChargesEstimatedFinalIndicator).Append("\n");
            sb.Append("  ScRegulatoryAgencyType: ").Append(ScRegulatoryAgencyType).Append("\n");
            sb.Append("  RegulatorAddress: ").Append(RegulatorAddress).Append("\n");
            sb.Append("  RegulatorWebAddress: ").Append(RegulatorWebAddress).Append("\n");
            sb.Append("  RegulatorCity: ").Append(RegulatorCity).Append("\n");
            sb.Append("  RegulatorState: ").Append(RegulatorState).Append("\n");
            sb.Append("  RegulatorZipCode: ").Append(RegulatorZipCode).Append("\n");
            sb.Append("  RegulatorPhone: ").Append(RegulatorPhone).Append("\n");
            sb.Append("  RegulatorTollFreePhone: ").Append(RegulatorTollFreePhone).Append("\n");
            sb.Append("  RegulatorMailingAddress: ").Append(RegulatorMailingAddress).Append("\n");
            sb.Append("  RegulatorMailingCity: ").Append(RegulatorMailingCity).Append("\n");
            sb.Append("  RegulatorMailingState: ").Append(RegulatorMailingState).Append("\n");
            sb.Append("  RegulatorMailingZipCode: ").Append(RegulatorMailingZipCode).Append("\n");
            sb.Append("  SelectDivisionFeesIndicator: ").Append(SelectDivisionFeesIndicator).Append("\n");
            sb.Append("  SelectPrimaryLenderIndicator: ").Append(SelectPrimaryLenderIndicator).Append("\n");
            sb.Append("  SelectPrivateLenderIndicator: ").Append(SelectPrivateLenderIndicator).Append("\n");
            sb.Append("  ServicingFeeChargedAmount: ").Append(ServicingFeeChargedAmount).Append("\n");
            sb.Append("  ServicingFeeChargedIndicator: ").Append(ServicingFeeChargedIndicator).Append("\n");
            sb.Append("  ServicingFeePaidBy: ").Append(ServicingFeePaidBy).Append("\n");
            sb.Append("  ServicingFeePaidFrequence: ").Append(ServicingFeePaidFrequence).Append("\n");
            sb.Append("  SignedByBorrowerIndicator: ").Append(SignedByBorrowerIndicator).Append("\n");
            sb.Append("  SpecificARMIndicator: ").Append(SpecificARMIndicator).Append("\n");
            sb.Append("  SubmitToLenderIndicator: ").Append(SubmitToLenderIndicator).Append("\n");
            sb.Append("  TaxExemptAcquisitionCostCertificationAssessments: ").Append(TaxExemptAcquisitionCostCertificationAssessments).Append("\n");
            sb.Append("  TaxExemptAcquisitionCostCertificationOther: ").Append(TaxExemptAcquisitionCostCertificationOther).Append("\n");
            sb.Append("  TaxExemptAcquisitionCostCertificationOtherAmount: ").Append(TaxExemptAcquisitionCostCertificationOtherAmount).Append("\n");
            sb.Append("  TaxExemptAcquisitionCostCertificationOwnersTitleInsurance: ").Append(TaxExemptAcquisitionCostCertificationOwnersTitleInsurance).Append("\n");
            sb.Append("  TaxExemptAcquisitionCostCertificationRealEstateCommission: ").Append(TaxExemptAcquisitionCostCertificationRealEstateCommission).Append("\n");
            sb.Append("  TaxExemptAcquisitionCostCertificationRepairsImprovements: ").Append(TaxExemptAcquisitionCostCertificationRepairsImprovements).Append("\n");
            sb.Append("  TaxExemptAcquisitionCostCertificationSurvey: ").Append(TaxExemptAcquisitionCostCertificationSurvey).Append("\n");
            sb.Append("  TaxExemptAcquisitionCostCertificationTotalAdjustments: ").Append(TaxExemptAcquisitionCostCertificationTotalAdjustments).Append("\n");
            sb.Append("  TermsChange: ").Append(TermsChange).Append("\n");
            sb.Append("  TexasApplicationFee: ").Append(TexasApplicationFee).Append("\n");
            sb.Append("  TexasAppraisalFee: ").Append(TexasAppraisalFee).Append("\n");
            sb.Append("  TexasCreditReportFee: ").Append(TexasCreditReportFee).Append("\n");
            sb.Append("  TexasOtherFee1: ").Append(TexasOtherFee1).Append("\n");
            sb.Append("  TexasOtherFee2: ").Append(TexasOtherFee2).Append("\n");
            sb.Append("  TexasOtherFeeContact1: ").Append(TexasOtherFeeContact1).Append("\n");
            sb.Append("  TexasOtherFeeContact2: ").Append(TexasOtherFeeContact2).Append("\n");
            sb.Append("  TexasProcessingFee: ").Append(TexasProcessingFee).Append("\n");
            sb.Append("  ThirdPartyFee: ").Append(ThirdPartyFee).Append("\n");
            sb.Append("  TotalFee: ").Append(TotalFee).Append("\n");
            sb.Append("  TransferFeeChargedAmount: ").Append(TransferFeeChargedAmount).Append("\n");
            sb.Append("  TransferFeeChargedIndicator: ").Append(TransferFeeChargedIndicator).Append("\n");
            sb.Append("  TransferFeePaidBy: ").Append(TransferFeePaidBy).Append("\n");
            sb.Append("  TxVeteransLandBoardIndicator: ").Append(TxVeteransLandBoardIndicator).Append("\n");
            sb.Append("  TypeOfProperty: ").Append(TypeOfProperty).Append("\n");
            sb.Append("  UnderwritingContact: ").Append(UnderwritingContact).Append("\n");
            sb.Append("  UnderwritingFee: ").Append(UnderwritingFee).Append("\n");
            sb.Append("  YSPChargedAmount: ").Append(YSPChargedAmount).Append("\n");
            sb.Append("  YSPChargedIndicator: ").Append(YSPChargedIndicator).Append("\n");
            sb.Append("  YSPDecreasesRate: ").Append(YSPDecreasesRate).Append("\n");
            sb.Append("  YSPIncreasesRate: ").Append(YSPIncreasesRate).Append("\n");
            sb.Append("  YSPInterestRateImpactedStatus: ").Append(YSPInterestRateImpactedStatus).Append("\n");
            sb.Append("  YSPPaidBy: ").Append(YSPPaidBy).Append("\n");
            sb.Append("  InLicensedNo: ").Append(InLicensedNo).Append("\n");
            sb.Append("  InLicensedType: ").Append(InLicensedType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractStateDisclosure);
        }

        /// <summary>
        /// Returns true if LoanContractStateDisclosure instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractStateDisclosure to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractStateDisclosure input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AcceptedByBorrowerIndicator == input.AcceptedByBorrowerIndicator ||
                    (this.AcceptedByBorrowerIndicator != null &&
                    this.AcceptedByBorrowerIndicator.Equals(input.AcceptedByBorrowerIndicator))
                ) && 
                (
                    this.AcceptedDate == input.AcceptedDate ||
                    (this.AcceptedDate != null &&
                    this.AcceptedDate.Equals(input.AcceptedDate))
                ) && 
                (
                    this.ActingOtherDescription1 == input.ActingOtherDescription1 ||
                    (this.ActingOtherDescription1 != null &&
                    this.ActingOtherDescription1.Equals(input.ActingOtherDescription1))
                ) && 
                (
                    this.ActingOtherDescription2 == input.ActingOtherDescription2 ||
                    (this.ActingOtherDescription2 != null &&
                    this.ActingOtherDescription2.Equals(input.ActingOtherDescription2))
                ) && 
                (
                    this.ActingOthersIndicator == input.ActingOthersIndicator ||
                    (this.ActingOthersIndicator != null &&
                    this.ActingOthersIndicator.Equals(input.ActingOthersIndicator))
                ) && 
                (
                    this.AdvFeeAgmtInEfctNumDay == input.AdvFeeAgmtInEfctNumDay ||
                    (this.AdvFeeAgmtInEfctNumDay != null &&
                    this.AdvFeeAgmtInEfctNumDay.Equals(input.AdvFeeAgmtInEfctNumDay))
                ) && 
                (
                    this.AdvisoryCondition1 == input.AdvisoryCondition1 ||
                    (this.AdvisoryCondition1 != null &&
                    this.AdvisoryCondition1.Equals(input.AdvisoryCondition1))
                ) && 
                (
                    this.AdvisoryCondition2 == input.AdvisoryCondition2 ||
                    (this.AdvisoryCondition2 != null &&
                    this.AdvisoryCondition2.Equals(input.AdvisoryCondition2))
                ) && 
                (
                    this.AdvisoryCondition3 == input.AdvisoryCondition3 ||
                    (this.AdvisoryCondition3 != null &&
                    this.AdvisoryCondition3.Equals(input.AdvisoryCondition3))
                ) && 
                (
                    this.AdvisoryCondition4 == input.AdvisoryCondition4 ||
                    (this.AdvisoryCondition4 != null &&
                    this.AdvisoryCondition4.Equals(input.AdvisoryCondition4))
                ) && 
                (
                    this.AmendedAcquisitionCost == input.AmendedAcquisitionCost ||
                    (this.AmendedAcquisitionCost != null &&
                    this.AmendedAcquisitionCost.Equals(input.AmendedAcquisitionCost))
                ) && 
                (
                    this.ApplicationDate == input.ApplicationDate ||
                    (this.ApplicationDate != null &&
                    this.ApplicationDate.Equals(input.ApplicationDate))
                ) && 
                (
                    this.AppraisalContact == input.AppraisalContact ||
                    (this.AppraisalContact != null &&
                    this.AppraisalContact.Equals(input.AppraisalContact))
                ) && 
                (
                    this.AppraisalDeposit == input.AppraisalDeposit ||
                    (this.AppraisalDeposit != null &&
                    this.AppraisalDeposit.Equals(input.AppraisalDeposit))
                ) && 
                (
                    this.Areas == input.Areas ||
                    (this.Areas != null &&
                    this.Areas.Equals(input.Areas))
                ) && 
                (
                    this.AsAttorneyIndicator == input.AsAttorneyIndicator ||
                    (this.AsAttorneyIndicator != null &&
                    this.AsAttorneyIndicator.Equals(input.AsAttorneyIndicator))
                ) && 
                (
                    this.AsRealBrokerIndicator == input.AsRealBrokerIndicator ||
                    (this.AsRealBrokerIndicator != null &&
                    this.AsRealBrokerIndicator.Equals(input.AsRealBrokerIndicator))
                ) && 
                (
                    this.AttorneyForTheBuyerIndicator == input.AttorneyForTheBuyerIndicator ||
                    (this.AttorneyForTheBuyerIndicator != null &&
                    this.AttorneyForTheBuyerIndicator.Equals(input.AttorneyForTheBuyerIndicator))
                ) && 
                (
                    this.AttorneyForTheLenderIndicator == input.AttorneyForTheLenderIndicator ||
                    (this.AttorneyForTheLenderIndicator != null &&
                    this.AttorneyForTheLenderIndicator.Equals(input.AttorneyForTheLenderIndicator))
                ) && 
                (
                    this.AttorneyForTheSellerIndicator == input.AttorneyForTheSellerIndicator ||
                    (this.AttorneyForTheSellerIndicator != null &&
                    this.AttorneyForTheSellerIndicator.Equals(input.AttorneyForTheSellerIndicator))
                ) && 
                (
                    this.AZCmplBlankSpcsDoc1BlankFldDesc1 == input.AZCmplBlankSpcsDoc1BlankFldDesc1 ||
                    (this.AZCmplBlankSpcsDoc1BlankFldDesc1 != null &&
                    this.AZCmplBlankSpcsDoc1BlankFldDesc1.Equals(input.AZCmplBlankSpcsDoc1BlankFldDesc1))
                ) && 
                (
                    this.AZCmplBlankSpcsDoc1BlankFldDesc2 == input.AZCmplBlankSpcsDoc1BlankFldDesc2 ||
                    (this.AZCmplBlankSpcsDoc1BlankFldDesc2 != null &&
                    this.AZCmplBlankSpcsDoc1BlankFldDesc2.Equals(input.AZCmplBlankSpcsDoc1BlankFldDesc2))
                ) && 
                (
                    this.AZCmplBlankSpcsDoc1BlankFldDesc3 == input.AZCmplBlankSpcsDoc1BlankFldDesc3 ||
                    (this.AZCmplBlankSpcsDoc1BlankFldDesc3 != null &&
                    this.AZCmplBlankSpcsDoc1BlankFldDesc3.Equals(input.AZCmplBlankSpcsDoc1BlankFldDesc3))
                ) && 
                (
                    this.AZCmplBlankSpcsDoc1Nm == input.AZCmplBlankSpcsDoc1Nm ||
                    (this.AZCmplBlankSpcsDoc1Nm != null &&
                    this.AZCmplBlankSpcsDoc1Nm.Equals(input.AZCmplBlankSpcsDoc1Nm))
                ) && 
                (
                    this.AZCmplBlankSpcsDoc2Nm == input.AZCmplBlankSpcsDoc2Nm ||
                    (this.AZCmplBlankSpcsDoc2Nm != null &&
                    this.AZCmplBlankSpcsDoc2Nm.Equals(input.AZCmplBlankSpcsDoc2Nm))
                ) && 
                (
                    this.AZCmplBlankSpcsDoc3Nm == input.AZCmplBlankSpcsDoc3Nm ||
                    (this.AZCmplBlankSpcsDoc3Nm != null &&
                    this.AZCmplBlankSpcsDoc3Nm.Equals(input.AZCmplBlankSpcsDoc3Nm))
                ) && 
                (
                    this.BasedOnOthersDescription == input.BasedOnOthersDescription ||
                    (this.BasedOnOthersDescription != null &&
                    this.BasedOnOthersDescription.Equals(input.BasedOnOthersDescription))
                ) && 
                (
                    this.BasedOnOthersIndicator == input.BasedOnOthersIndicator ||
                    (this.BasedOnOthersIndicator != null &&
                    this.BasedOnOthersIndicator.Equals(input.BasedOnOthersIndicator))
                ) && 
                (
                    this.BasedOnWholesaleOptionsIndicator == input.BasedOnWholesaleOptionsIndicator ||
                    (this.BasedOnWholesaleOptionsIndicator != null &&
                    this.BasedOnWholesaleOptionsIndicator.Equals(input.BasedOnWholesaleOptionsIndicator))
                ) && 
                (
                    this.BorrowerElectsEstablishEscrowAmount == input.BorrowerElectsEstablishEscrowAmount ||
                    (this.BorrowerElectsEstablishEscrowAmount != null &&
                    this.BorrowerElectsEstablishEscrowAmount.Equals(input.BorrowerElectsEstablishEscrowAmount))
                ) && 
                (
                    this.BorrowerElectsEstablishEscrowIndicator == input.BorrowerElectsEstablishEscrowIndicator ||
                    (this.BorrowerElectsEstablishEscrowIndicator != null &&
                    this.BorrowerElectsEstablishEscrowIndicator.Equals(input.BorrowerElectsEstablishEscrowIndicator))
                ) && 
                (
                    this.BrokerageFeeAddition1 == input.BrokerageFeeAddition1 ||
                    (this.BrokerageFeeAddition1 != null &&
                    this.BrokerageFeeAddition1.Equals(input.BrokerageFeeAddition1))
                ) && 
                (
                    this.BrokerageFeeAddition2 == input.BrokerageFeeAddition2 ||
                    (this.BrokerageFeeAddition2 != null &&
                    this.BrokerageFeeAddition2.Equals(input.BrokerageFeeAddition2))
                ) && 
                (
                    this.BrokerageFeeAddition3 == input.BrokerageFeeAddition3 ||
                    (this.BrokerageFeeAddition3 != null &&
                    this.BrokerageFeeAddition3.Equals(input.BrokerageFeeAddition3))
                ) && 
                (
                    this.BrokerageFeeAmount1 == input.BrokerageFeeAmount1 ||
                    (this.BrokerageFeeAmount1 != null &&
                    this.BrokerageFeeAmount1.Equals(input.BrokerageFeeAmount1))
                ) && 
                (
                    this.BrokerageFeeAmount2 == input.BrokerageFeeAmount2 ||
                    (this.BrokerageFeeAmount2 != null &&
                    this.BrokerageFeeAmount2.Equals(input.BrokerageFeeAmount2))
                ) && 
                (
                    this.BrokerageFeeAmount3 == input.BrokerageFeeAmount3 ||
                    (this.BrokerageFeeAmount3 != null &&
                    this.BrokerageFeeAmount3.Equals(input.BrokerageFeeAmount3))
                ) && 
                (
                    this.BrokerageFeeDays == input.BrokerageFeeDays ||
                    (this.BrokerageFeeDays != null &&
                    this.BrokerageFeeDays.Equals(input.BrokerageFeeDays))
                ) && 
                (
                    this.BrokerageFeePercent1 == input.BrokerageFeePercent1 ||
                    (this.BrokerageFeePercent1 != null &&
                    this.BrokerageFeePercent1.Equals(input.BrokerageFeePercent1))
                ) && 
                (
                    this.BrokerageFeePercent2 == input.BrokerageFeePercent2 ||
                    (this.BrokerageFeePercent2 != null &&
                    this.BrokerageFeePercent2.Equals(input.BrokerageFeePercent2))
                ) && 
                (
                    this.BrokerageFeePercent3 == input.BrokerageFeePercent3 ||
                    (this.BrokerageFeePercent3 != null &&
                    this.BrokerageFeePercent3.Equals(input.BrokerageFeePercent3))
                ) && 
                (
                    this.BrokerAuthorizedSigningRepName == input.BrokerAuthorizedSigningRepName ||
                    (this.BrokerAuthorizedSigningRepName != null &&
                    this.BrokerAuthorizedSigningRepName.Equals(input.BrokerAuthorizedSigningRepName))
                ) && 
                (
                    this.BrokerAuthorizedSigningRepTitle == input.BrokerAuthorizedSigningRepTitle ||
                    (this.BrokerAuthorizedSigningRepTitle != null &&
                    this.BrokerAuthorizedSigningRepTitle.Equals(input.BrokerAuthorizedSigningRepTitle))
                ) && 
                (
                    this.BrokerForTheSeller == input.BrokerForTheSeller ||
                    (this.BrokerForTheSeller != null &&
                    this.BrokerForTheSeller.Equals(input.BrokerForTheSeller))
                ) && 
                (
                    this.BrokerLicense == input.BrokerLicense ||
                    (this.BrokerLicense != null &&
                    this.BrokerLicense.Equals(input.BrokerLicense))
                ) && 
                (
                    this.BrokerName == input.BrokerName ||
                    (this.BrokerName != null &&
                    this.BrokerName.Equals(input.BrokerName))
                ) && 
                (
                    this.BrokerPayAddition == input.BrokerPayAddition ||
                    (this.BrokerPayAddition != null &&
                    this.BrokerPayAddition.Equals(input.BrokerPayAddition))
                ) && 
                (
                    this.BrokerPayAmount == input.BrokerPayAmount ||
                    (this.BrokerPayAmount != null &&
                    this.BrokerPayAmount.Equals(input.BrokerPayAmount))
                ) && 
                (
                    this.BrokerPayIndicator == input.BrokerPayIndicator ||
                    (this.BrokerPayIndicator != null &&
                    this.BrokerPayIndicator.Equals(input.BrokerPayIndicator))
                ) && 
                (
                    this.BrokerPayPercent == input.BrokerPayPercent ||
                    (this.BrokerPayPercent != null &&
                    this.BrokerPayPercent.Equals(input.BrokerPayPercent))
                ) && 
                (
                    this.CHARMBookletIndicator == input.CHARMBookletIndicator ||
                    (this.CHARMBookletIndicator != null &&
                    this.CHARMBookletIndicator.Equals(input.CHARMBookletIndicator))
                ) && 
                (
                    this.CheckPayableTo == input.CheckPayableTo ||
                    (this.CheckPayableTo != null &&
                    this.CheckPayableTo.Equals(input.CheckPayableTo))
                ) && 
                (
                    this.CommitmentAmount == input.CommitmentAmount ||
                    (this.CommitmentAmount != null &&
                    this.CommitmentAmount.Equals(input.CommitmentAmount))
                ) && 
                (
                    this.CommitmentCondition1 == input.CommitmentCondition1 ||
                    (this.CommitmentCondition1 != null &&
                    this.CommitmentCondition1.Equals(input.CommitmentCondition1))
                ) && 
                (
                    this.CommitmentCondition2 == input.CommitmentCondition2 ||
                    (this.CommitmentCondition2 != null &&
                    this.CommitmentCondition2.Equals(input.CommitmentCondition2))
                ) && 
                (
                    this.CommitmentFee == input.CommitmentFee ||
                    (this.CommitmentFee != null &&
                    this.CommitmentFee.Equals(input.CommitmentFee))
                ) && 
                (
                    this.CommitmentPercent == input.CommitmentPercent ||
                    (this.CommitmentPercent != null &&
                    this.CommitmentPercent.Equals(input.CommitmentPercent))
                ) && 
                (
                    this.CompensationAddition == input.CompensationAddition ||
                    (this.CompensationAddition != null &&
                    this.CompensationAddition.Equals(input.CompensationAddition))
                ) && 
                (
                    this.CompensationPercent == input.CompensationPercent ||
                    (this.CompensationPercent != null &&
                    this.CompensationPercent.Equals(input.CompensationPercent))
                ) && 
                (
                    this.CreditDeposit == input.CreditDeposit ||
                    (this.CreditDeposit != null &&
                    this.CreditDeposit.Equals(input.CreditDeposit))
                ) && 
                (
                    this.CreditIsUsedForReason == input.CreditIsUsedForReason ||
                    (this.CreditIsUsedForReason != null &&
                    this.CreditIsUsedForReason.Equals(input.CreditIsUsedForReason))
                ) && 
                (
                    this.CreditReportContact == input.CreditReportContact ||
                    (this.CreditReportContact != null &&
                    this.CreditReportContact.Equals(input.CreditReportContact))
                ) && 
                (
                    this.DaysBeforeClosing == input.DaysBeforeClosing ||
                    (this.DaysBeforeClosing != null &&
                    this.DaysBeforeClosing.Equals(input.DaysBeforeClosing))
                ) && 
                (
                    this.DepositReceipt == input.DepositReceipt ||
                    (this.DepositReceipt != null &&
                    this.DepositReceipt.Equals(input.DepositReceipt))
                ) && 
                (
                    this.DepositRefundableIndicator == input.DepositRefundableIndicator ||
                    (this.DepositRefundableIndicator != null &&
                    this.DepositRefundableIndicator.Equals(input.DepositRefundableIndicator))
                ) && 
                (
                    this.DirectContact == input.DirectContact ||
                    (this.DirectContact != null &&
                    this.DirectContact.Equals(input.DirectContact))
                ) && 
                (
                    this.DirectPayAmount == input.DirectPayAmount ||
                    (this.DirectPayAmount != null &&
                    this.DirectPayAmount.Equals(input.DirectPayAmount))
                ) && 
                (
                    this.DirectPayClosing == input.DirectPayClosing ||
                    (this.DirectPayClosing != null &&
                    this.DirectPayClosing.Equals(input.DirectPayClosing))
                ) && 
                (
                    this.DirectPayCommitment == input.DirectPayCommitment ||
                    (this.DirectPayCommitment != null &&
                    this.DirectPayCommitment.Equals(input.DirectPayCommitment))
                ) && 
                (
                    this.DirectPayIndicator == input.DirectPayIndicator ||
                    (this.DirectPayIndicator != null &&
                    this.DirectPayIndicator.Equals(input.DirectPayIndicator))
                ) && 
                (
                    this.DirectPayPercent == input.DirectPayPercent ||
                    (this.DirectPayPercent != null &&
                    this.DirectPayPercent.Equals(input.DirectPayPercent))
                ) && 
                (
                    this.DisclosureDeliveredBy == input.DisclosureDeliveredBy ||
                    (this.DisclosureDeliveredBy != null &&
                    this.DisclosureDeliveredBy.Equals(input.DisclosureDeliveredBy))
                ) && 
                (
                    this.DisclosureDeliveredByOtherMethod == input.DisclosureDeliveredByOtherMethod ||
                    (this.DisclosureDeliveredByOtherMethod != null &&
                    this.DisclosureDeliveredByOtherMethod.Equals(input.DisclosureDeliveredByOtherMethod))
                ) && 
                (
                    this.DisclosureDeliveredDate == input.DisclosureDeliveredDate ||
                    (this.DisclosureDeliveredDate != null &&
                    this.DisclosureDeliveredDate.Equals(input.DisclosureDeliveredDate))
                ) && 
                (
                    this.EstimatedChargeShownOnGFEIndicator == input.EstimatedChargeShownOnGFEIndicator ||
                    (this.EstimatedChargeShownOnGFEIndicator != null &&
                    this.EstimatedChargeShownOnGFEIndicator.Equals(input.EstimatedChargeShownOnGFEIndicator))
                ) && 
                (
                    this.ExpirationDate == input.ExpirationDate ||
                    (this.ExpirationDate != null &&
                    this.ExpirationDate.Equals(input.ExpirationDate))
                ) && 
                (
                    this.FederallySubsidizedAmount == input.FederallySubsidizedAmount ||
                    (this.FederallySubsidizedAmount != null &&
                    this.FederallySubsidizedAmount.Equals(input.FederallySubsidizedAmount))
                ) && 
                (
                    this.FederallySubsidizedAmountPercentage == input.FederallySubsidizedAmountPercentage ||
                    (this.FederallySubsidizedAmountPercentage != null &&
                    this.FederallySubsidizedAmountPercentage.Equals(input.FederallySubsidizedAmountPercentage))
                ) && 
                (
                    this.FeeReceived1 == input.FeeReceived1 ||
                    (this.FeeReceived1 != null &&
                    this.FeeReceived1.Equals(input.FeeReceived1))
                ) && 
                (
                    this.FeeReceived2 == input.FeeReceived2 ||
                    (this.FeeReceived2 != null &&
                    this.FeeReceived2.Equals(input.FeeReceived2))
                ) && 
                (
                    this.FeeReceivedByLender == input.FeeReceivedByLender ||
                    (this.FeeReceivedByLender != null &&
                    this.FeeReceivedByLender.Equals(input.FeeReceivedByLender))
                ) && 
                (
                    this.FeesReceiving == input.FeesReceiving ||
                    (this.FeesReceiving != null &&
                    this.FeesReceiving.Equals(input.FeesReceiving))
                ) && 
                (
                    this.FloridaApplicationFee == input.FloridaApplicationFee ||
                    (this.FloridaApplicationFee != null &&
                    this.FloridaApplicationFee.Equals(input.FloridaApplicationFee))
                ) && 
                (
                    this.FloridaOtherFee1 == input.FloridaOtherFee1 ||
                    (this.FloridaOtherFee1 != null &&
                    this.FloridaOtherFee1.Equals(input.FloridaOtherFee1))
                ) && 
                (
                    this.FloridaOtherFee2 == input.FloridaOtherFee2 ||
                    (this.FloridaOtherFee2 != null &&
                    this.FloridaOtherFee2.Equals(input.FloridaOtherFee2))
                ) && 
                (
                    this.FloridaOtherFeeTo1 == input.FloridaOtherFeeTo1 ||
                    (this.FloridaOtherFeeTo1 != null &&
                    this.FloridaOtherFeeTo1.Equals(input.FloridaOtherFeeTo1))
                ) && 
                (
                    this.FloridaOtherFeeTo2 == input.FloridaOtherFeeTo2 ||
                    (this.FloridaOtherFeeTo2 != null &&
                    this.FloridaOtherFeeTo2.Equals(input.FloridaOtherFeeTo2))
                ) && 
                (
                    this.FloridaOtherFeeTo3 == input.FloridaOtherFeeTo3 ||
                    (this.FloridaOtherFeeTo3 != null &&
                    this.FloridaOtherFeeTo3.Equals(input.FloridaOtherFeeTo3))
                ) && 
                (
                    this.FloridaOtherFeeTo4 == input.FloridaOtherFeeTo4 ||
                    (this.FloridaOtherFeeTo4 != null &&
                    this.FloridaOtherFeeTo4.Equals(input.FloridaOtherFeeTo4))
                ) && 
                (
                    this.FurtherFeesEarnedByMortgageBroker == input.FurtherFeesEarnedByMortgageBroker ||
                    (this.FurtherFeesEarnedByMortgageBroker != null &&
                    this.FurtherFeesEarnedByMortgageBroker.Equals(input.FurtherFeesEarnedByMortgageBroker))
                ) && 
                (
                    this.GFEFeeReceived1 == input.GFEFeeReceived1 ||
                    (this.GFEFeeReceived1 != null &&
                    this.GFEFeeReceived1.Equals(input.GFEFeeReceived1))
                ) && 
                (
                    this.GFEFeeReceived2 == input.GFEFeeReceived2 ||
                    (this.GFEFeeReceived2 != null &&
                    this.GFEFeeReceived2.Equals(input.GFEFeeReceived2))
                ) && 
                (
                    this.HUDBookletIndicator == input.HUDBookletIndicator ||
                    (this.HUDBookletIndicator != null &&
                    this.HUDBookletIndicator.Equals(input.HUDBookletIndicator))
                ) && 
                (
                    this.IndependentContractorIndicator == input.IndependentContractorIndicator ||
                    (this.IndependentContractorIndicator != null &&
                    this.IndependentContractorIndicator.Equals(input.IndependentContractorIndicator))
                ) && 
                (
                    this.IndexUsed == input.IndexUsed ||
                    (this.IndexUsed != null &&
                    this.IndexUsed.Equals(input.IndexUsed))
                ) && 
                (
                    this.InformationAboutTheIndexCanBeFound == input.InformationAboutTheIndexCanBeFound ||
                    (this.InformationAboutTheIndexCanBeFound != null &&
                    this.InformationAboutTheIndexCanBeFound.Equals(input.InformationAboutTheIndexCanBeFound))
                ) && 
                (
                    this.IsEstimateIndicator == input.IsEstimateIndicator ||
                    (this.IsEstimateIndicator != null &&
                    this.IsEstimateIndicator.Equals(input.IsEstimateIndicator))
                ) && 
                (
                    this.KsUcccElectionIndicator == input.KsUcccElectionIndicator ||
                    (this.KsUcccElectionIndicator != null &&
                    this.KsUcccElectionIndicator.Equals(input.KsUcccElectionIndicator))
                ) && 
                (
                    this.KyHomeSolicationLoanIndicator == input.KyHomeSolicationLoanIndicator ||
                    (this.KyHomeSolicationLoanIndicator != null &&
                    this.KyHomeSolicationLoanIndicator.Equals(input.KyHomeSolicationLoanIndicator))
                ) && 
                (
                    this.LeaseAgreementDate == input.LeaseAgreementDate ||
                    (this.LeaseAgreementDate != null &&
                    this.LeaseAgreementDate.Equals(input.LeaseAgreementDate))
                ) && 
                (
                    this.LenderDate == input.LenderDate ||
                    (this.LenderDate != null &&
                    this.LenderDate.Equals(input.LenderDate))
                ) && 
                (
                    this.LenderName == input.LenderName ||
                    (this.LenderName != null &&
                    this.LenderName.Equals(input.LenderName))
                ) && 
                (
                    this.LenderPaid == input.LenderPaid ||
                    (this.LenderPaid != null &&
                    this.LenderPaid.Equals(input.LenderPaid))
                ) && 
                (
                    this.LenderPayAmount == input.LenderPayAmount ||
                    (this.LenderPayAmount != null &&
                    this.LenderPayAmount.Equals(input.LenderPayAmount))
                ) && 
                (
                    this.LenderPayIndicator == input.LenderPayIndicator ||
                    (this.LenderPayIndicator != null &&
                    this.LenderPayIndicator.Equals(input.LenderPayIndicator))
                ) && 
                (
                    this.LenderPayMaxPoint == input.LenderPayMaxPoint ||
                    (this.LenderPayMaxPoint != null &&
                    this.LenderPayMaxPoint.Equals(input.LenderPayMaxPoint))
                ) && 
                (
                    this.LenderPayPercent == input.LenderPayPercent ||
                    (this.LenderPayPercent != null &&
                    this.LenderPayPercent.Equals(input.LenderPayPercent))
                ) && 
                (
                    this.LenderPayPoint == input.LenderPayPoint ||
                    (this.LenderPayPoint != null &&
                    this.LenderPayPoint.Equals(input.LenderPayPoint))
                ) && 
                (
                    this.LenderPayUnknownIndicator == input.LenderPayUnknownIndicator ||
                    (this.LenderPayUnknownIndicator != null &&
                    this.LenderPayUnknownIndicator.Equals(input.LenderPayUnknownIndicator))
                ) && 
                (
                    this.LenderStatus == input.LenderStatus ||
                    (this.LenderStatus != null &&
                    this.LenderStatus.Equals(input.LenderStatus))
                ) && 
                (
                    this.LessorName == input.LessorName ||
                    (this.LessorName != null &&
                    this.LessorName.Equals(input.LessorName))
                ) && 
                (
                    this.LoanTermsFixedThroughDateofLoanClosingIndicator == input.LoanTermsFixedThroughDateofLoanClosingIndicator ||
                    (this.LoanTermsFixedThroughDateofLoanClosingIndicator != null &&
                    this.LoanTermsFixedThroughDateofLoanClosingIndicator.Equals(input.LoanTermsFixedThroughDateofLoanClosingIndicator))
                ) && 
                (
                    this.LockInFee == input.LockInFee ||
                    (this.LockInFee != null &&
                    this.LockInFee.Equals(input.LockInFee))
                ) && 
                (
                    this.MethodDescription == input.MethodDescription ||
                    (this.MethodDescription != null &&
                    this.MethodDescription.Equals(input.MethodDescription))
                ) && 
                (
                    this.MethodDetermine == input.MethodDetermine ||
                    (this.MethodDetermine != null &&
                    this.MethodDetermine.Equals(input.MethodDetermine))
                ) && 
                (
                    this.MortgageAgreementIndicator == input.MortgageAgreementIndicator ||
                    (this.MortgageAgreementIndicator != null &&
                    this.MortgageAgreementIndicator.Equals(input.MortgageAgreementIndicator))
                ) && 
                (
                    this.MtgBrokerLicense == input.MtgBrokerLicense ||
                    (this.MtgBrokerLicense != null &&
                    this.MtgBrokerLicense.Equals(input.MtgBrokerLicense))
                ) && 
                (
                    this.NameOfLicensee == input.NameOfLicensee ||
                    (this.NameOfLicensee != null &&
                    this.NameOfLicensee.Equals(input.NameOfLicensee))
                ) && 
                (
                    this.NewMoneyAmount == input.NewMoneyAmount ||
                    (this.NewMoneyAmount != null &&
                    this.NewMoneyAmount.Equals(input.NewMoneyAmount))
                ) && 
                (
                    this.NewYorkApplicationFee == input.NewYorkApplicationFee ||
                    (this.NewYorkApplicationFee != null &&
                    this.NewYorkApplicationFee.Equals(input.NewYorkApplicationFee))
                ) && 
                (
                    this.NewYorkAppraisalFee == input.NewYorkAppraisalFee ||
                    (this.NewYorkAppraisalFee != null &&
                    this.NewYorkAppraisalFee.Equals(input.NewYorkAppraisalFee))
                ) && 
                (
                    this.NewYorkCreditReportFee == input.NewYorkCreditReportFee ||
                    (this.NewYorkCreditReportFee != null &&
                    this.NewYorkCreditReportFee.Equals(input.NewYorkCreditReportFee))
                ) && 
                (
                    this.NewYorkFees == input.NewYorkFees ||
                    this.NewYorkFees != null &&
                    this.NewYorkFees.SequenceEqual(input.NewYorkFees)
                ) && 
                (
                    this.NewYorkPrimaryLenders == input.NewYorkPrimaryLenders ||
                    this.NewYorkPrimaryLenders != null &&
                    this.NewYorkPrimaryLenders.SequenceEqual(input.NewYorkPrimaryLenders)
                ) && 
                (
                    this.NewYorkProcessingFee == input.NewYorkProcessingFee ||
                    (this.NewYorkProcessingFee != null &&
                    this.NewYorkProcessingFee.Equals(input.NewYorkProcessingFee))
                ) && 
                (
                    this.NotRefundableAmount == input.NotRefundableAmount ||
                    (this.NotRefundableAmount != null &&
                    this.NotRefundableAmount.Equals(input.NotRefundableAmount))
                ) && 
                (
                    this.OfferRetailPriceIndicator == input.OfferRetailPriceIndicator ||
                    (this.OfferRetailPriceIndicator != null &&
                    this.OfferRetailPriceIndicator.Equals(input.OfferRetailPriceIndicator))
                ) && 
                (
                    this.OriginalAcquisitionCost == input.OriginalAcquisitionCost ||
                    (this.OriginalAcquisitionCost != null &&
                    this.OriginalAcquisitionCost.Equals(input.OriginalAcquisitionCost))
                ) && 
                (
                    this.OriginationFeeChargedAmount == input.OriginationFeeChargedAmount ||
                    (this.OriginationFeeChargedAmount != null &&
                    this.OriginationFeeChargedAmount.Equals(input.OriginationFeeChargedAmount))
                ) && 
                (
                    this.OriginationFeeChargedIndicator == input.OriginationFeeChargedIndicator ||
                    (this.OriginationFeeChargedIndicator != null &&
                    this.OriginationFeeChargedIndicator.Equals(input.OriginationFeeChargedIndicator))
                ) && 
                (
                    this.OriginationFeeDecreasesRate == input.OriginationFeeDecreasesRate ||
                    (this.OriginationFeeDecreasesRate != null &&
                    this.OriginationFeeDecreasesRate.Equals(input.OriginationFeeDecreasesRate))
                ) && 
                (
                    this.OriginationFeeIncreasesRate == input.OriginationFeeIncreasesRate ||
                    (this.OriginationFeeIncreasesRate != null &&
                    this.OriginationFeeIncreasesRate.Equals(input.OriginationFeeIncreasesRate))
                ) && 
                (
                    this.OriginationFeeInterestRateImpactedStatus == input.OriginationFeeInterestRateImpactedStatus ||
                    (this.OriginationFeeInterestRateImpactedStatus != null &&
                    this.OriginationFeeInterestRateImpactedStatus.Equals(input.OriginationFeeInterestRateImpactedStatus))
                ) && 
                (
                    this.OriginationFeePaidBy == input.OriginationFeePaidBy ||
                    (this.OriginationFeePaidBy != null &&
                    this.OriginationFeePaidBy.Equals(input.OriginationFeePaidBy))
                ) && 
                (
                    this.PaidByBorrower == input.PaidByBorrower ||
                    (this.PaidByBorrower != null &&
                    this.PaidByBorrower.Equals(input.PaidByBorrower))
                ) && 
                (
                    this.PaidByLender == input.PaidByLender ||
                    (this.PaidByLender != null &&
                    this.PaidByLender.Equals(input.PaidByLender))
                ) && 
                (
                    this.PaidByOther1 == input.PaidByOther1 ||
                    (this.PaidByOther1 != null &&
                    this.PaidByOther1.Equals(input.PaidByOther1))
                ) && 
                (
                    this.PaidByOther2 == input.PaidByOther2 ||
                    (this.PaidByOther2 != null &&
                    this.PaidByOther2.Equals(input.PaidByOther2))
                ) && 
                (
                    this.PaidByOtherDescription1 == input.PaidByOtherDescription1 ||
                    (this.PaidByOtherDescription1 != null &&
                    this.PaidByOtherDescription1.Equals(input.PaidByOtherDescription1))
                ) && 
                (
                    this.PaidByOtherDescription2 == input.PaidByOtherDescription2 ||
                    (this.PaidByOtherDescription2 != null &&
                    this.PaidByOtherDescription2.Equals(input.PaidByOtherDescription2))
                ) && 
                (
                    this.PreviousMortgageAmountOne == input.PreviousMortgageAmountOne ||
                    (this.PreviousMortgageAmountOne != null &&
                    this.PreviousMortgageAmountOne.Equals(input.PreviousMortgageAmountOne))
                ) && 
                (
                    this.PreviousMortgageAmountTwo == input.PreviousMortgageAmountTwo ||
                    (this.PreviousMortgageAmountTwo != null &&
                    this.PreviousMortgageAmountTwo.Equals(input.PreviousMortgageAmountTwo))
                ) && 
                (
                    this.PrintCertificationOfCosts == input.PrintCertificationOfCosts ||
                    (this.PrintCertificationOfCosts != null &&
                    this.PrintCertificationOfCosts.Equals(input.PrintCertificationOfCosts))
                ) && 
                (
                    this.PrintInterestRateReductionRider == input.PrintInterestRateReductionRider ||
                    (this.PrintInterestRateReductionRider != null &&
                    this.PrintInterestRateReductionRider.Equals(input.PrintInterestRateReductionRider))
                ) && 
                (
                    this.PrintMDDeliveryIndicator == input.PrintMDDeliveryIndicator ||
                    (this.PrintMDDeliveryIndicator != null &&
                    this.PrintMDDeliveryIndicator.Equals(input.PrintMDDeliveryIndicator))
                ) && 
                (
                    this.ProvidedBy == input.ProvidedBy ||
                    (this.ProvidedBy != null &&
                    this.ProvidedBy.Equals(input.ProvidedBy))
                ) && 
                (
                    this.QuestionContact == input.QuestionContact ||
                    (this.QuestionContact != null &&
                    this.QuestionContact.Equals(input.QuestionContact))
                ) && 
                (
                    this.QuestionContactPhone == input.QuestionContactPhone ||
                    (this.QuestionContactPhone != null &&
                    this.QuestionContactPhone.Equals(input.QuestionContactPhone))
                ) && 
                (
                    this.QuestionContactTollFree == input.QuestionContactTollFree ||
                    (this.QuestionContactTollFree != null &&
                    this.QuestionContactTollFree.Equals(input.QuestionContactTollFree))
                ) && 
                (
                    this.RateLockHonoredIndicator == input.RateLockHonoredIndicator ||
                    (this.RateLockHonoredIndicator != null &&
                    this.RateLockHonoredIndicator.Equals(input.RateLockHonoredIndicator))
                ) && 
                (
                    this.ReceivedBy == input.ReceivedBy ||
                    (this.ReceivedBy != null &&
                    this.ReceivedBy.Equals(input.ReceivedBy))
                ) && 
                (
                    this.RefinancingFee == input.RefinancingFee ||
                    (this.RefinancingFee != null &&
                    this.RefinancingFee.Equals(input.RefinancingFee))
                ) && 
                (
                    this.RefundableBy == input.RefundableBy ||
                    (this.RefundableBy != null &&
                    this.RefundableBy.Equals(input.RefundableBy))
                ) && 
                (
                    this.RefundableIndicator == input.RefundableIndicator ||
                    (this.RefundableIndicator != null &&
                    this.RefundableIndicator.Equals(input.RefundableIndicator))
                ) && 
                (
                    this.RefundableType == input.RefundableType ||
                    (this.RefundableType != null &&
                    this.RefundableType.Equals(input.RefundableType))
                ) && 
                (
                    this.RefundCondition1 == input.RefundCondition1 ||
                    (this.RefundCondition1 != null &&
                    this.RefundCondition1.Equals(input.RefundCondition1))
                ) && 
                (
                    this.RefundCondition2 == input.RefundCondition2 ||
                    (this.RefundCondition2 != null &&
                    this.RefundCondition2.Equals(input.RefundCondition2))
                ) && 
                (
                    this.RefundCondition3 == input.RefundCondition3 ||
                    (this.RefundCondition3 != null &&
                    this.RefundCondition3.Equals(input.RefundCondition3))
                ) && 
                (
                    this.RefundCondition4 == input.RefundCondition4 ||
                    (this.RefundCondition4 != null &&
                    this.RefundCondition4.Equals(input.RefundCondition4))
                ) && 
                (
                    this.RefundCondition5 == input.RefundCondition5 ||
                    (this.RefundCondition5 != null &&
                    this.RefundCondition5.Equals(input.RefundCondition5))
                ) && 
                (
                    this.RefundCondition6 == input.RefundCondition6 ||
                    (this.RefundCondition6 != null &&
                    this.RefundCondition6.Equals(input.RefundCondition6))
                ) && 
                (
                    this.ScheduleOfChargesEstimatedFinalIndicator == input.ScheduleOfChargesEstimatedFinalIndicator ||
                    (this.ScheduleOfChargesEstimatedFinalIndicator != null &&
                    this.ScheduleOfChargesEstimatedFinalIndicator.Equals(input.ScheduleOfChargesEstimatedFinalIndicator))
                ) && 
                (
                    this.ScRegulatoryAgencyType == input.ScRegulatoryAgencyType ||
                    (this.ScRegulatoryAgencyType != null &&
                    this.ScRegulatoryAgencyType.Equals(input.ScRegulatoryAgencyType))
                ) && 
                (
                    this.RegulatorAddress == input.RegulatorAddress ||
                    (this.RegulatorAddress != null &&
                    this.RegulatorAddress.Equals(input.RegulatorAddress))
                ) && 
                (
                    this.RegulatorWebAddress == input.RegulatorWebAddress ||
                    (this.RegulatorWebAddress != null &&
                    this.RegulatorWebAddress.Equals(input.RegulatorWebAddress))
                ) && 
                (
                    this.RegulatorCity == input.RegulatorCity ||
                    (this.RegulatorCity != null &&
                    this.RegulatorCity.Equals(input.RegulatorCity))
                ) && 
                (
                    this.RegulatorState == input.RegulatorState ||
                    (this.RegulatorState != null &&
                    this.RegulatorState.Equals(input.RegulatorState))
                ) && 
                (
                    this.RegulatorZipCode == input.RegulatorZipCode ||
                    (this.RegulatorZipCode != null &&
                    this.RegulatorZipCode.Equals(input.RegulatorZipCode))
                ) && 
                (
                    this.RegulatorPhone == input.RegulatorPhone ||
                    (this.RegulatorPhone != null &&
                    this.RegulatorPhone.Equals(input.RegulatorPhone))
                ) && 
                (
                    this.RegulatorTollFreePhone == input.RegulatorTollFreePhone ||
                    (this.RegulatorTollFreePhone != null &&
                    this.RegulatorTollFreePhone.Equals(input.RegulatorTollFreePhone))
                ) && 
                (
                    this.RegulatorMailingAddress == input.RegulatorMailingAddress ||
                    (this.RegulatorMailingAddress != null &&
                    this.RegulatorMailingAddress.Equals(input.RegulatorMailingAddress))
                ) && 
                (
                    this.RegulatorMailingCity == input.RegulatorMailingCity ||
                    (this.RegulatorMailingCity != null &&
                    this.RegulatorMailingCity.Equals(input.RegulatorMailingCity))
                ) && 
                (
                    this.RegulatorMailingState == input.RegulatorMailingState ||
                    (this.RegulatorMailingState != null &&
                    this.RegulatorMailingState.Equals(input.RegulatorMailingState))
                ) && 
                (
                    this.RegulatorMailingZipCode == input.RegulatorMailingZipCode ||
                    (this.RegulatorMailingZipCode != null &&
                    this.RegulatorMailingZipCode.Equals(input.RegulatorMailingZipCode))
                ) && 
                (
                    this.SelectDivisionFeesIndicator == input.SelectDivisionFeesIndicator ||
                    (this.SelectDivisionFeesIndicator != null &&
                    this.SelectDivisionFeesIndicator.Equals(input.SelectDivisionFeesIndicator))
                ) && 
                (
                    this.SelectPrimaryLenderIndicator == input.SelectPrimaryLenderIndicator ||
                    (this.SelectPrimaryLenderIndicator != null &&
                    this.SelectPrimaryLenderIndicator.Equals(input.SelectPrimaryLenderIndicator))
                ) && 
                (
                    this.SelectPrivateLenderIndicator == input.SelectPrivateLenderIndicator ||
                    (this.SelectPrivateLenderIndicator != null &&
                    this.SelectPrivateLenderIndicator.Equals(input.SelectPrivateLenderIndicator))
                ) && 
                (
                    this.ServicingFeeChargedAmount == input.ServicingFeeChargedAmount ||
                    (this.ServicingFeeChargedAmount != null &&
                    this.ServicingFeeChargedAmount.Equals(input.ServicingFeeChargedAmount))
                ) && 
                (
                    this.ServicingFeeChargedIndicator == input.ServicingFeeChargedIndicator ||
                    (this.ServicingFeeChargedIndicator != null &&
                    this.ServicingFeeChargedIndicator.Equals(input.ServicingFeeChargedIndicator))
                ) && 
                (
                    this.ServicingFeePaidBy == input.ServicingFeePaidBy ||
                    (this.ServicingFeePaidBy != null &&
                    this.ServicingFeePaidBy.Equals(input.ServicingFeePaidBy))
                ) && 
                (
                    this.ServicingFeePaidFrequence == input.ServicingFeePaidFrequence ||
                    (this.ServicingFeePaidFrequence != null &&
                    this.ServicingFeePaidFrequence.Equals(input.ServicingFeePaidFrequence))
                ) && 
                (
                    this.SignedByBorrowerIndicator == input.SignedByBorrowerIndicator ||
                    (this.SignedByBorrowerIndicator != null &&
                    this.SignedByBorrowerIndicator.Equals(input.SignedByBorrowerIndicator))
                ) && 
                (
                    this.SpecificARMIndicator == input.SpecificARMIndicator ||
                    (this.SpecificARMIndicator != null &&
                    this.SpecificARMIndicator.Equals(input.SpecificARMIndicator))
                ) && 
                (
                    this.SubmitToLenderIndicator == input.SubmitToLenderIndicator ||
                    (this.SubmitToLenderIndicator != null &&
                    this.SubmitToLenderIndicator.Equals(input.SubmitToLenderIndicator))
                ) && 
                (
                    this.TaxExemptAcquisitionCostCertificationAssessments == input.TaxExemptAcquisitionCostCertificationAssessments ||
                    (this.TaxExemptAcquisitionCostCertificationAssessments != null &&
                    this.TaxExemptAcquisitionCostCertificationAssessments.Equals(input.TaxExemptAcquisitionCostCertificationAssessments))
                ) && 
                (
                    this.TaxExemptAcquisitionCostCertificationOther == input.TaxExemptAcquisitionCostCertificationOther ||
                    (this.TaxExemptAcquisitionCostCertificationOther != null &&
                    this.TaxExemptAcquisitionCostCertificationOther.Equals(input.TaxExemptAcquisitionCostCertificationOther))
                ) && 
                (
                    this.TaxExemptAcquisitionCostCertificationOtherAmount == input.TaxExemptAcquisitionCostCertificationOtherAmount ||
                    (this.TaxExemptAcquisitionCostCertificationOtherAmount != null &&
                    this.TaxExemptAcquisitionCostCertificationOtherAmount.Equals(input.TaxExemptAcquisitionCostCertificationOtherAmount))
                ) && 
                (
                    this.TaxExemptAcquisitionCostCertificationOwnersTitleInsurance == input.TaxExemptAcquisitionCostCertificationOwnersTitleInsurance ||
                    (this.TaxExemptAcquisitionCostCertificationOwnersTitleInsurance != null &&
                    this.TaxExemptAcquisitionCostCertificationOwnersTitleInsurance.Equals(input.TaxExemptAcquisitionCostCertificationOwnersTitleInsurance))
                ) && 
                (
                    this.TaxExemptAcquisitionCostCertificationRealEstateCommission == input.TaxExemptAcquisitionCostCertificationRealEstateCommission ||
                    (this.TaxExemptAcquisitionCostCertificationRealEstateCommission != null &&
                    this.TaxExemptAcquisitionCostCertificationRealEstateCommission.Equals(input.TaxExemptAcquisitionCostCertificationRealEstateCommission))
                ) && 
                (
                    this.TaxExemptAcquisitionCostCertificationRepairsImprovements == input.TaxExemptAcquisitionCostCertificationRepairsImprovements ||
                    (this.TaxExemptAcquisitionCostCertificationRepairsImprovements != null &&
                    this.TaxExemptAcquisitionCostCertificationRepairsImprovements.Equals(input.TaxExemptAcquisitionCostCertificationRepairsImprovements))
                ) && 
                (
                    this.TaxExemptAcquisitionCostCertificationSurvey == input.TaxExemptAcquisitionCostCertificationSurvey ||
                    (this.TaxExemptAcquisitionCostCertificationSurvey != null &&
                    this.TaxExemptAcquisitionCostCertificationSurvey.Equals(input.TaxExemptAcquisitionCostCertificationSurvey))
                ) && 
                (
                    this.TaxExemptAcquisitionCostCertificationTotalAdjustments == input.TaxExemptAcquisitionCostCertificationTotalAdjustments ||
                    (this.TaxExemptAcquisitionCostCertificationTotalAdjustments != null &&
                    this.TaxExemptAcquisitionCostCertificationTotalAdjustments.Equals(input.TaxExemptAcquisitionCostCertificationTotalAdjustments))
                ) && 
                (
                    this.TermsChange == input.TermsChange ||
                    (this.TermsChange != null &&
                    this.TermsChange.Equals(input.TermsChange))
                ) && 
                (
                    this.TexasApplicationFee == input.TexasApplicationFee ||
                    (this.TexasApplicationFee != null &&
                    this.TexasApplicationFee.Equals(input.TexasApplicationFee))
                ) && 
                (
                    this.TexasAppraisalFee == input.TexasAppraisalFee ||
                    (this.TexasAppraisalFee != null &&
                    this.TexasAppraisalFee.Equals(input.TexasAppraisalFee))
                ) && 
                (
                    this.TexasCreditReportFee == input.TexasCreditReportFee ||
                    (this.TexasCreditReportFee != null &&
                    this.TexasCreditReportFee.Equals(input.TexasCreditReportFee))
                ) && 
                (
                    this.TexasOtherFee1 == input.TexasOtherFee1 ||
                    (this.TexasOtherFee1 != null &&
                    this.TexasOtherFee1.Equals(input.TexasOtherFee1))
                ) && 
                (
                    this.TexasOtherFee2 == input.TexasOtherFee2 ||
                    (this.TexasOtherFee2 != null &&
                    this.TexasOtherFee2.Equals(input.TexasOtherFee2))
                ) && 
                (
                    this.TexasOtherFeeContact1 == input.TexasOtherFeeContact1 ||
                    (this.TexasOtherFeeContact1 != null &&
                    this.TexasOtherFeeContact1.Equals(input.TexasOtherFeeContact1))
                ) && 
                (
                    this.TexasOtherFeeContact2 == input.TexasOtherFeeContact2 ||
                    (this.TexasOtherFeeContact2 != null &&
                    this.TexasOtherFeeContact2.Equals(input.TexasOtherFeeContact2))
                ) && 
                (
                    this.TexasProcessingFee == input.TexasProcessingFee ||
                    (this.TexasProcessingFee != null &&
                    this.TexasProcessingFee.Equals(input.TexasProcessingFee))
                ) && 
                (
                    this.ThirdPartyFee == input.ThirdPartyFee ||
                    (this.ThirdPartyFee != null &&
                    this.ThirdPartyFee.Equals(input.ThirdPartyFee))
                ) && 
                (
                    this.TotalFee == input.TotalFee ||
                    (this.TotalFee != null &&
                    this.TotalFee.Equals(input.TotalFee))
                ) && 
                (
                    this.TransferFeeChargedAmount == input.TransferFeeChargedAmount ||
                    (this.TransferFeeChargedAmount != null &&
                    this.TransferFeeChargedAmount.Equals(input.TransferFeeChargedAmount))
                ) && 
                (
                    this.TransferFeeChargedIndicator == input.TransferFeeChargedIndicator ||
                    (this.TransferFeeChargedIndicator != null &&
                    this.TransferFeeChargedIndicator.Equals(input.TransferFeeChargedIndicator))
                ) && 
                (
                    this.TransferFeePaidBy == input.TransferFeePaidBy ||
                    (this.TransferFeePaidBy != null &&
                    this.TransferFeePaidBy.Equals(input.TransferFeePaidBy))
                ) && 
                (
                    this.TxVeteransLandBoardIndicator == input.TxVeteransLandBoardIndicator ||
                    (this.TxVeteransLandBoardIndicator != null &&
                    this.TxVeteransLandBoardIndicator.Equals(input.TxVeteransLandBoardIndicator))
                ) && 
                (
                    this.TypeOfProperty == input.TypeOfProperty ||
                    (this.TypeOfProperty != null &&
                    this.TypeOfProperty.Equals(input.TypeOfProperty))
                ) && 
                (
                    this.UnderwritingContact == input.UnderwritingContact ||
                    (this.UnderwritingContact != null &&
                    this.UnderwritingContact.Equals(input.UnderwritingContact))
                ) && 
                (
                    this.UnderwritingFee == input.UnderwritingFee ||
                    (this.UnderwritingFee != null &&
                    this.UnderwritingFee.Equals(input.UnderwritingFee))
                ) && 
                (
                    this.YSPChargedAmount == input.YSPChargedAmount ||
                    (this.YSPChargedAmount != null &&
                    this.YSPChargedAmount.Equals(input.YSPChargedAmount))
                ) && 
                (
                    this.YSPChargedIndicator == input.YSPChargedIndicator ||
                    (this.YSPChargedIndicator != null &&
                    this.YSPChargedIndicator.Equals(input.YSPChargedIndicator))
                ) && 
                (
                    this.YSPDecreasesRate == input.YSPDecreasesRate ||
                    (this.YSPDecreasesRate != null &&
                    this.YSPDecreasesRate.Equals(input.YSPDecreasesRate))
                ) && 
                (
                    this.YSPIncreasesRate == input.YSPIncreasesRate ||
                    (this.YSPIncreasesRate != null &&
                    this.YSPIncreasesRate.Equals(input.YSPIncreasesRate))
                ) && 
                (
                    this.YSPInterestRateImpactedStatus == input.YSPInterestRateImpactedStatus ||
                    (this.YSPInterestRateImpactedStatus != null &&
                    this.YSPInterestRateImpactedStatus.Equals(input.YSPInterestRateImpactedStatus))
                ) && 
                (
                    this.YSPPaidBy == input.YSPPaidBy ||
                    (this.YSPPaidBy != null &&
                    this.YSPPaidBy.Equals(input.YSPPaidBy))
                ) && 
                (
                    this.InLicensedNo == input.InLicensedNo ||
                    (this.InLicensedNo != null &&
                    this.InLicensedNo.Equals(input.InLicensedNo))
                ) && 
                (
                    this.InLicensedType == input.InLicensedType ||
                    (this.InLicensedType != null &&
                    this.InLicensedType.Equals(input.InLicensedType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AcceptedByBorrowerIndicator != null)
                    hashCode = hashCode * 59 + this.AcceptedByBorrowerIndicator.GetHashCode();
                if (this.AcceptedDate != null)
                    hashCode = hashCode * 59 + this.AcceptedDate.GetHashCode();
                if (this.ActingOtherDescription1 != null)
                    hashCode = hashCode * 59 + this.ActingOtherDescription1.GetHashCode();
                if (this.ActingOtherDescription2 != null)
                    hashCode = hashCode * 59 + this.ActingOtherDescription2.GetHashCode();
                if (this.ActingOthersIndicator != null)
                    hashCode = hashCode * 59 + this.ActingOthersIndicator.GetHashCode();
                if (this.AdvFeeAgmtInEfctNumDay != null)
                    hashCode = hashCode * 59 + this.AdvFeeAgmtInEfctNumDay.GetHashCode();
                if (this.AdvisoryCondition1 != null)
                    hashCode = hashCode * 59 + this.AdvisoryCondition1.GetHashCode();
                if (this.AdvisoryCondition2 != null)
                    hashCode = hashCode * 59 + this.AdvisoryCondition2.GetHashCode();
                if (this.AdvisoryCondition3 != null)
                    hashCode = hashCode * 59 + this.AdvisoryCondition3.GetHashCode();
                if (this.AdvisoryCondition4 != null)
                    hashCode = hashCode * 59 + this.AdvisoryCondition4.GetHashCode();
                if (this.AmendedAcquisitionCost != null)
                    hashCode = hashCode * 59 + this.AmendedAcquisitionCost.GetHashCode();
                if (this.ApplicationDate != null)
                    hashCode = hashCode * 59 + this.ApplicationDate.GetHashCode();
                if (this.AppraisalContact != null)
                    hashCode = hashCode * 59 + this.AppraisalContact.GetHashCode();
                if (this.AppraisalDeposit != null)
                    hashCode = hashCode * 59 + this.AppraisalDeposit.GetHashCode();
                if (this.Areas != null)
                    hashCode = hashCode * 59 + this.Areas.GetHashCode();
                if (this.AsAttorneyIndicator != null)
                    hashCode = hashCode * 59 + this.AsAttorneyIndicator.GetHashCode();
                if (this.AsRealBrokerIndicator != null)
                    hashCode = hashCode * 59 + this.AsRealBrokerIndicator.GetHashCode();
                if (this.AttorneyForTheBuyerIndicator != null)
                    hashCode = hashCode * 59 + this.AttorneyForTheBuyerIndicator.GetHashCode();
                if (this.AttorneyForTheLenderIndicator != null)
                    hashCode = hashCode * 59 + this.AttorneyForTheLenderIndicator.GetHashCode();
                if (this.AttorneyForTheSellerIndicator != null)
                    hashCode = hashCode * 59 + this.AttorneyForTheSellerIndicator.GetHashCode();
                if (this.AZCmplBlankSpcsDoc1BlankFldDesc1 != null)
                    hashCode = hashCode * 59 + this.AZCmplBlankSpcsDoc1BlankFldDesc1.GetHashCode();
                if (this.AZCmplBlankSpcsDoc1BlankFldDesc2 != null)
                    hashCode = hashCode * 59 + this.AZCmplBlankSpcsDoc1BlankFldDesc2.GetHashCode();
                if (this.AZCmplBlankSpcsDoc1BlankFldDesc3 != null)
                    hashCode = hashCode * 59 + this.AZCmplBlankSpcsDoc1BlankFldDesc3.GetHashCode();
                if (this.AZCmplBlankSpcsDoc1Nm != null)
                    hashCode = hashCode * 59 + this.AZCmplBlankSpcsDoc1Nm.GetHashCode();
                if (this.AZCmplBlankSpcsDoc2Nm != null)
                    hashCode = hashCode * 59 + this.AZCmplBlankSpcsDoc2Nm.GetHashCode();
                if (this.AZCmplBlankSpcsDoc3Nm != null)
                    hashCode = hashCode * 59 + this.AZCmplBlankSpcsDoc3Nm.GetHashCode();
                if (this.BasedOnOthersDescription != null)
                    hashCode = hashCode * 59 + this.BasedOnOthersDescription.GetHashCode();
                if (this.BasedOnOthersIndicator != null)
                    hashCode = hashCode * 59 + this.BasedOnOthersIndicator.GetHashCode();
                if (this.BasedOnWholesaleOptionsIndicator != null)
                    hashCode = hashCode * 59 + this.BasedOnWholesaleOptionsIndicator.GetHashCode();
                if (this.BorrowerElectsEstablishEscrowAmount != null)
                    hashCode = hashCode * 59 + this.BorrowerElectsEstablishEscrowAmount.GetHashCode();
                if (this.BorrowerElectsEstablishEscrowIndicator != null)
                    hashCode = hashCode * 59 + this.BorrowerElectsEstablishEscrowIndicator.GetHashCode();
                if (this.BrokerageFeeAddition1 != null)
                    hashCode = hashCode * 59 + this.BrokerageFeeAddition1.GetHashCode();
                if (this.BrokerageFeeAddition2 != null)
                    hashCode = hashCode * 59 + this.BrokerageFeeAddition2.GetHashCode();
                if (this.BrokerageFeeAddition3 != null)
                    hashCode = hashCode * 59 + this.BrokerageFeeAddition3.GetHashCode();
                if (this.BrokerageFeeAmount1 != null)
                    hashCode = hashCode * 59 + this.BrokerageFeeAmount1.GetHashCode();
                if (this.BrokerageFeeAmount2 != null)
                    hashCode = hashCode * 59 + this.BrokerageFeeAmount2.GetHashCode();
                if (this.BrokerageFeeAmount3 != null)
                    hashCode = hashCode * 59 + this.BrokerageFeeAmount3.GetHashCode();
                if (this.BrokerageFeeDays != null)
                    hashCode = hashCode * 59 + this.BrokerageFeeDays.GetHashCode();
                if (this.BrokerageFeePercent1 != null)
                    hashCode = hashCode * 59 + this.BrokerageFeePercent1.GetHashCode();
                if (this.BrokerageFeePercent2 != null)
                    hashCode = hashCode * 59 + this.BrokerageFeePercent2.GetHashCode();
                if (this.BrokerageFeePercent3 != null)
                    hashCode = hashCode * 59 + this.BrokerageFeePercent3.GetHashCode();
                if (this.BrokerAuthorizedSigningRepName != null)
                    hashCode = hashCode * 59 + this.BrokerAuthorizedSigningRepName.GetHashCode();
                if (this.BrokerAuthorizedSigningRepTitle != null)
                    hashCode = hashCode * 59 + this.BrokerAuthorizedSigningRepTitle.GetHashCode();
                if (this.BrokerForTheSeller != null)
                    hashCode = hashCode * 59 + this.BrokerForTheSeller.GetHashCode();
                if (this.BrokerLicense != null)
                    hashCode = hashCode * 59 + this.BrokerLicense.GetHashCode();
                if (this.BrokerName != null)
                    hashCode = hashCode * 59 + this.BrokerName.GetHashCode();
                if (this.BrokerPayAddition != null)
                    hashCode = hashCode * 59 + this.BrokerPayAddition.GetHashCode();
                if (this.BrokerPayAmount != null)
                    hashCode = hashCode * 59 + this.BrokerPayAmount.GetHashCode();
                if (this.BrokerPayIndicator != null)
                    hashCode = hashCode * 59 + this.BrokerPayIndicator.GetHashCode();
                if (this.BrokerPayPercent != null)
                    hashCode = hashCode * 59 + this.BrokerPayPercent.GetHashCode();
                if (this.CHARMBookletIndicator != null)
                    hashCode = hashCode * 59 + this.CHARMBookletIndicator.GetHashCode();
                if (this.CheckPayableTo != null)
                    hashCode = hashCode * 59 + this.CheckPayableTo.GetHashCode();
                if (this.CommitmentAmount != null)
                    hashCode = hashCode * 59 + this.CommitmentAmount.GetHashCode();
                if (this.CommitmentCondition1 != null)
                    hashCode = hashCode * 59 + this.CommitmentCondition1.GetHashCode();
                if (this.CommitmentCondition2 != null)
                    hashCode = hashCode * 59 + this.CommitmentCondition2.GetHashCode();
                if (this.CommitmentFee != null)
                    hashCode = hashCode * 59 + this.CommitmentFee.GetHashCode();
                if (this.CommitmentPercent != null)
                    hashCode = hashCode * 59 + this.CommitmentPercent.GetHashCode();
                if (this.CompensationAddition != null)
                    hashCode = hashCode * 59 + this.CompensationAddition.GetHashCode();
                if (this.CompensationPercent != null)
                    hashCode = hashCode * 59 + this.CompensationPercent.GetHashCode();
                if (this.CreditDeposit != null)
                    hashCode = hashCode * 59 + this.CreditDeposit.GetHashCode();
                if (this.CreditIsUsedForReason != null)
                    hashCode = hashCode * 59 + this.CreditIsUsedForReason.GetHashCode();
                if (this.CreditReportContact != null)
                    hashCode = hashCode * 59 + this.CreditReportContact.GetHashCode();
                if (this.DaysBeforeClosing != null)
                    hashCode = hashCode * 59 + this.DaysBeforeClosing.GetHashCode();
                if (this.DepositReceipt != null)
                    hashCode = hashCode * 59 + this.DepositReceipt.GetHashCode();
                if (this.DepositRefundableIndicator != null)
                    hashCode = hashCode * 59 + this.DepositRefundableIndicator.GetHashCode();
                if (this.DirectContact != null)
                    hashCode = hashCode * 59 + this.DirectContact.GetHashCode();
                if (this.DirectPayAmount != null)
                    hashCode = hashCode * 59 + this.DirectPayAmount.GetHashCode();
                if (this.DirectPayClosing != null)
                    hashCode = hashCode * 59 + this.DirectPayClosing.GetHashCode();
                if (this.DirectPayCommitment != null)
                    hashCode = hashCode * 59 + this.DirectPayCommitment.GetHashCode();
                if (this.DirectPayIndicator != null)
                    hashCode = hashCode * 59 + this.DirectPayIndicator.GetHashCode();
                if (this.DirectPayPercent != null)
                    hashCode = hashCode * 59 + this.DirectPayPercent.GetHashCode();
                if (this.DisclosureDeliveredBy != null)
                    hashCode = hashCode * 59 + this.DisclosureDeliveredBy.GetHashCode();
                if (this.DisclosureDeliveredByOtherMethod != null)
                    hashCode = hashCode * 59 + this.DisclosureDeliveredByOtherMethod.GetHashCode();
                if (this.DisclosureDeliveredDate != null)
                    hashCode = hashCode * 59 + this.DisclosureDeliveredDate.GetHashCode();
                if (this.EstimatedChargeShownOnGFEIndicator != null)
                    hashCode = hashCode * 59 + this.EstimatedChargeShownOnGFEIndicator.GetHashCode();
                if (this.ExpirationDate != null)
                    hashCode = hashCode * 59 + this.ExpirationDate.GetHashCode();
                if (this.FederallySubsidizedAmount != null)
                    hashCode = hashCode * 59 + this.FederallySubsidizedAmount.GetHashCode();
                if (this.FederallySubsidizedAmountPercentage != null)
                    hashCode = hashCode * 59 + this.FederallySubsidizedAmountPercentage.GetHashCode();
                if (this.FeeReceived1 != null)
                    hashCode = hashCode * 59 + this.FeeReceived1.GetHashCode();
                if (this.FeeReceived2 != null)
                    hashCode = hashCode * 59 + this.FeeReceived2.GetHashCode();
                if (this.FeeReceivedByLender != null)
                    hashCode = hashCode * 59 + this.FeeReceivedByLender.GetHashCode();
                if (this.FeesReceiving != null)
                    hashCode = hashCode * 59 + this.FeesReceiving.GetHashCode();
                if (this.FloridaApplicationFee != null)
                    hashCode = hashCode * 59 + this.FloridaApplicationFee.GetHashCode();
                if (this.FloridaOtherFee1 != null)
                    hashCode = hashCode * 59 + this.FloridaOtherFee1.GetHashCode();
                if (this.FloridaOtherFee2 != null)
                    hashCode = hashCode * 59 + this.FloridaOtherFee2.GetHashCode();
                if (this.FloridaOtherFeeTo1 != null)
                    hashCode = hashCode * 59 + this.FloridaOtherFeeTo1.GetHashCode();
                if (this.FloridaOtherFeeTo2 != null)
                    hashCode = hashCode * 59 + this.FloridaOtherFeeTo2.GetHashCode();
                if (this.FloridaOtherFeeTo3 != null)
                    hashCode = hashCode * 59 + this.FloridaOtherFeeTo3.GetHashCode();
                if (this.FloridaOtherFeeTo4 != null)
                    hashCode = hashCode * 59 + this.FloridaOtherFeeTo4.GetHashCode();
                if (this.FurtherFeesEarnedByMortgageBroker != null)
                    hashCode = hashCode * 59 + this.FurtherFeesEarnedByMortgageBroker.GetHashCode();
                if (this.GFEFeeReceived1 != null)
                    hashCode = hashCode * 59 + this.GFEFeeReceived1.GetHashCode();
                if (this.GFEFeeReceived2 != null)
                    hashCode = hashCode * 59 + this.GFEFeeReceived2.GetHashCode();
                if (this.HUDBookletIndicator != null)
                    hashCode = hashCode * 59 + this.HUDBookletIndicator.GetHashCode();
                if (this.IndependentContractorIndicator != null)
                    hashCode = hashCode * 59 + this.IndependentContractorIndicator.GetHashCode();
                if (this.IndexUsed != null)
                    hashCode = hashCode * 59 + this.IndexUsed.GetHashCode();
                if (this.InformationAboutTheIndexCanBeFound != null)
                    hashCode = hashCode * 59 + this.InformationAboutTheIndexCanBeFound.GetHashCode();
                if (this.IsEstimateIndicator != null)
                    hashCode = hashCode * 59 + this.IsEstimateIndicator.GetHashCode();
                if (this.KsUcccElectionIndicator != null)
                    hashCode = hashCode * 59 + this.KsUcccElectionIndicator.GetHashCode();
                if (this.KyHomeSolicationLoanIndicator != null)
                    hashCode = hashCode * 59 + this.KyHomeSolicationLoanIndicator.GetHashCode();
                if (this.LeaseAgreementDate != null)
                    hashCode = hashCode * 59 + this.LeaseAgreementDate.GetHashCode();
                if (this.LenderDate != null)
                    hashCode = hashCode * 59 + this.LenderDate.GetHashCode();
                if (this.LenderName != null)
                    hashCode = hashCode * 59 + this.LenderName.GetHashCode();
                if (this.LenderPaid != null)
                    hashCode = hashCode * 59 + this.LenderPaid.GetHashCode();
                if (this.LenderPayAmount != null)
                    hashCode = hashCode * 59 + this.LenderPayAmount.GetHashCode();
                if (this.LenderPayIndicator != null)
                    hashCode = hashCode * 59 + this.LenderPayIndicator.GetHashCode();
                if (this.LenderPayMaxPoint != null)
                    hashCode = hashCode * 59 + this.LenderPayMaxPoint.GetHashCode();
                if (this.LenderPayPercent != null)
                    hashCode = hashCode * 59 + this.LenderPayPercent.GetHashCode();
                if (this.LenderPayPoint != null)
                    hashCode = hashCode * 59 + this.LenderPayPoint.GetHashCode();
                if (this.LenderPayUnknownIndicator != null)
                    hashCode = hashCode * 59 + this.LenderPayUnknownIndicator.GetHashCode();
                if (this.LenderStatus != null)
                    hashCode = hashCode * 59 + this.LenderStatus.GetHashCode();
                if (this.LessorName != null)
                    hashCode = hashCode * 59 + this.LessorName.GetHashCode();
                if (this.LoanTermsFixedThroughDateofLoanClosingIndicator != null)
                    hashCode = hashCode * 59 + this.LoanTermsFixedThroughDateofLoanClosingIndicator.GetHashCode();
                if (this.LockInFee != null)
                    hashCode = hashCode * 59 + this.LockInFee.GetHashCode();
                if (this.MethodDescription != null)
                    hashCode = hashCode * 59 + this.MethodDescription.GetHashCode();
                if (this.MethodDetermine != null)
                    hashCode = hashCode * 59 + this.MethodDetermine.GetHashCode();
                if (this.MortgageAgreementIndicator != null)
                    hashCode = hashCode * 59 + this.MortgageAgreementIndicator.GetHashCode();
                if (this.MtgBrokerLicense != null)
                    hashCode = hashCode * 59 + this.MtgBrokerLicense.GetHashCode();
                if (this.NameOfLicensee != null)
                    hashCode = hashCode * 59 + this.NameOfLicensee.GetHashCode();
                if (this.NewMoneyAmount != null)
                    hashCode = hashCode * 59 + this.NewMoneyAmount.GetHashCode();
                if (this.NewYorkApplicationFee != null)
                    hashCode = hashCode * 59 + this.NewYorkApplicationFee.GetHashCode();
                if (this.NewYorkAppraisalFee != null)
                    hashCode = hashCode * 59 + this.NewYorkAppraisalFee.GetHashCode();
                if (this.NewYorkCreditReportFee != null)
                    hashCode = hashCode * 59 + this.NewYorkCreditReportFee.GetHashCode();
                if (this.NewYorkFees != null)
                    hashCode = hashCode * 59 + this.NewYorkFees.GetHashCode();
                if (this.NewYorkPrimaryLenders != null)
                    hashCode = hashCode * 59 + this.NewYorkPrimaryLenders.GetHashCode();
                if (this.NewYorkProcessingFee != null)
                    hashCode = hashCode * 59 + this.NewYorkProcessingFee.GetHashCode();
                if (this.NotRefundableAmount != null)
                    hashCode = hashCode * 59 + this.NotRefundableAmount.GetHashCode();
                if (this.OfferRetailPriceIndicator != null)
                    hashCode = hashCode * 59 + this.OfferRetailPriceIndicator.GetHashCode();
                if (this.OriginalAcquisitionCost != null)
                    hashCode = hashCode * 59 + this.OriginalAcquisitionCost.GetHashCode();
                if (this.OriginationFeeChargedAmount != null)
                    hashCode = hashCode * 59 + this.OriginationFeeChargedAmount.GetHashCode();
                if (this.OriginationFeeChargedIndicator != null)
                    hashCode = hashCode * 59 + this.OriginationFeeChargedIndicator.GetHashCode();
                if (this.OriginationFeeDecreasesRate != null)
                    hashCode = hashCode * 59 + this.OriginationFeeDecreasesRate.GetHashCode();
                if (this.OriginationFeeIncreasesRate != null)
                    hashCode = hashCode * 59 + this.OriginationFeeIncreasesRate.GetHashCode();
                if (this.OriginationFeeInterestRateImpactedStatus != null)
                    hashCode = hashCode * 59 + this.OriginationFeeInterestRateImpactedStatus.GetHashCode();
                if (this.OriginationFeePaidBy != null)
                    hashCode = hashCode * 59 + this.OriginationFeePaidBy.GetHashCode();
                if (this.PaidByBorrower != null)
                    hashCode = hashCode * 59 + this.PaidByBorrower.GetHashCode();
                if (this.PaidByLender != null)
                    hashCode = hashCode * 59 + this.PaidByLender.GetHashCode();
                if (this.PaidByOther1 != null)
                    hashCode = hashCode * 59 + this.PaidByOther1.GetHashCode();
                if (this.PaidByOther2 != null)
                    hashCode = hashCode * 59 + this.PaidByOther2.GetHashCode();
                if (this.PaidByOtherDescription1 != null)
                    hashCode = hashCode * 59 + this.PaidByOtherDescription1.GetHashCode();
                if (this.PaidByOtherDescription2 != null)
                    hashCode = hashCode * 59 + this.PaidByOtherDescription2.GetHashCode();
                if (this.PreviousMortgageAmountOne != null)
                    hashCode = hashCode * 59 + this.PreviousMortgageAmountOne.GetHashCode();
                if (this.PreviousMortgageAmountTwo != null)
                    hashCode = hashCode * 59 + this.PreviousMortgageAmountTwo.GetHashCode();
                if (this.PrintCertificationOfCosts != null)
                    hashCode = hashCode * 59 + this.PrintCertificationOfCosts.GetHashCode();
                if (this.PrintInterestRateReductionRider != null)
                    hashCode = hashCode * 59 + this.PrintInterestRateReductionRider.GetHashCode();
                if (this.PrintMDDeliveryIndicator != null)
                    hashCode = hashCode * 59 + this.PrintMDDeliveryIndicator.GetHashCode();
                if (this.ProvidedBy != null)
                    hashCode = hashCode * 59 + this.ProvidedBy.GetHashCode();
                if (this.QuestionContact != null)
                    hashCode = hashCode * 59 + this.QuestionContact.GetHashCode();
                if (this.QuestionContactPhone != null)
                    hashCode = hashCode * 59 + this.QuestionContactPhone.GetHashCode();
                if (this.QuestionContactTollFree != null)
                    hashCode = hashCode * 59 + this.QuestionContactTollFree.GetHashCode();
                if (this.RateLockHonoredIndicator != null)
                    hashCode = hashCode * 59 + this.RateLockHonoredIndicator.GetHashCode();
                if (this.ReceivedBy != null)
                    hashCode = hashCode * 59 + this.ReceivedBy.GetHashCode();
                if (this.RefinancingFee != null)
                    hashCode = hashCode * 59 + this.RefinancingFee.GetHashCode();
                if (this.RefundableBy != null)
                    hashCode = hashCode * 59 + this.RefundableBy.GetHashCode();
                if (this.RefundableIndicator != null)
                    hashCode = hashCode * 59 + this.RefundableIndicator.GetHashCode();
                if (this.RefundableType != null)
                    hashCode = hashCode * 59 + this.RefundableType.GetHashCode();
                if (this.RefundCondition1 != null)
                    hashCode = hashCode * 59 + this.RefundCondition1.GetHashCode();
                if (this.RefundCondition2 != null)
                    hashCode = hashCode * 59 + this.RefundCondition2.GetHashCode();
                if (this.RefundCondition3 != null)
                    hashCode = hashCode * 59 + this.RefundCondition3.GetHashCode();
                if (this.RefundCondition4 != null)
                    hashCode = hashCode * 59 + this.RefundCondition4.GetHashCode();
                if (this.RefundCondition5 != null)
                    hashCode = hashCode * 59 + this.RefundCondition5.GetHashCode();
                if (this.RefundCondition6 != null)
                    hashCode = hashCode * 59 + this.RefundCondition6.GetHashCode();
                if (this.ScheduleOfChargesEstimatedFinalIndicator != null)
                    hashCode = hashCode * 59 + this.ScheduleOfChargesEstimatedFinalIndicator.GetHashCode();
                if (this.ScRegulatoryAgencyType != null)
                    hashCode = hashCode * 59 + this.ScRegulatoryAgencyType.GetHashCode();
                if (this.RegulatorAddress != null)
                    hashCode = hashCode * 59 + this.RegulatorAddress.GetHashCode();
                if (this.RegulatorWebAddress != null)
                    hashCode = hashCode * 59 + this.RegulatorWebAddress.GetHashCode();
                if (this.RegulatorCity != null)
                    hashCode = hashCode * 59 + this.RegulatorCity.GetHashCode();
                if (this.RegulatorState != null)
                    hashCode = hashCode * 59 + this.RegulatorState.GetHashCode();
                if (this.RegulatorZipCode != null)
                    hashCode = hashCode * 59 + this.RegulatorZipCode.GetHashCode();
                if (this.RegulatorPhone != null)
                    hashCode = hashCode * 59 + this.RegulatorPhone.GetHashCode();
                if (this.RegulatorTollFreePhone != null)
                    hashCode = hashCode * 59 + this.RegulatorTollFreePhone.GetHashCode();
                if (this.RegulatorMailingAddress != null)
                    hashCode = hashCode * 59 + this.RegulatorMailingAddress.GetHashCode();
                if (this.RegulatorMailingCity != null)
                    hashCode = hashCode * 59 + this.RegulatorMailingCity.GetHashCode();
                if (this.RegulatorMailingState != null)
                    hashCode = hashCode * 59 + this.RegulatorMailingState.GetHashCode();
                if (this.RegulatorMailingZipCode != null)
                    hashCode = hashCode * 59 + this.RegulatorMailingZipCode.GetHashCode();
                if (this.SelectDivisionFeesIndicator != null)
                    hashCode = hashCode * 59 + this.SelectDivisionFeesIndicator.GetHashCode();
                if (this.SelectPrimaryLenderIndicator != null)
                    hashCode = hashCode * 59 + this.SelectPrimaryLenderIndicator.GetHashCode();
                if (this.SelectPrivateLenderIndicator != null)
                    hashCode = hashCode * 59 + this.SelectPrivateLenderIndicator.GetHashCode();
                if (this.ServicingFeeChargedAmount != null)
                    hashCode = hashCode * 59 + this.ServicingFeeChargedAmount.GetHashCode();
                if (this.ServicingFeeChargedIndicator != null)
                    hashCode = hashCode * 59 + this.ServicingFeeChargedIndicator.GetHashCode();
                if (this.ServicingFeePaidBy != null)
                    hashCode = hashCode * 59 + this.ServicingFeePaidBy.GetHashCode();
                if (this.ServicingFeePaidFrequence != null)
                    hashCode = hashCode * 59 + this.ServicingFeePaidFrequence.GetHashCode();
                if (this.SignedByBorrowerIndicator != null)
                    hashCode = hashCode * 59 + this.SignedByBorrowerIndicator.GetHashCode();
                if (this.SpecificARMIndicator != null)
                    hashCode = hashCode * 59 + this.SpecificARMIndicator.GetHashCode();
                if (this.SubmitToLenderIndicator != null)
                    hashCode = hashCode * 59 + this.SubmitToLenderIndicator.GetHashCode();
                if (this.TaxExemptAcquisitionCostCertificationAssessments != null)
                    hashCode = hashCode * 59 + this.TaxExemptAcquisitionCostCertificationAssessments.GetHashCode();
                if (this.TaxExemptAcquisitionCostCertificationOther != null)
                    hashCode = hashCode * 59 + this.TaxExemptAcquisitionCostCertificationOther.GetHashCode();
                if (this.TaxExemptAcquisitionCostCertificationOtherAmount != null)
                    hashCode = hashCode * 59 + this.TaxExemptAcquisitionCostCertificationOtherAmount.GetHashCode();
                if (this.TaxExemptAcquisitionCostCertificationOwnersTitleInsurance != null)
                    hashCode = hashCode * 59 + this.TaxExemptAcquisitionCostCertificationOwnersTitleInsurance.GetHashCode();
                if (this.TaxExemptAcquisitionCostCertificationRealEstateCommission != null)
                    hashCode = hashCode * 59 + this.TaxExemptAcquisitionCostCertificationRealEstateCommission.GetHashCode();
                if (this.TaxExemptAcquisitionCostCertificationRepairsImprovements != null)
                    hashCode = hashCode * 59 + this.TaxExemptAcquisitionCostCertificationRepairsImprovements.GetHashCode();
                if (this.TaxExemptAcquisitionCostCertificationSurvey != null)
                    hashCode = hashCode * 59 + this.TaxExemptAcquisitionCostCertificationSurvey.GetHashCode();
                if (this.TaxExemptAcquisitionCostCertificationTotalAdjustments != null)
                    hashCode = hashCode * 59 + this.TaxExemptAcquisitionCostCertificationTotalAdjustments.GetHashCode();
                if (this.TermsChange != null)
                    hashCode = hashCode * 59 + this.TermsChange.GetHashCode();
                if (this.TexasApplicationFee != null)
                    hashCode = hashCode * 59 + this.TexasApplicationFee.GetHashCode();
                if (this.TexasAppraisalFee != null)
                    hashCode = hashCode * 59 + this.TexasAppraisalFee.GetHashCode();
                if (this.TexasCreditReportFee != null)
                    hashCode = hashCode * 59 + this.TexasCreditReportFee.GetHashCode();
                if (this.TexasOtherFee1 != null)
                    hashCode = hashCode * 59 + this.TexasOtherFee1.GetHashCode();
                if (this.TexasOtherFee2 != null)
                    hashCode = hashCode * 59 + this.TexasOtherFee2.GetHashCode();
                if (this.TexasOtherFeeContact1 != null)
                    hashCode = hashCode * 59 + this.TexasOtherFeeContact1.GetHashCode();
                if (this.TexasOtherFeeContact2 != null)
                    hashCode = hashCode * 59 + this.TexasOtherFeeContact2.GetHashCode();
                if (this.TexasProcessingFee != null)
                    hashCode = hashCode * 59 + this.TexasProcessingFee.GetHashCode();
                if (this.ThirdPartyFee != null)
                    hashCode = hashCode * 59 + this.ThirdPartyFee.GetHashCode();
                if (this.TotalFee != null)
                    hashCode = hashCode * 59 + this.TotalFee.GetHashCode();
                if (this.TransferFeeChargedAmount != null)
                    hashCode = hashCode * 59 + this.TransferFeeChargedAmount.GetHashCode();
                if (this.TransferFeeChargedIndicator != null)
                    hashCode = hashCode * 59 + this.TransferFeeChargedIndicator.GetHashCode();
                if (this.TransferFeePaidBy != null)
                    hashCode = hashCode * 59 + this.TransferFeePaidBy.GetHashCode();
                if (this.TxVeteransLandBoardIndicator != null)
                    hashCode = hashCode * 59 + this.TxVeteransLandBoardIndicator.GetHashCode();
                if (this.TypeOfProperty != null)
                    hashCode = hashCode * 59 + this.TypeOfProperty.GetHashCode();
                if (this.UnderwritingContact != null)
                    hashCode = hashCode * 59 + this.UnderwritingContact.GetHashCode();
                if (this.UnderwritingFee != null)
                    hashCode = hashCode * 59 + this.UnderwritingFee.GetHashCode();
                if (this.YSPChargedAmount != null)
                    hashCode = hashCode * 59 + this.YSPChargedAmount.GetHashCode();
                if (this.YSPChargedIndicator != null)
                    hashCode = hashCode * 59 + this.YSPChargedIndicator.GetHashCode();
                if (this.YSPDecreasesRate != null)
                    hashCode = hashCode * 59 + this.YSPDecreasesRate.GetHashCode();
                if (this.YSPIncreasesRate != null)
                    hashCode = hashCode * 59 + this.YSPIncreasesRate.GetHashCode();
                if (this.YSPInterestRateImpactedStatus != null)
                    hashCode = hashCode * 59 + this.YSPInterestRateImpactedStatus.GetHashCode();
                if (this.YSPPaidBy != null)
                    hashCode = hashCode * 59 + this.YSPPaidBy.GetHashCode();
                if (this.InLicensedNo != null)
                    hashCode = hashCode * 59 + this.InLicensedNo.GetHashCode();
                if (this.InLicensedType != null)
                    hashCode = hashCode * 59 + this.InLicensedType.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
