/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractServiceProviderContacts
    /// </summary>
    [DataContract]
    public partial class LoanContractServiceProviderContacts :  IEquatable<LoanContractServiceProviderContacts>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name="city", EmitDefaultValue=false)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets Cost
        /// </summary>
        [DataMember(Name="cost", EmitDefaultValue=false)]
        public double? Cost { get; set; }

        /// <summary>
        /// Gets or Sets LineItemNumber
        /// </summary>
        [DataMember(Name="lineItemNumber", EmitDefaultValue=false)]
        public string LineItemNumber { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name="phone", EmitDefaultValue=false)]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets PostalCode
        /// </summary>
        [DataMember(Name="postalCode", EmitDefaultValue=false)]
        public string PostalCode { get; set; }

        /// <summary>
        /// Gets or Sets ProviderIndex
        /// </summary>
        [DataMember(Name="providerIndex", EmitDefaultValue=false)]
        public int? ProviderIndex { get; set; }

        /// <summary>
        /// Gets or Sets ProviderName
        /// </summary>
        [DataMember(Name="providerName", EmitDefaultValue=false)]
        public string ProviderName { get; set; }

        /// <summary>
        /// Gets or Sets Relationship
        /// </summary>
        [DataMember(Name="relationship", EmitDefaultValue=false)]
        public string Relationship { get; set; }

        /// <summary>
        /// Gets or Sets ServiceProvided
        /// </summary>
        [DataMember(Name="serviceProvided", EmitDefaultValue=false)]
        public string ServiceProvided { get; set; }

        /// <summary>
        /// Gets or Sets ServiceProviderId
        /// </summary>
        [DataMember(Name="serviceProviderId", EmitDefaultValue=false)]
        public string ServiceProviderId { get; set; }

        /// <summary>
        /// Gets or Sets ServiceType
        /// </summary>
        [DataMember(Name="serviceType", EmitDefaultValue=false)]
        public string ServiceType { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets WebUrl
        /// </summary>
        [DataMember(Name="webUrl", EmitDefaultValue=false)]
        public string WebUrl { get; set; }

        /// <summary>
        /// Gets or Sets ShopFor
        /// </summary>
        [DataMember(Name="shopFor", EmitDefaultValue=false)]
        public bool? ShopFor { get; set; }

        /// <summary>
        /// Gets or Sets ContactName
        /// </summary>
        [DataMember(Name="contactName", EmitDefaultValue=false)]
        public string ContactName { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Fax
        /// </summary>
        [DataMember(Name="fax", EmitDefaultValue=false)]
        public string Fax { get; set; }

        /// <summary>
        /// Gets or Sets FeeDesc1
        /// </summary>
        [DataMember(Name="feeDesc1", EmitDefaultValue=false)]
        public string FeeDesc1 { get; set; }

        /// <summary>
        /// Gets or Sets FeeAmt1
        /// </summary>
        [DataMember(Name="feeAmt1", EmitDefaultValue=false)]
        public double? FeeAmt1 { get; set; }

        /// <summary>
        /// Gets or Sets FeeDesc2
        /// </summary>
        [DataMember(Name="feeDesc2", EmitDefaultValue=false)]
        public string FeeDesc2 { get; set; }

        /// <summary>
        /// Gets or Sets FeeAmt2
        /// </summary>
        [DataMember(Name="feeAmt2", EmitDefaultValue=false)]
        public double? FeeAmt2 { get; set; }

        /// <summary>
        /// Gets or Sets FeeDesc3
        /// </summary>
        [DataMember(Name="feeDesc3", EmitDefaultValue=false)]
        public string FeeDesc3 { get; set; }

        /// <summary>
        /// Gets or Sets FeeAmt3
        /// </summary>
        [DataMember(Name="feeAmt3", EmitDefaultValue=false)]
        public double? FeeAmt3 { get; set; }

        /// <summary>
        /// Gets or Sets FeeDesc4
        /// </summary>
        [DataMember(Name="feeDesc4", EmitDefaultValue=false)]
        public string FeeDesc4 { get; set; }

        /// <summary>
        /// Gets or Sets FeeAmt4
        /// </summary>
        [DataMember(Name="feeAmt4", EmitDefaultValue=false)]
        public double? FeeAmt4 { get; set; }

        /// <summary>
        /// Gets or Sets FeeDesc5
        /// </summary>
        [DataMember(Name="feeDesc5", EmitDefaultValue=false)]
        public string FeeDesc5 { get; set; }

        /// <summary>
        /// Gets or Sets FeeAmt5
        /// </summary>
        [DataMember(Name="feeAmt5", EmitDefaultValue=false)]
        public double? FeeAmt5 { get; set; }

        /// <summary>
        /// Gets or Sets FeeDesc6
        /// </summary>
        [DataMember(Name="feeDesc6", EmitDefaultValue=false)]
        public string FeeDesc6 { get; set; }

        /// <summary>
        /// Gets or Sets FeeAmt6
        /// </summary>
        [DataMember(Name="feeAmt6", EmitDefaultValue=false)]
        public double? FeeAmt6 { get; set; }

        /// <summary>
        /// Gets or Sets FeeDesc7
        /// </summary>
        [DataMember(Name="feeDesc7", EmitDefaultValue=false)]
        public string FeeDesc7 { get; set; }

        /// <summary>
        /// Gets or Sets FeeAmt7
        /// </summary>
        [DataMember(Name="feeAmt7", EmitDefaultValue=false)]
        public double? FeeAmt7 { get; set; }

        /// <summary>
        /// Gets or Sets FeeDesc8
        /// </summary>
        [DataMember(Name="feeDesc8", EmitDefaultValue=false)]
        public string FeeDesc8 { get; set; }

        /// <summary>
        /// Gets or Sets FeeAmt8
        /// </summary>
        [DataMember(Name="feeAmt8", EmitDefaultValue=false)]
        public double? FeeAmt8 { get; set; }

        /// <summary>
        /// Gets or Sets FeeDesc9
        /// </summary>
        [DataMember(Name="feeDesc9", EmitDefaultValue=false)]
        public string FeeDesc9 { get; set; }

        /// <summary>
        /// Gets or Sets FeeAmt9
        /// </summary>
        [DataMember(Name="feeAmt9", EmitDefaultValue=false)]
        public double? FeeAmt9 { get; set; }

        /// <summary>
        /// Gets or Sets FeeDesc10
        /// </summary>
        [DataMember(Name="feeDesc10", EmitDefaultValue=false)]
        public string FeeDesc10 { get; set; }

        /// <summary>
        /// Gets or Sets FeeAmt10
        /// </summary>
        [DataMember(Name="feeAmt10", EmitDefaultValue=false)]
        public double? FeeAmt10 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractServiceProviderContacts {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  Cost: ").Append(Cost).Append("\n");
            sb.Append("  LineItemNumber: ").Append(LineItemNumber).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  ProviderIndex: ").Append(ProviderIndex).Append("\n");
            sb.Append("  ProviderName: ").Append(ProviderName).Append("\n");
            sb.Append("  Relationship: ").Append(Relationship).Append("\n");
            sb.Append("  ServiceProvided: ").Append(ServiceProvided).Append("\n");
            sb.Append("  ServiceProviderId: ").Append(ServiceProviderId).Append("\n");
            sb.Append("  ServiceType: ").Append(ServiceType).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  WebUrl: ").Append(WebUrl).Append("\n");
            sb.Append("  ShopFor: ").Append(ShopFor).Append("\n");
            sb.Append("  ContactName: ").Append(ContactName).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("  FeeDesc1: ").Append(FeeDesc1).Append("\n");
            sb.Append("  FeeAmt1: ").Append(FeeAmt1).Append("\n");
            sb.Append("  FeeDesc2: ").Append(FeeDesc2).Append("\n");
            sb.Append("  FeeAmt2: ").Append(FeeAmt2).Append("\n");
            sb.Append("  FeeDesc3: ").Append(FeeDesc3).Append("\n");
            sb.Append("  FeeAmt3: ").Append(FeeAmt3).Append("\n");
            sb.Append("  FeeDesc4: ").Append(FeeDesc4).Append("\n");
            sb.Append("  FeeAmt4: ").Append(FeeAmt4).Append("\n");
            sb.Append("  FeeDesc5: ").Append(FeeDesc5).Append("\n");
            sb.Append("  FeeAmt5: ").Append(FeeAmt5).Append("\n");
            sb.Append("  FeeDesc6: ").Append(FeeDesc6).Append("\n");
            sb.Append("  FeeAmt6: ").Append(FeeAmt6).Append("\n");
            sb.Append("  FeeDesc7: ").Append(FeeDesc7).Append("\n");
            sb.Append("  FeeAmt7: ").Append(FeeAmt7).Append("\n");
            sb.Append("  FeeDesc8: ").Append(FeeDesc8).Append("\n");
            sb.Append("  FeeAmt8: ").Append(FeeAmt8).Append("\n");
            sb.Append("  FeeDesc9: ").Append(FeeDesc9).Append("\n");
            sb.Append("  FeeAmt9: ").Append(FeeAmt9).Append("\n");
            sb.Append("  FeeDesc10: ").Append(FeeDesc10).Append("\n");
            sb.Append("  FeeAmt10: ").Append(FeeAmt10).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractServiceProviderContacts);
        }

        /// <summary>
        /// Returns true if LoanContractServiceProviderContacts instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractServiceProviderContacts to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractServiceProviderContacts input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.City == input.City ||
                    (this.City != null &&
                    this.City.Equals(input.City))
                ) && 
                (
                    this.Cost == input.Cost ||
                    (this.Cost != null &&
                    this.Cost.Equals(input.Cost))
                ) && 
                (
                    this.LineItemNumber == input.LineItemNumber ||
                    (this.LineItemNumber != null &&
                    this.LineItemNumber.Equals(input.LineItemNumber))
                ) && 
                (
                    this.Phone == input.Phone ||
                    (this.Phone != null &&
                    this.Phone.Equals(input.Phone))
                ) && 
                (
                    this.PostalCode == input.PostalCode ||
                    (this.PostalCode != null &&
                    this.PostalCode.Equals(input.PostalCode))
                ) && 
                (
                    this.ProviderIndex == input.ProviderIndex ||
                    (this.ProviderIndex != null &&
                    this.ProviderIndex.Equals(input.ProviderIndex))
                ) && 
                (
                    this.ProviderName == input.ProviderName ||
                    (this.ProviderName != null &&
                    this.ProviderName.Equals(input.ProviderName))
                ) && 
                (
                    this.Relationship == input.Relationship ||
                    (this.Relationship != null &&
                    this.Relationship.Equals(input.Relationship))
                ) && 
                (
                    this.ServiceProvided == input.ServiceProvided ||
                    (this.ServiceProvided != null &&
                    this.ServiceProvided.Equals(input.ServiceProvided))
                ) && 
                (
                    this.ServiceProviderId == input.ServiceProviderId ||
                    (this.ServiceProviderId != null &&
                    this.ServiceProviderId.Equals(input.ServiceProviderId))
                ) && 
                (
                    this.ServiceType == input.ServiceType ||
                    (this.ServiceType != null &&
                    this.ServiceType.Equals(input.ServiceType))
                ) && 
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                ) && 
                (
                    this.WebUrl == input.WebUrl ||
                    (this.WebUrl != null &&
                    this.WebUrl.Equals(input.WebUrl))
                ) && 
                (
                    this.ShopFor == input.ShopFor ||
                    (this.ShopFor != null &&
                    this.ShopFor.Equals(input.ShopFor))
                ) && 
                (
                    this.ContactName == input.ContactName ||
                    (this.ContactName != null &&
                    this.ContactName.Equals(input.ContactName))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Fax == input.Fax ||
                    (this.Fax != null &&
                    this.Fax.Equals(input.Fax))
                ) && 
                (
                    this.FeeDesc1 == input.FeeDesc1 ||
                    (this.FeeDesc1 != null &&
                    this.FeeDesc1.Equals(input.FeeDesc1))
                ) && 
                (
                    this.FeeAmt1 == input.FeeAmt1 ||
                    (this.FeeAmt1 != null &&
                    this.FeeAmt1.Equals(input.FeeAmt1))
                ) && 
                (
                    this.FeeDesc2 == input.FeeDesc2 ||
                    (this.FeeDesc2 != null &&
                    this.FeeDesc2.Equals(input.FeeDesc2))
                ) && 
                (
                    this.FeeAmt2 == input.FeeAmt2 ||
                    (this.FeeAmt2 != null &&
                    this.FeeAmt2.Equals(input.FeeAmt2))
                ) && 
                (
                    this.FeeDesc3 == input.FeeDesc3 ||
                    (this.FeeDesc3 != null &&
                    this.FeeDesc3.Equals(input.FeeDesc3))
                ) && 
                (
                    this.FeeAmt3 == input.FeeAmt3 ||
                    (this.FeeAmt3 != null &&
                    this.FeeAmt3.Equals(input.FeeAmt3))
                ) && 
                (
                    this.FeeDesc4 == input.FeeDesc4 ||
                    (this.FeeDesc4 != null &&
                    this.FeeDesc4.Equals(input.FeeDesc4))
                ) && 
                (
                    this.FeeAmt4 == input.FeeAmt4 ||
                    (this.FeeAmt4 != null &&
                    this.FeeAmt4.Equals(input.FeeAmt4))
                ) && 
                (
                    this.FeeDesc5 == input.FeeDesc5 ||
                    (this.FeeDesc5 != null &&
                    this.FeeDesc5.Equals(input.FeeDesc5))
                ) && 
                (
                    this.FeeAmt5 == input.FeeAmt5 ||
                    (this.FeeAmt5 != null &&
                    this.FeeAmt5.Equals(input.FeeAmt5))
                ) && 
                (
                    this.FeeDesc6 == input.FeeDesc6 ||
                    (this.FeeDesc6 != null &&
                    this.FeeDesc6.Equals(input.FeeDesc6))
                ) && 
                (
                    this.FeeAmt6 == input.FeeAmt6 ||
                    (this.FeeAmt6 != null &&
                    this.FeeAmt6.Equals(input.FeeAmt6))
                ) && 
                (
                    this.FeeDesc7 == input.FeeDesc7 ||
                    (this.FeeDesc7 != null &&
                    this.FeeDesc7.Equals(input.FeeDesc7))
                ) && 
                (
                    this.FeeAmt7 == input.FeeAmt7 ||
                    (this.FeeAmt7 != null &&
                    this.FeeAmt7.Equals(input.FeeAmt7))
                ) && 
                (
                    this.FeeDesc8 == input.FeeDesc8 ||
                    (this.FeeDesc8 != null &&
                    this.FeeDesc8.Equals(input.FeeDesc8))
                ) && 
                (
                    this.FeeAmt8 == input.FeeAmt8 ||
                    (this.FeeAmt8 != null &&
                    this.FeeAmt8.Equals(input.FeeAmt8))
                ) && 
                (
                    this.FeeDesc9 == input.FeeDesc9 ||
                    (this.FeeDesc9 != null &&
                    this.FeeDesc9.Equals(input.FeeDesc9))
                ) && 
                (
                    this.FeeAmt9 == input.FeeAmt9 ||
                    (this.FeeAmt9 != null &&
                    this.FeeAmt9.Equals(input.FeeAmt9))
                ) && 
                (
                    this.FeeDesc10 == input.FeeDesc10 ||
                    (this.FeeDesc10 != null &&
                    this.FeeDesc10.Equals(input.FeeDesc10))
                ) && 
                (
                    this.FeeAmt10 == input.FeeAmt10 ||
                    (this.FeeAmt10 != null &&
                    this.FeeAmt10.Equals(input.FeeAmt10))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.City != null)
                    hashCode = hashCode * 59 + this.City.GetHashCode();
                if (this.Cost != null)
                    hashCode = hashCode * 59 + this.Cost.GetHashCode();
                if (this.LineItemNumber != null)
                    hashCode = hashCode * 59 + this.LineItemNumber.GetHashCode();
                if (this.Phone != null)
                    hashCode = hashCode * 59 + this.Phone.GetHashCode();
                if (this.PostalCode != null)
                    hashCode = hashCode * 59 + this.PostalCode.GetHashCode();
                if (this.ProviderIndex != null)
                    hashCode = hashCode * 59 + this.ProviderIndex.GetHashCode();
                if (this.ProviderName != null)
                    hashCode = hashCode * 59 + this.ProviderName.GetHashCode();
                if (this.Relationship != null)
                    hashCode = hashCode * 59 + this.Relationship.GetHashCode();
                if (this.ServiceProvided != null)
                    hashCode = hashCode * 59 + this.ServiceProvided.GetHashCode();
                if (this.ServiceProviderId != null)
                    hashCode = hashCode * 59 + this.ServiceProviderId.GetHashCode();
                if (this.ServiceType != null)
                    hashCode = hashCode * 59 + this.ServiceType.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                if (this.WebUrl != null)
                    hashCode = hashCode * 59 + this.WebUrl.GetHashCode();
                if (this.ShopFor != null)
                    hashCode = hashCode * 59 + this.ShopFor.GetHashCode();
                if (this.ContactName != null)
                    hashCode = hashCode * 59 + this.ContactName.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.Fax != null)
                    hashCode = hashCode * 59 + this.Fax.GetHashCode();
                if (this.FeeDesc1 != null)
                    hashCode = hashCode * 59 + this.FeeDesc1.GetHashCode();
                if (this.FeeAmt1 != null)
                    hashCode = hashCode * 59 + this.FeeAmt1.GetHashCode();
                if (this.FeeDesc2 != null)
                    hashCode = hashCode * 59 + this.FeeDesc2.GetHashCode();
                if (this.FeeAmt2 != null)
                    hashCode = hashCode * 59 + this.FeeAmt2.GetHashCode();
                if (this.FeeDesc3 != null)
                    hashCode = hashCode * 59 + this.FeeDesc3.GetHashCode();
                if (this.FeeAmt3 != null)
                    hashCode = hashCode * 59 + this.FeeAmt3.GetHashCode();
                if (this.FeeDesc4 != null)
                    hashCode = hashCode * 59 + this.FeeDesc4.GetHashCode();
                if (this.FeeAmt4 != null)
                    hashCode = hashCode * 59 + this.FeeAmt4.GetHashCode();
                if (this.FeeDesc5 != null)
                    hashCode = hashCode * 59 + this.FeeDesc5.GetHashCode();
                if (this.FeeAmt5 != null)
                    hashCode = hashCode * 59 + this.FeeAmt5.GetHashCode();
                if (this.FeeDesc6 != null)
                    hashCode = hashCode * 59 + this.FeeDesc6.GetHashCode();
                if (this.FeeAmt6 != null)
                    hashCode = hashCode * 59 + this.FeeAmt6.GetHashCode();
                if (this.FeeDesc7 != null)
                    hashCode = hashCode * 59 + this.FeeDesc7.GetHashCode();
                if (this.FeeAmt7 != null)
                    hashCode = hashCode * 59 + this.FeeAmt7.GetHashCode();
                if (this.FeeDesc8 != null)
                    hashCode = hashCode * 59 + this.FeeDesc8.GetHashCode();
                if (this.FeeAmt8 != null)
                    hashCode = hashCode * 59 + this.FeeAmt8.GetHashCode();
                if (this.FeeDesc9 != null)
                    hashCode = hashCode * 59 + this.FeeDesc9.GetHashCode();
                if (this.FeeAmt9 != null)
                    hashCode = hashCode * 59 + this.FeeAmt9.GetHashCode();
                if (this.FeeDesc10 != null)
                    hashCode = hashCode * 59 + this.FeeDesc10.GetHashCode();
                if (this.FeeAmt10 != null)
                    hashCode = hashCode * 59 + this.FeeAmt10.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
