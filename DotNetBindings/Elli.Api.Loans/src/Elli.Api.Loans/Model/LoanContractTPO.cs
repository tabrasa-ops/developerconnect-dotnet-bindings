/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractTPO
    /// </summary>
    [DataContract]
    public partial class LoanContractTPO :  IEquatable<LoanContractTPO>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets SITEID
        /// </summary>
        [DataMember(Name="sITEID", EmitDefaultValue=false)]
        public string SITEID { get; set; }

        /// <summary>
        /// Gets or Sets RegisterDate
        /// </summary>
        [DataMember(Name="registerDate", EmitDefaultValue=false)]
        public DateTime? RegisterDate { get; set; }

        /// <summary>
        /// Gets or Sets SubmitDate
        /// </summary>
        [DataMember(Name="submitDate", EmitDefaultValue=false)]
        public DateTime? SubmitDate { get; set; }

        /// <summary>
        /// Gets or Sets UnderwriterReviewed
        /// </summary>
        [DataMember(Name="underwriterReviewed", EmitDefaultValue=false)]
        public bool? UnderwriterReviewed { get; set; }

        /// <summary>
        /// Gets or Sets FeeReviewStatus
        /// </summary>
        [DataMember(Name="feeReviewStatus", EmitDefaultValue=false)]
        public string FeeReviewStatus { get; set; }

        /// <summary>
        /// Gets or Sets Archived
        /// </summary>
        [DataMember(Name="archived", EmitDefaultValue=false)]
        public bool? Archived { get; set; }

        /// <summary>
        /// Gets or Sets ImportSource
        /// </summary>
        [DataMember(Name="importSource", EmitDefaultValue=false)]
        public string ImportSource { get; set; }

        /// <summary>
        /// Gets or Sets DocumentsReadyDate
        /// </summary>
        [DataMember(Name="documentsReadyDate", EmitDefaultValue=false)]
        public DateTime? DocumentsReadyDate { get; set; }

        /// <summary>
        /// Gets or Sets FeeReviewStatusDate
        /// </summary>
        [DataMember(Name="feeReviewStatusDate", EmitDefaultValue=false)]
        public DateTime? FeeReviewStatusDate { get; set; }

        /// <summary>
        /// Gets or Sets FeeReviewComments
        /// </summary>
        [DataMember(Name="feeReviewComments", EmitDefaultValue=false)]
        public string FeeReviewComments { get; set; }

        /// <summary>
        /// Gets or Sets LEIssuedBy
        /// </summary>
        [DataMember(Name="lEIssuedBy", EmitDefaultValue=false)]
        public string LEIssuedBy { get; set; }

        /// <summary>
        /// Gets or Sets CompanyName
        /// </summary>
        [DataMember(Name="companyName", EmitDefaultValue=false)]
        public string CompanyName { get; set; }

        /// <summary>
        /// Gets or Sets CompanyID
        /// </summary>
        [DataMember(Name="companyID", EmitDefaultValue=false)]
        public string CompanyID { get; set; }

        /// <summary>
        /// Gets or Sets CompanyOrganizationID
        /// </summary>
        [DataMember(Name="companyOrganizationID", EmitDefaultValue=false)]
        public string CompanyOrganizationID { get; set; }

        /// <summary>
        /// Gets or Sets CompanyLegalName
        /// </summary>
        [DataMember(Name="companyLegalName", EmitDefaultValue=false)]
        public string CompanyLegalName { get; set; }

        /// <summary>
        /// Gets or Sets CompanyAddress
        /// </summary>
        [DataMember(Name="companyAddress", EmitDefaultValue=false)]
        public string CompanyAddress { get; set; }

        /// <summary>
        /// Gets or Sets CompanyCity
        /// </summary>
        [DataMember(Name="companyCity", EmitDefaultValue=false)]
        public string CompanyCity { get; set; }

        /// <summary>
        /// Gets or Sets CompanyState
        /// </summary>
        [DataMember(Name="companyState", EmitDefaultValue=false)]
        public string CompanyState { get; set; }

        /// <summary>
        /// Gets or Sets CompanyZip
        /// </summary>
        [DataMember(Name="companyZip", EmitDefaultValue=false)]
        public string CompanyZip { get; set; }

        /// <summary>
        /// Gets or Sets CompanyPhone
        /// </summary>
        [DataMember(Name="companyPhone", EmitDefaultValue=false)]
        public string CompanyPhone { get; set; }

        /// <summary>
        /// Gets or Sets CompanyFax
        /// </summary>
        [DataMember(Name="companyFax", EmitDefaultValue=false)]
        public string CompanyFax { get; set; }

        /// <summary>
        /// Gets or Sets CompanyDBAName
        /// </summary>
        [DataMember(Name="companyDBAName", EmitDefaultValue=false)]
        public string CompanyDBAName { get; set; }

        /// <summary>
        /// Gets or Sets CompanyRating
        /// </summary>
        [DataMember(Name="companyRating", EmitDefaultValue=false)]
        public string CompanyRating { get; set; }

        /// <summary>
        /// Gets or Sets CompanyManagerName
        /// </summary>
        [DataMember(Name="companyManagerName", EmitDefaultValue=false)]
        public string CompanyManagerName { get; set; }

        /// <summary>
        /// Gets or Sets CompanyManagerEmail
        /// </summary>
        [DataMember(Name="companyManagerEmail", EmitDefaultValue=false)]
        public string CompanyManagerEmail { get; set; }

        /// <summary>
        /// Gets or Sets CompanyAEName
        /// </summary>
        [DataMember(Name="companyAEName", EmitDefaultValue=false)]
        public string CompanyAEName { get; set; }

        /// <summary>
        /// Gets or Sets CompanyAEUserName
        /// </summary>
        [DataMember(Name="companyAEUserName", EmitDefaultValue=false)]
        public string CompanyAEUserName { get; set; }

        /// <summary>
        /// Gets or Sets BranchName
        /// </summary>
        [DataMember(Name="branchName", EmitDefaultValue=false)]
        public string BranchName { get; set; }

        /// <summary>
        /// Gets or Sets BranchID
        /// </summary>
        [DataMember(Name="branchID", EmitDefaultValue=false)]
        public string BranchID { get; set; }

        /// <summary>
        /// Gets or Sets BranchOrganizationID
        /// </summary>
        [DataMember(Name="branchOrganizationID", EmitDefaultValue=false)]
        public string BranchOrganizationID { get; set; }

        /// <summary>
        /// Gets or Sets BranchLegalName
        /// </summary>
        [DataMember(Name="branchLegalName", EmitDefaultValue=false)]
        public string BranchLegalName { get; set; }

        /// <summary>
        /// Gets or Sets BranchAddress
        /// </summary>
        [DataMember(Name="branchAddress", EmitDefaultValue=false)]
        public string BranchAddress { get; set; }

        /// <summary>
        /// Gets or Sets BranchCity
        /// </summary>
        [DataMember(Name="branchCity", EmitDefaultValue=false)]
        public string BranchCity { get; set; }

        /// <summary>
        /// Gets or Sets BranchState
        /// </summary>
        [DataMember(Name="branchState", EmitDefaultValue=false)]
        public string BranchState { get; set; }

        /// <summary>
        /// Gets or Sets BranchZip
        /// </summary>
        [DataMember(Name="branchZip", EmitDefaultValue=false)]
        public string BranchZip { get; set; }

        /// <summary>
        /// Gets or Sets BranchPhone
        /// </summary>
        [DataMember(Name="branchPhone", EmitDefaultValue=false)]
        public string BranchPhone { get; set; }

        /// <summary>
        /// Gets or Sets BranchFax
        /// </summary>
        [DataMember(Name="branchFax", EmitDefaultValue=false)]
        public string BranchFax { get; set; }

        /// <summary>
        /// Gets or Sets BranchDBAName
        /// </summary>
        [DataMember(Name="branchDBAName", EmitDefaultValue=false)]
        public string BranchDBAName { get; set; }

        /// <summary>
        /// Gets or Sets BranchRating
        /// </summary>
        [DataMember(Name="branchRating", EmitDefaultValue=false)]
        public string BranchRating { get; set; }

        /// <summary>
        /// Gets or Sets BranchManagerName
        /// </summary>
        [DataMember(Name="branchManagerName", EmitDefaultValue=false)]
        public string BranchManagerName { get; set; }

        /// <summary>
        /// Gets or Sets BranchManagerEmail
        /// </summary>
        [DataMember(Name="branchManagerEmail", EmitDefaultValue=false)]
        public string BranchManagerEmail { get; set; }

        /// <summary>
        /// Gets or Sets BranchAEName
        /// </summary>
        [DataMember(Name="branchAEName", EmitDefaultValue=false)]
        public string BranchAEName { get; set; }

        /// <summary>
        /// Gets or Sets BranchAEUserName
        /// </summary>
        [DataMember(Name="branchAEUserName", EmitDefaultValue=false)]
        public string BranchAEUserName { get; set; }

        /// <summary>
        /// Gets or Sets LOName
        /// </summary>
        [DataMember(Name="lOName", EmitDefaultValue=false)]
        public string LOName { get; set; }

        /// <summary>
        /// Gets or Sets LOID
        /// </summary>
        [DataMember(Name="lOID", EmitDefaultValue=false)]
        public string LOID { get; set; }

        /// <summary>
        /// Gets or Sets LOEmail
        /// </summary>
        [DataMember(Name="lOEmail", EmitDefaultValue=false)]
        public string LOEmail { get; set; }

        /// <summary>
        /// Gets or Sets LOStatus
        /// </summary>
        [DataMember(Name="lOStatus", EmitDefaultValue=false)]
        public string LOStatus { get; set; }

        /// <summary>
        /// Gets or Sets LOBusinessPhone
        /// </summary>
        [DataMember(Name="lOBusinessPhone", EmitDefaultValue=false)]
        public string LOBusinessPhone { get; set; }

        /// <summary>
        /// Gets or Sets LOBusinessFax
        /// </summary>
        [DataMember(Name="lOBusinessFax", EmitDefaultValue=false)]
        public string LOBusinessFax { get; set; }

        /// <summary>
        /// Gets or Sets LOCellPhone
        /// </summary>
        [DataMember(Name="lOCellPhone", EmitDefaultValue=false)]
        public string LOCellPhone { get; set; }

        /// <summary>
        /// Gets or Sets LOAddress
        /// </summary>
        [DataMember(Name="lOAddress", EmitDefaultValue=false)]
        public string LOAddress { get; set; }

        /// <summary>
        /// Gets or Sets LOCity
        /// </summary>
        [DataMember(Name="lOCity", EmitDefaultValue=false)]
        public string LOCity { get; set; }

        /// <summary>
        /// Gets or Sets LOState
        /// </summary>
        [DataMember(Name="lOState", EmitDefaultValue=false)]
        public string LOState { get; set; }

        /// <summary>
        /// Gets or Sets LOZip
        /// </summary>
        [DataMember(Name="lOZip", EmitDefaultValue=false)]
        public string LOZip { get; set; }

        /// <summary>
        /// Gets or Sets LONotes
        /// </summary>
        [DataMember(Name="lONotes", EmitDefaultValue=false)]
        public string LONotes { get; set; }

        /// <summary>
        /// Gets or Sets LOAEName
        /// </summary>
        [DataMember(Name="lOAEName", EmitDefaultValue=false)]
        public string LOAEName { get; set; }

        /// <summary>
        /// Gets or Sets LOAEUserName
        /// </summary>
        [DataMember(Name="lOAEUserName", EmitDefaultValue=false)]
        public string LOAEUserName { get; set; }

        /// <summary>
        /// Gets or Sets LPName
        /// </summary>
        [DataMember(Name="lPName", EmitDefaultValue=false)]
        public string LPName { get; set; }

        /// <summary>
        /// Gets or Sets LPID
        /// </summary>
        [DataMember(Name="lPID", EmitDefaultValue=false)]
        public string LPID { get; set; }

        /// <summary>
        /// Gets or Sets LPEmail
        /// </summary>
        [DataMember(Name="lPEmail", EmitDefaultValue=false)]
        public string LPEmail { get; set; }

        /// <summary>
        /// Gets or Sets LPStatus
        /// </summary>
        [DataMember(Name="lPStatus", EmitDefaultValue=false)]
        public string LPStatus { get; set; }

        /// <summary>
        /// Gets or Sets LPBusinessPhone
        /// </summary>
        [DataMember(Name="lPBusinessPhone", EmitDefaultValue=false)]
        public string LPBusinessPhone { get; set; }

        /// <summary>
        /// Gets or Sets LPBusinessFax
        /// </summary>
        [DataMember(Name="lPBusinessFax", EmitDefaultValue=false)]
        public string LPBusinessFax { get; set; }

        /// <summary>
        /// Gets or Sets LPCellPhone
        /// </summary>
        [DataMember(Name="lPCellPhone", EmitDefaultValue=false)]
        public string LPCellPhone { get; set; }

        /// <summary>
        /// Gets or Sets LPAddress
        /// </summary>
        [DataMember(Name="lPAddress", EmitDefaultValue=false)]
        public string LPAddress { get; set; }

        /// <summary>
        /// Gets or Sets LPCity
        /// </summary>
        [DataMember(Name="lPCity", EmitDefaultValue=false)]
        public string LPCity { get; set; }

        /// <summary>
        /// Gets or Sets LPState
        /// </summary>
        [DataMember(Name="lPState", EmitDefaultValue=false)]
        public string LPState { get; set; }

        /// <summary>
        /// Gets or Sets LPZip
        /// </summary>
        [DataMember(Name="lPZip", EmitDefaultValue=false)]
        public string LPZip { get; set; }

        /// <summary>
        /// Gets or Sets LPNotes
        /// </summary>
        [DataMember(Name="lPNotes", EmitDefaultValue=false)]
        public string LPNotes { get; set; }

        /// <summary>
        /// Gets or Sets LPAEName
        /// </summary>
        [DataMember(Name="lPAEName", EmitDefaultValue=false)]
        public string LPAEName { get; set; }

        /// <summary>
        /// Gets or Sets LPAEUserName
        /// </summary>
        [DataMember(Name="lPAEUserName", EmitDefaultValue=false)]
        public string LPAEUserName { get; set; }

        /// <summary>
        /// Gets or Sets WatchListFlag
        /// </summary>
        [DataMember(Name="watchListFlag", EmitDefaultValue=false)]
        public bool? WatchListFlag { get; set; }

        /// <summary>
        /// Gets or Sets WatchListReason
        /// </summary>
        [DataMember(Name="watchListReason", EmitDefaultValue=false)]
        public string WatchListReason { get; set; }

        /// <summary>
        /// Gets or Sets UnderwritingDelegated
        /// </summary>
        [DataMember(Name="underwritingDelegated", EmitDefaultValue=false)]
        public bool? UnderwritingDelegated { get; set; }

        /// <summary>
        /// Gets or Sets InitialApplicationDate
        /// </summary>
        [DataMember(Name="initialApplicationDate", EmitDefaultValue=false)]
        public DateTime? InitialApplicationDate { get; set; }

        /// <summary>
        /// Gets or Sets InitialSubmitDate
        /// </summary>
        [DataMember(Name="initialSubmitDate", EmitDefaultValue=false)]
        public DateTime? InitialSubmitDate { get; set; }

        /// <summary>
        /// Gets or Sets TestAccountField
        /// </summary>
        [DataMember(Name="testAccountField", EmitDefaultValue=false)]
        public bool? TestAccountField { get; set; }

        /// <summary>
        /// Gets or Sets ReadytoDiscloseDateUtc
        /// </summary>
        [DataMember(Name="readytoDiscloseDateUtc", EmitDefaultValue=false)]
        public DateTime? ReadytoDiscloseDateUtc { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseStipsReviewed
        /// </summary>
        [DataMember(Name="purchaseStipsReviewed", EmitDefaultValue=false)]
        public bool? PurchaseStipsReviewed { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseStipsReadyDate
        /// </summary>
        [DataMember(Name="purchaseStipsReadyDate", EmitDefaultValue=false)]
        public DateTime? PurchaseStipsReadyDate { get; set; }

        /// <summary>
        /// Gets or Sets CFCName
        /// </summary>
        [DataMember(Name="cFCName", EmitDefaultValue=false)]
        public string CFCName { get; set; }

        /// <summary>
        /// Gets or Sets CFCUserID
        /// </summary>
        [DataMember(Name="cFCUserID", EmitDefaultValue=false)]
        public string CFCUserID { get; set; }

        /// <summary>
        /// Gets or Sets CFCEmail
        /// </summary>
        [DataMember(Name="cFCEmail", EmitDefaultValue=false)]
        public string CFCEmail { get; set; }

        /// <summary>
        /// Gets or Sets CFCStatus
        /// </summary>
        [DataMember(Name="cFCStatus", EmitDefaultValue=false)]
        public string CFCStatus { get; set; }

        /// <summary>
        /// Gets or Sets CFCBusinessPhone
        /// </summary>
        [DataMember(Name="cFCBusinessPhone", EmitDefaultValue=false)]
        public string CFCBusinessPhone { get; set; }

        /// <summary>
        /// Gets or Sets CFCBusinessFax
        /// </summary>
        [DataMember(Name="cFCBusinessFax", EmitDefaultValue=false)]
        public string CFCBusinessFax { get; set; }

        /// <summary>
        /// Gets or Sets CFCCellPhone
        /// </summary>
        [DataMember(Name="cFCCellPhone", EmitDefaultValue=false)]
        public string CFCCellPhone { get; set; }

        /// <summary>
        /// Gets or Sets CFCAddress
        /// </summary>
        [DataMember(Name="cFCAddress", EmitDefaultValue=false)]
        public string CFCAddress { get; set; }

        /// <summary>
        /// Gets or Sets CFCCity
        /// </summary>
        [DataMember(Name="cFCCity", EmitDefaultValue=false)]
        public string CFCCity { get; set; }

        /// <summary>
        /// Gets or Sets CFCState
        /// </summary>
        [DataMember(Name="cFCState", EmitDefaultValue=false)]
        public string CFCState { get; set; }

        /// <summary>
        /// Gets or Sets CFCZip
        /// </summary>
        [DataMember(Name="cFCZip", EmitDefaultValue=false)]
        public string CFCZip { get; set; }

        /// <summary>
        /// Gets or Sets CFCNotes
        /// </summary>
        [DataMember(Name="cFCNotes", EmitDefaultValue=false)]
        public string CFCNotes { get; set; }

        /// <summary>
        /// Gets or Sets CFCRepAE
        /// </summary>
        [DataMember(Name="cFCRepAE", EmitDefaultValue=false)]
        public string CFCRepAE { get; set; }

        /// <summary>
        /// Gets or Sets CFCSRAEUserName
        /// </summary>
        [DataMember(Name="cFCSRAEUserName", EmitDefaultValue=false)]
        public string CFCSRAEUserName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractTPO {\n");
            sb.Append("  SITEID: ").Append(SITEID).Append("\n");
            sb.Append("  RegisterDate: ").Append(RegisterDate).Append("\n");
            sb.Append("  SubmitDate: ").Append(SubmitDate).Append("\n");
            sb.Append("  UnderwriterReviewed: ").Append(UnderwriterReviewed).Append("\n");
            sb.Append("  FeeReviewStatus: ").Append(FeeReviewStatus).Append("\n");
            sb.Append("  Archived: ").Append(Archived).Append("\n");
            sb.Append("  ImportSource: ").Append(ImportSource).Append("\n");
            sb.Append("  DocumentsReadyDate: ").Append(DocumentsReadyDate).Append("\n");
            sb.Append("  FeeReviewStatusDate: ").Append(FeeReviewStatusDate).Append("\n");
            sb.Append("  FeeReviewComments: ").Append(FeeReviewComments).Append("\n");
            sb.Append("  LEIssuedBy: ").Append(LEIssuedBy).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  CompanyID: ").Append(CompanyID).Append("\n");
            sb.Append("  CompanyOrganizationID: ").Append(CompanyOrganizationID).Append("\n");
            sb.Append("  CompanyLegalName: ").Append(CompanyLegalName).Append("\n");
            sb.Append("  CompanyAddress: ").Append(CompanyAddress).Append("\n");
            sb.Append("  CompanyCity: ").Append(CompanyCity).Append("\n");
            sb.Append("  CompanyState: ").Append(CompanyState).Append("\n");
            sb.Append("  CompanyZip: ").Append(CompanyZip).Append("\n");
            sb.Append("  CompanyPhone: ").Append(CompanyPhone).Append("\n");
            sb.Append("  CompanyFax: ").Append(CompanyFax).Append("\n");
            sb.Append("  CompanyDBAName: ").Append(CompanyDBAName).Append("\n");
            sb.Append("  CompanyRating: ").Append(CompanyRating).Append("\n");
            sb.Append("  CompanyManagerName: ").Append(CompanyManagerName).Append("\n");
            sb.Append("  CompanyManagerEmail: ").Append(CompanyManagerEmail).Append("\n");
            sb.Append("  CompanyAEName: ").Append(CompanyAEName).Append("\n");
            sb.Append("  CompanyAEUserName: ").Append(CompanyAEUserName).Append("\n");
            sb.Append("  BranchName: ").Append(BranchName).Append("\n");
            sb.Append("  BranchID: ").Append(BranchID).Append("\n");
            sb.Append("  BranchOrganizationID: ").Append(BranchOrganizationID).Append("\n");
            sb.Append("  BranchLegalName: ").Append(BranchLegalName).Append("\n");
            sb.Append("  BranchAddress: ").Append(BranchAddress).Append("\n");
            sb.Append("  BranchCity: ").Append(BranchCity).Append("\n");
            sb.Append("  BranchState: ").Append(BranchState).Append("\n");
            sb.Append("  BranchZip: ").Append(BranchZip).Append("\n");
            sb.Append("  BranchPhone: ").Append(BranchPhone).Append("\n");
            sb.Append("  BranchFax: ").Append(BranchFax).Append("\n");
            sb.Append("  BranchDBAName: ").Append(BranchDBAName).Append("\n");
            sb.Append("  BranchRating: ").Append(BranchRating).Append("\n");
            sb.Append("  BranchManagerName: ").Append(BranchManagerName).Append("\n");
            sb.Append("  BranchManagerEmail: ").Append(BranchManagerEmail).Append("\n");
            sb.Append("  BranchAEName: ").Append(BranchAEName).Append("\n");
            sb.Append("  BranchAEUserName: ").Append(BranchAEUserName).Append("\n");
            sb.Append("  LOName: ").Append(LOName).Append("\n");
            sb.Append("  LOID: ").Append(LOID).Append("\n");
            sb.Append("  LOEmail: ").Append(LOEmail).Append("\n");
            sb.Append("  LOStatus: ").Append(LOStatus).Append("\n");
            sb.Append("  LOBusinessPhone: ").Append(LOBusinessPhone).Append("\n");
            sb.Append("  LOBusinessFax: ").Append(LOBusinessFax).Append("\n");
            sb.Append("  LOCellPhone: ").Append(LOCellPhone).Append("\n");
            sb.Append("  LOAddress: ").Append(LOAddress).Append("\n");
            sb.Append("  LOCity: ").Append(LOCity).Append("\n");
            sb.Append("  LOState: ").Append(LOState).Append("\n");
            sb.Append("  LOZip: ").Append(LOZip).Append("\n");
            sb.Append("  LONotes: ").Append(LONotes).Append("\n");
            sb.Append("  LOAEName: ").Append(LOAEName).Append("\n");
            sb.Append("  LOAEUserName: ").Append(LOAEUserName).Append("\n");
            sb.Append("  LPName: ").Append(LPName).Append("\n");
            sb.Append("  LPID: ").Append(LPID).Append("\n");
            sb.Append("  LPEmail: ").Append(LPEmail).Append("\n");
            sb.Append("  LPStatus: ").Append(LPStatus).Append("\n");
            sb.Append("  LPBusinessPhone: ").Append(LPBusinessPhone).Append("\n");
            sb.Append("  LPBusinessFax: ").Append(LPBusinessFax).Append("\n");
            sb.Append("  LPCellPhone: ").Append(LPCellPhone).Append("\n");
            sb.Append("  LPAddress: ").Append(LPAddress).Append("\n");
            sb.Append("  LPCity: ").Append(LPCity).Append("\n");
            sb.Append("  LPState: ").Append(LPState).Append("\n");
            sb.Append("  LPZip: ").Append(LPZip).Append("\n");
            sb.Append("  LPNotes: ").Append(LPNotes).Append("\n");
            sb.Append("  LPAEName: ").Append(LPAEName).Append("\n");
            sb.Append("  LPAEUserName: ").Append(LPAEUserName).Append("\n");
            sb.Append("  WatchListFlag: ").Append(WatchListFlag).Append("\n");
            sb.Append("  WatchListReason: ").Append(WatchListReason).Append("\n");
            sb.Append("  UnderwritingDelegated: ").Append(UnderwritingDelegated).Append("\n");
            sb.Append("  InitialApplicationDate: ").Append(InitialApplicationDate).Append("\n");
            sb.Append("  InitialSubmitDate: ").Append(InitialSubmitDate).Append("\n");
            sb.Append("  TestAccountField: ").Append(TestAccountField).Append("\n");
            sb.Append("  ReadytoDiscloseDateUtc: ").Append(ReadytoDiscloseDateUtc).Append("\n");
            sb.Append("  PurchaseStipsReviewed: ").Append(PurchaseStipsReviewed).Append("\n");
            sb.Append("  PurchaseStipsReadyDate: ").Append(PurchaseStipsReadyDate).Append("\n");
            sb.Append("  CFCName: ").Append(CFCName).Append("\n");
            sb.Append("  CFCUserID: ").Append(CFCUserID).Append("\n");
            sb.Append("  CFCEmail: ").Append(CFCEmail).Append("\n");
            sb.Append("  CFCStatus: ").Append(CFCStatus).Append("\n");
            sb.Append("  CFCBusinessPhone: ").Append(CFCBusinessPhone).Append("\n");
            sb.Append("  CFCBusinessFax: ").Append(CFCBusinessFax).Append("\n");
            sb.Append("  CFCCellPhone: ").Append(CFCCellPhone).Append("\n");
            sb.Append("  CFCAddress: ").Append(CFCAddress).Append("\n");
            sb.Append("  CFCCity: ").Append(CFCCity).Append("\n");
            sb.Append("  CFCState: ").Append(CFCState).Append("\n");
            sb.Append("  CFCZip: ").Append(CFCZip).Append("\n");
            sb.Append("  CFCNotes: ").Append(CFCNotes).Append("\n");
            sb.Append("  CFCRepAE: ").Append(CFCRepAE).Append("\n");
            sb.Append("  CFCSRAEUserName: ").Append(CFCSRAEUserName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractTPO);
        }

        /// <summary>
        /// Returns true if LoanContractTPO instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractTPO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractTPO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SITEID == input.SITEID ||
                    (this.SITEID != null &&
                    this.SITEID.Equals(input.SITEID))
                ) && 
                (
                    this.RegisterDate == input.RegisterDate ||
                    (this.RegisterDate != null &&
                    this.RegisterDate.Equals(input.RegisterDate))
                ) && 
                (
                    this.SubmitDate == input.SubmitDate ||
                    (this.SubmitDate != null &&
                    this.SubmitDate.Equals(input.SubmitDate))
                ) && 
                (
                    this.UnderwriterReviewed == input.UnderwriterReviewed ||
                    (this.UnderwriterReviewed != null &&
                    this.UnderwriterReviewed.Equals(input.UnderwriterReviewed))
                ) && 
                (
                    this.FeeReviewStatus == input.FeeReviewStatus ||
                    (this.FeeReviewStatus != null &&
                    this.FeeReviewStatus.Equals(input.FeeReviewStatus))
                ) && 
                (
                    this.Archived == input.Archived ||
                    (this.Archived != null &&
                    this.Archived.Equals(input.Archived))
                ) && 
                (
                    this.ImportSource == input.ImportSource ||
                    (this.ImportSource != null &&
                    this.ImportSource.Equals(input.ImportSource))
                ) && 
                (
                    this.DocumentsReadyDate == input.DocumentsReadyDate ||
                    (this.DocumentsReadyDate != null &&
                    this.DocumentsReadyDate.Equals(input.DocumentsReadyDate))
                ) && 
                (
                    this.FeeReviewStatusDate == input.FeeReviewStatusDate ||
                    (this.FeeReviewStatusDate != null &&
                    this.FeeReviewStatusDate.Equals(input.FeeReviewStatusDate))
                ) && 
                (
                    this.FeeReviewComments == input.FeeReviewComments ||
                    (this.FeeReviewComments != null &&
                    this.FeeReviewComments.Equals(input.FeeReviewComments))
                ) && 
                (
                    this.LEIssuedBy == input.LEIssuedBy ||
                    (this.LEIssuedBy != null &&
                    this.LEIssuedBy.Equals(input.LEIssuedBy))
                ) && 
                (
                    this.CompanyName == input.CompanyName ||
                    (this.CompanyName != null &&
                    this.CompanyName.Equals(input.CompanyName))
                ) && 
                (
                    this.CompanyID == input.CompanyID ||
                    (this.CompanyID != null &&
                    this.CompanyID.Equals(input.CompanyID))
                ) && 
                (
                    this.CompanyOrganizationID == input.CompanyOrganizationID ||
                    (this.CompanyOrganizationID != null &&
                    this.CompanyOrganizationID.Equals(input.CompanyOrganizationID))
                ) && 
                (
                    this.CompanyLegalName == input.CompanyLegalName ||
                    (this.CompanyLegalName != null &&
                    this.CompanyLegalName.Equals(input.CompanyLegalName))
                ) && 
                (
                    this.CompanyAddress == input.CompanyAddress ||
                    (this.CompanyAddress != null &&
                    this.CompanyAddress.Equals(input.CompanyAddress))
                ) && 
                (
                    this.CompanyCity == input.CompanyCity ||
                    (this.CompanyCity != null &&
                    this.CompanyCity.Equals(input.CompanyCity))
                ) && 
                (
                    this.CompanyState == input.CompanyState ||
                    (this.CompanyState != null &&
                    this.CompanyState.Equals(input.CompanyState))
                ) && 
                (
                    this.CompanyZip == input.CompanyZip ||
                    (this.CompanyZip != null &&
                    this.CompanyZip.Equals(input.CompanyZip))
                ) && 
                (
                    this.CompanyPhone == input.CompanyPhone ||
                    (this.CompanyPhone != null &&
                    this.CompanyPhone.Equals(input.CompanyPhone))
                ) && 
                (
                    this.CompanyFax == input.CompanyFax ||
                    (this.CompanyFax != null &&
                    this.CompanyFax.Equals(input.CompanyFax))
                ) && 
                (
                    this.CompanyDBAName == input.CompanyDBAName ||
                    (this.CompanyDBAName != null &&
                    this.CompanyDBAName.Equals(input.CompanyDBAName))
                ) && 
                (
                    this.CompanyRating == input.CompanyRating ||
                    (this.CompanyRating != null &&
                    this.CompanyRating.Equals(input.CompanyRating))
                ) && 
                (
                    this.CompanyManagerName == input.CompanyManagerName ||
                    (this.CompanyManagerName != null &&
                    this.CompanyManagerName.Equals(input.CompanyManagerName))
                ) && 
                (
                    this.CompanyManagerEmail == input.CompanyManagerEmail ||
                    (this.CompanyManagerEmail != null &&
                    this.CompanyManagerEmail.Equals(input.CompanyManagerEmail))
                ) && 
                (
                    this.CompanyAEName == input.CompanyAEName ||
                    (this.CompanyAEName != null &&
                    this.CompanyAEName.Equals(input.CompanyAEName))
                ) && 
                (
                    this.CompanyAEUserName == input.CompanyAEUserName ||
                    (this.CompanyAEUserName != null &&
                    this.CompanyAEUserName.Equals(input.CompanyAEUserName))
                ) && 
                (
                    this.BranchName == input.BranchName ||
                    (this.BranchName != null &&
                    this.BranchName.Equals(input.BranchName))
                ) && 
                (
                    this.BranchID == input.BranchID ||
                    (this.BranchID != null &&
                    this.BranchID.Equals(input.BranchID))
                ) && 
                (
                    this.BranchOrganizationID == input.BranchOrganizationID ||
                    (this.BranchOrganizationID != null &&
                    this.BranchOrganizationID.Equals(input.BranchOrganizationID))
                ) && 
                (
                    this.BranchLegalName == input.BranchLegalName ||
                    (this.BranchLegalName != null &&
                    this.BranchLegalName.Equals(input.BranchLegalName))
                ) && 
                (
                    this.BranchAddress == input.BranchAddress ||
                    (this.BranchAddress != null &&
                    this.BranchAddress.Equals(input.BranchAddress))
                ) && 
                (
                    this.BranchCity == input.BranchCity ||
                    (this.BranchCity != null &&
                    this.BranchCity.Equals(input.BranchCity))
                ) && 
                (
                    this.BranchState == input.BranchState ||
                    (this.BranchState != null &&
                    this.BranchState.Equals(input.BranchState))
                ) && 
                (
                    this.BranchZip == input.BranchZip ||
                    (this.BranchZip != null &&
                    this.BranchZip.Equals(input.BranchZip))
                ) && 
                (
                    this.BranchPhone == input.BranchPhone ||
                    (this.BranchPhone != null &&
                    this.BranchPhone.Equals(input.BranchPhone))
                ) && 
                (
                    this.BranchFax == input.BranchFax ||
                    (this.BranchFax != null &&
                    this.BranchFax.Equals(input.BranchFax))
                ) && 
                (
                    this.BranchDBAName == input.BranchDBAName ||
                    (this.BranchDBAName != null &&
                    this.BranchDBAName.Equals(input.BranchDBAName))
                ) && 
                (
                    this.BranchRating == input.BranchRating ||
                    (this.BranchRating != null &&
                    this.BranchRating.Equals(input.BranchRating))
                ) && 
                (
                    this.BranchManagerName == input.BranchManagerName ||
                    (this.BranchManagerName != null &&
                    this.BranchManagerName.Equals(input.BranchManagerName))
                ) && 
                (
                    this.BranchManagerEmail == input.BranchManagerEmail ||
                    (this.BranchManagerEmail != null &&
                    this.BranchManagerEmail.Equals(input.BranchManagerEmail))
                ) && 
                (
                    this.BranchAEName == input.BranchAEName ||
                    (this.BranchAEName != null &&
                    this.BranchAEName.Equals(input.BranchAEName))
                ) && 
                (
                    this.BranchAEUserName == input.BranchAEUserName ||
                    (this.BranchAEUserName != null &&
                    this.BranchAEUserName.Equals(input.BranchAEUserName))
                ) && 
                (
                    this.LOName == input.LOName ||
                    (this.LOName != null &&
                    this.LOName.Equals(input.LOName))
                ) && 
                (
                    this.LOID == input.LOID ||
                    (this.LOID != null &&
                    this.LOID.Equals(input.LOID))
                ) && 
                (
                    this.LOEmail == input.LOEmail ||
                    (this.LOEmail != null &&
                    this.LOEmail.Equals(input.LOEmail))
                ) && 
                (
                    this.LOStatus == input.LOStatus ||
                    (this.LOStatus != null &&
                    this.LOStatus.Equals(input.LOStatus))
                ) && 
                (
                    this.LOBusinessPhone == input.LOBusinessPhone ||
                    (this.LOBusinessPhone != null &&
                    this.LOBusinessPhone.Equals(input.LOBusinessPhone))
                ) && 
                (
                    this.LOBusinessFax == input.LOBusinessFax ||
                    (this.LOBusinessFax != null &&
                    this.LOBusinessFax.Equals(input.LOBusinessFax))
                ) && 
                (
                    this.LOCellPhone == input.LOCellPhone ||
                    (this.LOCellPhone != null &&
                    this.LOCellPhone.Equals(input.LOCellPhone))
                ) && 
                (
                    this.LOAddress == input.LOAddress ||
                    (this.LOAddress != null &&
                    this.LOAddress.Equals(input.LOAddress))
                ) && 
                (
                    this.LOCity == input.LOCity ||
                    (this.LOCity != null &&
                    this.LOCity.Equals(input.LOCity))
                ) && 
                (
                    this.LOState == input.LOState ||
                    (this.LOState != null &&
                    this.LOState.Equals(input.LOState))
                ) && 
                (
                    this.LOZip == input.LOZip ||
                    (this.LOZip != null &&
                    this.LOZip.Equals(input.LOZip))
                ) && 
                (
                    this.LONotes == input.LONotes ||
                    (this.LONotes != null &&
                    this.LONotes.Equals(input.LONotes))
                ) && 
                (
                    this.LOAEName == input.LOAEName ||
                    (this.LOAEName != null &&
                    this.LOAEName.Equals(input.LOAEName))
                ) && 
                (
                    this.LOAEUserName == input.LOAEUserName ||
                    (this.LOAEUserName != null &&
                    this.LOAEUserName.Equals(input.LOAEUserName))
                ) && 
                (
                    this.LPName == input.LPName ||
                    (this.LPName != null &&
                    this.LPName.Equals(input.LPName))
                ) && 
                (
                    this.LPID == input.LPID ||
                    (this.LPID != null &&
                    this.LPID.Equals(input.LPID))
                ) && 
                (
                    this.LPEmail == input.LPEmail ||
                    (this.LPEmail != null &&
                    this.LPEmail.Equals(input.LPEmail))
                ) && 
                (
                    this.LPStatus == input.LPStatus ||
                    (this.LPStatus != null &&
                    this.LPStatus.Equals(input.LPStatus))
                ) && 
                (
                    this.LPBusinessPhone == input.LPBusinessPhone ||
                    (this.LPBusinessPhone != null &&
                    this.LPBusinessPhone.Equals(input.LPBusinessPhone))
                ) && 
                (
                    this.LPBusinessFax == input.LPBusinessFax ||
                    (this.LPBusinessFax != null &&
                    this.LPBusinessFax.Equals(input.LPBusinessFax))
                ) && 
                (
                    this.LPCellPhone == input.LPCellPhone ||
                    (this.LPCellPhone != null &&
                    this.LPCellPhone.Equals(input.LPCellPhone))
                ) && 
                (
                    this.LPAddress == input.LPAddress ||
                    (this.LPAddress != null &&
                    this.LPAddress.Equals(input.LPAddress))
                ) && 
                (
                    this.LPCity == input.LPCity ||
                    (this.LPCity != null &&
                    this.LPCity.Equals(input.LPCity))
                ) && 
                (
                    this.LPState == input.LPState ||
                    (this.LPState != null &&
                    this.LPState.Equals(input.LPState))
                ) && 
                (
                    this.LPZip == input.LPZip ||
                    (this.LPZip != null &&
                    this.LPZip.Equals(input.LPZip))
                ) && 
                (
                    this.LPNotes == input.LPNotes ||
                    (this.LPNotes != null &&
                    this.LPNotes.Equals(input.LPNotes))
                ) && 
                (
                    this.LPAEName == input.LPAEName ||
                    (this.LPAEName != null &&
                    this.LPAEName.Equals(input.LPAEName))
                ) && 
                (
                    this.LPAEUserName == input.LPAEUserName ||
                    (this.LPAEUserName != null &&
                    this.LPAEUserName.Equals(input.LPAEUserName))
                ) && 
                (
                    this.WatchListFlag == input.WatchListFlag ||
                    (this.WatchListFlag != null &&
                    this.WatchListFlag.Equals(input.WatchListFlag))
                ) && 
                (
                    this.WatchListReason == input.WatchListReason ||
                    (this.WatchListReason != null &&
                    this.WatchListReason.Equals(input.WatchListReason))
                ) && 
                (
                    this.UnderwritingDelegated == input.UnderwritingDelegated ||
                    (this.UnderwritingDelegated != null &&
                    this.UnderwritingDelegated.Equals(input.UnderwritingDelegated))
                ) && 
                (
                    this.InitialApplicationDate == input.InitialApplicationDate ||
                    (this.InitialApplicationDate != null &&
                    this.InitialApplicationDate.Equals(input.InitialApplicationDate))
                ) && 
                (
                    this.InitialSubmitDate == input.InitialSubmitDate ||
                    (this.InitialSubmitDate != null &&
                    this.InitialSubmitDate.Equals(input.InitialSubmitDate))
                ) && 
                (
                    this.TestAccountField == input.TestAccountField ||
                    (this.TestAccountField != null &&
                    this.TestAccountField.Equals(input.TestAccountField))
                ) && 
                (
                    this.ReadytoDiscloseDateUtc == input.ReadytoDiscloseDateUtc ||
                    (this.ReadytoDiscloseDateUtc != null &&
                    this.ReadytoDiscloseDateUtc.Equals(input.ReadytoDiscloseDateUtc))
                ) && 
                (
                    this.PurchaseStipsReviewed == input.PurchaseStipsReviewed ||
                    (this.PurchaseStipsReviewed != null &&
                    this.PurchaseStipsReviewed.Equals(input.PurchaseStipsReviewed))
                ) && 
                (
                    this.PurchaseStipsReadyDate == input.PurchaseStipsReadyDate ||
                    (this.PurchaseStipsReadyDate != null &&
                    this.PurchaseStipsReadyDate.Equals(input.PurchaseStipsReadyDate))
                ) && 
                (
                    this.CFCName == input.CFCName ||
                    (this.CFCName != null &&
                    this.CFCName.Equals(input.CFCName))
                ) && 
                (
                    this.CFCUserID == input.CFCUserID ||
                    (this.CFCUserID != null &&
                    this.CFCUserID.Equals(input.CFCUserID))
                ) && 
                (
                    this.CFCEmail == input.CFCEmail ||
                    (this.CFCEmail != null &&
                    this.CFCEmail.Equals(input.CFCEmail))
                ) && 
                (
                    this.CFCStatus == input.CFCStatus ||
                    (this.CFCStatus != null &&
                    this.CFCStatus.Equals(input.CFCStatus))
                ) && 
                (
                    this.CFCBusinessPhone == input.CFCBusinessPhone ||
                    (this.CFCBusinessPhone != null &&
                    this.CFCBusinessPhone.Equals(input.CFCBusinessPhone))
                ) && 
                (
                    this.CFCBusinessFax == input.CFCBusinessFax ||
                    (this.CFCBusinessFax != null &&
                    this.CFCBusinessFax.Equals(input.CFCBusinessFax))
                ) && 
                (
                    this.CFCCellPhone == input.CFCCellPhone ||
                    (this.CFCCellPhone != null &&
                    this.CFCCellPhone.Equals(input.CFCCellPhone))
                ) && 
                (
                    this.CFCAddress == input.CFCAddress ||
                    (this.CFCAddress != null &&
                    this.CFCAddress.Equals(input.CFCAddress))
                ) && 
                (
                    this.CFCCity == input.CFCCity ||
                    (this.CFCCity != null &&
                    this.CFCCity.Equals(input.CFCCity))
                ) && 
                (
                    this.CFCState == input.CFCState ||
                    (this.CFCState != null &&
                    this.CFCState.Equals(input.CFCState))
                ) && 
                (
                    this.CFCZip == input.CFCZip ||
                    (this.CFCZip != null &&
                    this.CFCZip.Equals(input.CFCZip))
                ) && 
                (
                    this.CFCNotes == input.CFCNotes ||
                    (this.CFCNotes != null &&
                    this.CFCNotes.Equals(input.CFCNotes))
                ) && 
                (
                    this.CFCRepAE == input.CFCRepAE ||
                    (this.CFCRepAE != null &&
                    this.CFCRepAE.Equals(input.CFCRepAE))
                ) && 
                (
                    this.CFCSRAEUserName == input.CFCSRAEUserName ||
                    (this.CFCSRAEUserName != null &&
                    this.CFCSRAEUserName.Equals(input.CFCSRAEUserName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SITEID != null)
                    hashCode = hashCode * 59 + this.SITEID.GetHashCode();
                if (this.RegisterDate != null)
                    hashCode = hashCode * 59 + this.RegisterDate.GetHashCode();
                if (this.SubmitDate != null)
                    hashCode = hashCode * 59 + this.SubmitDate.GetHashCode();
                if (this.UnderwriterReviewed != null)
                    hashCode = hashCode * 59 + this.UnderwriterReviewed.GetHashCode();
                if (this.FeeReviewStatus != null)
                    hashCode = hashCode * 59 + this.FeeReviewStatus.GetHashCode();
                if (this.Archived != null)
                    hashCode = hashCode * 59 + this.Archived.GetHashCode();
                if (this.ImportSource != null)
                    hashCode = hashCode * 59 + this.ImportSource.GetHashCode();
                if (this.DocumentsReadyDate != null)
                    hashCode = hashCode * 59 + this.DocumentsReadyDate.GetHashCode();
                if (this.FeeReviewStatusDate != null)
                    hashCode = hashCode * 59 + this.FeeReviewStatusDate.GetHashCode();
                if (this.FeeReviewComments != null)
                    hashCode = hashCode * 59 + this.FeeReviewComments.GetHashCode();
                if (this.LEIssuedBy != null)
                    hashCode = hashCode * 59 + this.LEIssuedBy.GetHashCode();
                if (this.CompanyName != null)
                    hashCode = hashCode * 59 + this.CompanyName.GetHashCode();
                if (this.CompanyID != null)
                    hashCode = hashCode * 59 + this.CompanyID.GetHashCode();
                if (this.CompanyOrganizationID != null)
                    hashCode = hashCode * 59 + this.CompanyOrganizationID.GetHashCode();
                if (this.CompanyLegalName != null)
                    hashCode = hashCode * 59 + this.CompanyLegalName.GetHashCode();
                if (this.CompanyAddress != null)
                    hashCode = hashCode * 59 + this.CompanyAddress.GetHashCode();
                if (this.CompanyCity != null)
                    hashCode = hashCode * 59 + this.CompanyCity.GetHashCode();
                if (this.CompanyState != null)
                    hashCode = hashCode * 59 + this.CompanyState.GetHashCode();
                if (this.CompanyZip != null)
                    hashCode = hashCode * 59 + this.CompanyZip.GetHashCode();
                if (this.CompanyPhone != null)
                    hashCode = hashCode * 59 + this.CompanyPhone.GetHashCode();
                if (this.CompanyFax != null)
                    hashCode = hashCode * 59 + this.CompanyFax.GetHashCode();
                if (this.CompanyDBAName != null)
                    hashCode = hashCode * 59 + this.CompanyDBAName.GetHashCode();
                if (this.CompanyRating != null)
                    hashCode = hashCode * 59 + this.CompanyRating.GetHashCode();
                if (this.CompanyManagerName != null)
                    hashCode = hashCode * 59 + this.CompanyManagerName.GetHashCode();
                if (this.CompanyManagerEmail != null)
                    hashCode = hashCode * 59 + this.CompanyManagerEmail.GetHashCode();
                if (this.CompanyAEName != null)
                    hashCode = hashCode * 59 + this.CompanyAEName.GetHashCode();
                if (this.CompanyAEUserName != null)
                    hashCode = hashCode * 59 + this.CompanyAEUserName.GetHashCode();
                if (this.BranchName != null)
                    hashCode = hashCode * 59 + this.BranchName.GetHashCode();
                if (this.BranchID != null)
                    hashCode = hashCode * 59 + this.BranchID.GetHashCode();
                if (this.BranchOrganizationID != null)
                    hashCode = hashCode * 59 + this.BranchOrganizationID.GetHashCode();
                if (this.BranchLegalName != null)
                    hashCode = hashCode * 59 + this.BranchLegalName.GetHashCode();
                if (this.BranchAddress != null)
                    hashCode = hashCode * 59 + this.BranchAddress.GetHashCode();
                if (this.BranchCity != null)
                    hashCode = hashCode * 59 + this.BranchCity.GetHashCode();
                if (this.BranchState != null)
                    hashCode = hashCode * 59 + this.BranchState.GetHashCode();
                if (this.BranchZip != null)
                    hashCode = hashCode * 59 + this.BranchZip.GetHashCode();
                if (this.BranchPhone != null)
                    hashCode = hashCode * 59 + this.BranchPhone.GetHashCode();
                if (this.BranchFax != null)
                    hashCode = hashCode * 59 + this.BranchFax.GetHashCode();
                if (this.BranchDBAName != null)
                    hashCode = hashCode * 59 + this.BranchDBAName.GetHashCode();
                if (this.BranchRating != null)
                    hashCode = hashCode * 59 + this.BranchRating.GetHashCode();
                if (this.BranchManagerName != null)
                    hashCode = hashCode * 59 + this.BranchManagerName.GetHashCode();
                if (this.BranchManagerEmail != null)
                    hashCode = hashCode * 59 + this.BranchManagerEmail.GetHashCode();
                if (this.BranchAEName != null)
                    hashCode = hashCode * 59 + this.BranchAEName.GetHashCode();
                if (this.BranchAEUserName != null)
                    hashCode = hashCode * 59 + this.BranchAEUserName.GetHashCode();
                if (this.LOName != null)
                    hashCode = hashCode * 59 + this.LOName.GetHashCode();
                if (this.LOID != null)
                    hashCode = hashCode * 59 + this.LOID.GetHashCode();
                if (this.LOEmail != null)
                    hashCode = hashCode * 59 + this.LOEmail.GetHashCode();
                if (this.LOStatus != null)
                    hashCode = hashCode * 59 + this.LOStatus.GetHashCode();
                if (this.LOBusinessPhone != null)
                    hashCode = hashCode * 59 + this.LOBusinessPhone.GetHashCode();
                if (this.LOBusinessFax != null)
                    hashCode = hashCode * 59 + this.LOBusinessFax.GetHashCode();
                if (this.LOCellPhone != null)
                    hashCode = hashCode * 59 + this.LOCellPhone.GetHashCode();
                if (this.LOAddress != null)
                    hashCode = hashCode * 59 + this.LOAddress.GetHashCode();
                if (this.LOCity != null)
                    hashCode = hashCode * 59 + this.LOCity.GetHashCode();
                if (this.LOState != null)
                    hashCode = hashCode * 59 + this.LOState.GetHashCode();
                if (this.LOZip != null)
                    hashCode = hashCode * 59 + this.LOZip.GetHashCode();
                if (this.LONotes != null)
                    hashCode = hashCode * 59 + this.LONotes.GetHashCode();
                if (this.LOAEName != null)
                    hashCode = hashCode * 59 + this.LOAEName.GetHashCode();
                if (this.LOAEUserName != null)
                    hashCode = hashCode * 59 + this.LOAEUserName.GetHashCode();
                if (this.LPName != null)
                    hashCode = hashCode * 59 + this.LPName.GetHashCode();
                if (this.LPID != null)
                    hashCode = hashCode * 59 + this.LPID.GetHashCode();
                if (this.LPEmail != null)
                    hashCode = hashCode * 59 + this.LPEmail.GetHashCode();
                if (this.LPStatus != null)
                    hashCode = hashCode * 59 + this.LPStatus.GetHashCode();
                if (this.LPBusinessPhone != null)
                    hashCode = hashCode * 59 + this.LPBusinessPhone.GetHashCode();
                if (this.LPBusinessFax != null)
                    hashCode = hashCode * 59 + this.LPBusinessFax.GetHashCode();
                if (this.LPCellPhone != null)
                    hashCode = hashCode * 59 + this.LPCellPhone.GetHashCode();
                if (this.LPAddress != null)
                    hashCode = hashCode * 59 + this.LPAddress.GetHashCode();
                if (this.LPCity != null)
                    hashCode = hashCode * 59 + this.LPCity.GetHashCode();
                if (this.LPState != null)
                    hashCode = hashCode * 59 + this.LPState.GetHashCode();
                if (this.LPZip != null)
                    hashCode = hashCode * 59 + this.LPZip.GetHashCode();
                if (this.LPNotes != null)
                    hashCode = hashCode * 59 + this.LPNotes.GetHashCode();
                if (this.LPAEName != null)
                    hashCode = hashCode * 59 + this.LPAEName.GetHashCode();
                if (this.LPAEUserName != null)
                    hashCode = hashCode * 59 + this.LPAEUserName.GetHashCode();
                if (this.WatchListFlag != null)
                    hashCode = hashCode * 59 + this.WatchListFlag.GetHashCode();
                if (this.WatchListReason != null)
                    hashCode = hashCode * 59 + this.WatchListReason.GetHashCode();
                if (this.UnderwritingDelegated != null)
                    hashCode = hashCode * 59 + this.UnderwritingDelegated.GetHashCode();
                if (this.InitialApplicationDate != null)
                    hashCode = hashCode * 59 + this.InitialApplicationDate.GetHashCode();
                if (this.InitialSubmitDate != null)
                    hashCode = hashCode * 59 + this.InitialSubmitDate.GetHashCode();
                if (this.TestAccountField != null)
                    hashCode = hashCode * 59 + this.TestAccountField.GetHashCode();
                if (this.ReadytoDiscloseDateUtc != null)
                    hashCode = hashCode * 59 + this.ReadytoDiscloseDateUtc.GetHashCode();
                if (this.PurchaseStipsReviewed != null)
                    hashCode = hashCode * 59 + this.PurchaseStipsReviewed.GetHashCode();
                if (this.PurchaseStipsReadyDate != null)
                    hashCode = hashCode * 59 + this.PurchaseStipsReadyDate.GetHashCode();
                if (this.CFCName != null)
                    hashCode = hashCode * 59 + this.CFCName.GetHashCode();
                if (this.CFCUserID != null)
                    hashCode = hashCode * 59 + this.CFCUserID.GetHashCode();
                if (this.CFCEmail != null)
                    hashCode = hashCode * 59 + this.CFCEmail.GetHashCode();
                if (this.CFCStatus != null)
                    hashCode = hashCode * 59 + this.CFCStatus.GetHashCode();
                if (this.CFCBusinessPhone != null)
                    hashCode = hashCode * 59 + this.CFCBusinessPhone.GetHashCode();
                if (this.CFCBusinessFax != null)
                    hashCode = hashCode * 59 + this.CFCBusinessFax.GetHashCode();
                if (this.CFCCellPhone != null)
                    hashCode = hashCode * 59 + this.CFCCellPhone.GetHashCode();
                if (this.CFCAddress != null)
                    hashCode = hashCode * 59 + this.CFCAddress.GetHashCode();
                if (this.CFCCity != null)
                    hashCode = hashCode * 59 + this.CFCCity.GetHashCode();
                if (this.CFCState != null)
                    hashCode = hashCode * 59 + this.CFCState.GetHashCode();
                if (this.CFCZip != null)
                    hashCode = hashCode * 59 + this.CFCZip.GetHashCode();
                if (this.CFCNotes != null)
                    hashCode = hashCode * 59 + this.CFCNotes.GetHashCode();
                if (this.CFCRepAE != null)
                    hashCode = hashCode * 59 + this.CFCRepAE.GetHashCode();
                if (this.CFCSRAEUserName != null)
                    hashCode = hashCode * 59 + this.CFCSRAEUserName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
