/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractMiscellaneous
    /// </summary>
    [DataContract]
    public partial class LoanContractMiscellaneous :  IEquatable<LoanContractMiscellaneous>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerDescription1
        /// </summary>
        [DataMember(Name="borrowerDescription1", EmitDefaultValue=false)]
        public string BorrowerDescription1 { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerDescription2
        /// </summary>
        [DataMember(Name="borrowerDescription2", EmitDefaultValue=false)]
        public string BorrowerDescription2 { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerDescription3
        /// </summary>
        [DataMember(Name="borrowerDescription3", EmitDefaultValue=false)]
        public string BorrowerDescription3 { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerDescription4
        /// </summary>
        [DataMember(Name="borrowerDescription4", EmitDefaultValue=false)]
        public string BorrowerDescription4 { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerDescription5
        /// </summary>
        [DataMember(Name="borrowerDescription5", EmitDefaultValue=false)]
        public string BorrowerDescription5 { get; set; }

        /// <summary>
        /// Gets or Sets ClosingCostProgramFile
        /// </summary>
        [DataMember(Name="closingCostProgramFile", EmitDefaultValue=false)]
        public string ClosingCostProgramFile { get; set; }

        /// <summary>
        /// Gets or Sets ClosingTaxYear
        /// </summary>
        [DataMember(Name="closingTaxYear", EmitDefaultValue=false)]
        public string ClosingTaxYear { get; set; }

        /// <summary>
        /// Gets or Sets ClosingTaxYearInterestReceived
        /// </summary>
        [DataMember(Name="closingTaxYearInterestReceived", EmitDefaultValue=false)]
        public double? ClosingTaxYearInterestReceived { get; set; }

        /// <summary>
        /// Gets or Sets DataTracLoanId
        /// </summary>
        [DataMember(Name="dataTracLoanId", EmitDefaultValue=false)]
        public string DataTracLoanId { get; set; }

        /// <summary>
        /// Gets or Sets DocSetFile
        /// </summary>
        [DataMember(Name="docSetFile", EmitDefaultValue=false)]
        public string DocSetFile { get; set; }

        /// <summary>
        /// Gets or Sets FactorForRevolvingDebt
        /// </summary>
        [DataMember(Name="factorForRevolvingDebt", EmitDefaultValue=false)]
        public int? FactorForRevolvingDebt { get; set; }

        /// <summary>
        /// Gets or Sets FloodInsuranceExcluded
        /// </summary>
        [DataMember(Name="floodInsuranceExcluded", EmitDefaultValue=false)]
        public string FloodInsuranceExcluded { get; set; }

        /// <summary>
        /// Gets or Sets FormListFile
        /// </summary>
        [DataMember(Name="formListFile", EmitDefaultValue=false)]
        public string FormListFile { get; set; }

        /// <summary>
        /// Gets or Sets HousingExpenseIntRate1
        /// </summary>
        [DataMember(Name="housingExpenseIntRate1", EmitDefaultValue=false)]
        public double? HousingExpenseIntRate1 { get; set; }

        /// <summary>
        /// Gets or Sets HousingExpenseIntRate2
        /// </summary>
        [DataMember(Name="housingExpenseIntRate2", EmitDefaultValue=false)]
        public double? HousingExpenseIntRate2 { get; set; }

        /// <summary>
        /// Gets or Sets HousingExpenseLoanAmt1
        /// </summary>
        [DataMember(Name="housingExpenseLoanAmt1", EmitDefaultValue=false)]
        public double? HousingExpenseLoanAmt1 { get; set; }

        /// <summary>
        /// Gets or Sets HousingExpenseLoanAmt2
        /// </summary>
        [DataMember(Name="housingExpenseLoanAmt2", EmitDefaultValue=false)]
        public double? HousingExpenseLoanAmt2 { get; set; }

        /// <summary>
        /// Gets or Sets HousingExpensePayment1
        /// </summary>
        [DataMember(Name="housingExpensePayment1", EmitDefaultValue=false)]
        public double? HousingExpensePayment1 { get; set; }

        /// <summary>
        /// Gets or Sets HousingExpensePayment2
        /// </summary>
        [DataMember(Name="housingExpensePayment2", EmitDefaultValue=false)]
        public double? HousingExpensePayment2 { get; set; }

        /// <summary>
        /// Gets or Sets HousingExpenseTerm1
        /// </summary>
        [DataMember(Name="housingExpenseTerm1", EmitDefaultValue=false)]
        public int? HousingExpenseTerm1 { get; set; }

        /// <summary>
        /// Gets or Sets HousingExpenseTerm2
        /// </summary>
        [DataMember(Name="housingExpenseTerm2", EmitDefaultValue=false)]
        public int? HousingExpenseTerm2 { get; set; }

        /// <summary>
        /// Gets or Sets Line1006Excluded
        /// </summary>
        [DataMember(Name="line1006Excluded", EmitDefaultValue=false)]
        public string Line1006Excluded { get; set; }

        /// <summary>
        /// Gets or Sets Line1007Excluded
        /// </summary>
        [DataMember(Name="line1007Excluded", EmitDefaultValue=false)]
        public string Line1007Excluded { get; set; }

        /// <summary>
        /// Gets or Sets Line1008Excluded
        /// </summary>
        [DataMember(Name="line1008Excluded", EmitDefaultValue=false)]
        public string Line1008Excluded { get; set; }

        /// <summary>
        /// Gets or Sets Line1010Excluded
        /// </summary>
        [DataMember(Name="line1010Excluded", EmitDefaultValue=false)]
        public string Line1010Excluded { get; set; }

        /// <summary>
        /// Gets or Sets LoanProgramFile
        /// </summary>
        [DataMember(Name="loanProgramFile", EmitDefaultValue=false)]
        public string LoanProgramFile { get; set; }

        /// <summary>
        /// Gets or Sets LoanTemplateFile
        /// </summary>
        [DataMember(Name="loanTemplateFile", EmitDefaultValue=false)]
        public string LoanTemplateFile { get; set; }

        /// <summary>
        /// Gets or Sets MaventAutoOrderIndicator
        /// </summary>
        [DataMember(Name="maventAutoOrderIndicator", EmitDefaultValue=false)]
        public bool? MaventAutoOrderIndicator { get; set; }

        /// <summary>
        /// Gets or Sets MaventCraxResult
        /// </summary>
        [DataMember(Name="maventCraxResult", EmitDefaultValue=false)]
        public string MaventCraxResult { get; set; }

        /// <summary>
        /// Gets or Sets MaventEnterpriseResult
        /// </summary>
        [DataMember(Name="maventEnterpriseResult", EmitDefaultValue=false)]
        public string MaventEnterpriseResult { get; set; }

        /// <summary>
        /// Gets or Sets MaventGseResult
        /// </summary>
        [DataMember(Name="maventGseResult", EmitDefaultValue=false)]
        public string MaventGseResult { get; set; }

        /// <summary>
        /// Gets or Sets MaventHighCostResult
        /// </summary>
        [DataMember(Name="maventHighCostResult", EmitDefaultValue=false)]
        public string MaventHighCostResult { get; set; }

        /// <summary>
        /// Gets or Sets MaventHmdaResult
        /// </summary>
        [DataMember(Name="maventHmdaResult", EmitDefaultValue=false)]
        public string MaventHmdaResult { get; set; }

        /// <summary>
        /// Gets or Sets MaventHpmlResult
        /// </summary>
        [DataMember(Name="maventHpmlResult", EmitDefaultValue=false)]
        public string MaventHpmlResult { get; set; }

        /// <summary>
        /// Gets or Sets MaventLicenseResult
        /// </summary>
        [DataMember(Name="maventLicenseResult", EmitDefaultValue=false)]
        public string MaventLicenseResult { get; set; }

        /// <summary>
        /// Gets or Sets MaventNmlsResult
        /// </summary>
        [DataMember(Name="maventNmlsResult", EmitDefaultValue=false)]
        public string MaventNmlsResult { get; set; }

        /// <summary>
        /// Gets or Sets MaventOfacResult
        /// </summary>
        [DataMember(Name="maventOfacResult", EmitDefaultValue=false)]
        public string MaventOfacResult { get; set; }

        /// <summary>
        /// Gets or Sets MaventOrderedBy
        /// </summary>
        [DataMember(Name="maventOrderedBy", EmitDefaultValue=false)]
        public string MaventOrderedBy { get; set; }

        /// <summary>
        /// Gets or Sets MaventOrderedDate
        /// </summary>
        [DataMember(Name="maventOrderedDate", EmitDefaultValue=false)]
        public DateTime? MaventOrderedDate { get; set; }

        /// <summary>
        /// Gets or Sets MaventOtherResult
        /// </summary>
        [DataMember(Name="maventOtherResult", EmitDefaultValue=false)]
        public string MaventOtherResult { get; set; }

        /// <summary>
        /// Gets or Sets MaventReviewResult
        /// </summary>
        [DataMember(Name="maventReviewResult", EmitDefaultValue=false)]
        public string MaventReviewResult { get; set; }

        /// <summary>
        /// Gets or Sets MaventStateResult
        /// </summary>
        [DataMember(Name="maventStateResult", EmitDefaultValue=false)]
        public string MaventStateResult { get; set; }

        /// <summary>
        /// Gets or Sets MaventTilaRorResult
        /// </summary>
        [DataMember(Name="maventTilaRorResult", EmitDefaultValue=false)]
        public string MaventTilaRorResult { get; set; }

        /// <summary>
        /// Gets or Sets MaventTilaToleranceResult
        /// </summary>
        [DataMember(Name="maventTilaToleranceResult", EmitDefaultValue=false)]
        public string MaventTilaToleranceResult { get; set; }

        /// <summary>
        /// Gets or Sets MiscDataFile
        /// </summary>
        [DataMember(Name="miscDataFile", EmitDefaultValue=false)]
        public string MiscDataFile { get; set; }

        /// <summary>
        /// Gets or Sets MonthsToExclude
        /// </summary>
        [DataMember(Name="monthsToExclude", EmitDefaultValue=false)]
        public int? MonthsToExclude { get; set; }

        /// <summary>
        /// Gets or Sets OptimalBlueHistoryData
        /// </summary>
        [DataMember(Name="optimalBlueHistoryData", EmitDefaultValue=false)]
        public string OptimalBlueHistoryData { get; set; }

        /// <summary>
        /// Gets or Sets OptimalBlueRequest
        /// </summary>
        [DataMember(Name="optimalBlueRequest", EmitDefaultValue=false)]
        public string OptimalBlueRequest { get; set; }

        /// <summary>
        /// Gets or Sets OptimalBlueResponse
        /// </summary>
        [DataMember(Name="optimalBlueResponse", EmitDefaultValue=false)]
        public string OptimalBlueResponse { get; set; }

        /// <summary>
        /// Gets or Sets OtherPresentHousingExpense
        /// </summary>
        [DataMember(Name="otherPresentHousingExpense", EmitDefaultValue=false)]
        public double? OtherPresentHousingExpense { get; set; }

        /// <summary>
        /// Gets or Sets ParticipateHomePoints
        /// </summary>
        [DataMember(Name="participateHomePoints", EmitDefaultValue=false)]
        public bool? ParticipateHomePoints { get; set; }

        /// <summary>
        /// Gets or Sets PartnerEmail
        /// </summary>
        [DataMember(Name="partnerEmail", EmitDefaultValue=false)]
        public string PartnerEmail { get; set; }

        /// <summary>
        /// Gets or Sets PartnerName
        /// </summary>
        [DataMember(Name="partnerName", EmitDefaultValue=false)]
        public string PartnerName { get; set; }

        /// <summary>
        /// Gets or Sets PartnerPhone
        /// </summary>
        [DataMember(Name="partnerPhone", EmitDefaultValue=false)]
        public string PartnerPhone { get; set; }

        /// <summary>
        /// Gets or Sets PointsPaid
        /// </summary>
        [DataMember(Name="pointsPaid", EmitDefaultValue=false)]
        public double? PointsPaid { get; set; }

        /// <summary>
        /// Gets or Sets RateRegistrationExpirationDate
        /// </summary>
        [DataMember(Name="rateRegistrationExpirationDate", EmitDefaultValue=false)]
        public DateTime? RateRegistrationExpirationDate { get; set; }

        /// <summary>
        /// Gets or Sets RateRegistrationInvestorName
        /// </summary>
        [DataMember(Name="rateRegistrationInvestorName", EmitDefaultValue=false)]
        public string RateRegistrationInvestorName { get; set; }

        /// <summary>
        /// Gets or Sets RateRegistrationLoanIsRegistered
        /// </summary>
        [DataMember(Name="rateRegistrationLoanIsRegistered", EmitDefaultValue=false)]
        public bool? RateRegistrationLoanIsRegistered { get; set; }

        /// <summary>
        /// Gets or Sets RateRegistrationReference
        /// </summary>
        [DataMember(Name="rateRegistrationReference", EmitDefaultValue=false)]
        public string RateRegistrationReference { get; set; }

        /// <summary>
        /// Gets or Sets RateRegistrationRegisteredBy
        /// </summary>
        [DataMember(Name="rateRegistrationRegisteredBy", EmitDefaultValue=false)]
        public string RateRegistrationRegisteredBy { get; set; }

        /// <summary>
        /// Gets or Sets RateRegistrationRegisteredUserId
        /// </summary>
        [DataMember(Name="rateRegistrationRegisteredUserId", EmitDefaultValue=false)]
        public string RateRegistrationRegisteredUserId { get; set; }

        /// <summary>
        /// Gets or Sets RateRegistrationRegistrationDate
        /// </summary>
        [DataMember(Name="rateRegistrationRegistrationDate", EmitDefaultValue=false)]
        public DateTime? RateRegistrationRegistrationDate { get; set; }

        /// <summary>
        /// Gets or Sets RefundOrOverpaidInterest
        /// </summary>
        [DataMember(Name="refundOrOverpaidInterest", EmitDefaultValue=false)]
        public double? RefundOrOverpaidInterest { get; set; }

        /// <summary>
        /// Gets or Sets SchoolTaxExcluded
        /// </summary>
        [DataMember(Name="schoolTaxExcluded", EmitDefaultValue=false)]
        public string SchoolTaxExcluded { get; set; }

        /// <summary>
        /// Gets or Sets StatusUrl
        /// </summary>
        [DataMember(Name="statusUrl", EmitDefaultValue=false)]
        public string StatusUrl { get; set; }

        /// <summary>
        /// Gets or Sets SubmitDate
        /// </summary>
        [DataMember(Name="submitDate", EmitDefaultValue=false)]
        public DateTime? SubmitDate { get; set; }

        /// <summary>
        /// Gets or Sets SubTaxYear
        /// </summary>
        [DataMember(Name="subTaxYear", EmitDefaultValue=false)]
        public string SubTaxYear { get; set; }

        /// <summary>
        /// Gets or Sets SubTaxYearInterestReceived
        /// </summary>
        [DataMember(Name="subTaxYearInterestReceived", EmitDefaultValue=false)]
        public double? SubTaxYearInterestReceived { get; set; }

        /// <summary>
        /// Gets or Sets SubTaxYearPointsPaid
        /// </summary>
        [DataMember(Name="subTaxYearPointsPaid", EmitDefaultValue=false)]
        public double? SubTaxYearPointsPaid { get; set; }

        /// <summary>
        /// Gets or Sets SubTaxYearRefundOrOverpaidInterest
        /// </summary>
        [DataMember(Name="subTaxYearRefundOrOverpaidInterest", EmitDefaultValue=false)]
        public double? SubTaxYearRefundOrOverpaidInterest { get; set; }

        /// <summary>
        /// Gets or Sets TaxId
        /// </summary>
        [DataMember(Name="taxId", EmitDefaultValue=false)]
        public string TaxId { get; set; }

        /// <summary>
        /// Gets or Sets TotalBox4
        /// </summary>
        [DataMember(Name="totalBox4", EmitDefaultValue=false)]
        public double? TotalBox4 { get; set; }

        /// <summary>
        /// Gets or Sets TotalYearlyMi
        /// </summary>
        [DataMember(Name="totalYearlyMi", EmitDefaultValue=false)]
        public double? TotalYearlyMi { get; set; }

        /// <summary>
        /// Gets or Sets UseGfeTax
        /// </summary>
        [DataMember(Name="useGfeTax", EmitDefaultValue=false)]
        public string UseGfeTax { get; set; }

        /// <summary>
        /// Gets or Sets UseRegZMi
        /// </summary>
        [DataMember(Name="useRegZMi", EmitDefaultValue=false)]
        public string UseRegZMi { get; set; }

        /// <summary>
        /// Gets or Sets FannieDuAutoOrderIndicator
        /// </summary>
        [DataMember(Name="fannieDuAutoOrderIndicator", EmitDefaultValue=false)]
        public bool? FannieDuAutoOrderIndicator { get; set; }

        /// <summary>
        /// Gets or Sets FannieEcAutoOrderIndicator
        /// </summary>
        [DataMember(Name="fannieEcAutoOrderIndicator", EmitDefaultValue=false)]
        public bool? FannieEcAutoOrderIndicator { get; set; }

        /// <summary>
        /// Gets or Sets OutstandingMtgPrincipal
        /// </summary>
        [DataMember(Name="outstandingMtgPrincipal", EmitDefaultValue=false)]
        public double? OutstandingMtgPrincipal { get; set; }

        /// <summary>
        /// Gets or Sets OutstandingMtgPrincipalDate
        /// </summary>
        [DataMember(Name="outstandingMtgPrincipalDate", EmitDefaultValue=false)]
        public DateTime? OutstandingMtgPrincipalDate { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name="city", EmitDefaultValue=false)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets Zip
        /// </summary>
        [DataMember(Name="zip", EmitDefaultValue=false)]
        public string Zip { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerDescription6
        /// </summary>
        [DataMember(Name="borrowerDescription6", EmitDefaultValue=false)]
        public string BorrowerDescription6 { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerDescription7
        /// </summary>
        [DataMember(Name="borrowerDescription7", EmitDefaultValue=false)]
        public string BorrowerDescription7 { get; set; }

        /// <summary>
        /// Gets or Sets IsSameAddresswithPayer
        /// </summary>
        [DataMember(Name="isSameAddresswithPayer", EmitDefaultValue=false)]
        public bool? IsSameAddresswithPayer { get; set; }

        /// <summary>
        /// Gets or Sets CopyFromSubjectProperty
        /// </summary>
        [DataMember(Name="copyFromSubjectProperty", EmitDefaultValue=false)]
        public bool? CopyFromSubjectProperty { get; set; }

        /// <summary>
        /// Gets or Sets FreddieLPAAutoOrderIndicator
        /// </summary>
        [DataMember(Name="freddieLPAAutoOrderIndicator", EmitDefaultValue=false)]
        public bool? FreddieLPAAutoOrderIndicator { get; set; }

        /// <summary>
        /// Gets or Sets FreddieLQAAutoOrderIndicator
        /// </summary>
        [DataMember(Name="freddieLQAAutoOrderIndicator", EmitDefaultValue=false)]
        public bool? FreddieLQAAutoOrderIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ContactTitle
        /// </summary>
        [DataMember(Name="contactTitle", EmitDefaultValue=false)]
        public string ContactTitle { get; set; }

        /// <summary>
        /// Gets or Sets ContactName
        /// </summary>
        [DataMember(Name="contactName", EmitDefaultValue=false)]
        public string ContactName { get; set; }

        /// <summary>
        /// Gets or Sets ContactFax
        /// </summary>
        [DataMember(Name="contactFax", EmitDefaultValue=false)]
        public string ContactFax { get; set; }

        /// <summary>
        /// Gets or Sets ContactPhone
        /// </summary>
        [DataMember(Name="contactPhone", EmitDefaultValue=false)]
        public string ContactPhone { get; set; }

        /// <summary>
        /// Gets or Sets PrintStateLicenseOn1003
        /// </summary>
        [DataMember(Name="printStateLicenseOn1003", EmitDefaultValue=false)]
        public bool? PrintStateLicenseOn1003 { get; set; }

        /// <summary>
        /// Gets or Sets MaventATRQMResult
        /// </summary>
        [DataMember(Name="maventATRQMResult", EmitDefaultValue=false)]
        public string MaventATRQMResult { get; set; }

        /// <summary>
        /// Gets or Sets MIPremiums
        /// </summary>
        [DataMember(Name="mIPremiums", EmitDefaultValue=false)]
        public double? MIPremiums { get; set; }

        /// <summary>
        /// Gets or Sets SubTaxYearMIPremiums
        /// </summary>
        [DataMember(Name="subTaxYearMIPremiums", EmitDefaultValue=false)]
        public double? SubTaxYearMIPremiums { get; set; }

        /// <summary>
        /// Gets or Sets LoanFileSequenceNumber
        /// </summary>
        [DataMember(Name="loanFileSequenceNumber", EmitDefaultValue=false)]
        public int? LoanFileSequenceNumber { get; set; }

        /// <summary>
        /// Gets or Sets ComplianceVersionCD3X1505
        /// </summary>
        [DataMember(Name="complianceVersionCD3X1505", EmitDefaultValue=false)]
        public string ComplianceVersionCD3X1505 { get; set; }

        /// <summary>
        /// Gets or Sets SavedLogVersion
        /// </summary>
        [DataMember(Name="savedLogVersion", EmitDefaultValue=false)]
        public string SavedLogVersion { get; set; }

        /// <summary>
        /// Gets or Sets TPOConnectStatusUpdated
        /// </summary>
        [DataMember(Name="tPOConnectStatusUpdated", EmitDefaultValue=false)]
        public bool? TPOConnectStatusUpdated { get; set; }

        /// <summary>
        /// Gets or Sets AllRoles
        /// </summary>
        [DataMember(Name="allRoles", EmitDefaultValue=false)]
        public string AllRoles { get; set; }

        /// <summary>
        /// Gets or Sets AllUserInfo
        /// </summary>
        [DataMember(Name="allUserInfo", EmitDefaultValue=false)]
        public string AllUserInfo { get; set; }

        /// <summary>
        /// Gets or Sets LenderFeeQuoteID
        /// </summary>
        [DataMember(Name="lenderFeeQuoteID", EmitDefaultValue=false)]
        public string LenderFeeQuoteID { get; set; }

        /// <summary>
        /// Gets or Sets PartnerFeeQuoteID
        /// </summary>
        [DataMember(Name="partnerFeeQuoteID", EmitDefaultValue=false)]
        public string PartnerFeeQuoteID { get; set; }

        /// <summary>
        /// Gets or Sets LastFeeImportDate
        /// </summary>
        [DataMember(Name="lastFeeImportDate", EmitDefaultValue=false)]
        public DateTime? LastFeeImportDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractMiscellaneous {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  BorrowerDescription1: ").Append(BorrowerDescription1).Append("\n");
            sb.Append("  BorrowerDescription2: ").Append(BorrowerDescription2).Append("\n");
            sb.Append("  BorrowerDescription3: ").Append(BorrowerDescription3).Append("\n");
            sb.Append("  BorrowerDescription4: ").Append(BorrowerDescription4).Append("\n");
            sb.Append("  BorrowerDescription5: ").Append(BorrowerDescription5).Append("\n");
            sb.Append("  ClosingCostProgramFile: ").Append(ClosingCostProgramFile).Append("\n");
            sb.Append("  ClosingTaxYear: ").Append(ClosingTaxYear).Append("\n");
            sb.Append("  ClosingTaxYearInterestReceived: ").Append(ClosingTaxYearInterestReceived).Append("\n");
            sb.Append("  DataTracLoanId: ").Append(DataTracLoanId).Append("\n");
            sb.Append("  DocSetFile: ").Append(DocSetFile).Append("\n");
            sb.Append("  FactorForRevolvingDebt: ").Append(FactorForRevolvingDebt).Append("\n");
            sb.Append("  FloodInsuranceExcluded: ").Append(FloodInsuranceExcluded).Append("\n");
            sb.Append("  FormListFile: ").Append(FormListFile).Append("\n");
            sb.Append("  HousingExpenseIntRate1: ").Append(HousingExpenseIntRate1).Append("\n");
            sb.Append("  HousingExpenseIntRate2: ").Append(HousingExpenseIntRate2).Append("\n");
            sb.Append("  HousingExpenseLoanAmt1: ").Append(HousingExpenseLoanAmt1).Append("\n");
            sb.Append("  HousingExpenseLoanAmt2: ").Append(HousingExpenseLoanAmt2).Append("\n");
            sb.Append("  HousingExpensePayment1: ").Append(HousingExpensePayment1).Append("\n");
            sb.Append("  HousingExpensePayment2: ").Append(HousingExpensePayment2).Append("\n");
            sb.Append("  HousingExpenseTerm1: ").Append(HousingExpenseTerm1).Append("\n");
            sb.Append("  HousingExpenseTerm2: ").Append(HousingExpenseTerm2).Append("\n");
            sb.Append("  Line1006Excluded: ").Append(Line1006Excluded).Append("\n");
            sb.Append("  Line1007Excluded: ").Append(Line1007Excluded).Append("\n");
            sb.Append("  Line1008Excluded: ").Append(Line1008Excluded).Append("\n");
            sb.Append("  Line1010Excluded: ").Append(Line1010Excluded).Append("\n");
            sb.Append("  LoanProgramFile: ").Append(LoanProgramFile).Append("\n");
            sb.Append("  LoanTemplateFile: ").Append(LoanTemplateFile).Append("\n");
            sb.Append("  MaventAutoOrderIndicator: ").Append(MaventAutoOrderIndicator).Append("\n");
            sb.Append("  MaventCraxResult: ").Append(MaventCraxResult).Append("\n");
            sb.Append("  MaventEnterpriseResult: ").Append(MaventEnterpriseResult).Append("\n");
            sb.Append("  MaventGseResult: ").Append(MaventGseResult).Append("\n");
            sb.Append("  MaventHighCostResult: ").Append(MaventHighCostResult).Append("\n");
            sb.Append("  MaventHmdaResult: ").Append(MaventHmdaResult).Append("\n");
            sb.Append("  MaventHpmlResult: ").Append(MaventHpmlResult).Append("\n");
            sb.Append("  MaventLicenseResult: ").Append(MaventLicenseResult).Append("\n");
            sb.Append("  MaventNmlsResult: ").Append(MaventNmlsResult).Append("\n");
            sb.Append("  MaventOfacResult: ").Append(MaventOfacResult).Append("\n");
            sb.Append("  MaventOrderedBy: ").Append(MaventOrderedBy).Append("\n");
            sb.Append("  MaventOrderedDate: ").Append(MaventOrderedDate).Append("\n");
            sb.Append("  MaventOtherResult: ").Append(MaventOtherResult).Append("\n");
            sb.Append("  MaventReviewResult: ").Append(MaventReviewResult).Append("\n");
            sb.Append("  MaventStateResult: ").Append(MaventStateResult).Append("\n");
            sb.Append("  MaventTilaRorResult: ").Append(MaventTilaRorResult).Append("\n");
            sb.Append("  MaventTilaToleranceResult: ").Append(MaventTilaToleranceResult).Append("\n");
            sb.Append("  MiscDataFile: ").Append(MiscDataFile).Append("\n");
            sb.Append("  MonthsToExclude: ").Append(MonthsToExclude).Append("\n");
            sb.Append("  OptimalBlueHistoryData: ").Append(OptimalBlueHistoryData).Append("\n");
            sb.Append("  OptimalBlueRequest: ").Append(OptimalBlueRequest).Append("\n");
            sb.Append("  OptimalBlueResponse: ").Append(OptimalBlueResponse).Append("\n");
            sb.Append("  OtherPresentHousingExpense: ").Append(OtherPresentHousingExpense).Append("\n");
            sb.Append("  ParticipateHomePoints: ").Append(ParticipateHomePoints).Append("\n");
            sb.Append("  PartnerEmail: ").Append(PartnerEmail).Append("\n");
            sb.Append("  PartnerName: ").Append(PartnerName).Append("\n");
            sb.Append("  PartnerPhone: ").Append(PartnerPhone).Append("\n");
            sb.Append("  PointsPaid: ").Append(PointsPaid).Append("\n");
            sb.Append("  RateRegistrationExpirationDate: ").Append(RateRegistrationExpirationDate).Append("\n");
            sb.Append("  RateRegistrationInvestorName: ").Append(RateRegistrationInvestorName).Append("\n");
            sb.Append("  RateRegistrationLoanIsRegistered: ").Append(RateRegistrationLoanIsRegistered).Append("\n");
            sb.Append("  RateRegistrationReference: ").Append(RateRegistrationReference).Append("\n");
            sb.Append("  RateRegistrationRegisteredBy: ").Append(RateRegistrationRegisteredBy).Append("\n");
            sb.Append("  RateRegistrationRegisteredUserId: ").Append(RateRegistrationRegisteredUserId).Append("\n");
            sb.Append("  RateRegistrationRegistrationDate: ").Append(RateRegistrationRegistrationDate).Append("\n");
            sb.Append("  RefundOrOverpaidInterest: ").Append(RefundOrOverpaidInterest).Append("\n");
            sb.Append("  SchoolTaxExcluded: ").Append(SchoolTaxExcluded).Append("\n");
            sb.Append("  StatusUrl: ").Append(StatusUrl).Append("\n");
            sb.Append("  SubmitDate: ").Append(SubmitDate).Append("\n");
            sb.Append("  SubTaxYear: ").Append(SubTaxYear).Append("\n");
            sb.Append("  SubTaxYearInterestReceived: ").Append(SubTaxYearInterestReceived).Append("\n");
            sb.Append("  SubTaxYearPointsPaid: ").Append(SubTaxYearPointsPaid).Append("\n");
            sb.Append("  SubTaxYearRefundOrOverpaidInterest: ").Append(SubTaxYearRefundOrOverpaidInterest).Append("\n");
            sb.Append("  TaxId: ").Append(TaxId).Append("\n");
            sb.Append("  TotalBox4: ").Append(TotalBox4).Append("\n");
            sb.Append("  TotalYearlyMi: ").Append(TotalYearlyMi).Append("\n");
            sb.Append("  UseGfeTax: ").Append(UseGfeTax).Append("\n");
            sb.Append("  UseRegZMi: ").Append(UseRegZMi).Append("\n");
            sb.Append("  FannieDuAutoOrderIndicator: ").Append(FannieDuAutoOrderIndicator).Append("\n");
            sb.Append("  FannieEcAutoOrderIndicator: ").Append(FannieEcAutoOrderIndicator).Append("\n");
            sb.Append("  OutstandingMtgPrincipal: ").Append(OutstandingMtgPrincipal).Append("\n");
            sb.Append("  OutstandingMtgPrincipalDate: ").Append(OutstandingMtgPrincipalDate).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  Zip: ").Append(Zip).Append("\n");
            sb.Append("  BorrowerDescription6: ").Append(BorrowerDescription6).Append("\n");
            sb.Append("  BorrowerDescription7: ").Append(BorrowerDescription7).Append("\n");
            sb.Append("  IsSameAddresswithPayer: ").Append(IsSameAddresswithPayer).Append("\n");
            sb.Append("  CopyFromSubjectProperty: ").Append(CopyFromSubjectProperty).Append("\n");
            sb.Append("  FreddieLPAAutoOrderIndicator: ").Append(FreddieLPAAutoOrderIndicator).Append("\n");
            sb.Append("  FreddieLQAAutoOrderIndicator: ").Append(FreddieLQAAutoOrderIndicator).Append("\n");
            sb.Append("  ContactTitle: ").Append(ContactTitle).Append("\n");
            sb.Append("  ContactName: ").Append(ContactName).Append("\n");
            sb.Append("  ContactFax: ").Append(ContactFax).Append("\n");
            sb.Append("  ContactPhone: ").Append(ContactPhone).Append("\n");
            sb.Append("  PrintStateLicenseOn1003: ").Append(PrintStateLicenseOn1003).Append("\n");
            sb.Append("  MaventATRQMResult: ").Append(MaventATRQMResult).Append("\n");
            sb.Append("  MIPremiums: ").Append(MIPremiums).Append("\n");
            sb.Append("  SubTaxYearMIPremiums: ").Append(SubTaxYearMIPremiums).Append("\n");
            sb.Append("  LoanFileSequenceNumber: ").Append(LoanFileSequenceNumber).Append("\n");
            sb.Append("  ComplianceVersionCD3X1505: ").Append(ComplianceVersionCD3X1505).Append("\n");
            sb.Append("  SavedLogVersion: ").Append(SavedLogVersion).Append("\n");
            sb.Append("  TPOConnectStatusUpdated: ").Append(TPOConnectStatusUpdated).Append("\n");
            sb.Append("  AllRoles: ").Append(AllRoles).Append("\n");
            sb.Append("  AllUserInfo: ").Append(AllUserInfo).Append("\n");
            sb.Append("  LenderFeeQuoteID: ").Append(LenderFeeQuoteID).Append("\n");
            sb.Append("  PartnerFeeQuoteID: ").Append(PartnerFeeQuoteID).Append("\n");
            sb.Append("  LastFeeImportDate: ").Append(LastFeeImportDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractMiscellaneous);
        }

        /// <summary>
        /// Returns true if LoanContractMiscellaneous instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractMiscellaneous to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractMiscellaneous input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.BorrowerDescription1 == input.BorrowerDescription1 ||
                    (this.BorrowerDescription1 != null &&
                    this.BorrowerDescription1.Equals(input.BorrowerDescription1))
                ) && 
                (
                    this.BorrowerDescription2 == input.BorrowerDescription2 ||
                    (this.BorrowerDescription2 != null &&
                    this.BorrowerDescription2.Equals(input.BorrowerDescription2))
                ) && 
                (
                    this.BorrowerDescription3 == input.BorrowerDescription3 ||
                    (this.BorrowerDescription3 != null &&
                    this.BorrowerDescription3.Equals(input.BorrowerDescription3))
                ) && 
                (
                    this.BorrowerDescription4 == input.BorrowerDescription4 ||
                    (this.BorrowerDescription4 != null &&
                    this.BorrowerDescription4.Equals(input.BorrowerDescription4))
                ) && 
                (
                    this.BorrowerDescription5 == input.BorrowerDescription5 ||
                    (this.BorrowerDescription5 != null &&
                    this.BorrowerDescription5.Equals(input.BorrowerDescription5))
                ) && 
                (
                    this.ClosingCostProgramFile == input.ClosingCostProgramFile ||
                    (this.ClosingCostProgramFile != null &&
                    this.ClosingCostProgramFile.Equals(input.ClosingCostProgramFile))
                ) && 
                (
                    this.ClosingTaxYear == input.ClosingTaxYear ||
                    (this.ClosingTaxYear != null &&
                    this.ClosingTaxYear.Equals(input.ClosingTaxYear))
                ) && 
                (
                    this.ClosingTaxYearInterestReceived == input.ClosingTaxYearInterestReceived ||
                    (this.ClosingTaxYearInterestReceived != null &&
                    this.ClosingTaxYearInterestReceived.Equals(input.ClosingTaxYearInterestReceived))
                ) && 
                (
                    this.DataTracLoanId == input.DataTracLoanId ||
                    (this.DataTracLoanId != null &&
                    this.DataTracLoanId.Equals(input.DataTracLoanId))
                ) && 
                (
                    this.DocSetFile == input.DocSetFile ||
                    (this.DocSetFile != null &&
                    this.DocSetFile.Equals(input.DocSetFile))
                ) && 
                (
                    this.FactorForRevolvingDebt == input.FactorForRevolvingDebt ||
                    (this.FactorForRevolvingDebt != null &&
                    this.FactorForRevolvingDebt.Equals(input.FactorForRevolvingDebt))
                ) && 
                (
                    this.FloodInsuranceExcluded == input.FloodInsuranceExcluded ||
                    (this.FloodInsuranceExcluded != null &&
                    this.FloodInsuranceExcluded.Equals(input.FloodInsuranceExcluded))
                ) && 
                (
                    this.FormListFile == input.FormListFile ||
                    (this.FormListFile != null &&
                    this.FormListFile.Equals(input.FormListFile))
                ) && 
                (
                    this.HousingExpenseIntRate1 == input.HousingExpenseIntRate1 ||
                    (this.HousingExpenseIntRate1 != null &&
                    this.HousingExpenseIntRate1.Equals(input.HousingExpenseIntRate1))
                ) && 
                (
                    this.HousingExpenseIntRate2 == input.HousingExpenseIntRate2 ||
                    (this.HousingExpenseIntRate2 != null &&
                    this.HousingExpenseIntRate2.Equals(input.HousingExpenseIntRate2))
                ) && 
                (
                    this.HousingExpenseLoanAmt1 == input.HousingExpenseLoanAmt1 ||
                    (this.HousingExpenseLoanAmt1 != null &&
                    this.HousingExpenseLoanAmt1.Equals(input.HousingExpenseLoanAmt1))
                ) && 
                (
                    this.HousingExpenseLoanAmt2 == input.HousingExpenseLoanAmt2 ||
                    (this.HousingExpenseLoanAmt2 != null &&
                    this.HousingExpenseLoanAmt2.Equals(input.HousingExpenseLoanAmt2))
                ) && 
                (
                    this.HousingExpensePayment1 == input.HousingExpensePayment1 ||
                    (this.HousingExpensePayment1 != null &&
                    this.HousingExpensePayment1.Equals(input.HousingExpensePayment1))
                ) && 
                (
                    this.HousingExpensePayment2 == input.HousingExpensePayment2 ||
                    (this.HousingExpensePayment2 != null &&
                    this.HousingExpensePayment2.Equals(input.HousingExpensePayment2))
                ) && 
                (
                    this.HousingExpenseTerm1 == input.HousingExpenseTerm1 ||
                    (this.HousingExpenseTerm1 != null &&
                    this.HousingExpenseTerm1.Equals(input.HousingExpenseTerm1))
                ) && 
                (
                    this.HousingExpenseTerm2 == input.HousingExpenseTerm2 ||
                    (this.HousingExpenseTerm2 != null &&
                    this.HousingExpenseTerm2.Equals(input.HousingExpenseTerm2))
                ) && 
                (
                    this.Line1006Excluded == input.Line1006Excluded ||
                    (this.Line1006Excluded != null &&
                    this.Line1006Excluded.Equals(input.Line1006Excluded))
                ) && 
                (
                    this.Line1007Excluded == input.Line1007Excluded ||
                    (this.Line1007Excluded != null &&
                    this.Line1007Excluded.Equals(input.Line1007Excluded))
                ) && 
                (
                    this.Line1008Excluded == input.Line1008Excluded ||
                    (this.Line1008Excluded != null &&
                    this.Line1008Excluded.Equals(input.Line1008Excluded))
                ) && 
                (
                    this.Line1010Excluded == input.Line1010Excluded ||
                    (this.Line1010Excluded != null &&
                    this.Line1010Excluded.Equals(input.Line1010Excluded))
                ) && 
                (
                    this.LoanProgramFile == input.LoanProgramFile ||
                    (this.LoanProgramFile != null &&
                    this.LoanProgramFile.Equals(input.LoanProgramFile))
                ) && 
                (
                    this.LoanTemplateFile == input.LoanTemplateFile ||
                    (this.LoanTemplateFile != null &&
                    this.LoanTemplateFile.Equals(input.LoanTemplateFile))
                ) && 
                (
                    this.MaventAutoOrderIndicator == input.MaventAutoOrderIndicator ||
                    (this.MaventAutoOrderIndicator != null &&
                    this.MaventAutoOrderIndicator.Equals(input.MaventAutoOrderIndicator))
                ) && 
                (
                    this.MaventCraxResult == input.MaventCraxResult ||
                    (this.MaventCraxResult != null &&
                    this.MaventCraxResult.Equals(input.MaventCraxResult))
                ) && 
                (
                    this.MaventEnterpriseResult == input.MaventEnterpriseResult ||
                    (this.MaventEnterpriseResult != null &&
                    this.MaventEnterpriseResult.Equals(input.MaventEnterpriseResult))
                ) && 
                (
                    this.MaventGseResult == input.MaventGseResult ||
                    (this.MaventGseResult != null &&
                    this.MaventGseResult.Equals(input.MaventGseResult))
                ) && 
                (
                    this.MaventHighCostResult == input.MaventHighCostResult ||
                    (this.MaventHighCostResult != null &&
                    this.MaventHighCostResult.Equals(input.MaventHighCostResult))
                ) && 
                (
                    this.MaventHmdaResult == input.MaventHmdaResult ||
                    (this.MaventHmdaResult != null &&
                    this.MaventHmdaResult.Equals(input.MaventHmdaResult))
                ) && 
                (
                    this.MaventHpmlResult == input.MaventHpmlResult ||
                    (this.MaventHpmlResult != null &&
                    this.MaventHpmlResult.Equals(input.MaventHpmlResult))
                ) && 
                (
                    this.MaventLicenseResult == input.MaventLicenseResult ||
                    (this.MaventLicenseResult != null &&
                    this.MaventLicenseResult.Equals(input.MaventLicenseResult))
                ) && 
                (
                    this.MaventNmlsResult == input.MaventNmlsResult ||
                    (this.MaventNmlsResult != null &&
                    this.MaventNmlsResult.Equals(input.MaventNmlsResult))
                ) && 
                (
                    this.MaventOfacResult == input.MaventOfacResult ||
                    (this.MaventOfacResult != null &&
                    this.MaventOfacResult.Equals(input.MaventOfacResult))
                ) && 
                (
                    this.MaventOrderedBy == input.MaventOrderedBy ||
                    (this.MaventOrderedBy != null &&
                    this.MaventOrderedBy.Equals(input.MaventOrderedBy))
                ) && 
                (
                    this.MaventOrderedDate == input.MaventOrderedDate ||
                    (this.MaventOrderedDate != null &&
                    this.MaventOrderedDate.Equals(input.MaventOrderedDate))
                ) && 
                (
                    this.MaventOtherResult == input.MaventOtherResult ||
                    (this.MaventOtherResult != null &&
                    this.MaventOtherResult.Equals(input.MaventOtherResult))
                ) && 
                (
                    this.MaventReviewResult == input.MaventReviewResult ||
                    (this.MaventReviewResult != null &&
                    this.MaventReviewResult.Equals(input.MaventReviewResult))
                ) && 
                (
                    this.MaventStateResult == input.MaventStateResult ||
                    (this.MaventStateResult != null &&
                    this.MaventStateResult.Equals(input.MaventStateResult))
                ) && 
                (
                    this.MaventTilaRorResult == input.MaventTilaRorResult ||
                    (this.MaventTilaRorResult != null &&
                    this.MaventTilaRorResult.Equals(input.MaventTilaRorResult))
                ) && 
                (
                    this.MaventTilaToleranceResult == input.MaventTilaToleranceResult ||
                    (this.MaventTilaToleranceResult != null &&
                    this.MaventTilaToleranceResult.Equals(input.MaventTilaToleranceResult))
                ) && 
                (
                    this.MiscDataFile == input.MiscDataFile ||
                    (this.MiscDataFile != null &&
                    this.MiscDataFile.Equals(input.MiscDataFile))
                ) && 
                (
                    this.MonthsToExclude == input.MonthsToExclude ||
                    (this.MonthsToExclude != null &&
                    this.MonthsToExclude.Equals(input.MonthsToExclude))
                ) && 
                (
                    this.OptimalBlueHistoryData == input.OptimalBlueHistoryData ||
                    (this.OptimalBlueHistoryData != null &&
                    this.OptimalBlueHistoryData.Equals(input.OptimalBlueHistoryData))
                ) && 
                (
                    this.OptimalBlueRequest == input.OptimalBlueRequest ||
                    (this.OptimalBlueRequest != null &&
                    this.OptimalBlueRequest.Equals(input.OptimalBlueRequest))
                ) && 
                (
                    this.OptimalBlueResponse == input.OptimalBlueResponse ||
                    (this.OptimalBlueResponse != null &&
                    this.OptimalBlueResponse.Equals(input.OptimalBlueResponse))
                ) && 
                (
                    this.OtherPresentHousingExpense == input.OtherPresentHousingExpense ||
                    (this.OtherPresentHousingExpense != null &&
                    this.OtherPresentHousingExpense.Equals(input.OtherPresentHousingExpense))
                ) && 
                (
                    this.ParticipateHomePoints == input.ParticipateHomePoints ||
                    (this.ParticipateHomePoints != null &&
                    this.ParticipateHomePoints.Equals(input.ParticipateHomePoints))
                ) && 
                (
                    this.PartnerEmail == input.PartnerEmail ||
                    (this.PartnerEmail != null &&
                    this.PartnerEmail.Equals(input.PartnerEmail))
                ) && 
                (
                    this.PartnerName == input.PartnerName ||
                    (this.PartnerName != null &&
                    this.PartnerName.Equals(input.PartnerName))
                ) && 
                (
                    this.PartnerPhone == input.PartnerPhone ||
                    (this.PartnerPhone != null &&
                    this.PartnerPhone.Equals(input.PartnerPhone))
                ) && 
                (
                    this.PointsPaid == input.PointsPaid ||
                    (this.PointsPaid != null &&
                    this.PointsPaid.Equals(input.PointsPaid))
                ) && 
                (
                    this.RateRegistrationExpirationDate == input.RateRegistrationExpirationDate ||
                    (this.RateRegistrationExpirationDate != null &&
                    this.RateRegistrationExpirationDate.Equals(input.RateRegistrationExpirationDate))
                ) && 
                (
                    this.RateRegistrationInvestorName == input.RateRegistrationInvestorName ||
                    (this.RateRegistrationInvestorName != null &&
                    this.RateRegistrationInvestorName.Equals(input.RateRegistrationInvestorName))
                ) && 
                (
                    this.RateRegistrationLoanIsRegistered == input.RateRegistrationLoanIsRegistered ||
                    (this.RateRegistrationLoanIsRegistered != null &&
                    this.RateRegistrationLoanIsRegistered.Equals(input.RateRegistrationLoanIsRegistered))
                ) && 
                (
                    this.RateRegistrationReference == input.RateRegistrationReference ||
                    (this.RateRegistrationReference != null &&
                    this.RateRegistrationReference.Equals(input.RateRegistrationReference))
                ) && 
                (
                    this.RateRegistrationRegisteredBy == input.RateRegistrationRegisteredBy ||
                    (this.RateRegistrationRegisteredBy != null &&
                    this.RateRegistrationRegisteredBy.Equals(input.RateRegistrationRegisteredBy))
                ) && 
                (
                    this.RateRegistrationRegisteredUserId == input.RateRegistrationRegisteredUserId ||
                    (this.RateRegistrationRegisteredUserId != null &&
                    this.RateRegistrationRegisteredUserId.Equals(input.RateRegistrationRegisteredUserId))
                ) && 
                (
                    this.RateRegistrationRegistrationDate == input.RateRegistrationRegistrationDate ||
                    (this.RateRegistrationRegistrationDate != null &&
                    this.RateRegistrationRegistrationDate.Equals(input.RateRegistrationRegistrationDate))
                ) && 
                (
                    this.RefundOrOverpaidInterest == input.RefundOrOverpaidInterest ||
                    (this.RefundOrOverpaidInterest != null &&
                    this.RefundOrOverpaidInterest.Equals(input.RefundOrOverpaidInterest))
                ) && 
                (
                    this.SchoolTaxExcluded == input.SchoolTaxExcluded ||
                    (this.SchoolTaxExcluded != null &&
                    this.SchoolTaxExcluded.Equals(input.SchoolTaxExcluded))
                ) && 
                (
                    this.StatusUrl == input.StatusUrl ||
                    (this.StatusUrl != null &&
                    this.StatusUrl.Equals(input.StatusUrl))
                ) && 
                (
                    this.SubmitDate == input.SubmitDate ||
                    (this.SubmitDate != null &&
                    this.SubmitDate.Equals(input.SubmitDate))
                ) && 
                (
                    this.SubTaxYear == input.SubTaxYear ||
                    (this.SubTaxYear != null &&
                    this.SubTaxYear.Equals(input.SubTaxYear))
                ) && 
                (
                    this.SubTaxYearInterestReceived == input.SubTaxYearInterestReceived ||
                    (this.SubTaxYearInterestReceived != null &&
                    this.SubTaxYearInterestReceived.Equals(input.SubTaxYearInterestReceived))
                ) && 
                (
                    this.SubTaxYearPointsPaid == input.SubTaxYearPointsPaid ||
                    (this.SubTaxYearPointsPaid != null &&
                    this.SubTaxYearPointsPaid.Equals(input.SubTaxYearPointsPaid))
                ) && 
                (
                    this.SubTaxYearRefundOrOverpaidInterest == input.SubTaxYearRefundOrOverpaidInterest ||
                    (this.SubTaxYearRefundOrOverpaidInterest != null &&
                    this.SubTaxYearRefundOrOverpaidInterest.Equals(input.SubTaxYearRefundOrOverpaidInterest))
                ) && 
                (
                    this.TaxId == input.TaxId ||
                    (this.TaxId != null &&
                    this.TaxId.Equals(input.TaxId))
                ) && 
                (
                    this.TotalBox4 == input.TotalBox4 ||
                    (this.TotalBox4 != null &&
                    this.TotalBox4.Equals(input.TotalBox4))
                ) && 
                (
                    this.TotalYearlyMi == input.TotalYearlyMi ||
                    (this.TotalYearlyMi != null &&
                    this.TotalYearlyMi.Equals(input.TotalYearlyMi))
                ) && 
                (
                    this.UseGfeTax == input.UseGfeTax ||
                    (this.UseGfeTax != null &&
                    this.UseGfeTax.Equals(input.UseGfeTax))
                ) && 
                (
                    this.UseRegZMi == input.UseRegZMi ||
                    (this.UseRegZMi != null &&
                    this.UseRegZMi.Equals(input.UseRegZMi))
                ) && 
                (
                    this.FannieDuAutoOrderIndicator == input.FannieDuAutoOrderIndicator ||
                    (this.FannieDuAutoOrderIndicator != null &&
                    this.FannieDuAutoOrderIndicator.Equals(input.FannieDuAutoOrderIndicator))
                ) && 
                (
                    this.FannieEcAutoOrderIndicator == input.FannieEcAutoOrderIndicator ||
                    (this.FannieEcAutoOrderIndicator != null &&
                    this.FannieEcAutoOrderIndicator.Equals(input.FannieEcAutoOrderIndicator))
                ) && 
                (
                    this.OutstandingMtgPrincipal == input.OutstandingMtgPrincipal ||
                    (this.OutstandingMtgPrincipal != null &&
                    this.OutstandingMtgPrincipal.Equals(input.OutstandingMtgPrincipal))
                ) && 
                (
                    this.OutstandingMtgPrincipalDate == input.OutstandingMtgPrincipalDate ||
                    (this.OutstandingMtgPrincipalDate != null &&
                    this.OutstandingMtgPrincipalDate.Equals(input.OutstandingMtgPrincipalDate))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.City == input.City ||
                    (this.City != null &&
                    this.City.Equals(input.City))
                ) && 
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                ) && 
                (
                    this.Zip == input.Zip ||
                    (this.Zip != null &&
                    this.Zip.Equals(input.Zip))
                ) && 
                (
                    this.BorrowerDescription6 == input.BorrowerDescription6 ||
                    (this.BorrowerDescription6 != null &&
                    this.BorrowerDescription6.Equals(input.BorrowerDescription6))
                ) && 
                (
                    this.BorrowerDescription7 == input.BorrowerDescription7 ||
                    (this.BorrowerDescription7 != null &&
                    this.BorrowerDescription7.Equals(input.BorrowerDescription7))
                ) && 
                (
                    this.IsSameAddresswithPayer == input.IsSameAddresswithPayer ||
                    (this.IsSameAddresswithPayer != null &&
                    this.IsSameAddresswithPayer.Equals(input.IsSameAddresswithPayer))
                ) && 
                (
                    this.CopyFromSubjectProperty == input.CopyFromSubjectProperty ||
                    (this.CopyFromSubjectProperty != null &&
                    this.CopyFromSubjectProperty.Equals(input.CopyFromSubjectProperty))
                ) && 
                (
                    this.FreddieLPAAutoOrderIndicator == input.FreddieLPAAutoOrderIndicator ||
                    (this.FreddieLPAAutoOrderIndicator != null &&
                    this.FreddieLPAAutoOrderIndicator.Equals(input.FreddieLPAAutoOrderIndicator))
                ) && 
                (
                    this.FreddieLQAAutoOrderIndicator == input.FreddieLQAAutoOrderIndicator ||
                    (this.FreddieLQAAutoOrderIndicator != null &&
                    this.FreddieLQAAutoOrderIndicator.Equals(input.FreddieLQAAutoOrderIndicator))
                ) && 
                (
                    this.ContactTitle == input.ContactTitle ||
                    (this.ContactTitle != null &&
                    this.ContactTitle.Equals(input.ContactTitle))
                ) && 
                (
                    this.ContactName == input.ContactName ||
                    (this.ContactName != null &&
                    this.ContactName.Equals(input.ContactName))
                ) && 
                (
                    this.ContactFax == input.ContactFax ||
                    (this.ContactFax != null &&
                    this.ContactFax.Equals(input.ContactFax))
                ) && 
                (
                    this.ContactPhone == input.ContactPhone ||
                    (this.ContactPhone != null &&
                    this.ContactPhone.Equals(input.ContactPhone))
                ) && 
                (
                    this.PrintStateLicenseOn1003 == input.PrintStateLicenseOn1003 ||
                    (this.PrintStateLicenseOn1003 != null &&
                    this.PrintStateLicenseOn1003.Equals(input.PrintStateLicenseOn1003))
                ) && 
                (
                    this.MaventATRQMResult == input.MaventATRQMResult ||
                    (this.MaventATRQMResult != null &&
                    this.MaventATRQMResult.Equals(input.MaventATRQMResult))
                ) && 
                (
                    this.MIPremiums == input.MIPremiums ||
                    (this.MIPremiums != null &&
                    this.MIPremiums.Equals(input.MIPremiums))
                ) && 
                (
                    this.SubTaxYearMIPremiums == input.SubTaxYearMIPremiums ||
                    (this.SubTaxYearMIPremiums != null &&
                    this.SubTaxYearMIPremiums.Equals(input.SubTaxYearMIPremiums))
                ) && 
                (
                    this.LoanFileSequenceNumber == input.LoanFileSequenceNumber ||
                    (this.LoanFileSequenceNumber != null &&
                    this.LoanFileSequenceNumber.Equals(input.LoanFileSequenceNumber))
                ) && 
                (
                    this.ComplianceVersionCD3X1505 == input.ComplianceVersionCD3X1505 ||
                    (this.ComplianceVersionCD3X1505 != null &&
                    this.ComplianceVersionCD3X1505.Equals(input.ComplianceVersionCD3X1505))
                ) && 
                (
                    this.SavedLogVersion == input.SavedLogVersion ||
                    (this.SavedLogVersion != null &&
                    this.SavedLogVersion.Equals(input.SavedLogVersion))
                ) && 
                (
                    this.TPOConnectStatusUpdated == input.TPOConnectStatusUpdated ||
                    (this.TPOConnectStatusUpdated != null &&
                    this.TPOConnectStatusUpdated.Equals(input.TPOConnectStatusUpdated))
                ) && 
                (
                    this.AllRoles == input.AllRoles ||
                    (this.AllRoles != null &&
                    this.AllRoles.Equals(input.AllRoles))
                ) && 
                (
                    this.AllUserInfo == input.AllUserInfo ||
                    (this.AllUserInfo != null &&
                    this.AllUserInfo.Equals(input.AllUserInfo))
                ) && 
                (
                    this.LenderFeeQuoteID == input.LenderFeeQuoteID ||
                    (this.LenderFeeQuoteID != null &&
                    this.LenderFeeQuoteID.Equals(input.LenderFeeQuoteID))
                ) && 
                (
                    this.PartnerFeeQuoteID == input.PartnerFeeQuoteID ||
                    (this.PartnerFeeQuoteID != null &&
                    this.PartnerFeeQuoteID.Equals(input.PartnerFeeQuoteID))
                ) && 
                (
                    this.LastFeeImportDate == input.LastFeeImportDate ||
                    (this.LastFeeImportDate != null &&
                    this.LastFeeImportDate.Equals(input.LastFeeImportDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.BorrowerDescription1 != null)
                    hashCode = hashCode * 59 + this.BorrowerDescription1.GetHashCode();
                if (this.BorrowerDescription2 != null)
                    hashCode = hashCode * 59 + this.BorrowerDescription2.GetHashCode();
                if (this.BorrowerDescription3 != null)
                    hashCode = hashCode * 59 + this.BorrowerDescription3.GetHashCode();
                if (this.BorrowerDescription4 != null)
                    hashCode = hashCode * 59 + this.BorrowerDescription4.GetHashCode();
                if (this.BorrowerDescription5 != null)
                    hashCode = hashCode * 59 + this.BorrowerDescription5.GetHashCode();
                if (this.ClosingCostProgramFile != null)
                    hashCode = hashCode * 59 + this.ClosingCostProgramFile.GetHashCode();
                if (this.ClosingTaxYear != null)
                    hashCode = hashCode * 59 + this.ClosingTaxYear.GetHashCode();
                if (this.ClosingTaxYearInterestReceived != null)
                    hashCode = hashCode * 59 + this.ClosingTaxYearInterestReceived.GetHashCode();
                if (this.DataTracLoanId != null)
                    hashCode = hashCode * 59 + this.DataTracLoanId.GetHashCode();
                if (this.DocSetFile != null)
                    hashCode = hashCode * 59 + this.DocSetFile.GetHashCode();
                if (this.FactorForRevolvingDebt != null)
                    hashCode = hashCode * 59 + this.FactorForRevolvingDebt.GetHashCode();
                if (this.FloodInsuranceExcluded != null)
                    hashCode = hashCode * 59 + this.FloodInsuranceExcluded.GetHashCode();
                if (this.FormListFile != null)
                    hashCode = hashCode * 59 + this.FormListFile.GetHashCode();
                if (this.HousingExpenseIntRate1 != null)
                    hashCode = hashCode * 59 + this.HousingExpenseIntRate1.GetHashCode();
                if (this.HousingExpenseIntRate2 != null)
                    hashCode = hashCode * 59 + this.HousingExpenseIntRate2.GetHashCode();
                if (this.HousingExpenseLoanAmt1 != null)
                    hashCode = hashCode * 59 + this.HousingExpenseLoanAmt1.GetHashCode();
                if (this.HousingExpenseLoanAmt2 != null)
                    hashCode = hashCode * 59 + this.HousingExpenseLoanAmt2.GetHashCode();
                if (this.HousingExpensePayment1 != null)
                    hashCode = hashCode * 59 + this.HousingExpensePayment1.GetHashCode();
                if (this.HousingExpensePayment2 != null)
                    hashCode = hashCode * 59 + this.HousingExpensePayment2.GetHashCode();
                if (this.HousingExpenseTerm1 != null)
                    hashCode = hashCode * 59 + this.HousingExpenseTerm1.GetHashCode();
                if (this.HousingExpenseTerm2 != null)
                    hashCode = hashCode * 59 + this.HousingExpenseTerm2.GetHashCode();
                if (this.Line1006Excluded != null)
                    hashCode = hashCode * 59 + this.Line1006Excluded.GetHashCode();
                if (this.Line1007Excluded != null)
                    hashCode = hashCode * 59 + this.Line1007Excluded.GetHashCode();
                if (this.Line1008Excluded != null)
                    hashCode = hashCode * 59 + this.Line1008Excluded.GetHashCode();
                if (this.Line1010Excluded != null)
                    hashCode = hashCode * 59 + this.Line1010Excluded.GetHashCode();
                if (this.LoanProgramFile != null)
                    hashCode = hashCode * 59 + this.LoanProgramFile.GetHashCode();
                if (this.LoanTemplateFile != null)
                    hashCode = hashCode * 59 + this.LoanTemplateFile.GetHashCode();
                if (this.MaventAutoOrderIndicator != null)
                    hashCode = hashCode * 59 + this.MaventAutoOrderIndicator.GetHashCode();
                if (this.MaventCraxResult != null)
                    hashCode = hashCode * 59 + this.MaventCraxResult.GetHashCode();
                if (this.MaventEnterpriseResult != null)
                    hashCode = hashCode * 59 + this.MaventEnterpriseResult.GetHashCode();
                if (this.MaventGseResult != null)
                    hashCode = hashCode * 59 + this.MaventGseResult.GetHashCode();
                if (this.MaventHighCostResult != null)
                    hashCode = hashCode * 59 + this.MaventHighCostResult.GetHashCode();
                if (this.MaventHmdaResult != null)
                    hashCode = hashCode * 59 + this.MaventHmdaResult.GetHashCode();
                if (this.MaventHpmlResult != null)
                    hashCode = hashCode * 59 + this.MaventHpmlResult.GetHashCode();
                if (this.MaventLicenseResult != null)
                    hashCode = hashCode * 59 + this.MaventLicenseResult.GetHashCode();
                if (this.MaventNmlsResult != null)
                    hashCode = hashCode * 59 + this.MaventNmlsResult.GetHashCode();
                if (this.MaventOfacResult != null)
                    hashCode = hashCode * 59 + this.MaventOfacResult.GetHashCode();
                if (this.MaventOrderedBy != null)
                    hashCode = hashCode * 59 + this.MaventOrderedBy.GetHashCode();
                if (this.MaventOrderedDate != null)
                    hashCode = hashCode * 59 + this.MaventOrderedDate.GetHashCode();
                if (this.MaventOtherResult != null)
                    hashCode = hashCode * 59 + this.MaventOtherResult.GetHashCode();
                if (this.MaventReviewResult != null)
                    hashCode = hashCode * 59 + this.MaventReviewResult.GetHashCode();
                if (this.MaventStateResult != null)
                    hashCode = hashCode * 59 + this.MaventStateResult.GetHashCode();
                if (this.MaventTilaRorResult != null)
                    hashCode = hashCode * 59 + this.MaventTilaRorResult.GetHashCode();
                if (this.MaventTilaToleranceResult != null)
                    hashCode = hashCode * 59 + this.MaventTilaToleranceResult.GetHashCode();
                if (this.MiscDataFile != null)
                    hashCode = hashCode * 59 + this.MiscDataFile.GetHashCode();
                if (this.MonthsToExclude != null)
                    hashCode = hashCode * 59 + this.MonthsToExclude.GetHashCode();
                if (this.OptimalBlueHistoryData != null)
                    hashCode = hashCode * 59 + this.OptimalBlueHistoryData.GetHashCode();
                if (this.OptimalBlueRequest != null)
                    hashCode = hashCode * 59 + this.OptimalBlueRequest.GetHashCode();
                if (this.OptimalBlueResponse != null)
                    hashCode = hashCode * 59 + this.OptimalBlueResponse.GetHashCode();
                if (this.OtherPresentHousingExpense != null)
                    hashCode = hashCode * 59 + this.OtherPresentHousingExpense.GetHashCode();
                if (this.ParticipateHomePoints != null)
                    hashCode = hashCode * 59 + this.ParticipateHomePoints.GetHashCode();
                if (this.PartnerEmail != null)
                    hashCode = hashCode * 59 + this.PartnerEmail.GetHashCode();
                if (this.PartnerName != null)
                    hashCode = hashCode * 59 + this.PartnerName.GetHashCode();
                if (this.PartnerPhone != null)
                    hashCode = hashCode * 59 + this.PartnerPhone.GetHashCode();
                if (this.PointsPaid != null)
                    hashCode = hashCode * 59 + this.PointsPaid.GetHashCode();
                if (this.RateRegistrationExpirationDate != null)
                    hashCode = hashCode * 59 + this.RateRegistrationExpirationDate.GetHashCode();
                if (this.RateRegistrationInvestorName != null)
                    hashCode = hashCode * 59 + this.RateRegistrationInvestorName.GetHashCode();
                if (this.RateRegistrationLoanIsRegistered != null)
                    hashCode = hashCode * 59 + this.RateRegistrationLoanIsRegistered.GetHashCode();
                if (this.RateRegistrationReference != null)
                    hashCode = hashCode * 59 + this.RateRegistrationReference.GetHashCode();
                if (this.RateRegistrationRegisteredBy != null)
                    hashCode = hashCode * 59 + this.RateRegistrationRegisteredBy.GetHashCode();
                if (this.RateRegistrationRegisteredUserId != null)
                    hashCode = hashCode * 59 + this.RateRegistrationRegisteredUserId.GetHashCode();
                if (this.RateRegistrationRegistrationDate != null)
                    hashCode = hashCode * 59 + this.RateRegistrationRegistrationDate.GetHashCode();
                if (this.RefundOrOverpaidInterest != null)
                    hashCode = hashCode * 59 + this.RefundOrOverpaidInterest.GetHashCode();
                if (this.SchoolTaxExcluded != null)
                    hashCode = hashCode * 59 + this.SchoolTaxExcluded.GetHashCode();
                if (this.StatusUrl != null)
                    hashCode = hashCode * 59 + this.StatusUrl.GetHashCode();
                if (this.SubmitDate != null)
                    hashCode = hashCode * 59 + this.SubmitDate.GetHashCode();
                if (this.SubTaxYear != null)
                    hashCode = hashCode * 59 + this.SubTaxYear.GetHashCode();
                if (this.SubTaxYearInterestReceived != null)
                    hashCode = hashCode * 59 + this.SubTaxYearInterestReceived.GetHashCode();
                if (this.SubTaxYearPointsPaid != null)
                    hashCode = hashCode * 59 + this.SubTaxYearPointsPaid.GetHashCode();
                if (this.SubTaxYearRefundOrOverpaidInterest != null)
                    hashCode = hashCode * 59 + this.SubTaxYearRefundOrOverpaidInterest.GetHashCode();
                if (this.TaxId != null)
                    hashCode = hashCode * 59 + this.TaxId.GetHashCode();
                if (this.TotalBox4 != null)
                    hashCode = hashCode * 59 + this.TotalBox4.GetHashCode();
                if (this.TotalYearlyMi != null)
                    hashCode = hashCode * 59 + this.TotalYearlyMi.GetHashCode();
                if (this.UseGfeTax != null)
                    hashCode = hashCode * 59 + this.UseGfeTax.GetHashCode();
                if (this.UseRegZMi != null)
                    hashCode = hashCode * 59 + this.UseRegZMi.GetHashCode();
                if (this.FannieDuAutoOrderIndicator != null)
                    hashCode = hashCode * 59 + this.FannieDuAutoOrderIndicator.GetHashCode();
                if (this.FannieEcAutoOrderIndicator != null)
                    hashCode = hashCode * 59 + this.FannieEcAutoOrderIndicator.GetHashCode();
                if (this.OutstandingMtgPrincipal != null)
                    hashCode = hashCode * 59 + this.OutstandingMtgPrincipal.GetHashCode();
                if (this.OutstandingMtgPrincipalDate != null)
                    hashCode = hashCode * 59 + this.OutstandingMtgPrincipalDate.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.City != null)
                    hashCode = hashCode * 59 + this.City.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                if (this.Zip != null)
                    hashCode = hashCode * 59 + this.Zip.GetHashCode();
                if (this.BorrowerDescription6 != null)
                    hashCode = hashCode * 59 + this.BorrowerDescription6.GetHashCode();
                if (this.BorrowerDescription7 != null)
                    hashCode = hashCode * 59 + this.BorrowerDescription7.GetHashCode();
                if (this.IsSameAddresswithPayer != null)
                    hashCode = hashCode * 59 + this.IsSameAddresswithPayer.GetHashCode();
                if (this.CopyFromSubjectProperty != null)
                    hashCode = hashCode * 59 + this.CopyFromSubjectProperty.GetHashCode();
                if (this.FreddieLPAAutoOrderIndicator != null)
                    hashCode = hashCode * 59 + this.FreddieLPAAutoOrderIndicator.GetHashCode();
                if (this.FreddieLQAAutoOrderIndicator != null)
                    hashCode = hashCode * 59 + this.FreddieLQAAutoOrderIndicator.GetHashCode();
                if (this.ContactTitle != null)
                    hashCode = hashCode * 59 + this.ContactTitle.GetHashCode();
                if (this.ContactName != null)
                    hashCode = hashCode * 59 + this.ContactName.GetHashCode();
                if (this.ContactFax != null)
                    hashCode = hashCode * 59 + this.ContactFax.GetHashCode();
                if (this.ContactPhone != null)
                    hashCode = hashCode * 59 + this.ContactPhone.GetHashCode();
                if (this.PrintStateLicenseOn1003 != null)
                    hashCode = hashCode * 59 + this.PrintStateLicenseOn1003.GetHashCode();
                if (this.MaventATRQMResult != null)
                    hashCode = hashCode * 59 + this.MaventATRQMResult.GetHashCode();
                if (this.MIPremiums != null)
                    hashCode = hashCode * 59 + this.MIPremiums.GetHashCode();
                if (this.SubTaxYearMIPremiums != null)
                    hashCode = hashCode * 59 + this.SubTaxYearMIPremiums.GetHashCode();
                if (this.LoanFileSequenceNumber != null)
                    hashCode = hashCode * 59 + this.LoanFileSequenceNumber.GetHashCode();
                if (this.ComplianceVersionCD3X1505 != null)
                    hashCode = hashCode * 59 + this.ComplianceVersionCD3X1505.GetHashCode();
                if (this.SavedLogVersion != null)
                    hashCode = hashCode * 59 + this.SavedLogVersion.GetHashCode();
                if (this.TPOConnectStatusUpdated != null)
                    hashCode = hashCode * 59 + this.TPOConnectStatusUpdated.GetHashCode();
                if (this.AllRoles != null)
                    hashCode = hashCode * 59 + this.AllRoles.GetHashCode();
                if (this.AllUserInfo != null)
                    hashCode = hashCode * 59 + this.AllUserInfo.GetHashCode();
                if (this.LenderFeeQuoteID != null)
                    hashCode = hashCode * 59 + this.LenderFeeQuoteID.GetHashCode();
                if (this.PartnerFeeQuoteID != null)
                    hashCode = hashCode * 59 + this.PartnerFeeQuoteID.GetHashCode();
                if (this.LastFeeImportDate != null)
                    hashCode = hashCode * 59 + this.LastFeeImportDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
