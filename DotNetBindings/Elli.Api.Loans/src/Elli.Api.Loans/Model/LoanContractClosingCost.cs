/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractClosingCost
    /// </summary>
    [DataContract]
    public partial class LoanContractClosingCost :  IEquatable<LoanContractClosingCost>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets AdjustmentFactor
        /// </summary>
        [DataMember(Name="adjustmentFactor", EmitDefaultValue=false)]
        public double? AdjustmentFactor { get; set; }

        /// <summary>
        /// Gets or Sets AggregateAdjustmentFwbc
        /// </summary>
        [DataMember(Name="aggregateAdjustmentFwbc", EmitDefaultValue=false)]
        public string AggregateAdjustmentFwbc { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerPaidDiscountPointsTotalAmount
        /// </summary>
        [DataMember(Name="borrowerPaidDiscountPointsTotalAmount", EmitDefaultValue=false)]
        public double? BorrowerPaidDiscountPointsTotalAmount { get; set; }

        /// <summary>
        /// Gets or Sets BrokerCommissionBasedPrice
        /// </summary>
        [DataMember(Name="brokerCommissionBasedPrice", EmitDefaultValue=false)]
        public double? BrokerCommissionBasedPrice { get; set; }

        /// <summary>
        /// Gets or Sets BrokerCommissionBasedUnitPercentage
        /// </summary>
        [DataMember(Name="brokerCommissionBasedUnitPercentage", EmitDefaultValue=false)]
        public double? BrokerCommissionBasedUnitPercentage { get; set; }

        /// <summary>
        /// Gets or Sets BrokerCommissionBasedUnitPrice
        /// </summary>
        [DataMember(Name="brokerCommissionBasedUnitPrice", EmitDefaultValue=false)]
        public double? BrokerCommissionBasedUnitPrice { get; set; }

        /// <summary>
        /// Gets or Sets ClosingCostProgram
        /// </summary>
        [DataMember(Name="closingCostProgram", EmitDefaultValue=false)]
        public string ClosingCostProgram { get; set; }

        /// <summary>
        /// Gets or Sets ClosingCostScenarioXml
        /// </summary>
        [DataMember(Name="closingCostScenarioXml", EmitDefaultValue=false)]
        public string ClosingCostScenarioXml { get; set; }

        /// <summary>
        /// Gets or Sets DisclosedSalesPrice
        /// </summary>
        [DataMember(Name="disclosedSalesPrice", EmitDefaultValue=false)]
        public double? DisclosedSalesPrice { get; set; }

        /// <summary>
        /// Gets or Sets EscrowCompanyName
        /// </summary>
        [DataMember(Name="escrowCompanyName", EmitDefaultValue=false)]
        public string EscrowCompanyName { get; set; }

        /// <summary>
        /// Gets or Sets EscrowTableDesc1
        /// </summary>
        [DataMember(Name="escrowTableDesc1", EmitDefaultValue=false)]
        public string EscrowTableDesc1 { get; set; }

        /// <summary>
        /// Gets or Sets EscrowTableDesc2
        /// </summary>
        [DataMember(Name="escrowTableDesc2", EmitDefaultValue=false)]
        public string EscrowTableDesc2 { get; set; }

        /// <summary>
        /// Gets or Sets EscrowTableDesc3
        /// </summary>
        [DataMember(Name="escrowTableDesc3", EmitDefaultValue=false)]
        public string EscrowTableDesc3 { get; set; }

        /// <summary>
        /// Gets or Sets EscrowTableDesc4
        /// </summary>
        [DataMember(Name="escrowTableDesc4", EmitDefaultValue=false)]
        public string EscrowTableDesc4 { get; set; }

        /// <summary>
        /// Gets or Sets EscrowTableDesc5
        /// </summary>
        [DataMember(Name="escrowTableDesc5", EmitDefaultValue=false)]
        public string EscrowTableDesc5 { get; set; }

        /// <summary>
        /// Gets or Sets EscrowTableFee
        /// </summary>
        [DataMember(Name="escrowTableFee", EmitDefaultValue=false)]
        public double? EscrowTableFee { get; set; }

        /// <summary>
        /// Gets or Sets EscrowTableFee1
        /// </summary>
        [DataMember(Name="escrowTableFee1", EmitDefaultValue=false)]
        public double? EscrowTableFee1 { get; set; }

        /// <summary>
        /// Gets or Sets EscrowTableFee2
        /// </summary>
        [DataMember(Name="escrowTableFee2", EmitDefaultValue=false)]
        public double? EscrowTableFee2 { get; set; }

        /// <summary>
        /// Gets or Sets EscrowTableFee3
        /// </summary>
        [DataMember(Name="escrowTableFee3", EmitDefaultValue=false)]
        public double? EscrowTableFee3 { get; set; }

        /// <summary>
        /// Gets or Sets EscrowTableFee4
        /// </summary>
        [DataMember(Name="escrowTableFee4", EmitDefaultValue=false)]
        public double? EscrowTableFee4 { get; set; }

        /// <summary>
        /// Gets or Sets EscrowTableFee5
        /// </summary>
        [DataMember(Name="escrowTableFee5", EmitDefaultValue=false)]
        public double? EscrowTableFee5 { get; set; }

        /// <summary>
        /// Gets or Sets EscrowTableName
        /// </summary>
        [DataMember(Name="escrowTableName", EmitDefaultValue=false)]
        public string EscrowTableName { get; set; }

        /// <summary>
        /// Gets or Sets ClosingDisclosure5
        /// </summary>
        [DataMember(Name="closingDisclosure5", EmitDefaultValue=false)]
        public LoanContractClosingCostClosingDisclosure5 ClosingDisclosure5 { get; set; }

        /// <summary>
        /// Gets or Sets Gfe2010
        /// </summary>
        [DataMember(Name="gfe2010", EmitDefaultValue=false)]
        public LoanContractClosingCostGfe2010 Gfe2010 { get; set; }

        /// <summary>
        /// Gets or Sets Gfe2010Page
        /// </summary>
        [DataMember(Name="gfe2010Page", EmitDefaultValue=false)]
        public LoanContractClosingCostGfe2010Page Gfe2010Page { get; set; }

        /// <summary>
        /// Gets or Sets Gfe2010Section
        /// </summary>
        [DataMember(Name="gfe2010Section", EmitDefaultValue=false)]
        public LoanContractClosingCostGfe2010Section Gfe2010Section { get; set; }

        /// <summary>
        /// Gets or Sets ImpoundHazInsRate
        /// </summary>
        [DataMember(Name="impoundHazInsRate", EmitDefaultValue=false)]
        public double? ImpoundHazInsRate { get; set; }

        /// <summary>
        /// Gets or Sets ImpoundMortgInsPremRate
        /// </summary>
        [DataMember(Name="impoundMortgInsPremRate", EmitDefaultValue=false)]
        public double? ImpoundMortgInsPremRate { get; set; }

        /// <summary>
        /// Gets or Sets ImpoundMortgInsPremYearlyBasis
        /// </summary>
        [DataMember(Name="impoundMortgInsPremYearlyBasis", EmitDefaultValue=false)]
        public string ImpoundMortgInsPremYearlyBasis { get; set; }

        /// <summary>
        /// Gets or Sets ImpoundTaxesRate
        /// </summary>
        [DataMember(Name="impoundTaxesRate", EmitDefaultValue=false)]
        public double? ImpoundTaxesRate { get; set; }

        /// <summary>
        /// Gets or Sets ImpoundType1
        /// </summary>
        [DataMember(Name="impoundType1", EmitDefaultValue=false)]
        public string ImpoundType1 { get; set; }

        /// <summary>
        /// Gets or Sets ImpoundType2
        /// </summary>
        [DataMember(Name="impoundType2", EmitDefaultValue=false)]
        public string ImpoundType2 { get; set; }

        /// <summary>
        /// Gets or Sets ImpoundType3
        /// </summary>
        [DataMember(Name="impoundType3", EmitDefaultValue=false)]
        public string ImpoundType3 { get; set; }

        /// <summary>
        /// Gets or Sets ImpoundType4
        /// </summary>
        [DataMember(Name="impoundType4", EmitDefaultValue=false)]
        public string ImpoundType4 { get; set; }

        /// <summary>
        /// Gets or Sets ProposedMonthlyHazardInsurance
        /// </summary>
        [DataMember(Name="proposedMonthlyHazardInsurance", EmitDefaultValue=false)]
        public double? ProposedMonthlyHazardInsurance { get; set; }

        /// <summary>
        /// Gets or Sets ProposedMonthlyMortgageInsurance
        /// </summary>
        [DataMember(Name="proposedMonthlyMortgageInsurance", EmitDefaultValue=false)]
        public double? ProposedMonthlyMortgageInsurance { get; set; }

        /// <summary>
        /// Gets or Sets Section1000BorrowerPaidTotalAmount
        /// </summary>
        [DataMember(Name="section1000BorrowerPaidTotalAmount", EmitDefaultValue=false)]
        public double? Section1000BorrowerPaidTotalAmount { get; set; }

        /// <summary>
        /// Gets or Sets Section1000SellerPaidTotalAmount
        /// </summary>
        [DataMember(Name="section1000SellerPaidTotalAmount", EmitDefaultValue=false)]
        public double? Section1000SellerPaidTotalAmount { get; set; }

        /// <summary>
        /// Gets or Sets SettlementClosingFeeNewHudBorPaidAmount
        /// </summary>
        [DataMember(Name="settlementClosingFeeNewHudBorPaidAmount", EmitDefaultValue=false)]
        public double? SettlementClosingFeeNewHudBorPaidAmount { get; set; }

        /// <summary>
        /// Gets or Sets SettlementClosingFeeNewHudSelPaidAmount
        /// </summary>
        [DataMember(Name="settlementClosingFeeNewHudSelPaidAmount", EmitDefaultValue=false)]
        public double? SettlementClosingFeeNewHudSelPaidAmount { get; set; }

        /// <summary>
        /// Gets or Sets TitleCompanyName
        /// </summary>
        [DataMember(Name="titleCompanyName", EmitDefaultValue=false)]
        public string TitleCompanyName { get; set; }

        /// <summary>
        /// Gets or Sets TitleExaminationNewHudSelPaidAmount
        /// </summary>
        [DataMember(Name="titleExaminationNewHudSelPaidAmount", EmitDefaultValue=false)]
        public double? TitleExaminationNewHudSelPaidAmount { get; set; }

        /// <summary>
        /// Gets or Sets TitleTable2010Name
        /// </summary>
        [DataMember(Name="titleTable2010Name", EmitDefaultValue=false)]
        public string TitleTable2010Name { get; set; }

        /// <summary>
        /// Gets or Sets TitleTableName
        /// </summary>
        [DataMember(Name="titleTableName", EmitDefaultValue=false)]
        public string TitleTableName { get; set; }

        /// <summary>
        /// Gets or Sets TotalForBorPaid1
        /// </summary>
        [DataMember(Name="totalForBorPaid1", EmitDefaultValue=false)]
        public double? TotalForBorPaid1 { get; set; }

        /// <summary>
        /// Gets or Sets TotalForBorPaid2
        /// </summary>
        [DataMember(Name="totalForBorPaid2", EmitDefaultValue=false)]
        public double? TotalForBorPaid2 { get; set; }

        /// <summary>
        /// Gets or Sets TotalForBorPaid3
        /// </summary>
        [DataMember(Name="totalForBorPaid3", EmitDefaultValue=false)]
        public double? TotalForBorPaid3 { get; set; }

        /// <summary>
        /// Gets or Sets TotalForBorPaid4
        /// </summary>
        [DataMember(Name="totalForBorPaid4", EmitDefaultValue=false)]
        public double? TotalForBorPaid4 { get; set; }

        /// <summary>
        /// Gets or Sets TotalForBorPaid5
        /// </summary>
        [DataMember(Name="totalForBorPaid5", EmitDefaultValue=false)]
        public double? TotalForBorPaid5 { get; set; }

        /// <summary>
        /// Gets or Sets TotalForBorPaid6
        /// </summary>
        [DataMember(Name="totalForBorPaid6", EmitDefaultValue=false)]
        public double? TotalForBorPaid6 { get; set; }

        /// <summary>
        /// Gets or Sets TotalForSellerPaid1
        /// </summary>
        [DataMember(Name="totalForSellerPaid1", EmitDefaultValue=false)]
        public double? TotalForSellerPaid1 { get; set; }

        /// <summary>
        /// Gets or Sets TotalForSellerPaid2
        /// </summary>
        [DataMember(Name="totalForSellerPaid2", EmitDefaultValue=false)]
        public double? TotalForSellerPaid2 { get; set; }

        /// <summary>
        /// Gets or Sets TotalForSellerPaid3
        /// </summary>
        [DataMember(Name="totalForSellerPaid3", EmitDefaultValue=false)]
        public double? TotalForSellerPaid3 { get; set; }

        /// <summary>
        /// Gets or Sets TotalForSellerPaid4
        /// </summary>
        [DataMember(Name="totalForSellerPaid4", EmitDefaultValue=false)]
        public double? TotalForSellerPaid4 { get; set; }

        /// <summary>
        /// Gets or Sets TotalForSellerPaid5
        /// </summary>
        [DataMember(Name="totalForSellerPaid5", EmitDefaultValue=false)]
        public double? TotalForSellerPaid5 { get; set; }

        /// <summary>
        /// Gets or Sets TotalForSellerPaid6
        /// </summary>
        [DataMember(Name="totalForSellerPaid6", EmitDefaultValue=false)]
        public double? TotalForSellerPaid6 { get; set; }

        /// <summary>
        /// Gets or Sets LoanEstimate1
        /// </summary>
        [DataMember(Name="loanEstimate1", EmitDefaultValue=false)]
        public LoanContractClosingCostLoanEstimate1 LoanEstimate1 { get; set; }

        /// <summary>
        /// Gets or Sets LoanEstimate2
        /// </summary>
        [DataMember(Name="loanEstimate2", EmitDefaultValue=false)]
        public LoanContractClosingCostLoanEstimate2 LoanEstimate2 { get; set; }

        /// <summary>
        /// Gets or Sets LoanEstimate3
        /// </summary>
        [DataMember(Name="loanEstimate3", EmitDefaultValue=false)]
        public LoanContractClosingCostLoanEstimate3 LoanEstimate3 { get; set; }

        /// <summary>
        /// Gets or Sets ClosingDisclosure1
        /// </summary>
        [DataMember(Name="closingDisclosure1", EmitDefaultValue=false)]
        public LoanContractClosingCostClosingDisclosure1 ClosingDisclosure1 { get; set; }

        /// <summary>
        /// Gets or Sets ClosingDisclosure2
        /// </summary>
        [DataMember(Name="closingDisclosure2", EmitDefaultValue=false)]
        public LoanContractClosingCostClosingDisclosure2 ClosingDisclosure2 { get; set; }

        /// <summary>
        /// Gets or Sets ClosingDisclosure3
        /// </summary>
        [DataMember(Name="closingDisclosure3", EmitDefaultValue=false)]
        public LoanContractClosingCostClosingDisclosure3 ClosingDisclosure3 { get; set; }

        /// <summary>
        /// Gets or Sets ClosingDisclosure4
        /// </summary>
        [DataMember(Name="closingDisclosure4", EmitDefaultValue=false)]
        public LoanContractClosingCostClosingDisclosure4 ClosingDisclosure4 { get; set; }

        /// <summary>
        /// Gets or Sets FeeVarianceOther
        /// </summary>
        [DataMember(Name="feeVarianceOther", EmitDefaultValue=false)]
        public LoanContractClosingCostFeeVarianceOther FeeVarianceOther { get; set; }

        /// <summary>
        /// Gets or Sets FeeVariances
        /// </summary>
        [DataMember(Name="feeVariances", EmitDefaultValue=false)]
        public List<LoanContractClosingCostFeeVariances> FeeVariances { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractClosingCost {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AdjustmentFactor: ").Append(AdjustmentFactor).Append("\n");
            sb.Append("  AggregateAdjustmentFwbc: ").Append(AggregateAdjustmentFwbc).Append("\n");
            sb.Append("  BorrowerPaidDiscountPointsTotalAmount: ").Append(BorrowerPaidDiscountPointsTotalAmount).Append("\n");
            sb.Append("  BrokerCommissionBasedPrice: ").Append(BrokerCommissionBasedPrice).Append("\n");
            sb.Append("  BrokerCommissionBasedUnitPercentage: ").Append(BrokerCommissionBasedUnitPercentage).Append("\n");
            sb.Append("  BrokerCommissionBasedUnitPrice: ").Append(BrokerCommissionBasedUnitPrice).Append("\n");
            sb.Append("  ClosingCostProgram: ").Append(ClosingCostProgram).Append("\n");
            sb.Append("  ClosingCostScenarioXml: ").Append(ClosingCostScenarioXml).Append("\n");
            sb.Append("  DisclosedSalesPrice: ").Append(DisclosedSalesPrice).Append("\n");
            sb.Append("  EscrowCompanyName: ").Append(EscrowCompanyName).Append("\n");
            sb.Append("  EscrowTableDesc1: ").Append(EscrowTableDesc1).Append("\n");
            sb.Append("  EscrowTableDesc2: ").Append(EscrowTableDesc2).Append("\n");
            sb.Append("  EscrowTableDesc3: ").Append(EscrowTableDesc3).Append("\n");
            sb.Append("  EscrowTableDesc4: ").Append(EscrowTableDesc4).Append("\n");
            sb.Append("  EscrowTableDesc5: ").Append(EscrowTableDesc5).Append("\n");
            sb.Append("  EscrowTableFee: ").Append(EscrowTableFee).Append("\n");
            sb.Append("  EscrowTableFee1: ").Append(EscrowTableFee1).Append("\n");
            sb.Append("  EscrowTableFee2: ").Append(EscrowTableFee2).Append("\n");
            sb.Append("  EscrowTableFee3: ").Append(EscrowTableFee3).Append("\n");
            sb.Append("  EscrowTableFee4: ").Append(EscrowTableFee4).Append("\n");
            sb.Append("  EscrowTableFee5: ").Append(EscrowTableFee5).Append("\n");
            sb.Append("  EscrowTableName: ").Append(EscrowTableName).Append("\n");
            sb.Append("  ClosingDisclosure5: ").Append(ClosingDisclosure5).Append("\n");
            sb.Append("  Gfe2010: ").Append(Gfe2010).Append("\n");
            sb.Append("  Gfe2010Page: ").Append(Gfe2010Page).Append("\n");
            sb.Append("  Gfe2010Section: ").Append(Gfe2010Section).Append("\n");
            sb.Append("  ImpoundHazInsRate: ").Append(ImpoundHazInsRate).Append("\n");
            sb.Append("  ImpoundMortgInsPremRate: ").Append(ImpoundMortgInsPremRate).Append("\n");
            sb.Append("  ImpoundMortgInsPremYearlyBasis: ").Append(ImpoundMortgInsPremYearlyBasis).Append("\n");
            sb.Append("  ImpoundTaxesRate: ").Append(ImpoundTaxesRate).Append("\n");
            sb.Append("  ImpoundType1: ").Append(ImpoundType1).Append("\n");
            sb.Append("  ImpoundType2: ").Append(ImpoundType2).Append("\n");
            sb.Append("  ImpoundType3: ").Append(ImpoundType3).Append("\n");
            sb.Append("  ImpoundType4: ").Append(ImpoundType4).Append("\n");
            sb.Append("  ProposedMonthlyHazardInsurance: ").Append(ProposedMonthlyHazardInsurance).Append("\n");
            sb.Append("  ProposedMonthlyMortgageInsurance: ").Append(ProposedMonthlyMortgageInsurance).Append("\n");
            sb.Append("  Section1000BorrowerPaidTotalAmount: ").Append(Section1000BorrowerPaidTotalAmount).Append("\n");
            sb.Append("  Section1000SellerPaidTotalAmount: ").Append(Section1000SellerPaidTotalAmount).Append("\n");
            sb.Append("  SettlementClosingFeeNewHudBorPaidAmount: ").Append(SettlementClosingFeeNewHudBorPaidAmount).Append("\n");
            sb.Append("  SettlementClosingFeeNewHudSelPaidAmount: ").Append(SettlementClosingFeeNewHudSelPaidAmount).Append("\n");
            sb.Append("  TitleCompanyName: ").Append(TitleCompanyName).Append("\n");
            sb.Append("  TitleExaminationNewHudSelPaidAmount: ").Append(TitleExaminationNewHudSelPaidAmount).Append("\n");
            sb.Append("  TitleTable2010Name: ").Append(TitleTable2010Name).Append("\n");
            sb.Append("  TitleTableName: ").Append(TitleTableName).Append("\n");
            sb.Append("  TotalForBorPaid1: ").Append(TotalForBorPaid1).Append("\n");
            sb.Append("  TotalForBorPaid2: ").Append(TotalForBorPaid2).Append("\n");
            sb.Append("  TotalForBorPaid3: ").Append(TotalForBorPaid3).Append("\n");
            sb.Append("  TotalForBorPaid4: ").Append(TotalForBorPaid4).Append("\n");
            sb.Append("  TotalForBorPaid5: ").Append(TotalForBorPaid5).Append("\n");
            sb.Append("  TotalForBorPaid6: ").Append(TotalForBorPaid6).Append("\n");
            sb.Append("  TotalForSellerPaid1: ").Append(TotalForSellerPaid1).Append("\n");
            sb.Append("  TotalForSellerPaid2: ").Append(TotalForSellerPaid2).Append("\n");
            sb.Append("  TotalForSellerPaid3: ").Append(TotalForSellerPaid3).Append("\n");
            sb.Append("  TotalForSellerPaid4: ").Append(TotalForSellerPaid4).Append("\n");
            sb.Append("  TotalForSellerPaid5: ").Append(TotalForSellerPaid5).Append("\n");
            sb.Append("  TotalForSellerPaid6: ").Append(TotalForSellerPaid6).Append("\n");
            sb.Append("  LoanEstimate1: ").Append(LoanEstimate1).Append("\n");
            sb.Append("  LoanEstimate2: ").Append(LoanEstimate2).Append("\n");
            sb.Append("  LoanEstimate3: ").Append(LoanEstimate3).Append("\n");
            sb.Append("  ClosingDisclosure1: ").Append(ClosingDisclosure1).Append("\n");
            sb.Append("  ClosingDisclosure2: ").Append(ClosingDisclosure2).Append("\n");
            sb.Append("  ClosingDisclosure3: ").Append(ClosingDisclosure3).Append("\n");
            sb.Append("  ClosingDisclosure4: ").Append(ClosingDisclosure4).Append("\n");
            sb.Append("  FeeVarianceOther: ").Append(FeeVarianceOther).Append("\n");
            sb.Append("  FeeVariances: ").Append(FeeVariances).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractClosingCost);
        }

        /// <summary>
        /// Returns true if LoanContractClosingCost instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractClosingCost to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractClosingCost input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AdjustmentFactor == input.AdjustmentFactor ||
                    (this.AdjustmentFactor != null &&
                    this.AdjustmentFactor.Equals(input.AdjustmentFactor))
                ) && 
                (
                    this.AggregateAdjustmentFwbc == input.AggregateAdjustmentFwbc ||
                    (this.AggregateAdjustmentFwbc != null &&
                    this.AggregateAdjustmentFwbc.Equals(input.AggregateAdjustmentFwbc))
                ) && 
                (
                    this.BorrowerPaidDiscountPointsTotalAmount == input.BorrowerPaidDiscountPointsTotalAmount ||
                    (this.BorrowerPaidDiscountPointsTotalAmount != null &&
                    this.BorrowerPaidDiscountPointsTotalAmount.Equals(input.BorrowerPaidDiscountPointsTotalAmount))
                ) && 
                (
                    this.BrokerCommissionBasedPrice == input.BrokerCommissionBasedPrice ||
                    (this.BrokerCommissionBasedPrice != null &&
                    this.BrokerCommissionBasedPrice.Equals(input.BrokerCommissionBasedPrice))
                ) && 
                (
                    this.BrokerCommissionBasedUnitPercentage == input.BrokerCommissionBasedUnitPercentage ||
                    (this.BrokerCommissionBasedUnitPercentage != null &&
                    this.BrokerCommissionBasedUnitPercentage.Equals(input.BrokerCommissionBasedUnitPercentage))
                ) && 
                (
                    this.BrokerCommissionBasedUnitPrice == input.BrokerCommissionBasedUnitPrice ||
                    (this.BrokerCommissionBasedUnitPrice != null &&
                    this.BrokerCommissionBasedUnitPrice.Equals(input.BrokerCommissionBasedUnitPrice))
                ) && 
                (
                    this.ClosingCostProgram == input.ClosingCostProgram ||
                    (this.ClosingCostProgram != null &&
                    this.ClosingCostProgram.Equals(input.ClosingCostProgram))
                ) && 
                (
                    this.ClosingCostScenarioXml == input.ClosingCostScenarioXml ||
                    (this.ClosingCostScenarioXml != null &&
                    this.ClosingCostScenarioXml.Equals(input.ClosingCostScenarioXml))
                ) && 
                (
                    this.DisclosedSalesPrice == input.DisclosedSalesPrice ||
                    (this.DisclosedSalesPrice != null &&
                    this.DisclosedSalesPrice.Equals(input.DisclosedSalesPrice))
                ) && 
                (
                    this.EscrowCompanyName == input.EscrowCompanyName ||
                    (this.EscrowCompanyName != null &&
                    this.EscrowCompanyName.Equals(input.EscrowCompanyName))
                ) && 
                (
                    this.EscrowTableDesc1 == input.EscrowTableDesc1 ||
                    (this.EscrowTableDesc1 != null &&
                    this.EscrowTableDesc1.Equals(input.EscrowTableDesc1))
                ) && 
                (
                    this.EscrowTableDesc2 == input.EscrowTableDesc2 ||
                    (this.EscrowTableDesc2 != null &&
                    this.EscrowTableDesc2.Equals(input.EscrowTableDesc2))
                ) && 
                (
                    this.EscrowTableDesc3 == input.EscrowTableDesc3 ||
                    (this.EscrowTableDesc3 != null &&
                    this.EscrowTableDesc3.Equals(input.EscrowTableDesc3))
                ) && 
                (
                    this.EscrowTableDesc4 == input.EscrowTableDesc4 ||
                    (this.EscrowTableDesc4 != null &&
                    this.EscrowTableDesc4.Equals(input.EscrowTableDesc4))
                ) && 
                (
                    this.EscrowTableDesc5 == input.EscrowTableDesc5 ||
                    (this.EscrowTableDesc5 != null &&
                    this.EscrowTableDesc5.Equals(input.EscrowTableDesc5))
                ) && 
                (
                    this.EscrowTableFee == input.EscrowTableFee ||
                    (this.EscrowTableFee != null &&
                    this.EscrowTableFee.Equals(input.EscrowTableFee))
                ) && 
                (
                    this.EscrowTableFee1 == input.EscrowTableFee1 ||
                    (this.EscrowTableFee1 != null &&
                    this.EscrowTableFee1.Equals(input.EscrowTableFee1))
                ) && 
                (
                    this.EscrowTableFee2 == input.EscrowTableFee2 ||
                    (this.EscrowTableFee2 != null &&
                    this.EscrowTableFee2.Equals(input.EscrowTableFee2))
                ) && 
                (
                    this.EscrowTableFee3 == input.EscrowTableFee3 ||
                    (this.EscrowTableFee3 != null &&
                    this.EscrowTableFee3.Equals(input.EscrowTableFee3))
                ) && 
                (
                    this.EscrowTableFee4 == input.EscrowTableFee4 ||
                    (this.EscrowTableFee4 != null &&
                    this.EscrowTableFee4.Equals(input.EscrowTableFee4))
                ) && 
                (
                    this.EscrowTableFee5 == input.EscrowTableFee5 ||
                    (this.EscrowTableFee5 != null &&
                    this.EscrowTableFee5.Equals(input.EscrowTableFee5))
                ) && 
                (
                    this.EscrowTableName == input.EscrowTableName ||
                    (this.EscrowTableName != null &&
                    this.EscrowTableName.Equals(input.EscrowTableName))
                ) && 
                (
                    this.ClosingDisclosure5 == input.ClosingDisclosure5 ||
                    (this.ClosingDisclosure5 != null &&
                    this.ClosingDisclosure5.Equals(input.ClosingDisclosure5))
                ) && 
                (
                    this.Gfe2010 == input.Gfe2010 ||
                    (this.Gfe2010 != null &&
                    this.Gfe2010.Equals(input.Gfe2010))
                ) && 
                (
                    this.Gfe2010Page == input.Gfe2010Page ||
                    (this.Gfe2010Page != null &&
                    this.Gfe2010Page.Equals(input.Gfe2010Page))
                ) && 
                (
                    this.Gfe2010Section == input.Gfe2010Section ||
                    (this.Gfe2010Section != null &&
                    this.Gfe2010Section.Equals(input.Gfe2010Section))
                ) && 
                (
                    this.ImpoundHazInsRate == input.ImpoundHazInsRate ||
                    (this.ImpoundHazInsRate != null &&
                    this.ImpoundHazInsRate.Equals(input.ImpoundHazInsRate))
                ) && 
                (
                    this.ImpoundMortgInsPremRate == input.ImpoundMortgInsPremRate ||
                    (this.ImpoundMortgInsPremRate != null &&
                    this.ImpoundMortgInsPremRate.Equals(input.ImpoundMortgInsPremRate))
                ) && 
                (
                    this.ImpoundMortgInsPremYearlyBasis == input.ImpoundMortgInsPremYearlyBasis ||
                    (this.ImpoundMortgInsPremYearlyBasis != null &&
                    this.ImpoundMortgInsPremYearlyBasis.Equals(input.ImpoundMortgInsPremYearlyBasis))
                ) && 
                (
                    this.ImpoundTaxesRate == input.ImpoundTaxesRate ||
                    (this.ImpoundTaxesRate != null &&
                    this.ImpoundTaxesRate.Equals(input.ImpoundTaxesRate))
                ) && 
                (
                    this.ImpoundType1 == input.ImpoundType1 ||
                    (this.ImpoundType1 != null &&
                    this.ImpoundType1.Equals(input.ImpoundType1))
                ) && 
                (
                    this.ImpoundType2 == input.ImpoundType2 ||
                    (this.ImpoundType2 != null &&
                    this.ImpoundType2.Equals(input.ImpoundType2))
                ) && 
                (
                    this.ImpoundType3 == input.ImpoundType3 ||
                    (this.ImpoundType3 != null &&
                    this.ImpoundType3.Equals(input.ImpoundType3))
                ) && 
                (
                    this.ImpoundType4 == input.ImpoundType4 ||
                    (this.ImpoundType4 != null &&
                    this.ImpoundType4.Equals(input.ImpoundType4))
                ) && 
                (
                    this.ProposedMonthlyHazardInsurance == input.ProposedMonthlyHazardInsurance ||
                    (this.ProposedMonthlyHazardInsurance != null &&
                    this.ProposedMonthlyHazardInsurance.Equals(input.ProposedMonthlyHazardInsurance))
                ) && 
                (
                    this.ProposedMonthlyMortgageInsurance == input.ProposedMonthlyMortgageInsurance ||
                    (this.ProposedMonthlyMortgageInsurance != null &&
                    this.ProposedMonthlyMortgageInsurance.Equals(input.ProposedMonthlyMortgageInsurance))
                ) && 
                (
                    this.Section1000BorrowerPaidTotalAmount == input.Section1000BorrowerPaidTotalAmount ||
                    (this.Section1000BorrowerPaidTotalAmount != null &&
                    this.Section1000BorrowerPaidTotalAmount.Equals(input.Section1000BorrowerPaidTotalAmount))
                ) && 
                (
                    this.Section1000SellerPaidTotalAmount == input.Section1000SellerPaidTotalAmount ||
                    (this.Section1000SellerPaidTotalAmount != null &&
                    this.Section1000SellerPaidTotalAmount.Equals(input.Section1000SellerPaidTotalAmount))
                ) && 
                (
                    this.SettlementClosingFeeNewHudBorPaidAmount == input.SettlementClosingFeeNewHudBorPaidAmount ||
                    (this.SettlementClosingFeeNewHudBorPaidAmount != null &&
                    this.SettlementClosingFeeNewHudBorPaidAmount.Equals(input.SettlementClosingFeeNewHudBorPaidAmount))
                ) && 
                (
                    this.SettlementClosingFeeNewHudSelPaidAmount == input.SettlementClosingFeeNewHudSelPaidAmount ||
                    (this.SettlementClosingFeeNewHudSelPaidAmount != null &&
                    this.SettlementClosingFeeNewHudSelPaidAmount.Equals(input.SettlementClosingFeeNewHudSelPaidAmount))
                ) && 
                (
                    this.TitleCompanyName == input.TitleCompanyName ||
                    (this.TitleCompanyName != null &&
                    this.TitleCompanyName.Equals(input.TitleCompanyName))
                ) && 
                (
                    this.TitleExaminationNewHudSelPaidAmount == input.TitleExaminationNewHudSelPaidAmount ||
                    (this.TitleExaminationNewHudSelPaidAmount != null &&
                    this.TitleExaminationNewHudSelPaidAmount.Equals(input.TitleExaminationNewHudSelPaidAmount))
                ) && 
                (
                    this.TitleTable2010Name == input.TitleTable2010Name ||
                    (this.TitleTable2010Name != null &&
                    this.TitleTable2010Name.Equals(input.TitleTable2010Name))
                ) && 
                (
                    this.TitleTableName == input.TitleTableName ||
                    (this.TitleTableName != null &&
                    this.TitleTableName.Equals(input.TitleTableName))
                ) && 
                (
                    this.TotalForBorPaid1 == input.TotalForBorPaid1 ||
                    (this.TotalForBorPaid1 != null &&
                    this.TotalForBorPaid1.Equals(input.TotalForBorPaid1))
                ) && 
                (
                    this.TotalForBorPaid2 == input.TotalForBorPaid2 ||
                    (this.TotalForBorPaid2 != null &&
                    this.TotalForBorPaid2.Equals(input.TotalForBorPaid2))
                ) && 
                (
                    this.TotalForBorPaid3 == input.TotalForBorPaid3 ||
                    (this.TotalForBorPaid3 != null &&
                    this.TotalForBorPaid3.Equals(input.TotalForBorPaid3))
                ) && 
                (
                    this.TotalForBorPaid4 == input.TotalForBorPaid4 ||
                    (this.TotalForBorPaid4 != null &&
                    this.TotalForBorPaid4.Equals(input.TotalForBorPaid4))
                ) && 
                (
                    this.TotalForBorPaid5 == input.TotalForBorPaid5 ||
                    (this.TotalForBorPaid5 != null &&
                    this.TotalForBorPaid5.Equals(input.TotalForBorPaid5))
                ) && 
                (
                    this.TotalForBorPaid6 == input.TotalForBorPaid6 ||
                    (this.TotalForBorPaid6 != null &&
                    this.TotalForBorPaid6.Equals(input.TotalForBorPaid6))
                ) && 
                (
                    this.TotalForSellerPaid1 == input.TotalForSellerPaid1 ||
                    (this.TotalForSellerPaid1 != null &&
                    this.TotalForSellerPaid1.Equals(input.TotalForSellerPaid1))
                ) && 
                (
                    this.TotalForSellerPaid2 == input.TotalForSellerPaid2 ||
                    (this.TotalForSellerPaid2 != null &&
                    this.TotalForSellerPaid2.Equals(input.TotalForSellerPaid2))
                ) && 
                (
                    this.TotalForSellerPaid3 == input.TotalForSellerPaid3 ||
                    (this.TotalForSellerPaid3 != null &&
                    this.TotalForSellerPaid3.Equals(input.TotalForSellerPaid3))
                ) && 
                (
                    this.TotalForSellerPaid4 == input.TotalForSellerPaid4 ||
                    (this.TotalForSellerPaid4 != null &&
                    this.TotalForSellerPaid4.Equals(input.TotalForSellerPaid4))
                ) && 
                (
                    this.TotalForSellerPaid5 == input.TotalForSellerPaid5 ||
                    (this.TotalForSellerPaid5 != null &&
                    this.TotalForSellerPaid5.Equals(input.TotalForSellerPaid5))
                ) && 
                (
                    this.TotalForSellerPaid6 == input.TotalForSellerPaid6 ||
                    (this.TotalForSellerPaid6 != null &&
                    this.TotalForSellerPaid6.Equals(input.TotalForSellerPaid6))
                ) && 
                (
                    this.LoanEstimate1 == input.LoanEstimate1 ||
                    (this.LoanEstimate1 != null &&
                    this.LoanEstimate1.Equals(input.LoanEstimate1))
                ) && 
                (
                    this.LoanEstimate2 == input.LoanEstimate2 ||
                    (this.LoanEstimate2 != null &&
                    this.LoanEstimate2.Equals(input.LoanEstimate2))
                ) && 
                (
                    this.LoanEstimate3 == input.LoanEstimate3 ||
                    (this.LoanEstimate3 != null &&
                    this.LoanEstimate3.Equals(input.LoanEstimate3))
                ) && 
                (
                    this.ClosingDisclosure1 == input.ClosingDisclosure1 ||
                    (this.ClosingDisclosure1 != null &&
                    this.ClosingDisclosure1.Equals(input.ClosingDisclosure1))
                ) && 
                (
                    this.ClosingDisclosure2 == input.ClosingDisclosure2 ||
                    (this.ClosingDisclosure2 != null &&
                    this.ClosingDisclosure2.Equals(input.ClosingDisclosure2))
                ) && 
                (
                    this.ClosingDisclosure3 == input.ClosingDisclosure3 ||
                    (this.ClosingDisclosure3 != null &&
                    this.ClosingDisclosure3.Equals(input.ClosingDisclosure3))
                ) && 
                (
                    this.ClosingDisclosure4 == input.ClosingDisclosure4 ||
                    (this.ClosingDisclosure4 != null &&
                    this.ClosingDisclosure4.Equals(input.ClosingDisclosure4))
                ) && 
                (
                    this.FeeVarianceOther == input.FeeVarianceOther ||
                    (this.FeeVarianceOther != null &&
                    this.FeeVarianceOther.Equals(input.FeeVarianceOther))
                ) && 
                (
                    this.FeeVariances == input.FeeVariances ||
                    this.FeeVariances != null &&
                    this.FeeVariances.SequenceEqual(input.FeeVariances)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AdjustmentFactor != null)
                    hashCode = hashCode * 59 + this.AdjustmentFactor.GetHashCode();
                if (this.AggregateAdjustmentFwbc != null)
                    hashCode = hashCode * 59 + this.AggregateAdjustmentFwbc.GetHashCode();
                if (this.BorrowerPaidDiscountPointsTotalAmount != null)
                    hashCode = hashCode * 59 + this.BorrowerPaidDiscountPointsTotalAmount.GetHashCode();
                if (this.BrokerCommissionBasedPrice != null)
                    hashCode = hashCode * 59 + this.BrokerCommissionBasedPrice.GetHashCode();
                if (this.BrokerCommissionBasedUnitPercentage != null)
                    hashCode = hashCode * 59 + this.BrokerCommissionBasedUnitPercentage.GetHashCode();
                if (this.BrokerCommissionBasedUnitPrice != null)
                    hashCode = hashCode * 59 + this.BrokerCommissionBasedUnitPrice.GetHashCode();
                if (this.ClosingCostProgram != null)
                    hashCode = hashCode * 59 + this.ClosingCostProgram.GetHashCode();
                if (this.ClosingCostScenarioXml != null)
                    hashCode = hashCode * 59 + this.ClosingCostScenarioXml.GetHashCode();
                if (this.DisclosedSalesPrice != null)
                    hashCode = hashCode * 59 + this.DisclosedSalesPrice.GetHashCode();
                if (this.EscrowCompanyName != null)
                    hashCode = hashCode * 59 + this.EscrowCompanyName.GetHashCode();
                if (this.EscrowTableDesc1 != null)
                    hashCode = hashCode * 59 + this.EscrowTableDesc1.GetHashCode();
                if (this.EscrowTableDesc2 != null)
                    hashCode = hashCode * 59 + this.EscrowTableDesc2.GetHashCode();
                if (this.EscrowTableDesc3 != null)
                    hashCode = hashCode * 59 + this.EscrowTableDesc3.GetHashCode();
                if (this.EscrowTableDesc4 != null)
                    hashCode = hashCode * 59 + this.EscrowTableDesc4.GetHashCode();
                if (this.EscrowTableDesc5 != null)
                    hashCode = hashCode * 59 + this.EscrowTableDesc5.GetHashCode();
                if (this.EscrowTableFee != null)
                    hashCode = hashCode * 59 + this.EscrowTableFee.GetHashCode();
                if (this.EscrowTableFee1 != null)
                    hashCode = hashCode * 59 + this.EscrowTableFee1.GetHashCode();
                if (this.EscrowTableFee2 != null)
                    hashCode = hashCode * 59 + this.EscrowTableFee2.GetHashCode();
                if (this.EscrowTableFee3 != null)
                    hashCode = hashCode * 59 + this.EscrowTableFee3.GetHashCode();
                if (this.EscrowTableFee4 != null)
                    hashCode = hashCode * 59 + this.EscrowTableFee4.GetHashCode();
                if (this.EscrowTableFee5 != null)
                    hashCode = hashCode * 59 + this.EscrowTableFee5.GetHashCode();
                if (this.EscrowTableName != null)
                    hashCode = hashCode * 59 + this.EscrowTableName.GetHashCode();
                if (this.ClosingDisclosure5 != null)
                    hashCode = hashCode * 59 + this.ClosingDisclosure5.GetHashCode();
                if (this.Gfe2010 != null)
                    hashCode = hashCode * 59 + this.Gfe2010.GetHashCode();
                if (this.Gfe2010Page != null)
                    hashCode = hashCode * 59 + this.Gfe2010Page.GetHashCode();
                if (this.Gfe2010Section != null)
                    hashCode = hashCode * 59 + this.Gfe2010Section.GetHashCode();
                if (this.ImpoundHazInsRate != null)
                    hashCode = hashCode * 59 + this.ImpoundHazInsRate.GetHashCode();
                if (this.ImpoundMortgInsPremRate != null)
                    hashCode = hashCode * 59 + this.ImpoundMortgInsPremRate.GetHashCode();
                if (this.ImpoundMortgInsPremYearlyBasis != null)
                    hashCode = hashCode * 59 + this.ImpoundMortgInsPremYearlyBasis.GetHashCode();
                if (this.ImpoundTaxesRate != null)
                    hashCode = hashCode * 59 + this.ImpoundTaxesRate.GetHashCode();
                if (this.ImpoundType1 != null)
                    hashCode = hashCode * 59 + this.ImpoundType1.GetHashCode();
                if (this.ImpoundType2 != null)
                    hashCode = hashCode * 59 + this.ImpoundType2.GetHashCode();
                if (this.ImpoundType3 != null)
                    hashCode = hashCode * 59 + this.ImpoundType3.GetHashCode();
                if (this.ImpoundType4 != null)
                    hashCode = hashCode * 59 + this.ImpoundType4.GetHashCode();
                if (this.ProposedMonthlyHazardInsurance != null)
                    hashCode = hashCode * 59 + this.ProposedMonthlyHazardInsurance.GetHashCode();
                if (this.ProposedMonthlyMortgageInsurance != null)
                    hashCode = hashCode * 59 + this.ProposedMonthlyMortgageInsurance.GetHashCode();
                if (this.Section1000BorrowerPaidTotalAmount != null)
                    hashCode = hashCode * 59 + this.Section1000BorrowerPaidTotalAmount.GetHashCode();
                if (this.Section1000SellerPaidTotalAmount != null)
                    hashCode = hashCode * 59 + this.Section1000SellerPaidTotalAmount.GetHashCode();
                if (this.SettlementClosingFeeNewHudBorPaidAmount != null)
                    hashCode = hashCode * 59 + this.SettlementClosingFeeNewHudBorPaidAmount.GetHashCode();
                if (this.SettlementClosingFeeNewHudSelPaidAmount != null)
                    hashCode = hashCode * 59 + this.SettlementClosingFeeNewHudSelPaidAmount.GetHashCode();
                if (this.TitleCompanyName != null)
                    hashCode = hashCode * 59 + this.TitleCompanyName.GetHashCode();
                if (this.TitleExaminationNewHudSelPaidAmount != null)
                    hashCode = hashCode * 59 + this.TitleExaminationNewHudSelPaidAmount.GetHashCode();
                if (this.TitleTable2010Name != null)
                    hashCode = hashCode * 59 + this.TitleTable2010Name.GetHashCode();
                if (this.TitleTableName != null)
                    hashCode = hashCode * 59 + this.TitleTableName.GetHashCode();
                if (this.TotalForBorPaid1 != null)
                    hashCode = hashCode * 59 + this.TotalForBorPaid1.GetHashCode();
                if (this.TotalForBorPaid2 != null)
                    hashCode = hashCode * 59 + this.TotalForBorPaid2.GetHashCode();
                if (this.TotalForBorPaid3 != null)
                    hashCode = hashCode * 59 + this.TotalForBorPaid3.GetHashCode();
                if (this.TotalForBorPaid4 != null)
                    hashCode = hashCode * 59 + this.TotalForBorPaid4.GetHashCode();
                if (this.TotalForBorPaid5 != null)
                    hashCode = hashCode * 59 + this.TotalForBorPaid5.GetHashCode();
                if (this.TotalForBorPaid6 != null)
                    hashCode = hashCode * 59 + this.TotalForBorPaid6.GetHashCode();
                if (this.TotalForSellerPaid1 != null)
                    hashCode = hashCode * 59 + this.TotalForSellerPaid1.GetHashCode();
                if (this.TotalForSellerPaid2 != null)
                    hashCode = hashCode * 59 + this.TotalForSellerPaid2.GetHashCode();
                if (this.TotalForSellerPaid3 != null)
                    hashCode = hashCode * 59 + this.TotalForSellerPaid3.GetHashCode();
                if (this.TotalForSellerPaid4 != null)
                    hashCode = hashCode * 59 + this.TotalForSellerPaid4.GetHashCode();
                if (this.TotalForSellerPaid5 != null)
                    hashCode = hashCode * 59 + this.TotalForSellerPaid5.GetHashCode();
                if (this.TotalForSellerPaid6 != null)
                    hashCode = hashCode * 59 + this.TotalForSellerPaid6.GetHashCode();
                if (this.LoanEstimate1 != null)
                    hashCode = hashCode * 59 + this.LoanEstimate1.GetHashCode();
                if (this.LoanEstimate2 != null)
                    hashCode = hashCode * 59 + this.LoanEstimate2.GetHashCode();
                if (this.LoanEstimate3 != null)
                    hashCode = hashCode * 59 + this.LoanEstimate3.GetHashCode();
                if (this.ClosingDisclosure1 != null)
                    hashCode = hashCode * 59 + this.ClosingDisclosure1.GetHashCode();
                if (this.ClosingDisclosure2 != null)
                    hashCode = hashCode * 59 + this.ClosingDisclosure2.GetHashCode();
                if (this.ClosingDisclosure3 != null)
                    hashCode = hashCode * 59 + this.ClosingDisclosure3.GetHashCode();
                if (this.ClosingDisclosure4 != null)
                    hashCode = hashCode * 59 + this.ClosingDisclosure4.GetHashCode();
                if (this.FeeVarianceOther != null)
                    hashCode = hashCode * 59 + this.FeeVarianceOther.GetHashCode();
                if (this.FeeVariances != null)
                    hashCode = hashCode * 59 + this.FeeVariances.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
