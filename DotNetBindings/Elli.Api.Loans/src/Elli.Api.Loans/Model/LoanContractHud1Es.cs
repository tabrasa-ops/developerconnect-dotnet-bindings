/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractHud1Es
    /// </summary>
    [DataContract]
    public partial class LoanContractHud1Es :  IEquatable<LoanContractHud1Es>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets AnnualCityTax
        /// </summary>
        [DataMember(Name="annualCityTax", EmitDefaultValue=false)]
        public double? AnnualCityTax { get; set; }

        /// <summary>
        /// Gets or Sets AnnualFeeCushion
        /// </summary>
        [DataMember(Name="annualFeeCushion", EmitDefaultValue=false)]
        public int? AnnualFeeCushion { get; set; }

        /// <summary>
        /// Gets or Sets AnnualFloodInsurance
        /// </summary>
        [DataMember(Name="annualFloodInsurance", EmitDefaultValue=false)]
        public double? AnnualFloodInsurance { get; set; }

        /// <summary>
        /// Gets or Sets AnnualHazardInsurance
        /// </summary>
        [DataMember(Name="annualHazardInsurance", EmitDefaultValue=false)]
        public double? AnnualHazardInsurance { get; set; }

        /// <summary>
        /// Gets or Sets AnnualMortgageInsurance
        /// </summary>
        [DataMember(Name="annualMortgageInsurance", EmitDefaultValue=false)]
        public double? AnnualMortgageInsurance { get; set; }

        /// <summary>
        /// Gets or Sets AnnualTax
        /// </summary>
        [DataMember(Name="annualTax", EmitDefaultValue=false)]
        public double? AnnualTax { get; set; }

        /// <summary>
        /// Gets or Sets AnnualUserEscrow1
        /// </summary>
        [DataMember(Name="annualUserEscrow1", EmitDefaultValue=false)]
        public double? AnnualUserEscrow1 { get; set; }

        /// <summary>
        /// Gets or Sets AnnualUserEscrow2
        /// </summary>
        [DataMember(Name="annualUserEscrow2", EmitDefaultValue=false)]
        public double? AnnualUserEscrow2 { get; set; }

        /// <summary>
        /// Gets or Sets AnnualUserEscrow3
        /// </summary>
        [DataMember(Name="annualUserEscrow3", EmitDefaultValue=false)]
        public double? AnnualUserEscrow3 { get; set; }

        /// <summary>
        /// Gets or Sets BiweeklyCityPropertyTaxes
        /// </summary>
        [DataMember(Name="biweeklyCityPropertyTaxes", EmitDefaultValue=false)]
        public double? BiweeklyCityPropertyTaxes { get; set; }

        /// <summary>
        /// Gets or Sets BiweeklyCountyTaxes
        /// </summary>
        [DataMember(Name="biweeklyCountyTaxes", EmitDefaultValue=false)]
        public double? BiweeklyCountyTaxes { get; set; }

        /// <summary>
        /// Gets or Sets BiweeklyFloodInsurance
        /// </summary>
        [DataMember(Name="biweeklyFloodInsurance", EmitDefaultValue=false)]
        public double? BiweeklyFloodInsurance { get; set; }

        /// <summary>
        /// Gets or Sets BiweeklyHazardInsurance
        /// </summary>
        [DataMember(Name="biweeklyHazardInsurance", EmitDefaultValue=false)]
        public double? BiweeklyHazardInsurance { get; set; }

        /// <summary>
        /// Gets or Sets BiweeklyMortgageInsurance
        /// </summary>
        [DataMember(Name="biweeklyMortgageInsurance", EmitDefaultValue=false)]
        public double? BiweeklyMortgageInsurance { get; set; }

        /// <summary>
        /// Gets or Sets BiweeklyPITI
        /// </summary>
        [DataMember(Name="biweeklyPITI", EmitDefaultValue=false)]
        public double? BiweeklyPITI { get; set; }

        /// <summary>
        /// Gets or Sets BiweeklyTotalBiweeklyPayment
        /// </summary>
        [DataMember(Name="biweeklyTotalBiweeklyPayment", EmitDefaultValue=false)]
        public double? BiweeklyTotalBiweeklyPayment { get; set; }

        /// <summary>
        /// Gets or Sets BiweeklyTotalBiweeklyPaymentToEscrow
        /// </summary>
        [DataMember(Name="biweeklyTotalBiweeklyPaymentToEscrow", EmitDefaultValue=false)]
        public double? BiweeklyTotalBiweeklyPaymentToEscrow { get; set; }

        /// <summary>
        /// Gets or Sets BiweeklyUSDAFee
        /// </summary>
        [DataMember(Name="biweeklyUSDAFee", EmitDefaultValue=false)]
        public double? BiweeklyUSDAFee { get; set; }

        /// <summary>
        /// Gets or Sets BiweeklyUserDefinedEscrowFee1
        /// </summary>
        [DataMember(Name="biweeklyUserDefinedEscrowFee1", EmitDefaultValue=false)]
        public double? BiweeklyUserDefinedEscrowFee1 { get; set; }

        /// <summary>
        /// Gets or Sets BiweeklyUserDefinedEscrowFee2
        /// </summary>
        [DataMember(Name="biweeklyUserDefinedEscrowFee2", EmitDefaultValue=false)]
        public double? BiweeklyUserDefinedEscrowFee2 { get; set; }

        /// <summary>
        /// Gets or Sets BiweeklyUserDefinedEscrowFee3
        /// </summary>
        [DataMember(Name="biweeklyUserDefinedEscrowFee3", EmitDefaultValue=false)]
        public double? BiweeklyUserDefinedEscrowFee3 { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxAddress
        /// </summary>
        [DataMember(Name="cityPropertyTaxAddress", EmitDefaultValue=false)]
        public string CityPropertyTaxAddress { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxAmountLastPay
        /// </summary>
        [DataMember(Name="cityPropertyTaxAmountLastPay", EmitDefaultValue=false)]
        public double? CityPropertyTaxAmountLastPay { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxAmountNextDue
        /// </summary>
        [DataMember(Name="cityPropertyTaxAmountNextDue", EmitDefaultValue=false)]
        public double? CityPropertyTaxAmountNextDue { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxCity
        /// </summary>
        [DataMember(Name="cityPropertyTaxCity", EmitDefaultValue=false)]
        public string CityPropertyTaxCity { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxContactName
        /// </summary>
        [DataMember(Name="cityPropertyTaxContactName", EmitDefaultValue=false)]
        public string CityPropertyTaxContactName { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxDatePaid
        /// </summary>
        [DataMember(Name="cityPropertyTaxDatePaid", EmitDefaultValue=false)]
        public DateTime? CityPropertyTaxDatePaid { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxDelinquentDate
        /// </summary>
        [DataMember(Name="cityPropertyTaxDelinquentDate", EmitDefaultValue=false)]
        public DateTime? CityPropertyTaxDelinquentDate { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxEmail
        /// </summary>
        [DataMember(Name="cityPropertyTaxEmail", EmitDefaultValue=false)]
        public string CityPropertyTaxEmail { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxFax
        /// </summary>
        [DataMember(Name="cityPropertyTaxFax", EmitDefaultValue=false)]
        public string CityPropertyTaxFax { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxName
        /// </summary>
        [DataMember(Name="cityPropertyTaxName", EmitDefaultValue=false)]
        public string CityPropertyTaxName { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxNextDueDate
        /// </summary>
        [DataMember(Name="cityPropertyTaxNextDueDate", EmitDefaultValue=false)]
        public DateTime? CityPropertyTaxNextDueDate { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxPaymentSchedule
        /// </summary>
        [DataMember(Name="cityPropertyTaxPaymentSchedule", EmitDefaultValue=false)]
        public string CityPropertyTaxPaymentSchedule { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxPhone
        /// </summary>
        [DataMember(Name="cityPropertyTaxPhone", EmitDefaultValue=false)]
        public string CityPropertyTaxPhone { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxPostalCode
        /// </summary>
        [DataMember(Name="cityPropertyTaxPostalCode", EmitDefaultValue=false)]
        public string CityPropertyTaxPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTaxState
        /// </summary>
        [DataMember(Name="cityPropertyTaxState", EmitDefaultValue=false)]
        public string CityPropertyTaxState { get; set; }

        /// <summary>
        /// Gets or Sets EndingBalance
        /// </summary>
        [DataMember(Name="endingBalance", EmitDefaultValue=false)]
        public double? EndingBalance { get; set; }

        /// <summary>
        /// Gets or Sets EscrowPayment
        /// </summary>
        [DataMember(Name="escrowPayment", EmitDefaultValue=false)]
        public double? EscrowPayment { get; set; }

        /// <summary>
        /// Gets or Sets FloodInsDisbCushion
        /// </summary>
        [DataMember(Name="floodInsDisbCushion", EmitDefaultValue=false)]
        public int? FloodInsDisbCushion { get; set; }

        /// <summary>
        /// Gets or Sets HazInsDisbCushion
        /// </summary>
        [DataMember(Name="hazInsDisbCushion", EmitDefaultValue=false)]
        public int? HazInsDisbCushion { get; set; }

        /// <summary>
        /// Gets or Sets Hud1EsDates
        /// </summary>
        [DataMember(Name="hud1EsDates", EmitDefaultValue=false)]
        public List<LoanContractHud1EsHud1EsDates> Hud1EsDates { get; set; }

        /// <summary>
        /// Gets or Sets Hud1EsDueDates
        /// </summary>
        [DataMember(Name="hud1EsDueDates", EmitDefaultValue=false)]
        public List<LoanContractHud1EsHud1EsDueDates> Hud1EsDueDates { get; set; }

        /// <summary>
        /// Gets or Sets Hud1EsItemizes
        /// </summary>
        [DataMember(Name="hud1EsItemizes", EmitDefaultValue=false)]
        public List<LoanContractHud1EsHud1EsItemizes> Hud1EsItemizes { get; set; }

        /// <summary>
        /// Gets or Sets Hud1EsItemizesTotalLines
        /// </summary>
        [DataMember(Name="hud1EsItemizesTotalLines", EmitDefaultValue=false)]
        public int? Hud1EsItemizesTotalLines { get; set; }

        /// <summary>
        /// Gets or Sets Hud1EsItemizesUseItemizeEscrowIndicator
        /// </summary>
        [DataMember(Name="hud1EsItemizesUseItemizeEscrowIndicator", EmitDefaultValue=false)]
        public bool? Hud1EsItemizesUseItemizeEscrowIndicator { get; set; }

        /// <summary>
        /// Gets or Sets Hud1EsPayTos
        /// </summary>
        [DataMember(Name="hud1EsPayTos", EmitDefaultValue=false)]
        public List<LoanContractHud1EsHud1EsPayTos> Hud1EsPayTos { get; set; }

        /// <summary>
        /// Gets or Sets Hud1EsSetups
        /// </summary>
        [DataMember(Name="hud1EsSetups", EmitDefaultValue=false)]
        public List<LoanContractHud1EsHud1EsSetups> Hud1EsSetups { get; set; }

        /// <summary>
        /// Gets or Sets MtgInsCushionTerminationIndicator
        /// </summary>
        [DataMember(Name="mtgInsCushionTerminationIndicator", EmitDefaultValue=false)]
        public bool? MtgInsCushionTerminationIndicator { get; set; }

        /// <summary>
        /// Gets or Sets MtgInsDisbCushion
        /// </summary>
        [DataMember(Name="mtgInsDisbCushion", EmitDefaultValue=false)]
        public int? MtgInsDisbCushion { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxAddress
        /// </summary>
        [DataMember(Name="realEstateTaxAddress", EmitDefaultValue=false)]
        public string RealEstateTaxAddress { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxAmountLastPay
        /// </summary>
        [DataMember(Name="realEstateTaxAmountLastPay", EmitDefaultValue=false)]
        public double? RealEstateTaxAmountLastPay { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxAmountNextDue
        /// </summary>
        [DataMember(Name="realEstateTaxAmountNextDue", EmitDefaultValue=false)]
        public double? RealEstateTaxAmountNextDue { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxCity
        /// </summary>
        [DataMember(Name="realEstateTaxCity", EmitDefaultValue=false)]
        public string RealEstateTaxCity { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxContactName
        /// </summary>
        [DataMember(Name="realEstateTaxContactName", EmitDefaultValue=false)]
        public string RealEstateTaxContactName { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxDatePaid
        /// </summary>
        [DataMember(Name="realEstateTaxDatePaid", EmitDefaultValue=false)]
        public DateTime? RealEstateTaxDatePaid { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxDelinquentDate
        /// </summary>
        [DataMember(Name="realEstateTaxDelinquentDate", EmitDefaultValue=false)]
        public DateTime? RealEstateTaxDelinquentDate { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxEmail
        /// </summary>
        [DataMember(Name="realEstateTaxEmail", EmitDefaultValue=false)]
        public string RealEstateTaxEmail { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxFax
        /// </summary>
        [DataMember(Name="realEstateTaxFax", EmitDefaultValue=false)]
        public string RealEstateTaxFax { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxName
        /// </summary>
        [DataMember(Name="realEstateTaxName", EmitDefaultValue=false)]
        public string RealEstateTaxName { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxNextDueDate
        /// </summary>
        [DataMember(Name="realEstateTaxNextDueDate", EmitDefaultValue=false)]
        public DateTime? RealEstateTaxNextDueDate { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxPaymentSchedule
        /// </summary>
        [DataMember(Name="realEstateTaxPaymentSchedule", EmitDefaultValue=false)]
        public string RealEstateTaxPaymentSchedule { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxPhone
        /// </summary>
        [DataMember(Name="realEstateTaxPhone", EmitDefaultValue=false)]
        public string RealEstateTaxPhone { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxPostalCode
        /// </summary>
        [DataMember(Name="realEstateTaxPostalCode", EmitDefaultValue=false)]
        public string RealEstateTaxPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateTaxState
        /// </summary>
        [DataMember(Name="realEstateTaxState", EmitDefaultValue=false)]
        public string RealEstateTaxState { get; set; }

        /// <summary>
        /// Gets or Sets SchoolTaxesCushion
        /// </summary>
        [DataMember(Name="schoolTaxesCushion", EmitDefaultValue=false)]
        public int? SchoolTaxesCushion { get; set; }

        /// <summary>
        /// Gets or Sets ServicerAddress
        /// </summary>
        [DataMember(Name="servicerAddress", EmitDefaultValue=false)]
        public string ServicerAddress { get; set; }

        /// <summary>
        /// Gets or Sets ServicerCity
        /// </summary>
        [DataMember(Name="servicerCity", EmitDefaultValue=false)]
        public string ServicerCity { get; set; }

        /// <summary>
        /// Gets or Sets ServicerContactName
        /// </summary>
        [DataMember(Name="servicerContactName", EmitDefaultValue=false)]
        public string ServicerContactName { get; set; }

        /// <summary>
        /// Gets or Sets ServicerPhone
        /// </summary>
        [DataMember(Name="servicerPhone", EmitDefaultValue=false)]
        public string ServicerPhone { get; set; }

        /// <summary>
        /// Gets or Sets ServicerPostalCode
        /// </summary>
        [DataMember(Name="servicerPostalCode", EmitDefaultValue=false)]
        public string ServicerPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets ServicerState
        /// </summary>
        [DataMember(Name="servicerState", EmitDefaultValue=false)]
        public string ServicerState { get; set; }

        /// <summary>
        /// Gets or Sets SingleLineAnalysis
        /// </summary>
        [DataMember(Name="singleLineAnalysis", EmitDefaultValue=false)]
        public double? SingleLineAnalysis { get; set; }

        /// <summary>
        /// Gets or Sets StartingBalance
        /// </summary>
        [DataMember(Name="startingBalance", EmitDefaultValue=false)]
        public double? StartingBalance { get; set; }

        /// <summary>
        /// Gets or Sets TaxDisbCushion
        /// </summary>
        [DataMember(Name="taxDisbCushion", EmitDefaultValue=false)]
        public int? TaxDisbCushion { get; set; }

        /// <summary>
        /// Gets or Sets TotalEscrowReserves
        /// </summary>
        [DataMember(Name="totalEscrowReserves", EmitDefaultValue=false)]
        public double? TotalEscrowReserves { get; set; }

        /// <summary>
        /// Gets or Sets UsdaAnnualFee
        /// </summary>
        [DataMember(Name="usdaAnnualFee", EmitDefaultValue=false)]
        public double? UsdaAnnualFee { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedCushion1
        /// </summary>
        [DataMember(Name="userDefinedCushion1", EmitDefaultValue=false)]
        public int? UserDefinedCushion1 { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedCushion2
        /// </summary>
        [DataMember(Name="userDefinedCushion2", EmitDefaultValue=false)]
        public int? UserDefinedCushion2 { get; set; }

        /// <summary>
        /// Gets or Sets UserDefinedCushion3
        /// </summary>
        [DataMember(Name="userDefinedCushion3", EmitDefaultValue=false)]
        public int? UserDefinedCushion3 { get; set; }

        /// <summary>
        /// Gets or Sets YearlyMortgageInsurance
        /// </summary>
        [DataMember(Name="yearlyMortgageInsurance", EmitDefaultValue=false)]
        public double? YearlyMortgageInsurance { get; set; }

        /// <summary>
        /// Gets or Sets YearlyUsdaFee
        /// </summary>
        [DataMember(Name="yearlyUsdaFee", EmitDefaultValue=false)]
        public double? YearlyUsdaFee { get; set; }

        /// <summary>
        /// Gets or Sets EscrowPaymentYearly
        /// </summary>
        [DataMember(Name="escrowPaymentYearly", EmitDefaultValue=false)]
        public double? EscrowPaymentYearly { get; set; }

        /// <summary>
        /// Gets or Sets NonEscrowCostsYearly
        /// </summary>
        [DataMember(Name="nonEscrowCostsYearly", EmitDefaultValue=false)]
        public double? NonEscrowCostsYearly { get; set; }

        /// <summary>
        /// Gets or Sets EscrowFirstPaymentDate
        /// </summary>
        [DataMember(Name="escrowFirstPaymentDate", EmitDefaultValue=false)]
        public DateTime? EscrowFirstPaymentDate { get; set; }

        /// <summary>
        /// Gets or Sets EscrowFirstPaymentDateType
        /// </summary>
        [DataMember(Name="escrowFirstPaymentDateType", EmitDefaultValue=false)]
        public string EscrowFirstPaymentDateType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractHud1Es {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AnnualCityTax: ").Append(AnnualCityTax).Append("\n");
            sb.Append("  AnnualFeeCushion: ").Append(AnnualFeeCushion).Append("\n");
            sb.Append("  AnnualFloodInsurance: ").Append(AnnualFloodInsurance).Append("\n");
            sb.Append("  AnnualHazardInsurance: ").Append(AnnualHazardInsurance).Append("\n");
            sb.Append("  AnnualMortgageInsurance: ").Append(AnnualMortgageInsurance).Append("\n");
            sb.Append("  AnnualTax: ").Append(AnnualTax).Append("\n");
            sb.Append("  AnnualUserEscrow1: ").Append(AnnualUserEscrow1).Append("\n");
            sb.Append("  AnnualUserEscrow2: ").Append(AnnualUserEscrow2).Append("\n");
            sb.Append("  AnnualUserEscrow3: ").Append(AnnualUserEscrow3).Append("\n");
            sb.Append("  BiweeklyCityPropertyTaxes: ").Append(BiweeklyCityPropertyTaxes).Append("\n");
            sb.Append("  BiweeklyCountyTaxes: ").Append(BiweeklyCountyTaxes).Append("\n");
            sb.Append("  BiweeklyFloodInsurance: ").Append(BiweeklyFloodInsurance).Append("\n");
            sb.Append("  BiweeklyHazardInsurance: ").Append(BiweeklyHazardInsurance).Append("\n");
            sb.Append("  BiweeklyMortgageInsurance: ").Append(BiweeklyMortgageInsurance).Append("\n");
            sb.Append("  BiweeklyPITI: ").Append(BiweeklyPITI).Append("\n");
            sb.Append("  BiweeklyTotalBiweeklyPayment: ").Append(BiweeklyTotalBiweeklyPayment).Append("\n");
            sb.Append("  BiweeklyTotalBiweeklyPaymentToEscrow: ").Append(BiweeklyTotalBiweeklyPaymentToEscrow).Append("\n");
            sb.Append("  BiweeklyUSDAFee: ").Append(BiweeklyUSDAFee).Append("\n");
            sb.Append("  BiweeklyUserDefinedEscrowFee1: ").Append(BiweeklyUserDefinedEscrowFee1).Append("\n");
            sb.Append("  BiweeklyUserDefinedEscrowFee2: ").Append(BiweeklyUserDefinedEscrowFee2).Append("\n");
            sb.Append("  BiweeklyUserDefinedEscrowFee3: ").Append(BiweeklyUserDefinedEscrowFee3).Append("\n");
            sb.Append("  CityPropertyTaxAddress: ").Append(CityPropertyTaxAddress).Append("\n");
            sb.Append("  CityPropertyTaxAmountLastPay: ").Append(CityPropertyTaxAmountLastPay).Append("\n");
            sb.Append("  CityPropertyTaxAmountNextDue: ").Append(CityPropertyTaxAmountNextDue).Append("\n");
            sb.Append("  CityPropertyTaxCity: ").Append(CityPropertyTaxCity).Append("\n");
            sb.Append("  CityPropertyTaxContactName: ").Append(CityPropertyTaxContactName).Append("\n");
            sb.Append("  CityPropertyTaxDatePaid: ").Append(CityPropertyTaxDatePaid).Append("\n");
            sb.Append("  CityPropertyTaxDelinquentDate: ").Append(CityPropertyTaxDelinquentDate).Append("\n");
            sb.Append("  CityPropertyTaxEmail: ").Append(CityPropertyTaxEmail).Append("\n");
            sb.Append("  CityPropertyTaxFax: ").Append(CityPropertyTaxFax).Append("\n");
            sb.Append("  CityPropertyTaxName: ").Append(CityPropertyTaxName).Append("\n");
            sb.Append("  CityPropertyTaxNextDueDate: ").Append(CityPropertyTaxNextDueDate).Append("\n");
            sb.Append("  CityPropertyTaxPaymentSchedule: ").Append(CityPropertyTaxPaymentSchedule).Append("\n");
            sb.Append("  CityPropertyTaxPhone: ").Append(CityPropertyTaxPhone).Append("\n");
            sb.Append("  CityPropertyTaxPostalCode: ").Append(CityPropertyTaxPostalCode).Append("\n");
            sb.Append("  CityPropertyTaxState: ").Append(CityPropertyTaxState).Append("\n");
            sb.Append("  EndingBalance: ").Append(EndingBalance).Append("\n");
            sb.Append("  EscrowPayment: ").Append(EscrowPayment).Append("\n");
            sb.Append("  FloodInsDisbCushion: ").Append(FloodInsDisbCushion).Append("\n");
            sb.Append("  HazInsDisbCushion: ").Append(HazInsDisbCushion).Append("\n");
            sb.Append("  Hud1EsDates: ").Append(Hud1EsDates).Append("\n");
            sb.Append("  Hud1EsDueDates: ").Append(Hud1EsDueDates).Append("\n");
            sb.Append("  Hud1EsItemizes: ").Append(Hud1EsItemizes).Append("\n");
            sb.Append("  Hud1EsItemizesTotalLines: ").Append(Hud1EsItemizesTotalLines).Append("\n");
            sb.Append("  Hud1EsItemizesUseItemizeEscrowIndicator: ").Append(Hud1EsItemizesUseItemizeEscrowIndicator).Append("\n");
            sb.Append("  Hud1EsPayTos: ").Append(Hud1EsPayTos).Append("\n");
            sb.Append("  Hud1EsSetups: ").Append(Hud1EsSetups).Append("\n");
            sb.Append("  MtgInsCushionTerminationIndicator: ").Append(MtgInsCushionTerminationIndicator).Append("\n");
            sb.Append("  MtgInsDisbCushion: ").Append(MtgInsDisbCushion).Append("\n");
            sb.Append("  RealEstateTaxAddress: ").Append(RealEstateTaxAddress).Append("\n");
            sb.Append("  RealEstateTaxAmountLastPay: ").Append(RealEstateTaxAmountLastPay).Append("\n");
            sb.Append("  RealEstateTaxAmountNextDue: ").Append(RealEstateTaxAmountNextDue).Append("\n");
            sb.Append("  RealEstateTaxCity: ").Append(RealEstateTaxCity).Append("\n");
            sb.Append("  RealEstateTaxContactName: ").Append(RealEstateTaxContactName).Append("\n");
            sb.Append("  RealEstateTaxDatePaid: ").Append(RealEstateTaxDatePaid).Append("\n");
            sb.Append("  RealEstateTaxDelinquentDate: ").Append(RealEstateTaxDelinquentDate).Append("\n");
            sb.Append("  RealEstateTaxEmail: ").Append(RealEstateTaxEmail).Append("\n");
            sb.Append("  RealEstateTaxFax: ").Append(RealEstateTaxFax).Append("\n");
            sb.Append("  RealEstateTaxName: ").Append(RealEstateTaxName).Append("\n");
            sb.Append("  RealEstateTaxNextDueDate: ").Append(RealEstateTaxNextDueDate).Append("\n");
            sb.Append("  RealEstateTaxPaymentSchedule: ").Append(RealEstateTaxPaymentSchedule).Append("\n");
            sb.Append("  RealEstateTaxPhone: ").Append(RealEstateTaxPhone).Append("\n");
            sb.Append("  RealEstateTaxPostalCode: ").Append(RealEstateTaxPostalCode).Append("\n");
            sb.Append("  RealEstateTaxState: ").Append(RealEstateTaxState).Append("\n");
            sb.Append("  SchoolTaxesCushion: ").Append(SchoolTaxesCushion).Append("\n");
            sb.Append("  ServicerAddress: ").Append(ServicerAddress).Append("\n");
            sb.Append("  ServicerCity: ").Append(ServicerCity).Append("\n");
            sb.Append("  ServicerContactName: ").Append(ServicerContactName).Append("\n");
            sb.Append("  ServicerPhone: ").Append(ServicerPhone).Append("\n");
            sb.Append("  ServicerPostalCode: ").Append(ServicerPostalCode).Append("\n");
            sb.Append("  ServicerState: ").Append(ServicerState).Append("\n");
            sb.Append("  SingleLineAnalysis: ").Append(SingleLineAnalysis).Append("\n");
            sb.Append("  StartingBalance: ").Append(StartingBalance).Append("\n");
            sb.Append("  TaxDisbCushion: ").Append(TaxDisbCushion).Append("\n");
            sb.Append("  TotalEscrowReserves: ").Append(TotalEscrowReserves).Append("\n");
            sb.Append("  UsdaAnnualFee: ").Append(UsdaAnnualFee).Append("\n");
            sb.Append("  UserDefinedCushion1: ").Append(UserDefinedCushion1).Append("\n");
            sb.Append("  UserDefinedCushion2: ").Append(UserDefinedCushion2).Append("\n");
            sb.Append("  UserDefinedCushion3: ").Append(UserDefinedCushion3).Append("\n");
            sb.Append("  YearlyMortgageInsurance: ").Append(YearlyMortgageInsurance).Append("\n");
            sb.Append("  YearlyUsdaFee: ").Append(YearlyUsdaFee).Append("\n");
            sb.Append("  EscrowPaymentYearly: ").Append(EscrowPaymentYearly).Append("\n");
            sb.Append("  NonEscrowCostsYearly: ").Append(NonEscrowCostsYearly).Append("\n");
            sb.Append("  EscrowFirstPaymentDate: ").Append(EscrowFirstPaymentDate).Append("\n");
            sb.Append("  EscrowFirstPaymentDateType: ").Append(EscrowFirstPaymentDateType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractHud1Es);
        }

        /// <summary>
        /// Returns true if LoanContractHud1Es instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractHud1Es to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractHud1Es input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AnnualCityTax == input.AnnualCityTax ||
                    (this.AnnualCityTax != null &&
                    this.AnnualCityTax.Equals(input.AnnualCityTax))
                ) && 
                (
                    this.AnnualFeeCushion == input.AnnualFeeCushion ||
                    (this.AnnualFeeCushion != null &&
                    this.AnnualFeeCushion.Equals(input.AnnualFeeCushion))
                ) && 
                (
                    this.AnnualFloodInsurance == input.AnnualFloodInsurance ||
                    (this.AnnualFloodInsurance != null &&
                    this.AnnualFloodInsurance.Equals(input.AnnualFloodInsurance))
                ) && 
                (
                    this.AnnualHazardInsurance == input.AnnualHazardInsurance ||
                    (this.AnnualHazardInsurance != null &&
                    this.AnnualHazardInsurance.Equals(input.AnnualHazardInsurance))
                ) && 
                (
                    this.AnnualMortgageInsurance == input.AnnualMortgageInsurance ||
                    (this.AnnualMortgageInsurance != null &&
                    this.AnnualMortgageInsurance.Equals(input.AnnualMortgageInsurance))
                ) && 
                (
                    this.AnnualTax == input.AnnualTax ||
                    (this.AnnualTax != null &&
                    this.AnnualTax.Equals(input.AnnualTax))
                ) && 
                (
                    this.AnnualUserEscrow1 == input.AnnualUserEscrow1 ||
                    (this.AnnualUserEscrow1 != null &&
                    this.AnnualUserEscrow1.Equals(input.AnnualUserEscrow1))
                ) && 
                (
                    this.AnnualUserEscrow2 == input.AnnualUserEscrow2 ||
                    (this.AnnualUserEscrow2 != null &&
                    this.AnnualUserEscrow2.Equals(input.AnnualUserEscrow2))
                ) && 
                (
                    this.AnnualUserEscrow3 == input.AnnualUserEscrow3 ||
                    (this.AnnualUserEscrow3 != null &&
                    this.AnnualUserEscrow3.Equals(input.AnnualUserEscrow3))
                ) && 
                (
                    this.BiweeklyCityPropertyTaxes == input.BiweeklyCityPropertyTaxes ||
                    (this.BiweeklyCityPropertyTaxes != null &&
                    this.BiweeklyCityPropertyTaxes.Equals(input.BiweeklyCityPropertyTaxes))
                ) && 
                (
                    this.BiweeklyCountyTaxes == input.BiweeklyCountyTaxes ||
                    (this.BiweeklyCountyTaxes != null &&
                    this.BiweeklyCountyTaxes.Equals(input.BiweeklyCountyTaxes))
                ) && 
                (
                    this.BiweeklyFloodInsurance == input.BiweeklyFloodInsurance ||
                    (this.BiweeklyFloodInsurance != null &&
                    this.BiweeklyFloodInsurance.Equals(input.BiweeklyFloodInsurance))
                ) && 
                (
                    this.BiweeklyHazardInsurance == input.BiweeklyHazardInsurance ||
                    (this.BiweeklyHazardInsurance != null &&
                    this.BiweeklyHazardInsurance.Equals(input.BiweeklyHazardInsurance))
                ) && 
                (
                    this.BiweeklyMortgageInsurance == input.BiweeklyMortgageInsurance ||
                    (this.BiweeklyMortgageInsurance != null &&
                    this.BiweeklyMortgageInsurance.Equals(input.BiweeklyMortgageInsurance))
                ) && 
                (
                    this.BiweeklyPITI == input.BiweeklyPITI ||
                    (this.BiweeklyPITI != null &&
                    this.BiweeklyPITI.Equals(input.BiweeklyPITI))
                ) && 
                (
                    this.BiweeklyTotalBiweeklyPayment == input.BiweeklyTotalBiweeklyPayment ||
                    (this.BiweeklyTotalBiweeklyPayment != null &&
                    this.BiweeklyTotalBiweeklyPayment.Equals(input.BiweeklyTotalBiweeklyPayment))
                ) && 
                (
                    this.BiweeklyTotalBiweeklyPaymentToEscrow == input.BiweeklyTotalBiweeklyPaymentToEscrow ||
                    (this.BiweeklyTotalBiweeklyPaymentToEscrow != null &&
                    this.BiweeklyTotalBiweeklyPaymentToEscrow.Equals(input.BiweeklyTotalBiweeklyPaymentToEscrow))
                ) && 
                (
                    this.BiweeklyUSDAFee == input.BiweeklyUSDAFee ||
                    (this.BiweeklyUSDAFee != null &&
                    this.BiweeklyUSDAFee.Equals(input.BiweeklyUSDAFee))
                ) && 
                (
                    this.BiweeklyUserDefinedEscrowFee1 == input.BiweeklyUserDefinedEscrowFee1 ||
                    (this.BiweeklyUserDefinedEscrowFee1 != null &&
                    this.BiweeklyUserDefinedEscrowFee1.Equals(input.BiweeklyUserDefinedEscrowFee1))
                ) && 
                (
                    this.BiweeklyUserDefinedEscrowFee2 == input.BiweeklyUserDefinedEscrowFee2 ||
                    (this.BiweeklyUserDefinedEscrowFee2 != null &&
                    this.BiweeklyUserDefinedEscrowFee2.Equals(input.BiweeklyUserDefinedEscrowFee2))
                ) && 
                (
                    this.BiweeklyUserDefinedEscrowFee3 == input.BiweeklyUserDefinedEscrowFee3 ||
                    (this.BiweeklyUserDefinedEscrowFee3 != null &&
                    this.BiweeklyUserDefinedEscrowFee3.Equals(input.BiweeklyUserDefinedEscrowFee3))
                ) && 
                (
                    this.CityPropertyTaxAddress == input.CityPropertyTaxAddress ||
                    (this.CityPropertyTaxAddress != null &&
                    this.CityPropertyTaxAddress.Equals(input.CityPropertyTaxAddress))
                ) && 
                (
                    this.CityPropertyTaxAmountLastPay == input.CityPropertyTaxAmountLastPay ||
                    (this.CityPropertyTaxAmountLastPay != null &&
                    this.CityPropertyTaxAmountLastPay.Equals(input.CityPropertyTaxAmountLastPay))
                ) && 
                (
                    this.CityPropertyTaxAmountNextDue == input.CityPropertyTaxAmountNextDue ||
                    (this.CityPropertyTaxAmountNextDue != null &&
                    this.CityPropertyTaxAmountNextDue.Equals(input.CityPropertyTaxAmountNextDue))
                ) && 
                (
                    this.CityPropertyTaxCity == input.CityPropertyTaxCity ||
                    (this.CityPropertyTaxCity != null &&
                    this.CityPropertyTaxCity.Equals(input.CityPropertyTaxCity))
                ) && 
                (
                    this.CityPropertyTaxContactName == input.CityPropertyTaxContactName ||
                    (this.CityPropertyTaxContactName != null &&
                    this.CityPropertyTaxContactName.Equals(input.CityPropertyTaxContactName))
                ) && 
                (
                    this.CityPropertyTaxDatePaid == input.CityPropertyTaxDatePaid ||
                    (this.CityPropertyTaxDatePaid != null &&
                    this.CityPropertyTaxDatePaid.Equals(input.CityPropertyTaxDatePaid))
                ) && 
                (
                    this.CityPropertyTaxDelinquentDate == input.CityPropertyTaxDelinquentDate ||
                    (this.CityPropertyTaxDelinquentDate != null &&
                    this.CityPropertyTaxDelinquentDate.Equals(input.CityPropertyTaxDelinquentDate))
                ) && 
                (
                    this.CityPropertyTaxEmail == input.CityPropertyTaxEmail ||
                    (this.CityPropertyTaxEmail != null &&
                    this.CityPropertyTaxEmail.Equals(input.CityPropertyTaxEmail))
                ) && 
                (
                    this.CityPropertyTaxFax == input.CityPropertyTaxFax ||
                    (this.CityPropertyTaxFax != null &&
                    this.CityPropertyTaxFax.Equals(input.CityPropertyTaxFax))
                ) && 
                (
                    this.CityPropertyTaxName == input.CityPropertyTaxName ||
                    (this.CityPropertyTaxName != null &&
                    this.CityPropertyTaxName.Equals(input.CityPropertyTaxName))
                ) && 
                (
                    this.CityPropertyTaxNextDueDate == input.CityPropertyTaxNextDueDate ||
                    (this.CityPropertyTaxNextDueDate != null &&
                    this.CityPropertyTaxNextDueDate.Equals(input.CityPropertyTaxNextDueDate))
                ) && 
                (
                    this.CityPropertyTaxPaymentSchedule == input.CityPropertyTaxPaymentSchedule ||
                    (this.CityPropertyTaxPaymentSchedule != null &&
                    this.CityPropertyTaxPaymentSchedule.Equals(input.CityPropertyTaxPaymentSchedule))
                ) && 
                (
                    this.CityPropertyTaxPhone == input.CityPropertyTaxPhone ||
                    (this.CityPropertyTaxPhone != null &&
                    this.CityPropertyTaxPhone.Equals(input.CityPropertyTaxPhone))
                ) && 
                (
                    this.CityPropertyTaxPostalCode == input.CityPropertyTaxPostalCode ||
                    (this.CityPropertyTaxPostalCode != null &&
                    this.CityPropertyTaxPostalCode.Equals(input.CityPropertyTaxPostalCode))
                ) && 
                (
                    this.CityPropertyTaxState == input.CityPropertyTaxState ||
                    (this.CityPropertyTaxState != null &&
                    this.CityPropertyTaxState.Equals(input.CityPropertyTaxState))
                ) && 
                (
                    this.EndingBalance == input.EndingBalance ||
                    (this.EndingBalance != null &&
                    this.EndingBalance.Equals(input.EndingBalance))
                ) && 
                (
                    this.EscrowPayment == input.EscrowPayment ||
                    (this.EscrowPayment != null &&
                    this.EscrowPayment.Equals(input.EscrowPayment))
                ) && 
                (
                    this.FloodInsDisbCushion == input.FloodInsDisbCushion ||
                    (this.FloodInsDisbCushion != null &&
                    this.FloodInsDisbCushion.Equals(input.FloodInsDisbCushion))
                ) && 
                (
                    this.HazInsDisbCushion == input.HazInsDisbCushion ||
                    (this.HazInsDisbCushion != null &&
                    this.HazInsDisbCushion.Equals(input.HazInsDisbCushion))
                ) && 
                (
                    this.Hud1EsDates == input.Hud1EsDates ||
                    this.Hud1EsDates != null &&
                    this.Hud1EsDates.SequenceEqual(input.Hud1EsDates)
                ) && 
                (
                    this.Hud1EsDueDates == input.Hud1EsDueDates ||
                    this.Hud1EsDueDates != null &&
                    this.Hud1EsDueDates.SequenceEqual(input.Hud1EsDueDates)
                ) && 
                (
                    this.Hud1EsItemizes == input.Hud1EsItemizes ||
                    this.Hud1EsItemizes != null &&
                    this.Hud1EsItemizes.SequenceEqual(input.Hud1EsItemizes)
                ) && 
                (
                    this.Hud1EsItemizesTotalLines == input.Hud1EsItemizesTotalLines ||
                    (this.Hud1EsItemizesTotalLines != null &&
                    this.Hud1EsItemizesTotalLines.Equals(input.Hud1EsItemizesTotalLines))
                ) && 
                (
                    this.Hud1EsItemizesUseItemizeEscrowIndicator == input.Hud1EsItemizesUseItemizeEscrowIndicator ||
                    (this.Hud1EsItemizesUseItemizeEscrowIndicator != null &&
                    this.Hud1EsItemizesUseItemizeEscrowIndicator.Equals(input.Hud1EsItemizesUseItemizeEscrowIndicator))
                ) && 
                (
                    this.Hud1EsPayTos == input.Hud1EsPayTos ||
                    this.Hud1EsPayTos != null &&
                    this.Hud1EsPayTos.SequenceEqual(input.Hud1EsPayTos)
                ) && 
                (
                    this.Hud1EsSetups == input.Hud1EsSetups ||
                    this.Hud1EsSetups != null &&
                    this.Hud1EsSetups.SequenceEqual(input.Hud1EsSetups)
                ) && 
                (
                    this.MtgInsCushionTerminationIndicator == input.MtgInsCushionTerminationIndicator ||
                    (this.MtgInsCushionTerminationIndicator != null &&
                    this.MtgInsCushionTerminationIndicator.Equals(input.MtgInsCushionTerminationIndicator))
                ) && 
                (
                    this.MtgInsDisbCushion == input.MtgInsDisbCushion ||
                    (this.MtgInsDisbCushion != null &&
                    this.MtgInsDisbCushion.Equals(input.MtgInsDisbCushion))
                ) && 
                (
                    this.RealEstateTaxAddress == input.RealEstateTaxAddress ||
                    (this.RealEstateTaxAddress != null &&
                    this.RealEstateTaxAddress.Equals(input.RealEstateTaxAddress))
                ) && 
                (
                    this.RealEstateTaxAmountLastPay == input.RealEstateTaxAmountLastPay ||
                    (this.RealEstateTaxAmountLastPay != null &&
                    this.RealEstateTaxAmountLastPay.Equals(input.RealEstateTaxAmountLastPay))
                ) && 
                (
                    this.RealEstateTaxAmountNextDue == input.RealEstateTaxAmountNextDue ||
                    (this.RealEstateTaxAmountNextDue != null &&
                    this.RealEstateTaxAmountNextDue.Equals(input.RealEstateTaxAmountNextDue))
                ) && 
                (
                    this.RealEstateTaxCity == input.RealEstateTaxCity ||
                    (this.RealEstateTaxCity != null &&
                    this.RealEstateTaxCity.Equals(input.RealEstateTaxCity))
                ) && 
                (
                    this.RealEstateTaxContactName == input.RealEstateTaxContactName ||
                    (this.RealEstateTaxContactName != null &&
                    this.RealEstateTaxContactName.Equals(input.RealEstateTaxContactName))
                ) && 
                (
                    this.RealEstateTaxDatePaid == input.RealEstateTaxDatePaid ||
                    (this.RealEstateTaxDatePaid != null &&
                    this.RealEstateTaxDatePaid.Equals(input.RealEstateTaxDatePaid))
                ) && 
                (
                    this.RealEstateTaxDelinquentDate == input.RealEstateTaxDelinquentDate ||
                    (this.RealEstateTaxDelinquentDate != null &&
                    this.RealEstateTaxDelinquentDate.Equals(input.RealEstateTaxDelinquentDate))
                ) && 
                (
                    this.RealEstateTaxEmail == input.RealEstateTaxEmail ||
                    (this.RealEstateTaxEmail != null &&
                    this.RealEstateTaxEmail.Equals(input.RealEstateTaxEmail))
                ) && 
                (
                    this.RealEstateTaxFax == input.RealEstateTaxFax ||
                    (this.RealEstateTaxFax != null &&
                    this.RealEstateTaxFax.Equals(input.RealEstateTaxFax))
                ) && 
                (
                    this.RealEstateTaxName == input.RealEstateTaxName ||
                    (this.RealEstateTaxName != null &&
                    this.RealEstateTaxName.Equals(input.RealEstateTaxName))
                ) && 
                (
                    this.RealEstateTaxNextDueDate == input.RealEstateTaxNextDueDate ||
                    (this.RealEstateTaxNextDueDate != null &&
                    this.RealEstateTaxNextDueDate.Equals(input.RealEstateTaxNextDueDate))
                ) && 
                (
                    this.RealEstateTaxPaymentSchedule == input.RealEstateTaxPaymentSchedule ||
                    (this.RealEstateTaxPaymentSchedule != null &&
                    this.RealEstateTaxPaymentSchedule.Equals(input.RealEstateTaxPaymentSchedule))
                ) && 
                (
                    this.RealEstateTaxPhone == input.RealEstateTaxPhone ||
                    (this.RealEstateTaxPhone != null &&
                    this.RealEstateTaxPhone.Equals(input.RealEstateTaxPhone))
                ) && 
                (
                    this.RealEstateTaxPostalCode == input.RealEstateTaxPostalCode ||
                    (this.RealEstateTaxPostalCode != null &&
                    this.RealEstateTaxPostalCode.Equals(input.RealEstateTaxPostalCode))
                ) && 
                (
                    this.RealEstateTaxState == input.RealEstateTaxState ||
                    (this.RealEstateTaxState != null &&
                    this.RealEstateTaxState.Equals(input.RealEstateTaxState))
                ) && 
                (
                    this.SchoolTaxesCushion == input.SchoolTaxesCushion ||
                    (this.SchoolTaxesCushion != null &&
                    this.SchoolTaxesCushion.Equals(input.SchoolTaxesCushion))
                ) && 
                (
                    this.ServicerAddress == input.ServicerAddress ||
                    (this.ServicerAddress != null &&
                    this.ServicerAddress.Equals(input.ServicerAddress))
                ) && 
                (
                    this.ServicerCity == input.ServicerCity ||
                    (this.ServicerCity != null &&
                    this.ServicerCity.Equals(input.ServicerCity))
                ) && 
                (
                    this.ServicerContactName == input.ServicerContactName ||
                    (this.ServicerContactName != null &&
                    this.ServicerContactName.Equals(input.ServicerContactName))
                ) && 
                (
                    this.ServicerPhone == input.ServicerPhone ||
                    (this.ServicerPhone != null &&
                    this.ServicerPhone.Equals(input.ServicerPhone))
                ) && 
                (
                    this.ServicerPostalCode == input.ServicerPostalCode ||
                    (this.ServicerPostalCode != null &&
                    this.ServicerPostalCode.Equals(input.ServicerPostalCode))
                ) && 
                (
                    this.ServicerState == input.ServicerState ||
                    (this.ServicerState != null &&
                    this.ServicerState.Equals(input.ServicerState))
                ) && 
                (
                    this.SingleLineAnalysis == input.SingleLineAnalysis ||
                    (this.SingleLineAnalysis != null &&
                    this.SingleLineAnalysis.Equals(input.SingleLineAnalysis))
                ) && 
                (
                    this.StartingBalance == input.StartingBalance ||
                    (this.StartingBalance != null &&
                    this.StartingBalance.Equals(input.StartingBalance))
                ) && 
                (
                    this.TaxDisbCushion == input.TaxDisbCushion ||
                    (this.TaxDisbCushion != null &&
                    this.TaxDisbCushion.Equals(input.TaxDisbCushion))
                ) && 
                (
                    this.TotalEscrowReserves == input.TotalEscrowReserves ||
                    (this.TotalEscrowReserves != null &&
                    this.TotalEscrowReserves.Equals(input.TotalEscrowReserves))
                ) && 
                (
                    this.UsdaAnnualFee == input.UsdaAnnualFee ||
                    (this.UsdaAnnualFee != null &&
                    this.UsdaAnnualFee.Equals(input.UsdaAnnualFee))
                ) && 
                (
                    this.UserDefinedCushion1 == input.UserDefinedCushion1 ||
                    (this.UserDefinedCushion1 != null &&
                    this.UserDefinedCushion1.Equals(input.UserDefinedCushion1))
                ) && 
                (
                    this.UserDefinedCushion2 == input.UserDefinedCushion2 ||
                    (this.UserDefinedCushion2 != null &&
                    this.UserDefinedCushion2.Equals(input.UserDefinedCushion2))
                ) && 
                (
                    this.UserDefinedCushion3 == input.UserDefinedCushion3 ||
                    (this.UserDefinedCushion3 != null &&
                    this.UserDefinedCushion3.Equals(input.UserDefinedCushion3))
                ) && 
                (
                    this.YearlyMortgageInsurance == input.YearlyMortgageInsurance ||
                    (this.YearlyMortgageInsurance != null &&
                    this.YearlyMortgageInsurance.Equals(input.YearlyMortgageInsurance))
                ) && 
                (
                    this.YearlyUsdaFee == input.YearlyUsdaFee ||
                    (this.YearlyUsdaFee != null &&
                    this.YearlyUsdaFee.Equals(input.YearlyUsdaFee))
                ) && 
                (
                    this.EscrowPaymentYearly == input.EscrowPaymentYearly ||
                    (this.EscrowPaymentYearly != null &&
                    this.EscrowPaymentYearly.Equals(input.EscrowPaymentYearly))
                ) && 
                (
                    this.NonEscrowCostsYearly == input.NonEscrowCostsYearly ||
                    (this.NonEscrowCostsYearly != null &&
                    this.NonEscrowCostsYearly.Equals(input.NonEscrowCostsYearly))
                ) && 
                (
                    this.EscrowFirstPaymentDate == input.EscrowFirstPaymentDate ||
                    (this.EscrowFirstPaymentDate != null &&
                    this.EscrowFirstPaymentDate.Equals(input.EscrowFirstPaymentDate))
                ) && 
                (
                    this.EscrowFirstPaymentDateType == input.EscrowFirstPaymentDateType ||
                    (this.EscrowFirstPaymentDateType != null &&
                    this.EscrowFirstPaymentDateType.Equals(input.EscrowFirstPaymentDateType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AnnualCityTax != null)
                    hashCode = hashCode * 59 + this.AnnualCityTax.GetHashCode();
                if (this.AnnualFeeCushion != null)
                    hashCode = hashCode * 59 + this.AnnualFeeCushion.GetHashCode();
                if (this.AnnualFloodInsurance != null)
                    hashCode = hashCode * 59 + this.AnnualFloodInsurance.GetHashCode();
                if (this.AnnualHazardInsurance != null)
                    hashCode = hashCode * 59 + this.AnnualHazardInsurance.GetHashCode();
                if (this.AnnualMortgageInsurance != null)
                    hashCode = hashCode * 59 + this.AnnualMortgageInsurance.GetHashCode();
                if (this.AnnualTax != null)
                    hashCode = hashCode * 59 + this.AnnualTax.GetHashCode();
                if (this.AnnualUserEscrow1 != null)
                    hashCode = hashCode * 59 + this.AnnualUserEscrow1.GetHashCode();
                if (this.AnnualUserEscrow2 != null)
                    hashCode = hashCode * 59 + this.AnnualUserEscrow2.GetHashCode();
                if (this.AnnualUserEscrow3 != null)
                    hashCode = hashCode * 59 + this.AnnualUserEscrow3.GetHashCode();
                if (this.BiweeklyCityPropertyTaxes != null)
                    hashCode = hashCode * 59 + this.BiweeklyCityPropertyTaxes.GetHashCode();
                if (this.BiweeklyCountyTaxes != null)
                    hashCode = hashCode * 59 + this.BiweeklyCountyTaxes.GetHashCode();
                if (this.BiweeklyFloodInsurance != null)
                    hashCode = hashCode * 59 + this.BiweeklyFloodInsurance.GetHashCode();
                if (this.BiweeklyHazardInsurance != null)
                    hashCode = hashCode * 59 + this.BiweeklyHazardInsurance.GetHashCode();
                if (this.BiweeklyMortgageInsurance != null)
                    hashCode = hashCode * 59 + this.BiweeklyMortgageInsurance.GetHashCode();
                if (this.BiweeklyPITI != null)
                    hashCode = hashCode * 59 + this.BiweeklyPITI.GetHashCode();
                if (this.BiweeklyTotalBiweeklyPayment != null)
                    hashCode = hashCode * 59 + this.BiweeklyTotalBiweeklyPayment.GetHashCode();
                if (this.BiweeklyTotalBiweeklyPaymentToEscrow != null)
                    hashCode = hashCode * 59 + this.BiweeklyTotalBiweeklyPaymentToEscrow.GetHashCode();
                if (this.BiweeklyUSDAFee != null)
                    hashCode = hashCode * 59 + this.BiweeklyUSDAFee.GetHashCode();
                if (this.BiweeklyUserDefinedEscrowFee1 != null)
                    hashCode = hashCode * 59 + this.BiweeklyUserDefinedEscrowFee1.GetHashCode();
                if (this.BiweeklyUserDefinedEscrowFee2 != null)
                    hashCode = hashCode * 59 + this.BiweeklyUserDefinedEscrowFee2.GetHashCode();
                if (this.BiweeklyUserDefinedEscrowFee3 != null)
                    hashCode = hashCode * 59 + this.BiweeklyUserDefinedEscrowFee3.GetHashCode();
                if (this.CityPropertyTaxAddress != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxAddress.GetHashCode();
                if (this.CityPropertyTaxAmountLastPay != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxAmountLastPay.GetHashCode();
                if (this.CityPropertyTaxAmountNextDue != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxAmountNextDue.GetHashCode();
                if (this.CityPropertyTaxCity != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxCity.GetHashCode();
                if (this.CityPropertyTaxContactName != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxContactName.GetHashCode();
                if (this.CityPropertyTaxDatePaid != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxDatePaid.GetHashCode();
                if (this.CityPropertyTaxDelinquentDate != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxDelinquentDate.GetHashCode();
                if (this.CityPropertyTaxEmail != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxEmail.GetHashCode();
                if (this.CityPropertyTaxFax != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxFax.GetHashCode();
                if (this.CityPropertyTaxName != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxName.GetHashCode();
                if (this.CityPropertyTaxNextDueDate != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxNextDueDate.GetHashCode();
                if (this.CityPropertyTaxPaymentSchedule != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxPaymentSchedule.GetHashCode();
                if (this.CityPropertyTaxPhone != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxPhone.GetHashCode();
                if (this.CityPropertyTaxPostalCode != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxPostalCode.GetHashCode();
                if (this.CityPropertyTaxState != null)
                    hashCode = hashCode * 59 + this.CityPropertyTaxState.GetHashCode();
                if (this.EndingBalance != null)
                    hashCode = hashCode * 59 + this.EndingBalance.GetHashCode();
                if (this.EscrowPayment != null)
                    hashCode = hashCode * 59 + this.EscrowPayment.GetHashCode();
                if (this.FloodInsDisbCushion != null)
                    hashCode = hashCode * 59 + this.FloodInsDisbCushion.GetHashCode();
                if (this.HazInsDisbCushion != null)
                    hashCode = hashCode * 59 + this.HazInsDisbCushion.GetHashCode();
                if (this.Hud1EsDates != null)
                    hashCode = hashCode * 59 + this.Hud1EsDates.GetHashCode();
                if (this.Hud1EsDueDates != null)
                    hashCode = hashCode * 59 + this.Hud1EsDueDates.GetHashCode();
                if (this.Hud1EsItemizes != null)
                    hashCode = hashCode * 59 + this.Hud1EsItemizes.GetHashCode();
                if (this.Hud1EsItemizesTotalLines != null)
                    hashCode = hashCode * 59 + this.Hud1EsItemizesTotalLines.GetHashCode();
                if (this.Hud1EsItemizesUseItemizeEscrowIndicator != null)
                    hashCode = hashCode * 59 + this.Hud1EsItemizesUseItemizeEscrowIndicator.GetHashCode();
                if (this.Hud1EsPayTos != null)
                    hashCode = hashCode * 59 + this.Hud1EsPayTos.GetHashCode();
                if (this.Hud1EsSetups != null)
                    hashCode = hashCode * 59 + this.Hud1EsSetups.GetHashCode();
                if (this.MtgInsCushionTerminationIndicator != null)
                    hashCode = hashCode * 59 + this.MtgInsCushionTerminationIndicator.GetHashCode();
                if (this.MtgInsDisbCushion != null)
                    hashCode = hashCode * 59 + this.MtgInsDisbCushion.GetHashCode();
                if (this.RealEstateTaxAddress != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxAddress.GetHashCode();
                if (this.RealEstateTaxAmountLastPay != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxAmountLastPay.GetHashCode();
                if (this.RealEstateTaxAmountNextDue != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxAmountNextDue.GetHashCode();
                if (this.RealEstateTaxCity != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxCity.GetHashCode();
                if (this.RealEstateTaxContactName != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxContactName.GetHashCode();
                if (this.RealEstateTaxDatePaid != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxDatePaid.GetHashCode();
                if (this.RealEstateTaxDelinquentDate != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxDelinquentDate.GetHashCode();
                if (this.RealEstateTaxEmail != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxEmail.GetHashCode();
                if (this.RealEstateTaxFax != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxFax.GetHashCode();
                if (this.RealEstateTaxName != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxName.GetHashCode();
                if (this.RealEstateTaxNextDueDate != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxNextDueDate.GetHashCode();
                if (this.RealEstateTaxPaymentSchedule != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxPaymentSchedule.GetHashCode();
                if (this.RealEstateTaxPhone != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxPhone.GetHashCode();
                if (this.RealEstateTaxPostalCode != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxPostalCode.GetHashCode();
                if (this.RealEstateTaxState != null)
                    hashCode = hashCode * 59 + this.RealEstateTaxState.GetHashCode();
                if (this.SchoolTaxesCushion != null)
                    hashCode = hashCode * 59 + this.SchoolTaxesCushion.GetHashCode();
                if (this.ServicerAddress != null)
                    hashCode = hashCode * 59 + this.ServicerAddress.GetHashCode();
                if (this.ServicerCity != null)
                    hashCode = hashCode * 59 + this.ServicerCity.GetHashCode();
                if (this.ServicerContactName != null)
                    hashCode = hashCode * 59 + this.ServicerContactName.GetHashCode();
                if (this.ServicerPhone != null)
                    hashCode = hashCode * 59 + this.ServicerPhone.GetHashCode();
                if (this.ServicerPostalCode != null)
                    hashCode = hashCode * 59 + this.ServicerPostalCode.GetHashCode();
                if (this.ServicerState != null)
                    hashCode = hashCode * 59 + this.ServicerState.GetHashCode();
                if (this.SingleLineAnalysis != null)
                    hashCode = hashCode * 59 + this.SingleLineAnalysis.GetHashCode();
                if (this.StartingBalance != null)
                    hashCode = hashCode * 59 + this.StartingBalance.GetHashCode();
                if (this.TaxDisbCushion != null)
                    hashCode = hashCode * 59 + this.TaxDisbCushion.GetHashCode();
                if (this.TotalEscrowReserves != null)
                    hashCode = hashCode * 59 + this.TotalEscrowReserves.GetHashCode();
                if (this.UsdaAnnualFee != null)
                    hashCode = hashCode * 59 + this.UsdaAnnualFee.GetHashCode();
                if (this.UserDefinedCushion1 != null)
                    hashCode = hashCode * 59 + this.UserDefinedCushion1.GetHashCode();
                if (this.UserDefinedCushion2 != null)
                    hashCode = hashCode * 59 + this.UserDefinedCushion2.GetHashCode();
                if (this.UserDefinedCushion3 != null)
                    hashCode = hashCode * 59 + this.UserDefinedCushion3.GetHashCode();
                if (this.YearlyMortgageInsurance != null)
                    hashCode = hashCode * 59 + this.YearlyMortgageInsurance.GetHashCode();
                if (this.YearlyUsdaFee != null)
                    hashCode = hashCode * 59 + this.YearlyUsdaFee.GetHashCode();
                if (this.EscrowPaymentYearly != null)
                    hashCode = hashCode * 59 + this.EscrowPaymentYearly.GetHashCode();
                if (this.NonEscrowCostsYearly != null)
                    hashCode = hashCode * 59 + this.NonEscrowCostsYearly.GetHashCode();
                if (this.EscrowFirstPaymentDate != null)
                    hashCode = hashCode * 59 + this.EscrowFirstPaymentDate.GetHashCode();
                if (this.EscrowFirstPaymentDateType != null)
                    hashCode = hashCode * 59 + this.EscrowFirstPaymentDateType.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
