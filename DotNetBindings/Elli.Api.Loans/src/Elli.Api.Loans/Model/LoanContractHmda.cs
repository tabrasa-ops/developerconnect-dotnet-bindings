/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractHmda
    /// </summary>
    [DataContract]
    public partial class LoanContractHmda :  IEquatable<LoanContractHmda>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets ActionTaken
        /// </summary>
        [DataMember(Name="actionTaken", EmitDefaultValue=false)]
        public string ActionTaken { get; set; }

        /// <summary>
        /// Gets or Sets CensusTrack
        /// </summary>
        [DataMember(Name="censusTrack", EmitDefaultValue=false)]
        public string CensusTrack { get; set; }

        /// <summary>
        /// Gets or Sets CountyCode
        /// </summary>
        [DataMember(Name="countyCode", EmitDefaultValue=false)]
        public string CountyCode { get; set; }

        /// <summary>
        /// Gets or Sets DenialReason1
        /// </summary>
        [DataMember(Name="denialReason1", EmitDefaultValue=false)]
        public string DenialReason1 { get; set; }

        /// <summary>
        /// Gets or Sets DenialReason2
        /// </summary>
        [DataMember(Name="denialReason2", EmitDefaultValue=false)]
        public string DenialReason2 { get; set; }

        /// <summary>
        /// Gets or Sets DenialReason3
        /// </summary>
        [DataMember(Name="denialReason3", EmitDefaultValue=false)]
        public string DenialReason3 { get; set; }

        /// <summary>
        /// Gets or Sets ExcludeLoanFromHMDAReportIndicator
        /// </summary>
        [DataMember(Name="excludeLoanFromHMDAReportIndicator", EmitDefaultValue=false)]
        public bool? ExcludeLoanFromHMDAReportIndicator { get; set; }

        /// <summary>
        /// Gets or Sets HOEPAStatus
        /// </summary>
        [DataMember(Name="hOEPAStatus", EmitDefaultValue=false)]
        public string HOEPAStatus { get; set; }

        /// <summary>
        /// Gets or Sets LienStatus
        /// </summary>
        [DataMember(Name="lienStatus", EmitDefaultValue=false)]
        public string LienStatus { get; set; }

        /// <summary>
        /// Gets or Sets LoanPurpose
        /// </summary>
        [DataMember(Name="loanPurpose", EmitDefaultValue=false)]
        public string LoanPurpose { get; set; }

        /// <summary>
        /// Gets or Sets MSANumber
        /// </summary>
        [DataMember(Name="mSANumber", EmitDefaultValue=false)]
        public string MSANumber { get; set; }

        /// <summary>
        /// Gets or Sets Preapprovals
        /// </summary>
        [DataMember(Name="preapprovals", EmitDefaultValue=false)]
        public string Preapprovals { get; set; }

        /// <summary>
        /// Gets or Sets PropertyType
        /// </summary>
        [DataMember(Name="propertyType", EmitDefaultValue=false)]
        public string PropertyType { get; set; }

        /// <summary>
        /// Gets or Sets RateSpread
        /// </summary>
        [DataMember(Name="rateSpread", EmitDefaultValue=false)]
        public string RateSpread { get; set; }

        /// <summary>
        /// Gets or Sets ReportPurposeOfLoanIndicator
        /// </summary>
        [DataMember(Name="reportPurposeOfLoanIndicator", EmitDefaultValue=false)]
        public bool? ReportPurposeOfLoanIndicator { get; set; }

        /// <summary>
        /// Gets or Sets StateCode
        /// </summary>
        [DataMember(Name="stateCode", EmitDefaultValue=false)]
        public string StateCode { get; set; }

        /// <summary>
        /// Gets or Sets TypeOfPurchaser
        /// </summary>
        [DataMember(Name="typeOfPurchaser", EmitDefaultValue=false)]
        public string TypeOfPurchaser { get; set; }

        /// <summary>
        /// Gets or Sets QMStatus
        /// </summary>
        [DataMember(Name="qMStatus", EmitDefaultValue=false)]
        public string QMStatus { get; set; }

        /// <summary>
        /// Gets or Sets ReportingYear
        /// </summary>
        [DataMember(Name="reportingYear", EmitDefaultValue=false)]
        public int? ReportingYear { get; set; }

        /// <summary>
        /// Gets or Sets UniversalLoanId
        /// </summary>
        [DataMember(Name="universalLoanId", EmitDefaultValue=false)]
        public string UniversalLoanId { get; set; }

        /// <summary>
        /// Gets or Sets ApplicationDate
        /// </summary>
        [DataMember(Name="applicationDate", EmitDefaultValue=false)]
        public string ApplicationDate { get; set; }

        /// <summary>
        /// Gets or Sets LoanType
        /// </summary>
        [DataMember(Name="loanType", EmitDefaultValue=false)]
        public string LoanType { get; set; }

        /// <summary>
        /// Gets or Sets LoanAmount
        /// </summary>
        [DataMember(Name="loanAmount", EmitDefaultValue=false)]
        public double? LoanAmount { get; set; }

        /// <summary>
        /// Gets or Sets Income
        /// </summary>
        [DataMember(Name="income", EmitDefaultValue=false)]
        public string Income { get; set; }

        /// <summary>
        /// Gets or Sets DenialReason4
        /// </summary>
        [DataMember(Name="denialReason4", EmitDefaultValue=false)]
        public string DenialReason4 { get; set; }

        /// <summary>
        /// Gets or Sets OtherDenialReason
        /// </summary>
        [DataMember(Name="otherDenialReason", EmitDefaultValue=false)]
        public string OtherDenialReason { get; set; }

        /// <summary>
        /// Gets or Sets DiscountPoints
        /// </summary>
        [DataMember(Name="discountPoints", EmitDefaultValue=false)]
        public string DiscountPoints { get; set; }

        /// <summary>
        /// Gets or Sets DebtToIncomeRatio
        /// </summary>
        [DataMember(Name="debtToIncomeRatio", EmitDefaultValue=false)]
        public string DebtToIncomeRatio { get; set; }

        /// <summary>
        /// Gets or Sets CLTV
        /// </summary>
        [DataMember(Name="cLTV", EmitDefaultValue=false)]
        public string CLTV { get; set; }

        /// <summary>
        /// Gets or Sets OtherNonAmortization
        /// </summary>
        [DataMember(Name="otherNonAmortization", EmitDefaultValue=false)]
        public string OtherNonAmortization { get; set; }

        /// <summary>
        /// Gets or Sets ManufacturedSecuredProperyType
        /// </summary>
        [DataMember(Name="manufacturedSecuredProperyType", EmitDefaultValue=false)]
        public string ManufacturedSecuredProperyType { get; set; }

        /// <summary>
        /// Gets or Sets ManufacturedHomeLandPropertyInterest
        /// </summary>
        [DataMember(Name="manufacturedHomeLandPropertyInterest", EmitDefaultValue=false)]
        public string ManufacturedHomeLandPropertyInterest { get; set; }

        /// <summary>
        /// Gets or Sets MultifamilyNoUnits
        /// </summary>
        [DataMember(Name="multifamilyNoUnits", EmitDefaultValue=false)]
        public string MultifamilyNoUnits { get; set; }

        /// <summary>
        /// Gets or Sets SubmissionOfApplication
        /// </summary>
        [DataMember(Name="submissionOfApplication", EmitDefaultValue=false)]
        public string SubmissionOfApplication { get; set; }

        /// <summary>
        /// Gets or Sets InitiallyPayableToYourInstitution
        /// </summary>
        [DataMember(Name="initiallyPayableToYourInstitution", EmitDefaultValue=false)]
        public string InitiallyPayableToYourInstitution { get; set; }

        /// <summary>
        /// Gets or Sets AUS1
        /// </summary>
        [DataMember(Name="aUS1", EmitDefaultValue=false)]
        public string AUS1 { get; set; }

        /// <summary>
        /// Gets or Sets AUS2
        /// </summary>
        [DataMember(Name="aUS2", EmitDefaultValue=false)]
        public string AUS2 { get; set; }

        /// <summary>
        /// Gets or Sets AUS3
        /// </summary>
        [DataMember(Name="aUS3", EmitDefaultValue=false)]
        public string AUS3 { get; set; }

        /// <summary>
        /// Gets or Sets AUS4
        /// </summary>
        [DataMember(Name="aUS4", EmitDefaultValue=false)]
        public string AUS4 { get; set; }

        /// <summary>
        /// Gets or Sets AUS5
        /// </summary>
        [DataMember(Name="aUS5", EmitDefaultValue=false)]
        public string AUS5 { get; set; }

        /// <summary>
        /// Gets or Sets OtherAUS
        /// </summary>
        [DataMember(Name="otherAUS", EmitDefaultValue=false)]
        public string OtherAUS { get; set; }

        /// <summary>
        /// Gets or Sets AUSRecommendation1
        /// </summary>
        [DataMember(Name="aUSRecommendation1", EmitDefaultValue=false)]
        public string AUSRecommendation1 { get; set; }

        /// <summary>
        /// Gets or Sets AUSRecommendation2
        /// </summary>
        [DataMember(Name="aUSRecommendation2", EmitDefaultValue=false)]
        public string AUSRecommendation2 { get; set; }

        /// <summary>
        /// Gets or Sets AUSRecommendation3
        /// </summary>
        [DataMember(Name="aUSRecommendation3", EmitDefaultValue=false)]
        public string AUSRecommendation3 { get; set; }

        /// <summary>
        /// Gets or Sets AUSRecommendation4
        /// </summary>
        [DataMember(Name="aUSRecommendation4", EmitDefaultValue=false)]
        public string AUSRecommendation4 { get; set; }

        /// <summary>
        /// Gets or Sets AUSRecommendation5
        /// </summary>
        [DataMember(Name="aUSRecommendation5", EmitDefaultValue=false)]
        public string AUSRecommendation5 { get; set; }

        /// <summary>
        /// Gets or Sets OtherAUSRecommendations
        /// </summary>
        [DataMember(Name="otherAUSRecommendations", EmitDefaultValue=false)]
        public string OtherAUSRecommendations { get; set; }

        /// <summary>
        /// Gets or Sets ReverseMortgage
        /// </summary>
        [DataMember(Name="reverseMortgage", EmitDefaultValue=false)]
        public string ReverseMortgage { get; set; }

        /// <summary>
        /// Gets or Sets OpenEndLineOfCredit
        /// </summary>
        [DataMember(Name="openEndLineOfCredit", EmitDefaultValue=false)]
        public string OpenEndLineOfCredit { get; set; }

        /// <summary>
        /// Gets or Sets BusinessOrCommercialPurpose
        /// </summary>
        [DataMember(Name="businessOrCommercialPurpose", EmitDefaultValue=false)]
        public string BusinessOrCommercialPurpose { get; set; }

        /// <summary>
        /// Gets or Sets FinancialInstitutionName
        /// </summary>
        [DataMember(Name="financialInstitutionName", EmitDefaultValue=false)]
        public string FinancialInstitutionName { get; set; }

        /// <summary>
        /// Gets or Sets ContactName
        /// </summary>
        [DataMember(Name="contactName", EmitDefaultValue=false)]
        public string ContactName { get; set; }

        /// <summary>
        /// Gets or Sets ContactPhoneNumber
        /// </summary>
        [DataMember(Name="contactPhoneNumber", EmitDefaultValue=false)]
        public string ContactPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets ContactEmailAddress
        /// </summary>
        [DataMember(Name="contactEmailAddress", EmitDefaultValue=false)]
        public string ContactEmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets ContactOfficeStreetAddress
        /// </summary>
        [DataMember(Name="contactOfficeStreetAddress", EmitDefaultValue=false)]
        public string ContactOfficeStreetAddress { get; set; }

        /// <summary>
        /// Gets or Sets ContactOfficeCity
        /// </summary>
        [DataMember(Name="contactOfficeCity", EmitDefaultValue=false)]
        public string ContactOfficeCity { get; set; }

        /// <summary>
        /// Gets or Sets ContactOfficeState
        /// </summary>
        [DataMember(Name="contactOfficeState", EmitDefaultValue=false)]
        public string ContactOfficeState { get; set; }

        /// <summary>
        /// Gets or Sets ContactOfficeZIPCode
        /// </summary>
        [DataMember(Name="contactOfficeZIPCode", EmitDefaultValue=false)]
        public string ContactOfficeZIPCode { get; set; }

        /// <summary>
        /// Gets or Sets ContactFaxNumber
        /// </summary>
        [DataMember(Name="contactFaxNumber", EmitDefaultValue=false)]
        public string ContactFaxNumber { get; set; }

        /// <summary>
        /// Gets or Sets FederalAgency
        /// </summary>
        [DataMember(Name="federalAgency", EmitDefaultValue=false)]
        public string FederalAgency { get; set; }

        /// <summary>
        /// Gets or Sets FederalTaxpayerIdNumber
        /// </summary>
        [DataMember(Name="federalTaxpayerIdNumber", EmitDefaultValue=false)]
        public string FederalTaxpayerIdNumber { get; set; }

        /// <summary>
        /// Gets or Sets LegalEntityIdentifier
        /// </summary>
        [DataMember(Name="legalEntityIdentifier", EmitDefaultValue=false)]
        public string LegalEntityIdentifier { get; set; }

        /// <summary>
        /// Gets or Sets LegalEntityIdentifierReporting
        /// </summary>
        [DataMember(Name="legalEntityIdentifierReporting", EmitDefaultValue=false)]
        public string LegalEntityIdentifierReporting { get; set; }

        /// <summary>
        /// Gets or Sets LegalEntityIdentifierUsed
        /// </summary>
        [DataMember(Name="legalEntityIdentifierUsed", EmitDefaultValue=false)]
        public string LegalEntityIdentifierUsed { get; set; }

        /// <summary>
        /// Gets or Sets RespondentID
        /// </summary>
        [DataMember(Name="respondentID", EmitDefaultValue=false)]
        public string RespondentID { get; set; }

        /// <summary>
        /// Gets or Sets ParentName
        /// </summary>
        [DataMember(Name="parentName", EmitDefaultValue=false)]
        public string ParentName { get; set; }

        /// <summary>
        /// Gets or Sets ParentAddress
        /// </summary>
        [DataMember(Name="parentAddress", EmitDefaultValue=false)]
        public string ParentAddress { get; set; }

        /// <summary>
        /// Gets or Sets ParentCity
        /// </summary>
        [DataMember(Name="parentCity", EmitDefaultValue=false)]
        public string ParentCity { get; set; }

        /// <summary>
        /// Gets or Sets ParentState
        /// </summary>
        [DataMember(Name="parentState", EmitDefaultValue=false)]
        public string ParentState { get; set; }

        /// <summary>
        /// Gets or Sets ParentZip
        /// </summary>
        [DataMember(Name="parentZip", EmitDefaultValue=false)]
        public string ParentZip { get; set; }

        /// <summary>
        /// Gets or Sets TotalLoanCosts
        /// </summary>
        [DataMember(Name="totalLoanCosts", EmitDefaultValue=false)]
        public string TotalLoanCosts { get; set; }

        /// <summary>
        /// Gets or Sets TotalPointsAndFees
        /// </summary>
        [DataMember(Name="totalPointsAndFees", EmitDefaultValue=false)]
        public string TotalPointsAndFees { get; set; }

        /// <summary>
        /// Gets or Sets OriginationCharges
        /// </summary>
        [DataMember(Name="originationCharges", EmitDefaultValue=false)]
        public string OriginationCharges { get; set; }

        /// <summary>
        /// Gets or Sets LenderCredits
        /// </summary>
        [DataMember(Name="lenderCredits", EmitDefaultValue=false)]
        public string LenderCredits { get; set; }

        /// <summary>
        /// Gets or Sets InterestRate
        /// </summary>
        [DataMember(Name="interestRate", EmitDefaultValue=false)]
        public string InterestRate { get; set; }

        /// <summary>
        /// Gets or Sets PrepaymentPenaltyPeriod
        /// </summary>
        [DataMember(Name="prepaymentPenaltyPeriod", EmitDefaultValue=false)]
        public string PrepaymentPenaltyPeriod { get; set; }

        /// <summary>
        /// Gets or Sets LoanTerm
        /// </summary>
        [DataMember(Name="loanTerm", EmitDefaultValue=false)]
        public string LoanTerm { get; set; }

        /// <summary>
        /// Gets or Sets IntroRatePeriod
        /// </summary>
        [DataMember(Name="introRatePeriod", EmitDefaultValue=false)]
        public string IntroRatePeriod { get; set; }

        /// <summary>
        /// Gets or Sets PropertyValue
        /// </summary>
        [DataMember(Name="propertyValue", EmitDefaultValue=false)]
        public string PropertyValue { get; set; }

        /// <summary>
        /// Gets or Sets NMLSLoanOriginatorID
        /// </summary>
        [DataMember(Name="nMLSLoanOriginatorID", EmitDefaultValue=false)]
        public string NMLSLoanOriginatorID { get; set; }

        /// <summary>
        /// Gets or Sets HmdaPropertyZipCode
        /// </summary>
        [DataMember(Name="hmdaPropertyZipCode", EmitDefaultValue=false)]
        public string HmdaPropertyZipCode { get; set; }

        /// <summary>
        /// Gets or Sets HmdaPropertyAddress
        /// </summary>
        [DataMember(Name="hmdaPropertyAddress", EmitDefaultValue=false)]
        public string HmdaPropertyAddress { get; set; }

        /// <summary>
        /// Gets or Sets HmdaPropertyCity
        /// </summary>
        [DataMember(Name="hmdaPropertyCity", EmitDefaultValue=false)]
        public string HmdaPropertyCity { get; set; }

        /// <summary>
        /// Gets or Sets HmdaPropertyState
        /// </summary>
        [DataMember(Name="hmdaPropertyState", EmitDefaultValue=false)]
        public string HmdaPropertyState { get; set; }

        /// <summary>
        /// Gets or Sets HmdaSyncAddressIndicator
        /// </summary>
        [DataMember(Name="hmdaSyncAddressIndicator", EmitDefaultValue=false)]
        public bool? HmdaSyncAddressIndicator { get; set; }

        /// <summary>
        /// Gets or Sets RepurchasedReportingYear
        /// </summary>
        [DataMember(Name="repurchasedReportingYear", EmitDefaultValue=false)]
        public int? RepurchasedReportingYear { get; set; }

        /// <summary>
        /// Gets or Sets RepurchasedLoanAmount
        /// </summary>
        [DataMember(Name="repurchasedLoanAmount", EmitDefaultValue=false)]
        public double? RepurchasedLoanAmount { get; set; }

        /// <summary>
        /// Gets or Sets RepurchasedTypeOfPurchaser
        /// </summary>
        [DataMember(Name="repurchasedTypeOfPurchaser", EmitDefaultValue=false)]
        public string RepurchasedTypeOfPurchaser { get; set; }

        /// <summary>
        /// Gets or Sets RepurchasedActionTaken
        /// </summary>
        [DataMember(Name="repurchasedActionTaken", EmitDefaultValue=false)]
        public string RepurchasedActionTaken { get; set; }

        /// <summary>
        /// Gets or Sets RepurchasedActionDate
        /// </summary>
        [DataMember(Name="repurchasedActionDate", EmitDefaultValue=false)]
        public string RepurchasedActionDate { get; set; }

        /// <summary>
        /// Gets or Sets HmdaDtiIndicator
        /// </summary>
        [DataMember(Name="hmdaDtiIndicator", EmitDefaultValue=false)]
        public bool? HmdaDtiIndicator { get; set; }

        /// <summary>
        /// Gets or Sets HmdaCltvIndicator
        /// </summary>
        [DataMember(Name="hmdaCltvIndicator", EmitDefaultValue=false)]
        public bool? HmdaCltvIndicator { get; set; }

        /// <summary>
        /// Gets or Sets HmdaIncomeIndicator
        /// </summary>
        [DataMember(Name="hmdaIncomeIndicator", EmitDefaultValue=false)]
        public bool? HmdaIncomeIndicator { get; set; }

        /// <summary>
        /// Gets or Sets HMDAProfileID
        /// </summary>
        [DataMember(Name="hMDAProfileID", EmitDefaultValue=false)]
        public string HMDAProfileID { get; set; }

        /// <summary>
        /// Gets or Sets HMDAProfileDTIValue
        /// </summary>
        [DataMember(Name="hMDAProfileDTIValue", EmitDefaultValue=false)]
        public string HMDAProfileDTIValue { get; set; }

        /// <summary>
        /// Gets or Sets HMDAProfileCLTVValue
        /// </summary>
        [DataMember(Name="hMDAProfileCLTVValue", EmitDefaultValue=false)]
        public string HMDAProfileCLTVValue { get; set; }

        /// <summary>
        /// Gets or Sets HMDAProfileIncomeValue
        /// </summary>
        [DataMember(Name="hMDAProfileIncomeValue", EmitDefaultValue=false)]
        public string HMDAProfileIncomeValue { get; set; }

        /// <summary>
        /// Gets or Sets HMDAProfileApplicationDateValue
        /// </summary>
        [DataMember(Name="hMDAProfileApplicationDateValue", EmitDefaultValue=false)]
        public string HMDAProfileApplicationDateValue { get; set; }

        /// <summary>
        /// Gets or Sets HMDALoanPurpose
        /// </summary>
        [DataMember(Name="hMDALoanPurpose", EmitDefaultValue=false)]
        public string HMDALoanPurpose { get; set; }

        /// <summary>
        /// Gets or Sets HmdaPropertyValueNotReliedUponIndicator
        /// </summary>
        [DataMember(Name="hmdaPropertyValueNotReliedUponIndicator", EmitDefaultValue=false)]
        public bool? HmdaPropertyValueNotReliedUponIndicator { get; set; }

        /// <summary>
        /// Gets or Sets HmdaInterestOnlyIndicator
        /// </summary>
        [DataMember(Name="hmdaInterestOnlyIndicator", EmitDefaultValue=false)]
        public bool? HmdaInterestOnlyIndicator { get; set; }

        /// <summary>
        /// Gets or Sets IncomeExcludedFromHmda
        /// </summary>
        [DataMember(Name="incomeExcludedFromHmda", EmitDefaultValue=false)]
        public double? IncomeExcludedFromHmda { get; set; }

        /// <summary>
        /// Gets or Sets HMDACensusTrack
        /// </summary>
        [DataMember(Name="hMDACensusTrack", EmitDefaultValue=false)]
        public string HMDACensusTrack { get; set; }

        /// <summary>
        /// Gets or Sets HMDACountyCode
        /// </summary>
        [DataMember(Name="hMDACountyCode", EmitDefaultValue=false)]
        public string HMDACountyCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractHmda {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ActionTaken: ").Append(ActionTaken).Append("\n");
            sb.Append("  CensusTrack: ").Append(CensusTrack).Append("\n");
            sb.Append("  CountyCode: ").Append(CountyCode).Append("\n");
            sb.Append("  DenialReason1: ").Append(DenialReason1).Append("\n");
            sb.Append("  DenialReason2: ").Append(DenialReason2).Append("\n");
            sb.Append("  DenialReason3: ").Append(DenialReason3).Append("\n");
            sb.Append("  ExcludeLoanFromHMDAReportIndicator: ").Append(ExcludeLoanFromHMDAReportIndicator).Append("\n");
            sb.Append("  HOEPAStatus: ").Append(HOEPAStatus).Append("\n");
            sb.Append("  LienStatus: ").Append(LienStatus).Append("\n");
            sb.Append("  LoanPurpose: ").Append(LoanPurpose).Append("\n");
            sb.Append("  MSANumber: ").Append(MSANumber).Append("\n");
            sb.Append("  Preapprovals: ").Append(Preapprovals).Append("\n");
            sb.Append("  PropertyType: ").Append(PropertyType).Append("\n");
            sb.Append("  RateSpread: ").Append(RateSpread).Append("\n");
            sb.Append("  ReportPurposeOfLoanIndicator: ").Append(ReportPurposeOfLoanIndicator).Append("\n");
            sb.Append("  StateCode: ").Append(StateCode).Append("\n");
            sb.Append("  TypeOfPurchaser: ").Append(TypeOfPurchaser).Append("\n");
            sb.Append("  QMStatus: ").Append(QMStatus).Append("\n");
            sb.Append("  ReportingYear: ").Append(ReportingYear).Append("\n");
            sb.Append("  UniversalLoanId: ").Append(UniversalLoanId).Append("\n");
            sb.Append("  ApplicationDate: ").Append(ApplicationDate).Append("\n");
            sb.Append("  LoanType: ").Append(LoanType).Append("\n");
            sb.Append("  LoanAmount: ").Append(LoanAmount).Append("\n");
            sb.Append("  Income: ").Append(Income).Append("\n");
            sb.Append("  DenialReason4: ").Append(DenialReason4).Append("\n");
            sb.Append("  OtherDenialReason: ").Append(OtherDenialReason).Append("\n");
            sb.Append("  DiscountPoints: ").Append(DiscountPoints).Append("\n");
            sb.Append("  DebtToIncomeRatio: ").Append(DebtToIncomeRatio).Append("\n");
            sb.Append("  CLTV: ").Append(CLTV).Append("\n");
            sb.Append("  OtherNonAmortization: ").Append(OtherNonAmortization).Append("\n");
            sb.Append("  ManufacturedSecuredProperyType: ").Append(ManufacturedSecuredProperyType).Append("\n");
            sb.Append("  ManufacturedHomeLandPropertyInterest: ").Append(ManufacturedHomeLandPropertyInterest).Append("\n");
            sb.Append("  MultifamilyNoUnits: ").Append(MultifamilyNoUnits).Append("\n");
            sb.Append("  SubmissionOfApplication: ").Append(SubmissionOfApplication).Append("\n");
            sb.Append("  InitiallyPayableToYourInstitution: ").Append(InitiallyPayableToYourInstitution).Append("\n");
            sb.Append("  AUS1: ").Append(AUS1).Append("\n");
            sb.Append("  AUS2: ").Append(AUS2).Append("\n");
            sb.Append("  AUS3: ").Append(AUS3).Append("\n");
            sb.Append("  AUS4: ").Append(AUS4).Append("\n");
            sb.Append("  AUS5: ").Append(AUS5).Append("\n");
            sb.Append("  OtherAUS: ").Append(OtherAUS).Append("\n");
            sb.Append("  AUSRecommendation1: ").Append(AUSRecommendation1).Append("\n");
            sb.Append("  AUSRecommendation2: ").Append(AUSRecommendation2).Append("\n");
            sb.Append("  AUSRecommendation3: ").Append(AUSRecommendation3).Append("\n");
            sb.Append("  AUSRecommendation4: ").Append(AUSRecommendation4).Append("\n");
            sb.Append("  AUSRecommendation5: ").Append(AUSRecommendation5).Append("\n");
            sb.Append("  OtherAUSRecommendations: ").Append(OtherAUSRecommendations).Append("\n");
            sb.Append("  ReverseMortgage: ").Append(ReverseMortgage).Append("\n");
            sb.Append("  OpenEndLineOfCredit: ").Append(OpenEndLineOfCredit).Append("\n");
            sb.Append("  BusinessOrCommercialPurpose: ").Append(BusinessOrCommercialPurpose).Append("\n");
            sb.Append("  FinancialInstitutionName: ").Append(FinancialInstitutionName).Append("\n");
            sb.Append("  ContactName: ").Append(ContactName).Append("\n");
            sb.Append("  ContactPhoneNumber: ").Append(ContactPhoneNumber).Append("\n");
            sb.Append("  ContactEmailAddress: ").Append(ContactEmailAddress).Append("\n");
            sb.Append("  ContactOfficeStreetAddress: ").Append(ContactOfficeStreetAddress).Append("\n");
            sb.Append("  ContactOfficeCity: ").Append(ContactOfficeCity).Append("\n");
            sb.Append("  ContactOfficeState: ").Append(ContactOfficeState).Append("\n");
            sb.Append("  ContactOfficeZIPCode: ").Append(ContactOfficeZIPCode).Append("\n");
            sb.Append("  ContactFaxNumber: ").Append(ContactFaxNumber).Append("\n");
            sb.Append("  FederalAgency: ").Append(FederalAgency).Append("\n");
            sb.Append("  FederalTaxpayerIdNumber: ").Append(FederalTaxpayerIdNumber).Append("\n");
            sb.Append("  LegalEntityIdentifier: ").Append(LegalEntityIdentifier).Append("\n");
            sb.Append("  LegalEntityIdentifierReporting: ").Append(LegalEntityIdentifierReporting).Append("\n");
            sb.Append("  LegalEntityIdentifierUsed: ").Append(LegalEntityIdentifierUsed).Append("\n");
            sb.Append("  RespondentID: ").Append(RespondentID).Append("\n");
            sb.Append("  ParentName: ").Append(ParentName).Append("\n");
            sb.Append("  ParentAddress: ").Append(ParentAddress).Append("\n");
            sb.Append("  ParentCity: ").Append(ParentCity).Append("\n");
            sb.Append("  ParentState: ").Append(ParentState).Append("\n");
            sb.Append("  ParentZip: ").Append(ParentZip).Append("\n");
            sb.Append("  TotalLoanCosts: ").Append(TotalLoanCosts).Append("\n");
            sb.Append("  TotalPointsAndFees: ").Append(TotalPointsAndFees).Append("\n");
            sb.Append("  OriginationCharges: ").Append(OriginationCharges).Append("\n");
            sb.Append("  LenderCredits: ").Append(LenderCredits).Append("\n");
            sb.Append("  InterestRate: ").Append(InterestRate).Append("\n");
            sb.Append("  PrepaymentPenaltyPeriod: ").Append(PrepaymentPenaltyPeriod).Append("\n");
            sb.Append("  LoanTerm: ").Append(LoanTerm).Append("\n");
            sb.Append("  IntroRatePeriod: ").Append(IntroRatePeriod).Append("\n");
            sb.Append("  PropertyValue: ").Append(PropertyValue).Append("\n");
            sb.Append("  NMLSLoanOriginatorID: ").Append(NMLSLoanOriginatorID).Append("\n");
            sb.Append("  HmdaPropertyZipCode: ").Append(HmdaPropertyZipCode).Append("\n");
            sb.Append("  HmdaPropertyAddress: ").Append(HmdaPropertyAddress).Append("\n");
            sb.Append("  HmdaPropertyCity: ").Append(HmdaPropertyCity).Append("\n");
            sb.Append("  HmdaPropertyState: ").Append(HmdaPropertyState).Append("\n");
            sb.Append("  HmdaSyncAddressIndicator: ").Append(HmdaSyncAddressIndicator).Append("\n");
            sb.Append("  RepurchasedReportingYear: ").Append(RepurchasedReportingYear).Append("\n");
            sb.Append("  RepurchasedLoanAmount: ").Append(RepurchasedLoanAmount).Append("\n");
            sb.Append("  RepurchasedTypeOfPurchaser: ").Append(RepurchasedTypeOfPurchaser).Append("\n");
            sb.Append("  RepurchasedActionTaken: ").Append(RepurchasedActionTaken).Append("\n");
            sb.Append("  RepurchasedActionDate: ").Append(RepurchasedActionDate).Append("\n");
            sb.Append("  HmdaDtiIndicator: ").Append(HmdaDtiIndicator).Append("\n");
            sb.Append("  HmdaCltvIndicator: ").Append(HmdaCltvIndicator).Append("\n");
            sb.Append("  HmdaIncomeIndicator: ").Append(HmdaIncomeIndicator).Append("\n");
            sb.Append("  HMDAProfileID: ").Append(HMDAProfileID).Append("\n");
            sb.Append("  HMDAProfileDTIValue: ").Append(HMDAProfileDTIValue).Append("\n");
            sb.Append("  HMDAProfileCLTVValue: ").Append(HMDAProfileCLTVValue).Append("\n");
            sb.Append("  HMDAProfileIncomeValue: ").Append(HMDAProfileIncomeValue).Append("\n");
            sb.Append("  HMDAProfileApplicationDateValue: ").Append(HMDAProfileApplicationDateValue).Append("\n");
            sb.Append("  HMDALoanPurpose: ").Append(HMDALoanPurpose).Append("\n");
            sb.Append("  HmdaPropertyValueNotReliedUponIndicator: ").Append(HmdaPropertyValueNotReliedUponIndicator).Append("\n");
            sb.Append("  HmdaInterestOnlyIndicator: ").Append(HmdaInterestOnlyIndicator).Append("\n");
            sb.Append("  IncomeExcludedFromHmda: ").Append(IncomeExcludedFromHmda).Append("\n");
            sb.Append("  HMDACensusTrack: ").Append(HMDACensusTrack).Append("\n");
            sb.Append("  HMDACountyCode: ").Append(HMDACountyCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractHmda);
        }

        /// <summary>
        /// Returns true if LoanContractHmda instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractHmda to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractHmda input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ActionTaken == input.ActionTaken ||
                    (this.ActionTaken != null &&
                    this.ActionTaken.Equals(input.ActionTaken))
                ) && 
                (
                    this.CensusTrack == input.CensusTrack ||
                    (this.CensusTrack != null &&
                    this.CensusTrack.Equals(input.CensusTrack))
                ) && 
                (
                    this.CountyCode == input.CountyCode ||
                    (this.CountyCode != null &&
                    this.CountyCode.Equals(input.CountyCode))
                ) && 
                (
                    this.DenialReason1 == input.DenialReason1 ||
                    (this.DenialReason1 != null &&
                    this.DenialReason1.Equals(input.DenialReason1))
                ) && 
                (
                    this.DenialReason2 == input.DenialReason2 ||
                    (this.DenialReason2 != null &&
                    this.DenialReason2.Equals(input.DenialReason2))
                ) && 
                (
                    this.DenialReason3 == input.DenialReason3 ||
                    (this.DenialReason3 != null &&
                    this.DenialReason3.Equals(input.DenialReason3))
                ) && 
                (
                    this.ExcludeLoanFromHMDAReportIndicator == input.ExcludeLoanFromHMDAReportIndicator ||
                    (this.ExcludeLoanFromHMDAReportIndicator != null &&
                    this.ExcludeLoanFromHMDAReportIndicator.Equals(input.ExcludeLoanFromHMDAReportIndicator))
                ) && 
                (
                    this.HOEPAStatus == input.HOEPAStatus ||
                    (this.HOEPAStatus != null &&
                    this.HOEPAStatus.Equals(input.HOEPAStatus))
                ) && 
                (
                    this.LienStatus == input.LienStatus ||
                    (this.LienStatus != null &&
                    this.LienStatus.Equals(input.LienStatus))
                ) && 
                (
                    this.LoanPurpose == input.LoanPurpose ||
                    (this.LoanPurpose != null &&
                    this.LoanPurpose.Equals(input.LoanPurpose))
                ) && 
                (
                    this.MSANumber == input.MSANumber ||
                    (this.MSANumber != null &&
                    this.MSANumber.Equals(input.MSANumber))
                ) && 
                (
                    this.Preapprovals == input.Preapprovals ||
                    (this.Preapprovals != null &&
                    this.Preapprovals.Equals(input.Preapprovals))
                ) && 
                (
                    this.PropertyType == input.PropertyType ||
                    (this.PropertyType != null &&
                    this.PropertyType.Equals(input.PropertyType))
                ) && 
                (
                    this.RateSpread == input.RateSpread ||
                    (this.RateSpread != null &&
                    this.RateSpread.Equals(input.RateSpread))
                ) && 
                (
                    this.ReportPurposeOfLoanIndicator == input.ReportPurposeOfLoanIndicator ||
                    (this.ReportPurposeOfLoanIndicator != null &&
                    this.ReportPurposeOfLoanIndicator.Equals(input.ReportPurposeOfLoanIndicator))
                ) && 
                (
                    this.StateCode == input.StateCode ||
                    (this.StateCode != null &&
                    this.StateCode.Equals(input.StateCode))
                ) && 
                (
                    this.TypeOfPurchaser == input.TypeOfPurchaser ||
                    (this.TypeOfPurchaser != null &&
                    this.TypeOfPurchaser.Equals(input.TypeOfPurchaser))
                ) && 
                (
                    this.QMStatus == input.QMStatus ||
                    (this.QMStatus != null &&
                    this.QMStatus.Equals(input.QMStatus))
                ) && 
                (
                    this.ReportingYear == input.ReportingYear ||
                    (this.ReportingYear != null &&
                    this.ReportingYear.Equals(input.ReportingYear))
                ) && 
                (
                    this.UniversalLoanId == input.UniversalLoanId ||
                    (this.UniversalLoanId != null &&
                    this.UniversalLoanId.Equals(input.UniversalLoanId))
                ) && 
                (
                    this.ApplicationDate == input.ApplicationDate ||
                    (this.ApplicationDate != null &&
                    this.ApplicationDate.Equals(input.ApplicationDate))
                ) && 
                (
                    this.LoanType == input.LoanType ||
                    (this.LoanType != null &&
                    this.LoanType.Equals(input.LoanType))
                ) && 
                (
                    this.LoanAmount == input.LoanAmount ||
                    (this.LoanAmount != null &&
                    this.LoanAmount.Equals(input.LoanAmount))
                ) && 
                (
                    this.Income == input.Income ||
                    (this.Income != null &&
                    this.Income.Equals(input.Income))
                ) && 
                (
                    this.DenialReason4 == input.DenialReason4 ||
                    (this.DenialReason4 != null &&
                    this.DenialReason4.Equals(input.DenialReason4))
                ) && 
                (
                    this.OtherDenialReason == input.OtherDenialReason ||
                    (this.OtherDenialReason != null &&
                    this.OtherDenialReason.Equals(input.OtherDenialReason))
                ) && 
                (
                    this.DiscountPoints == input.DiscountPoints ||
                    (this.DiscountPoints != null &&
                    this.DiscountPoints.Equals(input.DiscountPoints))
                ) && 
                (
                    this.DebtToIncomeRatio == input.DebtToIncomeRatio ||
                    (this.DebtToIncomeRatio != null &&
                    this.DebtToIncomeRatio.Equals(input.DebtToIncomeRatio))
                ) && 
                (
                    this.CLTV == input.CLTV ||
                    (this.CLTV != null &&
                    this.CLTV.Equals(input.CLTV))
                ) && 
                (
                    this.OtherNonAmortization == input.OtherNonAmortization ||
                    (this.OtherNonAmortization != null &&
                    this.OtherNonAmortization.Equals(input.OtherNonAmortization))
                ) && 
                (
                    this.ManufacturedSecuredProperyType == input.ManufacturedSecuredProperyType ||
                    (this.ManufacturedSecuredProperyType != null &&
                    this.ManufacturedSecuredProperyType.Equals(input.ManufacturedSecuredProperyType))
                ) && 
                (
                    this.ManufacturedHomeLandPropertyInterest == input.ManufacturedHomeLandPropertyInterest ||
                    (this.ManufacturedHomeLandPropertyInterest != null &&
                    this.ManufacturedHomeLandPropertyInterest.Equals(input.ManufacturedHomeLandPropertyInterest))
                ) && 
                (
                    this.MultifamilyNoUnits == input.MultifamilyNoUnits ||
                    (this.MultifamilyNoUnits != null &&
                    this.MultifamilyNoUnits.Equals(input.MultifamilyNoUnits))
                ) && 
                (
                    this.SubmissionOfApplication == input.SubmissionOfApplication ||
                    (this.SubmissionOfApplication != null &&
                    this.SubmissionOfApplication.Equals(input.SubmissionOfApplication))
                ) && 
                (
                    this.InitiallyPayableToYourInstitution == input.InitiallyPayableToYourInstitution ||
                    (this.InitiallyPayableToYourInstitution != null &&
                    this.InitiallyPayableToYourInstitution.Equals(input.InitiallyPayableToYourInstitution))
                ) && 
                (
                    this.AUS1 == input.AUS1 ||
                    (this.AUS1 != null &&
                    this.AUS1.Equals(input.AUS1))
                ) && 
                (
                    this.AUS2 == input.AUS2 ||
                    (this.AUS2 != null &&
                    this.AUS2.Equals(input.AUS2))
                ) && 
                (
                    this.AUS3 == input.AUS3 ||
                    (this.AUS3 != null &&
                    this.AUS3.Equals(input.AUS3))
                ) && 
                (
                    this.AUS4 == input.AUS4 ||
                    (this.AUS4 != null &&
                    this.AUS4.Equals(input.AUS4))
                ) && 
                (
                    this.AUS5 == input.AUS5 ||
                    (this.AUS5 != null &&
                    this.AUS5.Equals(input.AUS5))
                ) && 
                (
                    this.OtherAUS == input.OtherAUS ||
                    (this.OtherAUS != null &&
                    this.OtherAUS.Equals(input.OtherAUS))
                ) && 
                (
                    this.AUSRecommendation1 == input.AUSRecommendation1 ||
                    (this.AUSRecommendation1 != null &&
                    this.AUSRecommendation1.Equals(input.AUSRecommendation1))
                ) && 
                (
                    this.AUSRecommendation2 == input.AUSRecommendation2 ||
                    (this.AUSRecommendation2 != null &&
                    this.AUSRecommendation2.Equals(input.AUSRecommendation2))
                ) && 
                (
                    this.AUSRecommendation3 == input.AUSRecommendation3 ||
                    (this.AUSRecommendation3 != null &&
                    this.AUSRecommendation3.Equals(input.AUSRecommendation3))
                ) && 
                (
                    this.AUSRecommendation4 == input.AUSRecommendation4 ||
                    (this.AUSRecommendation4 != null &&
                    this.AUSRecommendation4.Equals(input.AUSRecommendation4))
                ) && 
                (
                    this.AUSRecommendation5 == input.AUSRecommendation5 ||
                    (this.AUSRecommendation5 != null &&
                    this.AUSRecommendation5.Equals(input.AUSRecommendation5))
                ) && 
                (
                    this.OtherAUSRecommendations == input.OtherAUSRecommendations ||
                    (this.OtherAUSRecommendations != null &&
                    this.OtherAUSRecommendations.Equals(input.OtherAUSRecommendations))
                ) && 
                (
                    this.ReverseMortgage == input.ReverseMortgage ||
                    (this.ReverseMortgage != null &&
                    this.ReverseMortgage.Equals(input.ReverseMortgage))
                ) && 
                (
                    this.OpenEndLineOfCredit == input.OpenEndLineOfCredit ||
                    (this.OpenEndLineOfCredit != null &&
                    this.OpenEndLineOfCredit.Equals(input.OpenEndLineOfCredit))
                ) && 
                (
                    this.BusinessOrCommercialPurpose == input.BusinessOrCommercialPurpose ||
                    (this.BusinessOrCommercialPurpose != null &&
                    this.BusinessOrCommercialPurpose.Equals(input.BusinessOrCommercialPurpose))
                ) && 
                (
                    this.FinancialInstitutionName == input.FinancialInstitutionName ||
                    (this.FinancialInstitutionName != null &&
                    this.FinancialInstitutionName.Equals(input.FinancialInstitutionName))
                ) && 
                (
                    this.ContactName == input.ContactName ||
                    (this.ContactName != null &&
                    this.ContactName.Equals(input.ContactName))
                ) && 
                (
                    this.ContactPhoneNumber == input.ContactPhoneNumber ||
                    (this.ContactPhoneNumber != null &&
                    this.ContactPhoneNumber.Equals(input.ContactPhoneNumber))
                ) && 
                (
                    this.ContactEmailAddress == input.ContactEmailAddress ||
                    (this.ContactEmailAddress != null &&
                    this.ContactEmailAddress.Equals(input.ContactEmailAddress))
                ) && 
                (
                    this.ContactOfficeStreetAddress == input.ContactOfficeStreetAddress ||
                    (this.ContactOfficeStreetAddress != null &&
                    this.ContactOfficeStreetAddress.Equals(input.ContactOfficeStreetAddress))
                ) && 
                (
                    this.ContactOfficeCity == input.ContactOfficeCity ||
                    (this.ContactOfficeCity != null &&
                    this.ContactOfficeCity.Equals(input.ContactOfficeCity))
                ) && 
                (
                    this.ContactOfficeState == input.ContactOfficeState ||
                    (this.ContactOfficeState != null &&
                    this.ContactOfficeState.Equals(input.ContactOfficeState))
                ) && 
                (
                    this.ContactOfficeZIPCode == input.ContactOfficeZIPCode ||
                    (this.ContactOfficeZIPCode != null &&
                    this.ContactOfficeZIPCode.Equals(input.ContactOfficeZIPCode))
                ) && 
                (
                    this.ContactFaxNumber == input.ContactFaxNumber ||
                    (this.ContactFaxNumber != null &&
                    this.ContactFaxNumber.Equals(input.ContactFaxNumber))
                ) && 
                (
                    this.FederalAgency == input.FederalAgency ||
                    (this.FederalAgency != null &&
                    this.FederalAgency.Equals(input.FederalAgency))
                ) && 
                (
                    this.FederalTaxpayerIdNumber == input.FederalTaxpayerIdNumber ||
                    (this.FederalTaxpayerIdNumber != null &&
                    this.FederalTaxpayerIdNumber.Equals(input.FederalTaxpayerIdNumber))
                ) && 
                (
                    this.LegalEntityIdentifier == input.LegalEntityIdentifier ||
                    (this.LegalEntityIdentifier != null &&
                    this.LegalEntityIdentifier.Equals(input.LegalEntityIdentifier))
                ) && 
                (
                    this.LegalEntityIdentifierReporting == input.LegalEntityIdentifierReporting ||
                    (this.LegalEntityIdentifierReporting != null &&
                    this.LegalEntityIdentifierReporting.Equals(input.LegalEntityIdentifierReporting))
                ) && 
                (
                    this.LegalEntityIdentifierUsed == input.LegalEntityIdentifierUsed ||
                    (this.LegalEntityIdentifierUsed != null &&
                    this.LegalEntityIdentifierUsed.Equals(input.LegalEntityIdentifierUsed))
                ) && 
                (
                    this.RespondentID == input.RespondentID ||
                    (this.RespondentID != null &&
                    this.RespondentID.Equals(input.RespondentID))
                ) && 
                (
                    this.ParentName == input.ParentName ||
                    (this.ParentName != null &&
                    this.ParentName.Equals(input.ParentName))
                ) && 
                (
                    this.ParentAddress == input.ParentAddress ||
                    (this.ParentAddress != null &&
                    this.ParentAddress.Equals(input.ParentAddress))
                ) && 
                (
                    this.ParentCity == input.ParentCity ||
                    (this.ParentCity != null &&
                    this.ParentCity.Equals(input.ParentCity))
                ) && 
                (
                    this.ParentState == input.ParentState ||
                    (this.ParentState != null &&
                    this.ParentState.Equals(input.ParentState))
                ) && 
                (
                    this.ParentZip == input.ParentZip ||
                    (this.ParentZip != null &&
                    this.ParentZip.Equals(input.ParentZip))
                ) && 
                (
                    this.TotalLoanCosts == input.TotalLoanCosts ||
                    (this.TotalLoanCosts != null &&
                    this.TotalLoanCosts.Equals(input.TotalLoanCosts))
                ) && 
                (
                    this.TotalPointsAndFees == input.TotalPointsAndFees ||
                    (this.TotalPointsAndFees != null &&
                    this.TotalPointsAndFees.Equals(input.TotalPointsAndFees))
                ) && 
                (
                    this.OriginationCharges == input.OriginationCharges ||
                    (this.OriginationCharges != null &&
                    this.OriginationCharges.Equals(input.OriginationCharges))
                ) && 
                (
                    this.LenderCredits == input.LenderCredits ||
                    (this.LenderCredits != null &&
                    this.LenderCredits.Equals(input.LenderCredits))
                ) && 
                (
                    this.InterestRate == input.InterestRate ||
                    (this.InterestRate != null &&
                    this.InterestRate.Equals(input.InterestRate))
                ) && 
                (
                    this.PrepaymentPenaltyPeriod == input.PrepaymentPenaltyPeriod ||
                    (this.PrepaymentPenaltyPeriod != null &&
                    this.PrepaymentPenaltyPeriod.Equals(input.PrepaymentPenaltyPeriod))
                ) && 
                (
                    this.LoanTerm == input.LoanTerm ||
                    (this.LoanTerm != null &&
                    this.LoanTerm.Equals(input.LoanTerm))
                ) && 
                (
                    this.IntroRatePeriod == input.IntroRatePeriod ||
                    (this.IntroRatePeriod != null &&
                    this.IntroRatePeriod.Equals(input.IntroRatePeriod))
                ) && 
                (
                    this.PropertyValue == input.PropertyValue ||
                    (this.PropertyValue != null &&
                    this.PropertyValue.Equals(input.PropertyValue))
                ) && 
                (
                    this.NMLSLoanOriginatorID == input.NMLSLoanOriginatorID ||
                    (this.NMLSLoanOriginatorID != null &&
                    this.NMLSLoanOriginatorID.Equals(input.NMLSLoanOriginatorID))
                ) && 
                (
                    this.HmdaPropertyZipCode == input.HmdaPropertyZipCode ||
                    (this.HmdaPropertyZipCode != null &&
                    this.HmdaPropertyZipCode.Equals(input.HmdaPropertyZipCode))
                ) && 
                (
                    this.HmdaPropertyAddress == input.HmdaPropertyAddress ||
                    (this.HmdaPropertyAddress != null &&
                    this.HmdaPropertyAddress.Equals(input.HmdaPropertyAddress))
                ) && 
                (
                    this.HmdaPropertyCity == input.HmdaPropertyCity ||
                    (this.HmdaPropertyCity != null &&
                    this.HmdaPropertyCity.Equals(input.HmdaPropertyCity))
                ) && 
                (
                    this.HmdaPropertyState == input.HmdaPropertyState ||
                    (this.HmdaPropertyState != null &&
                    this.HmdaPropertyState.Equals(input.HmdaPropertyState))
                ) && 
                (
                    this.HmdaSyncAddressIndicator == input.HmdaSyncAddressIndicator ||
                    (this.HmdaSyncAddressIndicator != null &&
                    this.HmdaSyncAddressIndicator.Equals(input.HmdaSyncAddressIndicator))
                ) && 
                (
                    this.RepurchasedReportingYear == input.RepurchasedReportingYear ||
                    (this.RepurchasedReportingYear != null &&
                    this.RepurchasedReportingYear.Equals(input.RepurchasedReportingYear))
                ) && 
                (
                    this.RepurchasedLoanAmount == input.RepurchasedLoanAmount ||
                    (this.RepurchasedLoanAmount != null &&
                    this.RepurchasedLoanAmount.Equals(input.RepurchasedLoanAmount))
                ) && 
                (
                    this.RepurchasedTypeOfPurchaser == input.RepurchasedTypeOfPurchaser ||
                    (this.RepurchasedTypeOfPurchaser != null &&
                    this.RepurchasedTypeOfPurchaser.Equals(input.RepurchasedTypeOfPurchaser))
                ) && 
                (
                    this.RepurchasedActionTaken == input.RepurchasedActionTaken ||
                    (this.RepurchasedActionTaken != null &&
                    this.RepurchasedActionTaken.Equals(input.RepurchasedActionTaken))
                ) && 
                (
                    this.RepurchasedActionDate == input.RepurchasedActionDate ||
                    (this.RepurchasedActionDate != null &&
                    this.RepurchasedActionDate.Equals(input.RepurchasedActionDate))
                ) && 
                (
                    this.HmdaDtiIndicator == input.HmdaDtiIndicator ||
                    (this.HmdaDtiIndicator != null &&
                    this.HmdaDtiIndicator.Equals(input.HmdaDtiIndicator))
                ) && 
                (
                    this.HmdaCltvIndicator == input.HmdaCltvIndicator ||
                    (this.HmdaCltvIndicator != null &&
                    this.HmdaCltvIndicator.Equals(input.HmdaCltvIndicator))
                ) && 
                (
                    this.HmdaIncomeIndicator == input.HmdaIncomeIndicator ||
                    (this.HmdaIncomeIndicator != null &&
                    this.HmdaIncomeIndicator.Equals(input.HmdaIncomeIndicator))
                ) && 
                (
                    this.HMDAProfileID == input.HMDAProfileID ||
                    (this.HMDAProfileID != null &&
                    this.HMDAProfileID.Equals(input.HMDAProfileID))
                ) && 
                (
                    this.HMDAProfileDTIValue == input.HMDAProfileDTIValue ||
                    (this.HMDAProfileDTIValue != null &&
                    this.HMDAProfileDTIValue.Equals(input.HMDAProfileDTIValue))
                ) && 
                (
                    this.HMDAProfileCLTVValue == input.HMDAProfileCLTVValue ||
                    (this.HMDAProfileCLTVValue != null &&
                    this.HMDAProfileCLTVValue.Equals(input.HMDAProfileCLTVValue))
                ) && 
                (
                    this.HMDAProfileIncomeValue == input.HMDAProfileIncomeValue ||
                    (this.HMDAProfileIncomeValue != null &&
                    this.HMDAProfileIncomeValue.Equals(input.HMDAProfileIncomeValue))
                ) && 
                (
                    this.HMDAProfileApplicationDateValue == input.HMDAProfileApplicationDateValue ||
                    (this.HMDAProfileApplicationDateValue != null &&
                    this.HMDAProfileApplicationDateValue.Equals(input.HMDAProfileApplicationDateValue))
                ) && 
                (
                    this.HMDALoanPurpose == input.HMDALoanPurpose ||
                    (this.HMDALoanPurpose != null &&
                    this.HMDALoanPurpose.Equals(input.HMDALoanPurpose))
                ) && 
                (
                    this.HmdaPropertyValueNotReliedUponIndicator == input.HmdaPropertyValueNotReliedUponIndicator ||
                    (this.HmdaPropertyValueNotReliedUponIndicator != null &&
                    this.HmdaPropertyValueNotReliedUponIndicator.Equals(input.HmdaPropertyValueNotReliedUponIndicator))
                ) && 
                (
                    this.HmdaInterestOnlyIndicator == input.HmdaInterestOnlyIndicator ||
                    (this.HmdaInterestOnlyIndicator != null &&
                    this.HmdaInterestOnlyIndicator.Equals(input.HmdaInterestOnlyIndicator))
                ) && 
                (
                    this.IncomeExcludedFromHmda == input.IncomeExcludedFromHmda ||
                    (this.IncomeExcludedFromHmda != null &&
                    this.IncomeExcludedFromHmda.Equals(input.IncomeExcludedFromHmda))
                ) && 
                (
                    this.HMDACensusTrack == input.HMDACensusTrack ||
                    (this.HMDACensusTrack != null &&
                    this.HMDACensusTrack.Equals(input.HMDACensusTrack))
                ) && 
                (
                    this.HMDACountyCode == input.HMDACountyCode ||
                    (this.HMDACountyCode != null &&
                    this.HMDACountyCode.Equals(input.HMDACountyCode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.ActionTaken != null)
                    hashCode = hashCode * 59 + this.ActionTaken.GetHashCode();
                if (this.CensusTrack != null)
                    hashCode = hashCode * 59 + this.CensusTrack.GetHashCode();
                if (this.CountyCode != null)
                    hashCode = hashCode * 59 + this.CountyCode.GetHashCode();
                if (this.DenialReason1 != null)
                    hashCode = hashCode * 59 + this.DenialReason1.GetHashCode();
                if (this.DenialReason2 != null)
                    hashCode = hashCode * 59 + this.DenialReason2.GetHashCode();
                if (this.DenialReason3 != null)
                    hashCode = hashCode * 59 + this.DenialReason3.GetHashCode();
                if (this.ExcludeLoanFromHMDAReportIndicator != null)
                    hashCode = hashCode * 59 + this.ExcludeLoanFromHMDAReportIndicator.GetHashCode();
                if (this.HOEPAStatus != null)
                    hashCode = hashCode * 59 + this.HOEPAStatus.GetHashCode();
                if (this.LienStatus != null)
                    hashCode = hashCode * 59 + this.LienStatus.GetHashCode();
                if (this.LoanPurpose != null)
                    hashCode = hashCode * 59 + this.LoanPurpose.GetHashCode();
                if (this.MSANumber != null)
                    hashCode = hashCode * 59 + this.MSANumber.GetHashCode();
                if (this.Preapprovals != null)
                    hashCode = hashCode * 59 + this.Preapprovals.GetHashCode();
                if (this.PropertyType != null)
                    hashCode = hashCode * 59 + this.PropertyType.GetHashCode();
                if (this.RateSpread != null)
                    hashCode = hashCode * 59 + this.RateSpread.GetHashCode();
                if (this.ReportPurposeOfLoanIndicator != null)
                    hashCode = hashCode * 59 + this.ReportPurposeOfLoanIndicator.GetHashCode();
                if (this.StateCode != null)
                    hashCode = hashCode * 59 + this.StateCode.GetHashCode();
                if (this.TypeOfPurchaser != null)
                    hashCode = hashCode * 59 + this.TypeOfPurchaser.GetHashCode();
                if (this.QMStatus != null)
                    hashCode = hashCode * 59 + this.QMStatus.GetHashCode();
                if (this.ReportingYear != null)
                    hashCode = hashCode * 59 + this.ReportingYear.GetHashCode();
                if (this.UniversalLoanId != null)
                    hashCode = hashCode * 59 + this.UniversalLoanId.GetHashCode();
                if (this.ApplicationDate != null)
                    hashCode = hashCode * 59 + this.ApplicationDate.GetHashCode();
                if (this.LoanType != null)
                    hashCode = hashCode * 59 + this.LoanType.GetHashCode();
                if (this.LoanAmount != null)
                    hashCode = hashCode * 59 + this.LoanAmount.GetHashCode();
                if (this.Income != null)
                    hashCode = hashCode * 59 + this.Income.GetHashCode();
                if (this.DenialReason4 != null)
                    hashCode = hashCode * 59 + this.DenialReason4.GetHashCode();
                if (this.OtherDenialReason != null)
                    hashCode = hashCode * 59 + this.OtherDenialReason.GetHashCode();
                if (this.DiscountPoints != null)
                    hashCode = hashCode * 59 + this.DiscountPoints.GetHashCode();
                if (this.DebtToIncomeRatio != null)
                    hashCode = hashCode * 59 + this.DebtToIncomeRatio.GetHashCode();
                if (this.CLTV != null)
                    hashCode = hashCode * 59 + this.CLTV.GetHashCode();
                if (this.OtherNonAmortization != null)
                    hashCode = hashCode * 59 + this.OtherNonAmortization.GetHashCode();
                if (this.ManufacturedSecuredProperyType != null)
                    hashCode = hashCode * 59 + this.ManufacturedSecuredProperyType.GetHashCode();
                if (this.ManufacturedHomeLandPropertyInterest != null)
                    hashCode = hashCode * 59 + this.ManufacturedHomeLandPropertyInterest.GetHashCode();
                if (this.MultifamilyNoUnits != null)
                    hashCode = hashCode * 59 + this.MultifamilyNoUnits.GetHashCode();
                if (this.SubmissionOfApplication != null)
                    hashCode = hashCode * 59 + this.SubmissionOfApplication.GetHashCode();
                if (this.InitiallyPayableToYourInstitution != null)
                    hashCode = hashCode * 59 + this.InitiallyPayableToYourInstitution.GetHashCode();
                if (this.AUS1 != null)
                    hashCode = hashCode * 59 + this.AUS1.GetHashCode();
                if (this.AUS2 != null)
                    hashCode = hashCode * 59 + this.AUS2.GetHashCode();
                if (this.AUS3 != null)
                    hashCode = hashCode * 59 + this.AUS3.GetHashCode();
                if (this.AUS4 != null)
                    hashCode = hashCode * 59 + this.AUS4.GetHashCode();
                if (this.AUS5 != null)
                    hashCode = hashCode * 59 + this.AUS5.GetHashCode();
                if (this.OtherAUS != null)
                    hashCode = hashCode * 59 + this.OtherAUS.GetHashCode();
                if (this.AUSRecommendation1 != null)
                    hashCode = hashCode * 59 + this.AUSRecommendation1.GetHashCode();
                if (this.AUSRecommendation2 != null)
                    hashCode = hashCode * 59 + this.AUSRecommendation2.GetHashCode();
                if (this.AUSRecommendation3 != null)
                    hashCode = hashCode * 59 + this.AUSRecommendation3.GetHashCode();
                if (this.AUSRecommendation4 != null)
                    hashCode = hashCode * 59 + this.AUSRecommendation4.GetHashCode();
                if (this.AUSRecommendation5 != null)
                    hashCode = hashCode * 59 + this.AUSRecommendation5.GetHashCode();
                if (this.OtherAUSRecommendations != null)
                    hashCode = hashCode * 59 + this.OtherAUSRecommendations.GetHashCode();
                if (this.ReverseMortgage != null)
                    hashCode = hashCode * 59 + this.ReverseMortgage.GetHashCode();
                if (this.OpenEndLineOfCredit != null)
                    hashCode = hashCode * 59 + this.OpenEndLineOfCredit.GetHashCode();
                if (this.BusinessOrCommercialPurpose != null)
                    hashCode = hashCode * 59 + this.BusinessOrCommercialPurpose.GetHashCode();
                if (this.FinancialInstitutionName != null)
                    hashCode = hashCode * 59 + this.FinancialInstitutionName.GetHashCode();
                if (this.ContactName != null)
                    hashCode = hashCode * 59 + this.ContactName.GetHashCode();
                if (this.ContactPhoneNumber != null)
                    hashCode = hashCode * 59 + this.ContactPhoneNumber.GetHashCode();
                if (this.ContactEmailAddress != null)
                    hashCode = hashCode * 59 + this.ContactEmailAddress.GetHashCode();
                if (this.ContactOfficeStreetAddress != null)
                    hashCode = hashCode * 59 + this.ContactOfficeStreetAddress.GetHashCode();
                if (this.ContactOfficeCity != null)
                    hashCode = hashCode * 59 + this.ContactOfficeCity.GetHashCode();
                if (this.ContactOfficeState != null)
                    hashCode = hashCode * 59 + this.ContactOfficeState.GetHashCode();
                if (this.ContactOfficeZIPCode != null)
                    hashCode = hashCode * 59 + this.ContactOfficeZIPCode.GetHashCode();
                if (this.ContactFaxNumber != null)
                    hashCode = hashCode * 59 + this.ContactFaxNumber.GetHashCode();
                if (this.FederalAgency != null)
                    hashCode = hashCode * 59 + this.FederalAgency.GetHashCode();
                if (this.FederalTaxpayerIdNumber != null)
                    hashCode = hashCode * 59 + this.FederalTaxpayerIdNumber.GetHashCode();
                if (this.LegalEntityIdentifier != null)
                    hashCode = hashCode * 59 + this.LegalEntityIdentifier.GetHashCode();
                if (this.LegalEntityIdentifierReporting != null)
                    hashCode = hashCode * 59 + this.LegalEntityIdentifierReporting.GetHashCode();
                if (this.LegalEntityIdentifierUsed != null)
                    hashCode = hashCode * 59 + this.LegalEntityIdentifierUsed.GetHashCode();
                if (this.RespondentID != null)
                    hashCode = hashCode * 59 + this.RespondentID.GetHashCode();
                if (this.ParentName != null)
                    hashCode = hashCode * 59 + this.ParentName.GetHashCode();
                if (this.ParentAddress != null)
                    hashCode = hashCode * 59 + this.ParentAddress.GetHashCode();
                if (this.ParentCity != null)
                    hashCode = hashCode * 59 + this.ParentCity.GetHashCode();
                if (this.ParentState != null)
                    hashCode = hashCode * 59 + this.ParentState.GetHashCode();
                if (this.ParentZip != null)
                    hashCode = hashCode * 59 + this.ParentZip.GetHashCode();
                if (this.TotalLoanCosts != null)
                    hashCode = hashCode * 59 + this.TotalLoanCosts.GetHashCode();
                if (this.TotalPointsAndFees != null)
                    hashCode = hashCode * 59 + this.TotalPointsAndFees.GetHashCode();
                if (this.OriginationCharges != null)
                    hashCode = hashCode * 59 + this.OriginationCharges.GetHashCode();
                if (this.LenderCredits != null)
                    hashCode = hashCode * 59 + this.LenderCredits.GetHashCode();
                if (this.InterestRate != null)
                    hashCode = hashCode * 59 + this.InterestRate.GetHashCode();
                if (this.PrepaymentPenaltyPeriod != null)
                    hashCode = hashCode * 59 + this.PrepaymentPenaltyPeriod.GetHashCode();
                if (this.LoanTerm != null)
                    hashCode = hashCode * 59 + this.LoanTerm.GetHashCode();
                if (this.IntroRatePeriod != null)
                    hashCode = hashCode * 59 + this.IntroRatePeriod.GetHashCode();
                if (this.PropertyValue != null)
                    hashCode = hashCode * 59 + this.PropertyValue.GetHashCode();
                if (this.NMLSLoanOriginatorID != null)
                    hashCode = hashCode * 59 + this.NMLSLoanOriginatorID.GetHashCode();
                if (this.HmdaPropertyZipCode != null)
                    hashCode = hashCode * 59 + this.HmdaPropertyZipCode.GetHashCode();
                if (this.HmdaPropertyAddress != null)
                    hashCode = hashCode * 59 + this.HmdaPropertyAddress.GetHashCode();
                if (this.HmdaPropertyCity != null)
                    hashCode = hashCode * 59 + this.HmdaPropertyCity.GetHashCode();
                if (this.HmdaPropertyState != null)
                    hashCode = hashCode * 59 + this.HmdaPropertyState.GetHashCode();
                if (this.HmdaSyncAddressIndicator != null)
                    hashCode = hashCode * 59 + this.HmdaSyncAddressIndicator.GetHashCode();
                if (this.RepurchasedReportingYear != null)
                    hashCode = hashCode * 59 + this.RepurchasedReportingYear.GetHashCode();
                if (this.RepurchasedLoanAmount != null)
                    hashCode = hashCode * 59 + this.RepurchasedLoanAmount.GetHashCode();
                if (this.RepurchasedTypeOfPurchaser != null)
                    hashCode = hashCode * 59 + this.RepurchasedTypeOfPurchaser.GetHashCode();
                if (this.RepurchasedActionTaken != null)
                    hashCode = hashCode * 59 + this.RepurchasedActionTaken.GetHashCode();
                if (this.RepurchasedActionDate != null)
                    hashCode = hashCode * 59 + this.RepurchasedActionDate.GetHashCode();
                if (this.HmdaDtiIndicator != null)
                    hashCode = hashCode * 59 + this.HmdaDtiIndicator.GetHashCode();
                if (this.HmdaCltvIndicator != null)
                    hashCode = hashCode * 59 + this.HmdaCltvIndicator.GetHashCode();
                if (this.HmdaIncomeIndicator != null)
                    hashCode = hashCode * 59 + this.HmdaIncomeIndicator.GetHashCode();
                if (this.HMDAProfileID != null)
                    hashCode = hashCode * 59 + this.HMDAProfileID.GetHashCode();
                if (this.HMDAProfileDTIValue != null)
                    hashCode = hashCode * 59 + this.HMDAProfileDTIValue.GetHashCode();
                if (this.HMDAProfileCLTVValue != null)
                    hashCode = hashCode * 59 + this.HMDAProfileCLTVValue.GetHashCode();
                if (this.HMDAProfileIncomeValue != null)
                    hashCode = hashCode * 59 + this.HMDAProfileIncomeValue.GetHashCode();
                if (this.HMDAProfileApplicationDateValue != null)
                    hashCode = hashCode * 59 + this.HMDAProfileApplicationDateValue.GetHashCode();
                if (this.HMDALoanPurpose != null)
                    hashCode = hashCode * 59 + this.HMDALoanPurpose.GetHashCode();
                if (this.HmdaPropertyValueNotReliedUponIndicator != null)
                    hashCode = hashCode * 59 + this.HmdaPropertyValueNotReliedUponIndicator.GetHashCode();
                if (this.HmdaInterestOnlyIndicator != null)
                    hashCode = hashCode * 59 + this.HmdaInterestOnlyIndicator.GetHashCode();
                if (this.IncomeExcludedFromHmda != null)
                    hashCode = hashCode * 59 + this.IncomeExcludedFromHmda.GetHashCode();
                if (this.HMDACensusTrack != null)
                    hashCode = hashCode * 59 + this.HMDACensusTrack.GetHashCode();
                if (this.HMDACountyCode != null)
                    hashCode = hashCode * 59 + this.HMDACountyCode.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
