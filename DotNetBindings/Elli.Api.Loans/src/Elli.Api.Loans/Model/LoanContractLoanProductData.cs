/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractLoanProductData
    /// </summary>
    [DataContract]
    public partial class LoanContractLoanProductData :  IEquatable<LoanContractLoanProductData>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets AnnualFeeNeededAmount
        /// </summary>
        [DataMember(Name="annualFeeNeededAmount", EmitDefaultValue=false)]
        public double? AnnualFeeNeededAmount { get; set; }

        /// <summary>
        /// Gets or Sets ApplyLifeCapLowIndicator
        /// </summary>
        [DataMember(Name="applyLifeCapLowIndicator", EmitDefaultValue=false)]
        public bool? ApplyLifeCapLowIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ArmDisclosureType
        /// </summary>
        [DataMember(Name="armDisclosureType", EmitDefaultValue=false)]
        public string ArmDisclosureType { get; set; }

        /// <summary>
        /// Gets or Sets ArmIndexType
        /// </summary>
        [DataMember(Name="armIndexType", EmitDefaultValue=false)]
        public string ArmIndexType { get; set; }

        /// <summary>
        /// Gets or Sets BalloonIndicator
        /// </summary>
        [DataMember(Name="balloonIndicator", EmitDefaultValue=false)]
        public bool? BalloonIndicator { get; set; }

        /// <summary>
        /// Gets or Sets BalloonLoanMaturityTermMonthsCount
        /// </summary>
        [DataMember(Name="balloonLoanMaturityTermMonthsCount", EmitDefaultValue=false)]
        public int? BalloonLoanMaturityTermMonthsCount { get; set; }

        /// <summary>
        /// Gets or Sets BranchLocationNmlsId
        /// </summary>
        [DataMember(Name="branchLocationNmlsId", EmitDefaultValue=false)]
        public string BranchLocationNmlsId { get; set; }

        /// <summary>
        /// Gets or Sets BranchManagerNmlsId
        /// </summary>
        [DataMember(Name="branchManagerNmlsId", EmitDefaultValue=false)]
        public string BranchManagerNmlsId { get; set; }

        /// <summary>
        /// Gets or Sets Buydowns
        /// </summary>
        [DataMember(Name="buydowns", EmitDefaultValue=false)]
        public List<LoanContractLoanProductDataBuydowns> Buydowns { get; set; }

        /// <summary>
        /// Gets or Sets ConvertibleIndicator
        /// </summary>
        [DataMember(Name="convertibleIndicator", EmitDefaultValue=false)]
        public bool? ConvertibleIndicator { get; set; }

        /// <summary>
        /// Gets or Sets Discounted
        /// </summary>
        [DataMember(Name="discounted", EmitDefaultValue=false)]
        public string Discounted { get; set; }

        /// <summary>
        /// Gets or Sets DiscountedRate
        /// </summary>
        [DataMember(Name="discountedRate", EmitDefaultValue=false)]
        public double? DiscountedRate { get; set; }

        /// <summary>
        /// Gets or Sets DrawPeriodMonthsCount
        /// </summary>
        [DataMember(Name="drawPeriodMonthsCount", EmitDefaultValue=false)]
        public int? DrawPeriodMonthsCount { get; set; }

        /// <summary>
        /// Gets or Sets EscrowWaiverIndicator
        /// </summary>
        [DataMember(Name="escrowWaiverIndicator", EmitDefaultValue=false)]
        public bool? EscrowWaiverIndicator { get; set; }

        /// <summary>
        /// Gets or Sets FloorBasis
        /// </summary>
        [DataMember(Name="floorBasis", EmitDefaultValue=false)]
        public string FloorBasis { get; set; }

        /// <summary>
        /// Gets or Sets FloorPercent
        /// </summary>
        [DataMember(Name="floorPercent", EmitDefaultValue=false)]
        public double? FloorPercent { get; set; }

        /// <summary>
        /// Gets or Sets FloorPercentUI
        /// </summary>
        [DataMember(Name="floorPercentUI", EmitDefaultValue=false)]
        public string FloorPercentUI { get; set; }

        /// <summary>
        /// Gets or Sets FloorVerbiage
        /// </summary>
        [DataMember(Name="floorVerbiage", EmitDefaultValue=false)]
        public string FloorVerbiage { get; set; }

        /// <summary>
        /// Gets or Sets FnmProductPlanIdentifier
        /// </summary>
        [DataMember(Name="fnmProductPlanIdentifier", EmitDefaultValue=false)]
        public string FnmProductPlanIdentifier { get; set; }

        /// <summary>
        /// Gets or Sets FreddieMacArmIndexType
        /// </summary>
        [DataMember(Name="freddieMacArmIndexType", EmitDefaultValue=false)]
        public string FreddieMacArmIndexType { get; set; }

        /// <summary>
        /// Gets or Sets FreOfferingIdentifier
        /// </summary>
        [DataMember(Name="freOfferingIdentifier", EmitDefaultValue=false)]
        public string FreOfferingIdentifier { get; set; }

        /// <summary>
        /// Gets or Sets FullPrepaymentPenaltyOptionType
        /// </summary>
        [DataMember(Name="fullPrepaymentPenaltyOptionType", EmitDefaultValue=false)]
        public string FullPrepaymentPenaltyOptionType { get; set; }

        /// <summary>
        /// Gets or Sets GseProjectClassificationType
        /// </summary>
        [DataMember(Name="gseProjectClassificationType", EmitDefaultValue=false)]
        public string GseProjectClassificationType { get; set; }

        /// <summary>
        /// Gets or Sets GsePropertyType
        /// </summary>
        [DataMember(Name="gsePropertyType", EmitDefaultValue=false)]
        public string GsePropertyType { get; set; }

        /// <summary>
        /// Gets or Sets HardPrepaymentPenaltyMonths
        /// </summary>
        [DataMember(Name="hardPrepaymentPenaltyMonths", EmitDefaultValue=false)]
        public int? HardPrepaymentPenaltyMonths { get; set; }

        /// <summary>
        /// Gets or Sets HelocPeriodTemplateName
        /// </summary>
        [DataMember(Name="helocPeriodTemplateName", EmitDefaultValue=false)]
        public string HelocPeriodTemplateName { get; set; }

        /// <summary>
        /// Gets or Sets HelocRepaymentDrawPeriods
        /// </summary>
        [DataMember(Name="helocRepaymentDrawPeriods", EmitDefaultValue=false)]
        public List<LoanContractLoanProductDataHelocRepaymentDrawPeriods> HelocRepaymentDrawPeriods { get; set; }

        /// <summary>
        /// Gets or Sets IndexCurrentValuePercent
        /// </summary>
        [DataMember(Name="indexCurrentValuePercent", EmitDefaultValue=false)]
        public double? IndexCurrentValuePercent { get; set; }

        /// <summary>
        /// Gets or Sets IndexLookbackPeriod
        /// </summary>
        [DataMember(Name="indexLookbackPeriod", EmitDefaultValue=false)]
        public string IndexLookbackPeriod { get; set; }

        /// <summary>
        /// Gets or Sets IndexMarginPercent
        /// </summary>
        [DataMember(Name="indexMarginPercent", EmitDefaultValue=false)]
        public double? IndexMarginPercent { get; set; }

        /// <summary>
        /// Gets or Sets IndexMarginPercentUI
        /// </summary>
        [DataMember(Name="indexMarginPercentUI", EmitDefaultValue=false)]
        public string IndexMarginPercentUI { get; set; }

        /// <summary>
        /// Gets or Sets InitialAdvanceAmount
        /// </summary>
        [DataMember(Name="initialAdvanceAmount", EmitDefaultValue=false)]
        public double? InitialAdvanceAmount { get; set; }

        /// <summary>
        /// Gets or Sets LienPriorityType
        /// </summary>
        [DataMember(Name="lienPriorityType", EmitDefaultValue=false)]
        public string LienPriorityType { get; set; }

        /// <summary>
        /// Gets or Sets LoanDocumentationType
        /// </summary>
        [DataMember(Name="loanDocumentationType", EmitDefaultValue=false)]
        public string LoanDocumentationType { get; set; }

        /// <summary>
        /// Gets or Sets LoanRepaymentType
        /// </summary>
        [DataMember(Name="loanRepaymentType", EmitDefaultValue=false)]
        public string LoanRepaymentType { get; set; }

        /// <summary>
        /// Gets or Sets LoanScheduledClosingDate
        /// </summary>
        [DataMember(Name="loanScheduledClosingDate", EmitDefaultValue=false)]
        public DateTime? LoanScheduledClosingDate { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerEstimatedClosingDate
        /// </summary>
        [DataMember(Name="borrowerEstimatedClosingDate", EmitDefaultValue=false)]
        public DateTime? BorrowerEstimatedClosingDate { get; set; }

        /// <summary>
        /// Gets or Sets MaximumMonthlyPayment
        /// </summary>
        [DataMember(Name="maximumMonthlyPayment", EmitDefaultValue=false)]
        public double? MaximumMonthlyPayment { get; set; }

        /// <summary>
        /// Gets or Sets MaxLifeInterestCapPercent
        /// </summary>
        [DataMember(Name="maxLifeInterestCapPercent", EmitDefaultValue=false)]
        public double? MaxLifeInterestCapPercent { get; set; }

        /// <summary>
        /// Gets or Sets MaxLifeInterestCapPercentUI
        /// </summary>
        [DataMember(Name="maxLifeInterestCapPercentUI", EmitDefaultValue=false)]
        public string MaxLifeInterestCapPercentUI { get; set; }

        /// <summary>
        /// Gets or Sets MiCoveragePercent
        /// </summary>
        [DataMember(Name="miCoveragePercent", EmitDefaultValue=false)]
        public double? MiCoveragePercent { get; set; }

        /// <summary>
        /// Gets or Sets MinimumAdvanceAmount
        /// </summary>
        [DataMember(Name="minimumAdvanceAmount", EmitDefaultValue=false)]
        public double? MinimumAdvanceAmount { get; set; }

        /// <summary>
        /// Gets or Sets MinimumAllowableApr
        /// </summary>
        [DataMember(Name="minimumAllowableApr", EmitDefaultValue=false)]
        public double? MinimumAllowableApr { get; set; }

        /// <summary>
        /// Gets or Sets MinimumDrawPeroidPaymentPercent
        /// </summary>
        [DataMember(Name="minimumDrawPeroidPaymentPercent", EmitDefaultValue=false)]
        public double? MinimumDrawPeroidPaymentPercent { get; set; }

        /// <summary>
        /// Gets or Sets MinimumPaymentAmount
        /// </summary>
        [DataMember(Name="minimumPaymentAmount", EmitDefaultValue=false)]
        public double? MinimumPaymentAmount { get; set; }

        /// <summary>
        /// Gets or Sets MinimumPaymentLessThanAmount
        /// </summary>
        [DataMember(Name="minimumPaymentLessThanAmount", EmitDefaultValue=false)]
        public double? MinimumPaymentLessThanAmount { get; set; }

        /// <summary>
        /// Gets or Sets MinimumPaymentPercent
        /// </summary>
        [DataMember(Name="minimumPaymentPercent", EmitDefaultValue=false)]
        public double? MinimumPaymentPercent { get; set; }

        /// <summary>
        /// Gets or Sets MinimumPaymentUpbAmount
        /// </summary>
        [DataMember(Name="minimumPaymentUpbAmount", EmitDefaultValue=false)]
        public double? MinimumPaymentUpbAmount { get; set; }

        /// <summary>
        /// Gets or Sets MinimumPaymentUpbPercent
        /// </summary>
        [DataMember(Name="minimumPaymentUpbPercent", EmitDefaultValue=false)]
        public double? MinimumPaymentUpbPercent { get; set; }

        /// <summary>
        /// Gets or Sets MinimumRepayPeriodPaymentPercent
        /// </summary>
        [DataMember(Name="minimumRepayPeriodPaymentPercent", EmitDefaultValue=false)]
        public double? MinimumRepayPeriodPaymentPercent { get; set; }

        /// <summary>
        /// Gets or Sets MonthsAppliedToPrepaymentPenaltyFeeCount
        /// </summary>
        [DataMember(Name="monthsAppliedToPrepaymentPenaltyFeeCount", EmitDefaultValue=false)]
        public int? MonthsAppliedToPrepaymentPenaltyFeeCount { get; set; }

        /// <summary>
        /// Gets or Sets NegativeAmortizationLimitPercent
        /// </summary>
        [DataMember(Name="negativeAmortizationLimitPercent", EmitDefaultValue=false)]
        public double? NegativeAmortizationLimitPercent { get; set; }

        /// <summary>
        /// Gets or Sets NmlsDocumentationType
        /// </summary>
        [DataMember(Name="nmlsDocumentationType", EmitDefaultValue=false)]
        public string NmlsDocumentationType { get; set; }

        /// <summary>
        /// Gets or Sets NmlsFirstMortgageType
        /// </summary>
        [DataMember(Name="nmlsFirstMortgageType", EmitDefaultValue=false)]
        public string NmlsFirstMortgageType { get; set; }

        /// <summary>
        /// Gets or Sets NmlsLoanType
        /// </summary>
        [DataMember(Name="nmlsLoanType", EmitDefaultValue=false)]
        public string NmlsLoanType { get; set; }

        /// <summary>
        /// Gets or Sets NmlsOptionARMIndicator
        /// </summary>
        [DataMember(Name="nmlsOptionARMIndicator", EmitDefaultValue=false)]
        public bool? NmlsOptionARMIndicator { get; set; }

        /// <summary>
        /// Gets or Sets NmlsPiggyBackOrFundedHELOCIndicator
        /// </summary>
        [DataMember(Name="nmlsPiggyBackOrFundedHELOCIndicator", EmitDefaultValue=false)]
        public bool? NmlsPiggyBackOrFundedHELOCIndicator { get; set; }

        /// <summary>
        /// Gets or Sets NmlsProductionSoldToType
        /// </summary>
        [DataMember(Name="nmlsProductionSoldToType", EmitDefaultValue=false)]
        public string NmlsProductionSoldToType { get; set; }

        /// <summary>
        /// Gets or Sets NmlsRefinancePurposeType
        /// </summary>
        [DataMember(Name="nmlsRefinancePurposeType", EmitDefaultValue=false)]
        public string NmlsRefinancePurposeType { get; set; }

        /// <summary>
        /// Gets or Sets NmlsReverseMortgageType
        /// </summary>
        [DataMember(Name="nmlsReverseMortgageType", EmitDefaultValue=false)]
        public string NmlsReverseMortgageType { get; set; }

        /// <summary>
        /// Gets or Sets InitialApplicationAmount
        /// </summary>
        [DataMember(Name="initialApplicationAmount", EmitDefaultValue=false)]
        public double? InitialApplicationAmount { get; set; }

        /// <summary>
        /// Gets or Sets NetInitialAndFinal
        /// </summary>
        [DataMember(Name="netInitialAndFinal", EmitDefaultValue=false)]
        public double? NetInitialAndFinal { get; set; }

        /// <summary>
        /// Gets or Sets InquiryOrPreQualificationIndicator
        /// </summary>
        [DataMember(Name="inquiryOrPreQualificationIndicator", EmitDefaultValue=false)]
        public bool? InquiryOrPreQualificationIndicator { get; set; }

        /// <summary>
        /// Gets or Sets OralRequestForExtensionOfCreditIndicator
        /// </summary>
        [DataMember(Name="oralRequestForExtensionOfCreditIndicator", EmitDefaultValue=false)]
        public bool? OralRequestForExtensionOfCreditIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ExcludeLoanFromNMLSReportIndicator
        /// </summary>
        [DataMember(Name="excludeLoanFromNMLSReportIndicator", EmitDefaultValue=false)]
        public bool? ExcludeLoanFromNMLSReportIndicator { get; set; }

        /// <summary>
        /// Gets or Sets OverLimitCharge
        /// </summary>
        [DataMember(Name="overLimitCharge", EmitDefaultValue=false)]
        public double? OverLimitCharge { get; set; }

        /// <summary>
        /// Gets or Sets OverLimitReturnCharge
        /// </summary>
        [DataMember(Name="overLimitReturnCharge", EmitDefaultValue=false)]
        public double? OverLimitReturnCharge { get; set; }

        /// <summary>
        /// Gets or Sets PaymentAdjustmentDurationMonthsCount
        /// </summary>
        [DataMember(Name="paymentAdjustmentDurationMonthsCount", EmitDefaultValue=false)]
        public int? PaymentAdjustmentDurationMonthsCount { get; set; }

        /// <summary>
        /// Gets or Sets PaymentAdjustmentPeriodicCapPercent
        /// </summary>
        [DataMember(Name="paymentAdjustmentPeriodicCapPercent", EmitDefaultValue=false)]
        public double? PaymentAdjustmentPeriodicCapPercent { get; set; }

        /// <summary>
        /// Gets or Sets PaymentFrequencyType
        /// </summary>
        [DataMember(Name="paymentFrequencyType", EmitDefaultValue=false)]
        public string PaymentFrequencyType { get; set; }

        /// <summary>
        /// Gets or Sets PrepaymentPenalties
        /// </summary>
        [DataMember(Name="prepaymentPenalties", EmitDefaultValue=false)]
        public List<LoanContractLoanProductDataPrepaymentPenalties> PrepaymentPenalties { get; set; }

        /// <summary>
        /// Gets or Sets PrepaymentPenaltyBasedOn
        /// </summary>
        [DataMember(Name="prepaymentPenaltyBasedOn", EmitDefaultValue=false)]
        public string PrepaymentPenaltyBasedOn { get; set; }

        /// <summary>
        /// Gets or Sets PrepaymentPenaltyIndicator
        /// </summary>
        [DataMember(Name="prepaymentPenaltyIndicator", EmitDefaultValue=false)]
        public bool? PrepaymentPenaltyIndicator { get; set; }

        /// <summary>
        /// Gets or Sets PrepaymentPenaltyPercent
        /// </summary>
        [DataMember(Name="prepaymentPenaltyPercent", EmitDefaultValue=false)]
        public double? PrepaymentPenaltyPercent { get; set; }

        /// <summary>
        /// Gets or Sets PrepaymentPenaltyTermMonthsCount
        /// </summary>
        [DataMember(Name="prepaymentPenaltyTermMonthsCount", EmitDefaultValue=false)]
        public int? PrepaymentPenaltyTermMonthsCount { get; set; }

        /// <summary>
        /// Gets or Sets PrepaymentPenaltyVerbiage
        /// </summary>
        [DataMember(Name="prepaymentPenaltyVerbiage", EmitDefaultValue=false)]
        public string PrepaymentPenaltyVerbiage { get; set; }

        /// <summary>
        /// Gets or Sets ProductName
        /// </summary>
        [DataMember(Name="productName", EmitDefaultValue=false)]
        public string ProductName { get; set; }

        /// <summary>
        /// Gets or Sets QualifyingRatePercent
        /// </summary>
        [DataMember(Name="qualifyingRatePercent", EmitDefaultValue=false)]
        public double? QualifyingRatePercent { get; set; }

        /// <summary>
        /// Gets or Sets RateAdjustmentDurationMonthsCount
        /// </summary>
        [DataMember(Name="rateAdjustmentDurationMonthsCount", EmitDefaultValue=false)]
        public int? RateAdjustmentDurationMonthsCount { get; set; }

        /// <summary>
        /// Gets or Sets RateAdjustmentLifetimeCapPercent
        /// </summary>
        [DataMember(Name="rateAdjustmentLifetimeCapPercent", EmitDefaultValue=false)]
        public double? RateAdjustmentLifetimeCapPercent { get; set; }

        /// <summary>
        /// Gets or Sets RateAdjustmentPercent
        /// </summary>
        [DataMember(Name="rateAdjustmentPercent", EmitDefaultValue=false)]
        public double? RateAdjustmentPercent { get; set; }

        /// <summary>
        /// Gets or Sets RateAdjustmentPercentUI
        /// </summary>
        [DataMember(Name="rateAdjustmentPercentUI", EmitDefaultValue=false)]
        public string RateAdjustmentPercentUI { get; set; }

        /// <summary>
        /// Gets or Sets RateAdjustmentSubsequentCapPercent
        /// </summary>
        [DataMember(Name="rateAdjustmentSubsequentCapPercent", EmitDefaultValue=false)]
        public double? RateAdjustmentSubsequentCapPercent { get; set; }

        /// <summary>
        /// Gets or Sets RateAdjustmentSubsequentCapPercentUI
        /// </summary>
        [DataMember(Name="rateAdjustmentSubsequentCapPercentUI", EmitDefaultValue=false)]
        public string RateAdjustmentSubsequentCapPercentUI { get; set; }

        /// <summary>
        /// Gets or Sets ReleaseRecoringCharge
        /// </summary>
        [DataMember(Name="releaseRecoringCharge", EmitDefaultValue=false)]
        public double? ReleaseRecoringCharge { get; set; }

        /// <summary>
        /// Gets or Sets RemainingBuydownAmount
        /// </summary>
        [DataMember(Name="remainingBuydownAmount", EmitDefaultValue=false)]
        public double? RemainingBuydownAmount { get; set; }

        /// <summary>
        /// Gets or Sets RepayPeriodMonthsCount
        /// </summary>
        [DataMember(Name="repayPeriodMonthsCount", EmitDefaultValue=false)]
        public int? RepayPeriodMonthsCount { get; set; }

        /// <summary>
        /// Gets or Sets ReturnedCheckCharge
        /// </summary>
        [DataMember(Name="returnedCheckCharge", EmitDefaultValue=false)]
        public double? ReturnedCheckCharge { get; set; }

        /// <summary>
        /// Gets or Sets ReturnedCheckChargeRatePercent
        /// </summary>
        [DataMember(Name="returnedCheckChargeRatePercent", EmitDefaultValue=false)]
        public double? ReturnedCheckChargeRatePercent { get; set; }

        /// <summary>
        /// Gets or Sets ReturnedCheckMaxCharge
        /// </summary>
        [DataMember(Name="returnedCheckMaxCharge", EmitDefaultValue=false)]
        public double? ReturnedCheckMaxCharge { get; set; }

        /// <summary>
        /// Gets or Sets ReturnedCheckMinCharge
        /// </summary>
        [DataMember(Name="returnedCheckMinCharge", EmitDefaultValue=false)]
        public double? ReturnedCheckMinCharge { get; set; }

        /// <summary>
        /// Gets or Sets RoundPercent
        /// </summary>
        [DataMember(Name="roundPercent", EmitDefaultValue=false)]
        public double? RoundPercent { get; set; }

        /// <summary>
        /// Gets or Sets RoundType
        /// </summary>
        [DataMember(Name="roundType", EmitDefaultValue=false)]
        public string RoundType { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledFirstPaymentAdjustmentDate
        /// </summary>
        [DataMember(Name="scheduledFirstPaymentAdjustmentDate", EmitDefaultValue=false)]
        public DateTime? ScheduledFirstPaymentAdjustmentDate { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledFirstPaymentDate
        /// </summary>
        [DataMember(Name="scheduledFirstPaymentDate", EmitDefaultValue=false)]
        public DateTime? ScheduledFirstPaymentDate { get; set; }

        /// <summary>
        /// Gets or Sets StopPaymentCharge
        /// </summary>
        [DataMember(Name="stopPaymentCharge", EmitDefaultValue=false)]
        public double? StopPaymentCharge { get; set; }

        /// <summary>
        /// Gets or Sets SubsequentRateAdjustmentMonthsCount
        /// </summary>
        [DataMember(Name="subsequentRateAdjustmentMonthsCount", EmitDefaultValue=false)]
        public int? SubsequentRateAdjustmentMonthsCount { get; set; }

        /// <summary>
        /// Gets or Sets TerminationFeeAmount
        /// </summary>
        [DataMember(Name="terminationFeeAmount", EmitDefaultValue=false)]
        public double? TerminationFeeAmount { get; set; }

        /// <summary>
        /// Gets or Sets TerminationPeriodMonthsCount
        /// </summary>
        [DataMember(Name="terminationPeriodMonthsCount", EmitDefaultValue=false)]
        public int? TerminationPeriodMonthsCount { get; set; }

        /// <summary>
        /// Gets or Sets ThirdPartyFeeFromAmount
        /// </summary>
        [DataMember(Name="thirdPartyFeeFromAmount", EmitDefaultValue=false)]
        public double? ThirdPartyFeeFromAmount { get; set; }

        /// <summary>
        /// Gets or Sets ThirdPartyFeeToAmount
        /// </summary>
        [DataMember(Name="thirdPartyFeeToAmount", EmitDefaultValue=false)]
        public double? ThirdPartyFeeToAmount { get; set; }

        /// <summary>
        /// Gets or Sets TimelyPaymentRateReductionPercent
        /// </summary>
        [DataMember(Name="timelyPaymentRateReductionPercent", EmitDefaultValue=false)]
        public double? TimelyPaymentRateReductionPercent { get; set; }

        /// <summary>
        /// Gets or Sets TimelyPaymentRewards
        /// </summary>
        [DataMember(Name="timelyPaymentRewards", EmitDefaultValue=false)]
        public string TimelyPaymentRewards { get; set; }

        /// <summary>
        /// Gets or Sets TotalSubsidyAmount
        /// </summary>
        [DataMember(Name="totalSubsidyAmount", EmitDefaultValue=false)]
        public double? TotalSubsidyAmount { get; set; }

        /// <summary>
        /// Gets or Sets WireFee
        /// </summary>
        [DataMember(Name="wireFee", EmitDefaultValue=false)]
        public double? WireFee { get; set; }

        /// <summary>
        /// Gets or Sets ParticipationFees
        /// </summary>
        [DataMember(Name="participationFees", EmitDefaultValue=false)]
        public double? ParticipationFees { get; set; }

        /// <summary>
        /// Gets or Sets TransactionFees
        /// </summary>
        [DataMember(Name="transactionFees", EmitDefaultValue=false)]
        public double? TransactionFees { get; set; }

        /// <summary>
        /// Gets or Sets NmlsPropertyType
        /// </summary>
        [DataMember(Name="nmlsPropertyType", EmitDefaultValue=false)]
        public string NmlsPropertyType { get; set; }

        /// <summary>
        /// Gets or Sets NmlsLienStatus
        /// </summary>
        [DataMember(Name="nmlsLienStatus", EmitDefaultValue=false)]
        public string NmlsLienStatus { get; set; }

        /// <summary>
        /// Gets or Sets HelocPaymentBasis
        /// </summary>
        [DataMember(Name="helocPaymentBasis", EmitDefaultValue=false)]
        public string HelocPaymentBasis { get; set; }

        /// <summary>
        /// Gets or Sets HelocRate
        /// </summary>
        [DataMember(Name="helocRate", EmitDefaultValue=false)]
        public string HelocRate { get; set; }

        /// <summary>
        /// Gets or Sets HelocCalcSign
        /// </summary>
        [DataMember(Name="helocCalcSign", EmitDefaultValue=false)]
        public string HelocCalcSign { get; set; }

        /// <summary>
        /// Gets or Sets HelocPercent
        /// </summary>
        [DataMember(Name="helocPercent", EmitDefaultValue=false)]
        public double? HelocPercent { get; set; }

        /// <summary>
        /// Gets or Sets HelocInterestOnly
        /// </summary>
        [DataMember(Name="helocInterestOnly", EmitDefaultValue=false)]
        public bool? HelocInterestOnly { get; set; }

        /// <summary>
        /// Gets or Sets HelocFractionBalancedividend
        /// </summary>
        [DataMember(Name="helocFractionBalancedividend", EmitDefaultValue=false)]
        public int? HelocFractionBalancedividend { get; set; }

        /// <summary>
        /// Gets or Sets HelocFractionBalancedivisor
        /// </summary>
        [DataMember(Name="helocFractionBalancedivisor", EmitDefaultValue=false)]
        public int? HelocFractionBalancedivisor { get; set; }

        /// <summary>
        /// Gets or Sets HelocPercentageofBalance
        /// </summary>
        [DataMember(Name="helocPercentageofBalance", EmitDefaultValue=false)]
        public double? HelocPercentageofBalance { get; set; }

        /// <summary>
        /// Gets or Sets HelocForceMinimumPayment
        /// </summary>
        [DataMember(Name="helocForceMinimumPayment", EmitDefaultValue=false)]
        public bool? HelocForceMinimumPayment { get; set; }

        /// <summary>
        /// Gets or Sets HelocQualifyingBalance
        /// </summary>
        [DataMember(Name="helocQualifyingBalance", EmitDefaultValue=false)]
        public string HelocQualifyingBalance { get; set; }

        /// <summary>
        /// Gets or Sets HelocQualifyingTerm
        /// </summary>
        [DataMember(Name="helocQualifyingTerm", EmitDefaultValue=false)]
        public int? HelocQualifyingTerm { get; set; }

        /// <summary>
        /// Gets or Sets HelocInitialPaymentBasis
        /// </summary>
        [DataMember(Name="helocInitialPaymentBasis", EmitDefaultValue=false)]
        public string HelocInitialPaymentBasis { get; set; }

        /// <summary>
        /// Gets or Sets HelocInitialRate
        /// </summary>
        [DataMember(Name="helocInitialRate", EmitDefaultValue=false)]
        public string HelocInitialRate { get; set; }

        /// <summary>
        /// Gets or Sets HelocInitialCalcSign
        /// </summary>
        [DataMember(Name="helocInitialCalcSign", EmitDefaultValue=false)]
        public string HelocInitialCalcSign { get; set; }

        /// <summary>
        /// Gets or Sets HelocInitialPercent
        /// </summary>
        [DataMember(Name="helocInitialPercent", EmitDefaultValue=false)]
        public double? HelocInitialPercent { get; set; }

        /// <summary>
        /// Gets or Sets HelocInitialPI
        /// </summary>
        [DataMember(Name="helocInitialPI", EmitDefaultValue=false)]
        public bool? HelocInitialPI { get; set; }

        /// <summary>
        /// Gets or Sets HelocInitialFractionBalancedividend
        /// </summary>
        [DataMember(Name="helocInitialFractionBalancedividend", EmitDefaultValue=false)]
        public int? HelocInitialFractionBalancedividend { get; set; }

        /// <summary>
        /// Gets or Sets HelocInitialFractionBalancedivisor
        /// </summary>
        [DataMember(Name="helocInitialFractionBalancedivisor", EmitDefaultValue=false)]
        public int? HelocInitialFractionBalancedivisor { get; set; }

        /// <summary>
        /// Gets or Sets HelocInitialPercentageofBalance
        /// </summary>
        [DataMember(Name="helocInitialPercentageofBalance", EmitDefaultValue=false)]
        public double? HelocInitialPercentageofBalance { get; set; }

        /// <summary>
        /// Gets or Sets HelocInitialForceMinimumPayment
        /// </summary>
        [DataMember(Name="helocInitialForceMinimumPayment", EmitDefaultValue=false)]
        public bool? HelocInitialForceMinimumPayment { get; set; }

        /// <summary>
        /// Gets or Sets HelocInitialBalanceUsed
        /// </summary>
        [DataMember(Name="helocInitialBalanceUsed", EmitDefaultValue=false)]
        public string HelocInitialBalanceUsed { get; set; }

        /// <summary>
        /// Gets or Sets HelocInitialTerm
        /// </summary>
        [DataMember(Name="helocInitialTerm", EmitDefaultValue=false)]
        public int? HelocInitialTerm { get; set; }

        /// <summary>
        /// Gets or Sets HelocInitPerDiemCalculationMethodType
        /// </summary>
        [DataMember(Name="helocInitPerDiemCalculationMethodType", EmitDefaultValue=false)]
        public string HelocInitPerDiemCalculationMethodType { get; set; }

        /// <summary>
        /// Gets or Sets HelocNewFinancingNotLinkedDrawAmount
        /// </summary>
        [DataMember(Name="helocNewFinancingNotLinkedDrawAmount", EmitDefaultValue=false)]
        public double? HelocNewFinancingNotLinkedDrawAmount { get; set; }

        /// <summary>
        /// Gets or Sets HelocNewFinancingNotLinkedCreditLimit
        /// </summary>
        [DataMember(Name="helocNewFinancingNotLinkedCreditLimit", EmitDefaultValue=false)]
        public double? HelocNewFinancingNotLinkedCreditLimit { get; set; }

        /// <summary>
        /// Gets or Sets AmountApplyToDownPayment
        /// </summary>
        [DataMember(Name="amountApplyToDownPayment", EmitDefaultValue=false)]
        public double? AmountApplyToDownPayment { get; set; }

        /// <summary>
        /// Gets or Sets HELOCLienPosition
        /// </summary>
        [DataMember(Name="hELOCLienPosition", EmitDefaultValue=false)]
        public string HELOCLienPosition { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractLoanProductData {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AnnualFeeNeededAmount: ").Append(AnnualFeeNeededAmount).Append("\n");
            sb.Append("  ApplyLifeCapLowIndicator: ").Append(ApplyLifeCapLowIndicator).Append("\n");
            sb.Append("  ArmDisclosureType: ").Append(ArmDisclosureType).Append("\n");
            sb.Append("  ArmIndexType: ").Append(ArmIndexType).Append("\n");
            sb.Append("  BalloonIndicator: ").Append(BalloonIndicator).Append("\n");
            sb.Append("  BalloonLoanMaturityTermMonthsCount: ").Append(BalloonLoanMaturityTermMonthsCount).Append("\n");
            sb.Append("  BranchLocationNmlsId: ").Append(BranchLocationNmlsId).Append("\n");
            sb.Append("  BranchManagerNmlsId: ").Append(BranchManagerNmlsId).Append("\n");
            sb.Append("  Buydowns: ").Append(Buydowns).Append("\n");
            sb.Append("  ConvertibleIndicator: ").Append(ConvertibleIndicator).Append("\n");
            sb.Append("  Discounted: ").Append(Discounted).Append("\n");
            sb.Append("  DiscountedRate: ").Append(DiscountedRate).Append("\n");
            sb.Append("  DrawPeriodMonthsCount: ").Append(DrawPeriodMonthsCount).Append("\n");
            sb.Append("  EscrowWaiverIndicator: ").Append(EscrowWaiverIndicator).Append("\n");
            sb.Append("  FloorBasis: ").Append(FloorBasis).Append("\n");
            sb.Append("  FloorPercent: ").Append(FloorPercent).Append("\n");
            sb.Append("  FloorPercentUI: ").Append(FloorPercentUI).Append("\n");
            sb.Append("  FloorVerbiage: ").Append(FloorVerbiage).Append("\n");
            sb.Append("  FnmProductPlanIdentifier: ").Append(FnmProductPlanIdentifier).Append("\n");
            sb.Append("  FreddieMacArmIndexType: ").Append(FreddieMacArmIndexType).Append("\n");
            sb.Append("  FreOfferingIdentifier: ").Append(FreOfferingIdentifier).Append("\n");
            sb.Append("  FullPrepaymentPenaltyOptionType: ").Append(FullPrepaymentPenaltyOptionType).Append("\n");
            sb.Append("  GseProjectClassificationType: ").Append(GseProjectClassificationType).Append("\n");
            sb.Append("  GsePropertyType: ").Append(GsePropertyType).Append("\n");
            sb.Append("  HardPrepaymentPenaltyMonths: ").Append(HardPrepaymentPenaltyMonths).Append("\n");
            sb.Append("  HelocPeriodTemplateName: ").Append(HelocPeriodTemplateName).Append("\n");
            sb.Append("  HelocRepaymentDrawPeriods: ").Append(HelocRepaymentDrawPeriods).Append("\n");
            sb.Append("  IndexCurrentValuePercent: ").Append(IndexCurrentValuePercent).Append("\n");
            sb.Append("  IndexLookbackPeriod: ").Append(IndexLookbackPeriod).Append("\n");
            sb.Append("  IndexMarginPercent: ").Append(IndexMarginPercent).Append("\n");
            sb.Append("  IndexMarginPercentUI: ").Append(IndexMarginPercentUI).Append("\n");
            sb.Append("  InitialAdvanceAmount: ").Append(InitialAdvanceAmount).Append("\n");
            sb.Append("  LienPriorityType: ").Append(LienPriorityType).Append("\n");
            sb.Append("  LoanDocumentationType: ").Append(LoanDocumentationType).Append("\n");
            sb.Append("  LoanRepaymentType: ").Append(LoanRepaymentType).Append("\n");
            sb.Append("  LoanScheduledClosingDate: ").Append(LoanScheduledClosingDate).Append("\n");
            sb.Append("  BorrowerEstimatedClosingDate: ").Append(BorrowerEstimatedClosingDate).Append("\n");
            sb.Append("  MaximumMonthlyPayment: ").Append(MaximumMonthlyPayment).Append("\n");
            sb.Append("  MaxLifeInterestCapPercent: ").Append(MaxLifeInterestCapPercent).Append("\n");
            sb.Append("  MaxLifeInterestCapPercentUI: ").Append(MaxLifeInterestCapPercentUI).Append("\n");
            sb.Append("  MiCoveragePercent: ").Append(MiCoveragePercent).Append("\n");
            sb.Append("  MinimumAdvanceAmount: ").Append(MinimumAdvanceAmount).Append("\n");
            sb.Append("  MinimumAllowableApr: ").Append(MinimumAllowableApr).Append("\n");
            sb.Append("  MinimumDrawPeroidPaymentPercent: ").Append(MinimumDrawPeroidPaymentPercent).Append("\n");
            sb.Append("  MinimumPaymentAmount: ").Append(MinimumPaymentAmount).Append("\n");
            sb.Append("  MinimumPaymentLessThanAmount: ").Append(MinimumPaymentLessThanAmount).Append("\n");
            sb.Append("  MinimumPaymentPercent: ").Append(MinimumPaymentPercent).Append("\n");
            sb.Append("  MinimumPaymentUpbAmount: ").Append(MinimumPaymentUpbAmount).Append("\n");
            sb.Append("  MinimumPaymentUpbPercent: ").Append(MinimumPaymentUpbPercent).Append("\n");
            sb.Append("  MinimumRepayPeriodPaymentPercent: ").Append(MinimumRepayPeriodPaymentPercent).Append("\n");
            sb.Append("  MonthsAppliedToPrepaymentPenaltyFeeCount: ").Append(MonthsAppliedToPrepaymentPenaltyFeeCount).Append("\n");
            sb.Append("  NegativeAmortizationLimitPercent: ").Append(NegativeAmortizationLimitPercent).Append("\n");
            sb.Append("  NmlsDocumentationType: ").Append(NmlsDocumentationType).Append("\n");
            sb.Append("  NmlsFirstMortgageType: ").Append(NmlsFirstMortgageType).Append("\n");
            sb.Append("  NmlsLoanType: ").Append(NmlsLoanType).Append("\n");
            sb.Append("  NmlsOptionARMIndicator: ").Append(NmlsOptionARMIndicator).Append("\n");
            sb.Append("  NmlsPiggyBackOrFundedHELOCIndicator: ").Append(NmlsPiggyBackOrFundedHELOCIndicator).Append("\n");
            sb.Append("  NmlsProductionSoldToType: ").Append(NmlsProductionSoldToType).Append("\n");
            sb.Append("  NmlsRefinancePurposeType: ").Append(NmlsRefinancePurposeType).Append("\n");
            sb.Append("  NmlsReverseMortgageType: ").Append(NmlsReverseMortgageType).Append("\n");
            sb.Append("  InitialApplicationAmount: ").Append(InitialApplicationAmount).Append("\n");
            sb.Append("  NetInitialAndFinal: ").Append(NetInitialAndFinal).Append("\n");
            sb.Append("  InquiryOrPreQualificationIndicator: ").Append(InquiryOrPreQualificationIndicator).Append("\n");
            sb.Append("  OralRequestForExtensionOfCreditIndicator: ").Append(OralRequestForExtensionOfCreditIndicator).Append("\n");
            sb.Append("  ExcludeLoanFromNMLSReportIndicator: ").Append(ExcludeLoanFromNMLSReportIndicator).Append("\n");
            sb.Append("  OverLimitCharge: ").Append(OverLimitCharge).Append("\n");
            sb.Append("  OverLimitReturnCharge: ").Append(OverLimitReturnCharge).Append("\n");
            sb.Append("  PaymentAdjustmentDurationMonthsCount: ").Append(PaymentAdjustmentDurationMonthsCount).Append("\n");
            sb.Append("  PaymentAdjustmentPeriodicCapPercent: ").Append(PaymentAdjustmentPeriodicCapPercent).Append("\n");
            sb.Append("  PaymentFrequencyType: ").Append(PaymentFrequencyType).Append("\n");
            sb.Append("  PrepaymentPenalties: ").Append(PrepaymentPenalties).Append("\n");
            sb.Append("  PrepaymentPenaltyBasedOn: ").Append(PrepaymentPenaltyBasedOn).Append("\n");
            sb.Append("  PrepaymentPenaltyIndicator: ").Append(PrepaymentPenaltyIndicator).Append("\n");
            sb.Append("  PrepaymentPenaltyPercent: ").Append(PrepaymentPenaltyPercent).Append("\n");
            sb.Append("  PrepaymentPenaltyTermMonthsCount: ").Append(PrepaymentPenaltyTermMonthsCount).Append("\n");
            sb.Append("  PrepaymentPenaltyVerbiage: ").Append(PrepaymentPenaltyVerbiage).Append("\n");
            sb.Append("  ProductName: ").Append(ProductName).Append("\n");
            sb.Append("  QualifyingRatePercent: ").Append(QualifyingRatePercent).Append("\n");
            sb.Append("  RateAdjustmentDurationMonthsCount: ").Append(RateAdjustmentDurationMonthsCount).Append("\n");
            sb.Append("  RateAdjustmentLifetimeCapPercent: ").Append(RateAdjustmentLifetimeCapPercent).Append("\n");
            sb.Append("  RateAdjustmentPercent: ").Append(RateAdjustmentPercent).Append("\n");
            sb.Append("  RateAdjustmentPercentUI: ").Append(RateAdjustmentPercentUI).Append("\n");
            sb.Append("  RateAdjustmentSubsequentCapPercent: ").Append(RateAdjustmentSubsequentCapPercent).Append("\n");
            sb.Append("  RateAdjustmentSubsequentCapPercentUI: ").Append(RateAdjustmentSubsequentCapPercentUI).Append("\n");
            sb.Append("  ReleaseRecoringCharge: ").Append(ReleaseRecoringCharge).Append("\n");
            sb.Append("  RemainingBuydownAmount: ").Append(RemainingBuydownAmount).Append("\n");
            sb.Append("  RepayPeriodMonthsCount: ").Append(RepayPeriodMonthsCount).Append("\n");
            sb.Append("  ReturnedCheckCharge: ").Append(ReturnedCheckCharge).Append("\n");
            sb.Append("  ReturnedCheckChargeRatePercent: ").Append(ReturnedCheckChargeRatePercent).Append("\n");
            sb.Append("  ReturnedCheckMaxCharge: ").Append(ReturnedCheckMaxCharge).Append("\n");
            sb.Append("  ReturnedCheckMinCharge: ").Append(ReturnedCheckMinCharge).Append("\n");
            sb.Append("  RoundPercent: ").Append(RoundPercent).Append("\n");
            sb.Append("  RoundType: ").Append(RoundType).Append("\n");
            sb.Append("  ScheduledFirstPaymentAdjustmentDate: ").Append(ScheduledFirstPaymentAdjustmentDate).Append("\n");
            sb.Append("  ScheduledFirstPaymentDate: ").Append(ScheduledFirstPaymentDate).Append("\n");
            sb.Append("  StopPaymentCharge: ").Append(StopPaymentCharge).Append("\n");
            sb.Append("  SubsequentRateAdjustmentMonthsCount: ").Append(SubsequentRateAdjustmentMonthsCount).Append("\n");
            sb.Append("  TerminationFeeAmount: ").Append(TerminationFeeAmount).Append("\n");
            sb.Append("  TerminationPeriodMonthsCount: ").Append(TerminationPeriodMonthsCount).Append("\n");
            sb.Append("  ThirdPartyFeeFromAmount: ").Append(ThirdPartyFeeFromAmount).Append("\n");
            sb.Append("  ThirdPartyFeeToAmount: ").Append(ThirdPartyFeeToAmount).Append("\n");
            sb.Append("  TimelyPaymentRateReductionPercent: ").Append(TimelyPaymentRateReductionPercent).Append("\n");
            sb.Append("  TimelyPaymentRewards: ").Append(TimelyPaymentRewards).Append("\n");
            sb.Append("  TotalSubsidyAmount: ").Append(TotalSubsidyAmount).Append("\n");
            sb.Append("  WireFee: ").Append(WireFee).Append("\n");
            sb.Append("  ParticipationFees: ").Append(ParticipationFees).Append("\n");
            sb.Append("  TransactionFees: ").Append(TransactionFees).Append("\n");
            sb.Append("  NmlsPropertyType: ").Append(NmlsPropertyType).Append("\n");
            sb.Append("  NmlsLienStatus: ").Append(NmlsLienStatus).Append("\n");
            sb.Append("  HelocPaymentBasis: ").Append(HelocPaymentBasis).Append("\n");
            sb.Append("  HelocRate: ").Append(HelocRate).Append("\n");
            sb.Append("  HelocCalcSign: ").Append(HelocCalcSign).Append("\n");
            sb.Append("  HelocPercent: ").Append(HelocPercent).Append("\n");
            sb.Append("  HelocInterestOnly: ").Append(HelocInterestOnly).Append("\n");
            sb.Append("  HelocFractionBalancedividend: ").Append(HelocFractionBalancedividend).Append("\n");
            sb.Append("  HelocFractionBalancedivisor: ").Append(HelocFractionBalancedivisor).Append("\n");
            sb.Append("  HelocPercentageofBalance: ").Append(HelocPercentageofBalance).Append("\n");
            sb.Append("  HelocForceMinimumPayment: ").Append(HelocForceMinimumPayment).Append("\n");
            sb.Append("  HelocQualifyingBalance: ").Append(HelocQualifyingBalance).Append("\n");
            sb.Append("  HelocQualifyingTerm: ").Append(HelocQualifyingTerm).Append("\n");
            sb.Append("  HelocInitialPaymentBasis: ").Append(HelocInitialPaymentBasis).Append("\n");
            sb.Append("  HelocInitialRate: ").Append(HelocInitialRate).Append("\n");
            sb.Append("  HelocInitialCalcSign: ").Append(HelocInitialCalcSign).Append("\n");
            sb.Append("  HelocInitialPercent: ").Append(HelocInitialPercent).Append("\n");
            sb.Append("  HelocInitialPI: ").Append(HelocInitialPI).Append("\n");
            sb.Append("  HelocInitialFractionBalancedividend: ").Append(HelocInitialFractionBalancedividend).Append("\n");
            sb.Append("  HelocInitialFractionBalancedivisor: ").Append(HelocInitialFractionBalancedivisor).Append("\n");
            sb.Append("  HelocInitialPercentageofBalance: ").Append(HelocInitialPercentageofBalance).Append("\n");
            sb.Append("  HelocInitialForceMinimumPayment: ").Append(HelocInitialForceMinimumPayment).Append("\n");
            sb.Append("  HelocInitialBalanceUsed: ").Append(HelocInitialBalanceUsed).Append("\n");
            sb.Append("  HelocInitialTerm: ").Append(HelocInitialTerm).Append("\n");
            sb.Append("  HelocInitPerDiemCalculationMethodType: ").Append(HelocInitPerDiemCalculationMethodType).Append("\n");
            sb.Append("  HelocNewFinancingNotLinkedDrawAmount: ").Append(HelocNewFinancingNotLinkedDrawAmount).Append("\n");
            sb.Append("  HelocNewFinancingNotLinkedCreditLimit: ").Append(HelocNewFinancingNotLinkedCreditLimit).Append("\n");
            sb.Append("  AmountApplyToDownPayment: ").Append(AmountApplyToDownPayment).Append("\n");
            sb.Append("  HELOCLienPosition: ").Append(HELOCLienPosition).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractLoanProductData);
        }

        /// <summary>
        /// Returns true if LoanContractLoanProductData instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractLoanProductData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractLoanProductData input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AnnualFeeNeededAmount == input.AnnualFeeNeededAmount ||
                    (this.AnnualFeeNeededAmount != null &&
                    this.AnnualFeeNeededAmount.Equals(input.AnnualFeeNeededAmount))
                ) && 
                (
                    this.ApplyLifeCapLowIndicator == input.ApplyLifeCapLowIndicator ||
                    (this.ApplyLifeCapLowIndicator != null &&
                    this.ApplyLifeCapLowIndicator.Equals(input.ApplyLifeCapLowIndicator))
                ) && 
                (
                    this.ArmDisclosureType == input.ArmDisclosureType ||
                    (this.ArmDisclosureType != null &&
                    this.ArmDisclosureType.Equals(input.ArmDisclosureType))
                ) && 
                (
                    this.ArmIndexType == input.ArmIndexType ||
                    (this.ArmIndexType != null &&
                    this.ArmIndexType.Equals(input.ArmIndexType))
                ) && 
                (
                    this.BalloonIndicator == input.BalloonIndicator ||
                    (this.BalloonIndicator != null &&
                    this.BalloonIndicator.Equals(input.BalloonIndicator))
                ) && 
                (
                    this.BalloonLoanMaturityTermMonthsCount == input.BalloonLoanMaturityTermMonthsCount ||
                    (this.BalloonLoanMaturityTermMonthsCount != null &&
                    this.BalloonLoanMaturityTermMonthsCount.Equals(input.BalloonLoanMaturityTermMonthsCount))
                ) && 
                (
                    this.BranchLocationNmlsId == input.BranchLocationNmlsId ||
                    (this.BranchLocationNmlsId != null &&
                    this.BranchLocationNmlsId.Equals(input.BranchLocationNmlsId))
                ) && 
                (
                    this.BranchManagerNmlsId == input.BranchManagerNmlsId ||
                    (this.BranchManagerNmlsId != null &&
                    this.BranchManagerNmlsId.Equals(input.BranchManagerNmlsId))
                ) && 
                (
                    this.Buydowns == input.Buydowns ||
                    this.Buydowns != null &&
                    this.Buydowns.SequenceEqual(input.Buydowns)
                ) && 
                (
                    this.ConvertibleIndicator == input.ConvertibleIndicator ||
                    (this.ConvertibleIndicator != null &&
                    this.ConvertibleIndicator.Equals(input.ConvertibleIndicator))
                ) && 
                (
                    this.Discounted == input.Discounted ||
                    (this.Discounted != null &&
                    this.Discounted.Equals(input.Discounted))
                ) && 
                (
                    this.DiscountedRate == input.DiscountedRate ||
                    (this.DiscountedRate != null &&
                    this.DiscountedRate.Equals(input.DiscountedRate))
                ) && 
                (
                    this.DrawPeriodMonthsCount == input.DrawPeriodMonthsCount ||
                    (this.DrawPeriodMonthsCount != null &&
                    this.DrawPeriodMonthsCount.Equals(input.DrawPeriodMonthsCount))
                ) && 
                (
                    this.EscrowWaiverIndicator == input.EscrowWaiverIndicator ||
                    (this.EscrowWaiverIndicator != null &&
                    this.EscrowWaiverIndicator.Equals(input.EscrowWaiverIndicator))
                ) && 
                (
                    this.FloorBasis == input.FloorBasis ||
                    (this.FloorBasis != null &&
                    this.FloorBasis.Equals(input.FloorBasis))
                ) && 
                (
                    this.FloorPercent == input.FloorPercent ||
                    (this.FloorPercent != null &&
                    this.FloorPercent.Equals(input.FloorPercent))
                ) && 
                (
                    this.FloorPercentUI == input.FloorPercentUI ||
                    (this.FloorPercentUI != null &&
                    this.FloorPercentUI.Equals(input.FloorPercentUI))
                ) && 
                (
                    this.FloorVerbiage == input.FloorVerbiage ||
                    (this.FloorVerbiage != null &&
                    this.FloorVerbiage.Equals(input.FloorVerbiage))
                ) && 
                (
                    this.FnmProductPlanIdentifier == input.FnmProductPlanIdentifier ||
                    (this.FnmProductPlanIdentifier != null &&
                    this.FnmProductPlanIdentifier.Equals(input.FnmProductPlanIdentifier))
                ) && 
                (
                    this.FreddieMacArmIndexType == input.FreddieMacArmIndexType ||
                    (this.FreddieMacArmIndexType != null &&
                    this.FreddieMacArmIndexType.Equals(input.FreddieMacArmIndexType))
                ) && 
                (
                    this.FreOfferingIdentifier == input.FreOfferingIdentifier ||
                    (this.FreOfferingIdentifier != null &&
                    this.FreOfferingIdentifier.Equals(input.FreOfferingIdentifier))
                ) && 
                (
                    this.FullPrepaymentPenaltyOptionType == input.FullPrepaymentPenaltyOptionType ||
                    (this.FullPrepaymentPenaltyOptionType != null &&
                    this.FullPrepaymentPenaltyOptionType.Equals(input.FullPrepaymentPenaltyOptionType))
                ) && 
                (
                    this.GseProjectClassificationType == input.GseProjectClassificationType ||
                    (this.GseProjectClassificationType != null &&
                    this.GseProjectClassificationType.Equals(input.GseProjectClassificationType))
                ) && 
                (
                    this.GsePropertyType == input.GsePropertyType ||
                    (this.GsePropertyType != null &&
                    this.GsePropertyType.Equals(input.GsePropertyType))
                ) && 
                (
                    this.HardPrepaymentPenaltyMonths == input.HardPrepaymentPenaltyMonths ||
                    (this.HardPrepaymentPenaltyMonths != null &&
                    this.HardPrepaymentPenaltyMonths.Equals(input.HardPrepaymentPenaltyMonths))
                ) && 
                (
                    this.HelocPeriodTemplateName == input.HelocPeriodTemplateName ||
                    (this.HelocPeriodTemplateName != null &&
                    this.HelocPeriodTemplateName.Equals(input.HelocPeriodTemplateName))
                ) && 
                (
                    this.HelocRepaymentDrawPeriods == input.HelocRepaymentDrawPeriods ||
                    this.HelocRepaymentDrawPeriods != null &&
                    this.HelocRepaymentDrawPeriods.SequenceEqual(input.HelocRepaymentDrawPeriods)
                ) && 
                (
                    this.IndexCurrentValuePercent == input.IndexCurrentValuePercent ||
                    (this.IndexCurrentValuePercent != null &&
                    this.IndexCurrentValuePercent.Equals(input.IndexCurrentValuePercent))
                ) && 
                (
                    this.IndexLookbackPeriod == input.IndexLookbackPeriod ||
                    (this.IndexLookbackPeriod != null &&
                    this.IndexLookbackPeriod.Equals(input.IndexLookbackPeriod))
                ) && 
                (
                    this.IndexMarginPercent == input.IndexMarginPercent ||
                    (this.IndexMarginPercent != null &&
                    this.IndexMarginPercent.Equals(input.IndexMarginPercent))
                ) && 
                (
                    this.IndexMarginPercentUI == input.IndexMarginPercentUI ||
                    (this.IndexMarginPercentUI != null &&
                    this.IndexMarginPercentUI.Equals(input.IndexMarginPercentUI))
                ) && 
                (
                    this.InitialAdvanceAmount == input.InitialAdvanceAmount ||
                    (this.InitialAdvanceAmount != null &&
                    this.InitialAdvanceAmount.Equals(input.InitialAdvanceAmount))
                ) && 
                (
                    this.LienPriorityType == input.LienPriorityType ||
                    (this.LienPriorityType != null &&
                    this.LienPriorityType.Equals(input.LienPriorityType))
                ) && 
                (
                    this.LoanDocumentationType == input.LoanDocumentationType ||
                    (this.LoanDocumentationType != null &&
                    this.LoanDocumentationType.Equals(input.LoanDocumentationType))
                ) && 
                (
                    this.LoanRepaymentType == input.LoanRepaymentType ||
                    (this.LoanRepaymentType != null &&
                    this.LoanRepaymentType.Equals(input.LoanRepaymentType))
                ) && 
                (
                    this.LoanScheduledClosingDate == input.LoanScheduledClosingDate ||
                    (this.LoanScheduledClosingDate != null &&
                    this.LoanScheduledClosingDate.Equals(input.LoanScheduledClosingDate))
                ) && 
                (
                    this.BorrowerEstimatedClosingDate == input.BorrowerEstimatedClosingDate ||
                    (this.BorrowerEstimatedClosingDate != null &&
                    this.BorrowerEstimatedClosingDate.Equals(input.BorrowerEstimatedClosingDate))
                ) && 
                (
                    this.MaximumMonthlyPayment == input.MaximumMonthlyPayment ||
                    (this.MaximumMonthlyPayment != null &&
                    this.MaximumMonthlyPayment.Equals(input.MaximumMonthlyPayment))
                ) && 
                (
                    this.MaxLifeInterestCapPercent == input.MaxLifeInterestCapPercent ||
                    (this.MaxLifeInterestCapPercent != null &&
                    this.MaxLifeInterestCapPercent.Equals(input.MaxLifeInterestCapPercent))
                ) && 
                (
                    this.MaxLifeInterestCapPercentUI == input.MaxLifeInterestCapPercentUI ||
                    (this.MaxLifeInterestCapPercentUI != null &&
                    this.MaxLifeInterestCapPercentUI.Equals(input.MaxLifeInterestCapPercentUI))
                ) && 
                (
                    this.MiCoveragePercent == input.MiCoveragePercent ||
                    (this.MiCoveragePercent != null &&
                    this.MiCoveragePercent.Equals(input.MiCoveragePercent))
                ) && 
                (
                    this.MinimumAdvanceAmount == input.MinimumAdvanceAmount ||
                    (this.MinimumAdvanceAmount != null &&
                    this.MinimumAdvanceAmount.Equals(input.MinimumAdvanceAmount))
                ) && 
                (
                    this.MinimumAllowableApr == input.MinimumAllowableApr ||
                    (this.MinimumAllowableApr != null &&
                    this.MinimumAllowableApr.Equals(input.MinimumAllowableApr))
                ) && 
                (
                    this.MinimumDrawPeroidPaymentPercent == input.MinimumDrawPeroidPaymentPercent ||
                    (this.MinimumDrawPeroidPaymentPercent != null &&
                    this.MinimumDrawPeroidPaymentPercent.Equals(input.MinimumDrawPeroidPaymentPercent))
                ) && 
                (
                    this.MinimumPaymentAmount == input.MinimumPaymentAmount ||
                    (this.MinimumPaymentAmount != null &&
                    this.MinimumPaymentAmount.Equals(input.MinimumPaymentAmount))
                ) && 
                (
                    this.MinimumPaymentLessThanAmount == input.MinimumPaymentLessThanAmount ||
                    (this.MinimumPaymentLessThanAmount != null &&
                    this.MinimumPaymentLessThanAmount.Equals(input.MinimumPaymentLessThanAmount))
                ) && 
                (
                    this.MinimumPaymentPercent == input.MinimumPaymentPercent ||
                    (this.MinimumPaymentPercent != null &&
                    this.MinimumPaymentPercent.Equals(input.MinimumPaymentPercent))
                ) && 
                (
                    this.MinimumPaymentUpbAmount == input.MinimumPaymentUpbAmount ||
                    (this.MinimumPaymentUpbAmount != null &&
                    this.MinimumPaymentUpbAmount.Equals(input.MinimumPaymentUpbAmount))
                ) && 
                (
                    this.MinimumPaymentUpbPercent == input.MinimumPaymentUpbPercent ||
                    (this.MinimumPaymentUpbPercent != null &&
                    this.MinimumPaymentUpbPercent.Equals(input.MinimumPaymentUpbPercent))
                ) && 
                (
                    this.MinimumRepayPeriodPaymentPercent == input.MinimumRepayPeriodPaymentPercent ||
                    (this.MinimumRepayPeriodPaymentPercent != null &&
                    this.MinimumRepayPeriodPaymentPercent.Equals(input.MinimumRepayPeriodPaymentPercent))
                ) && 
                (
                    this.MonthsAppliedToPrepaymentPenaltyFeeCount == input.MonthsAppliedToPrepaymentPenaltyFeeCount ||
                    (this.MonthsAppliedToPrepaymentPenaltyFeeCount != null &&
                    this.MonthsAppliedToPrepaymentPenaltyFeeCount.Equals(input.MonthsAppliedToPrepaymentPenaltyFeeCount))
                ) && 
                (
                    this.NegativeAmortizationLimitPercent == input.NegativeAmortizationLimitPercent ||
                    (this.NegativeAmortizationLimitPercent != null &&
                    this.NegativeAmortizationLimitPercent.Equals(input.NegativeAmortizationLimitPercent))
                ) && 
                (
                    this.NmlsDocumentationType == input.NmlsDocumentationType ||
                    (this.NmlsDocumentationType != null &&
                    this.NmlsDocumentationType.Equals(input.NmlsDocumentationType))
                ) && 
                (
                    this.NmlsFirstMortgageType == input.NmlsFirstMortgageType ||
                    (this.NmlsFirstMortgageType != null &&
                    this.NmlsFirstMortgageType.Equals(input.NmlsFirstMortgageType))
                ) && 
                (
                    this.NmlsLoanType == input.NmlsLoanType ||
                    (this.NmlsLoanType != null &&
                    this.NmlsLoanType.Equals(input.NmlsLoanType))
                ) && 
                (
                    this.NmlsOptionARMIndicator == input.NmlsOptionARMIndicator ||
                    (this.NmlsOptionARMIndicator != null &&
                    this.NmlsOptionARMIndicator.Equals(input.NmlsOptionARMIndicator))
                ) && 
                (
                    this.NmlsPiggyBackOrFundedHELOCIndicator == input.NmlsPiggyBackOrFundedHELOCIndicator ||
                    (this.NmlsPiggyBackOrFundedHELOCIndicator != null &&
                    this.NmlsPiggyBackOrFundedHELOCIndicator.Equals(input.NmlsPiggyBackOrFundedHELOCIndicator))
                ) && 
                (
                    this.NmlsProductionSoldToType == input.NmlsProductionSoldToType ||
                    (this.NmlsProductionSoldToType != null &&
                    this.NmlsProductionSoldToType.Equals(input.NmlsProductionSoldToType))
                ) && 
                (
                    this.NmlsRefinancePurposeType == input.NmlsRefinancePurposeType ||
                    (this.NmlsRefinancePurposeType != null &&
                    this.NmlsRefinancePurposeType.Equals(input.NmlsRefinancePurposeType))
                ) && 
                (
                    this.NmlsReverseMortgageType == input.NmlsReverseMortgageType ||
                    (this.NmlsReverseMortgageType != null &&
                    this.NmlsReverseMortgageType.Equals(input.NmlsReverseMortgageType))
                ) && 
                (
                    this.InitialApplicationAmount == input.InitialApplicationAmount ||
                    (this.InitialApplicationAmount != null &&
                    this.InitialApplicationAmount.Equals(input.InitialApplicationAmount))
                ) && 
                (
                    this.NetInitialAndFinal == input.NetInitialAndFinal ||
                    (this.NetInitialAndFinal != null &&
                    this.NetInitialAndFinal.Equals(input.NetInitialAndFinal))
                ) && 
                (
                    this.InquiryOrPreQualificationIndicator == input.InquiryOrPreQualificationIndicator ||
                    (this.InquiryOrPreQualificationIndicator != null &&
                    this.InquiryOrPreQualificationIndicator.Equals(input.InquiryOrPreQualificationIndicator))
                ) && 
                (
                    this.OralRequestForExtensionOfCreditIndicator == input.OralRequestForExtensionOfCreditIndicator ||
                    (this.OralRequestForExtensionOfCreditIndicator != null &&
                    this.OralRequestForExtensionOfCreditIndicator.Equals(input.OralRequestForExtensionOfCreditIndicator))
                ) && 
                (
                    this.ExcludeLoanFromNMLSReportIndicator == input.ExcludeLoanFromNMLSReportIndicator ||
                    (this.ExcludeLoanFromNMLSReportIndicator != null &&
                    this.ExcludeLoanFromNMLSReportIndicator.Equals(input.ExcludeLoanFromNMLSReportIndicator))
                ) && 
                (
                    this.OverLimitCharge == input.OverLimitCharge ||
                    (this.OverLimitCharge != null &&
                    this.OverLimitCharge.Equals(input.OverLimitCharge))
                ) && 
                (
                    this.OverLimitReturnCharge == input.OverLimitReturnCharge ||
                    (this.OverLimitReturnCharge != null &&
                    this.OverLimitReturnCharge.Equals(input.OverLimitReturnCharge))
                ) && 
                (
                    this.PaymentAdjustmentDurationMonthsCount == input.PaymentAdjustmentDurationMonthsCount ||
                    (this.PaymentAdjustmentDurationMonthsCount != null &&
                    this.PaymentAdjustmentDurationMonthsCount.Equals(input.PaymentAdjustmentDurationMonthsCount))
                ) && 
                (
                    this.PaymentAdjustmentPeriodicCapPercent == input.PaymentAdjustmentPeriodicCapPercent ||
                    (this.PaymentAdjustmentPeriodicCapPercent != null &&
                    this.PaymentAdjustmentPeriodicCapPercent.Equals(input.PaymentAdjustmentPeriodicCapPercent))
                ) && 
                (
                    this.PaymentFrequencyType == input.PaymentFrequencyType ||
                    (this.PaymentFrequencyType != null &&
                    this.PaymentFrequencyType.Equals(input.PaymentFrequencyType))
                ) && 
                (
                    this.PrepaymentPenalties == input.PrepaymentPenalties ||
                    this.PrepaymentPenalties != null &&
                    this.PrepaymentPenalties.SequenceEqual(input.PrepaymentPenalties)
                ) && 
                (
                    this.PrepaymentPenaltyBasedOn == input.PrepaymentPenaltyBasedOn ||
                    (this.PrepaymentPenaltyBasedOn != null &&
                    this.PrepaymentPenaltyBasedOn.Equals(input.PrepaymentPenaltyBasedOn))
                ) && 
                (
                    this.PrepaymentPenaltyIndicator == input.PrepaymentPenaltyIndicator ||
                    (this.PrepaymentPenaltyIndicator != null &&
                    this.PrepaymentPenaltyIndicator.Equals(input.PrepaymentPenaltyIndicator))
                ) && 
                (
                    this.PrepaymentPenaltyPercent == input.PrepaymentPenaltyPercent ||
                    (this.PrepaymentPenaltyPercent != null &&
                    this.PrepaymentPenaltyPercent.Equals(input.PrepaymentPenaltyPercent))
                ) && 
                (
                    this.PrepaymentPenaltyTermMonthsCount == input.PrepaymentPenaltyTermMonthsCount ||
                    (this.PrepaymentPenaltyTermMonthsCount != null &&
                    this.PrepaymentPenaltyTermMonthsCount.Equals(input.PrepaymentPenaltyTermMonthsCount))
                ) && 
                (
                    this.PrepaymentPenaltyVerbiage == input.PrepaymentPenaltyVerbiage ||
                    (this.PrepaymentPenaltyVerbiage != null &&
                    this.PrepaymentPenaltyVerbiage.Equals(input.PrepaymentPenaltyVerbiage))
                ) && 
                (
                    this.ProductName == input.ProductName ||
                    (this.ProductName != null &&
                    this.ProductName.Equals(input.ProductName))
                ) && 
                (
                    this.QualifyingRatePercent == input.QualifyingRatePercent ||
                    (this.QualifyingRatePercent != null &&
                    this.QualifyingRatePercent.Equals(input.QualifyingRatePercent))
                ) && 
                (
                    this.RateAdjustmentDurationMonthsCount == input.RateAdjustmentDurationMonthsCount ||
                    (this.RateAdjustmentDurationMonthsCount != null &&
                    this.RateAdjustmentDurationMonthsCount.Equals(input.RateAdjustmentDurationMonthsCount))
                ) && 
                (
                    this.RateAdjustmentLifetimeCapPercent == input.RateAdjustmentLifetimeCapPercent ||
                    (this.RateAdjustmentLifetimeCapPercent != null &&
                    this.RateAdjustmentLifetimeCapPercent.Equals(input.RateAdjustmentLifetimeCapPercent))
                ) && 
                (
                    this.RateAdjustmentPercent == input.RateAdjustmentPercent ||
                    (this.RateAdjustmentPercent != null &&
                    this.RateAdjustmentPercent.Equals(input.RateAdjustmentPercent))
                ) && 
                (
                    this.RateAdjustmentPercentUI == input.RateAdjustmentPercentUI ||
                    (this.RateAdjustmentPercentUI != null &&
                    this.RateAdjustmentPercentUI.Equals(input.RateAdjustmentPercentUI))
                ) && 
                (
                    this.RateAdjustmentSubsequentCapPercent == input.RateAdjustmentSubsequentCapPercent ||
                    (this.RateAdjustmentSubsequentCapPercent != null &&
                    this.RateAdjustmentSubsequentCapPercent.Equals(input.RateAdjustmentSubsequentCapPercent))
                ) && 
                (
                    this.RateAdjustmentSubsequentCapPercentUI == input.RateAdjustmentSubsequentCapPercentUI ||
                    (this.RateAdjustmentSubsequentCapPercentUI != null &&
                    this.RateAdjustmentSubsequentCapPercentUI.Equals(input.RateAdjustmentSubsequentCapPercentUI))
                ) && 
                (
                    this.ReleaseRecoringCharge == input.ReleaseRecoringCharge ||
                    (this.ReleaseRecoringCharge != null &&
                    this.ReleaseRecoringCharge.Equals(input.ReleaseRecoringCharge))
                ) && 
                (
                    this.RemainingBuydownAmount == input.RemainingBuydownAmount ||
                    (this.RemainingBuydownAmount != null &&
                    this.RemainingBuydownAmount.Equals(input.RemainingBuydownAmount))
                ) && 
                (
                    this.RepayPeriodMonthsCount == input.RepayPeriodMonthsCount ||
                    (this.RepayPeriodMonthsCount != null &&
                    this.RepayPeriodMonthsCount.Equals(input.RepayPeriodMonthsCount))
                ) && 
                (
                    this.ReturnedCheckCharge == input.ReturnedCheckCharge ||
                    (this.ReturnedCheckCharge != null &&
                    this.ReturnedCheckCharge.Equals(input.ReturnedCheckCharge))
                ) && 
                (
                    this.ReturnedCheckChargeRatePercent == input.ReturnedCheckChargeRatePercent ||
                    (this.ReturnedCheckChargeRatePercent != null &&
                    this.ReturnedCheckChargeRatePercent.Equals(input.ReturnedCheckChargeRatePercent))
                ) && 
                (
                    this.ReturnedCheckMaxCharge == input.ReturnedCheckMaxCharge ||
                    (this.ReturnedCheckMaxCharge != null &&
                    this.ReturnedCheckMaxCharge.Equals(input.ReturnedCheckMaxCharge))
                ) && 
                (
                    this.ReturnedCheckMinCharge == input.ReturnedCheckMinCharge ||
                    (this.ReturnedCheckMinCharge != null &&
                    this.ReturnedCheckMinCharge.Equals(input.ReturnedCheckMinCharge))
                ) && 
                (
                    this.RoundPercent == input.RoundPercent ||
                    (this.RoundPercent != null &&
                    this.RoundPercent.Equals(input.RoundPercent))
                ) && 
                (
                    this.RoundType == input.RoundType ||
                    (this.RoundType != null &&
                    this.RoundType.Equals(input.RoundType))
                ) && 
                (
                    this.ScheduledFirstPaymentAdjustmentDate == input.ScheduledFirstPaymentAdjustmentDate ||
                    (this.ScheduledFirstPaymentAdjustmentDate != null &&
                    this.ScheduledFirstPaymentAdjustmentDate.Equals(input.ScheduledFirstPaymentAdjustmentDate))
                ) && 
                (
                    this.ScheduledFirstPaymentDate == input.ScheduledFirstPaymentDate ||
                    (this.ScheduledFirstPaymentDate != null &&
                    this.ScheduledFirstPaymentDate.Equals(input.ScheduledFirstPaymentDate))
                ) && 
                (
                    this.StopPaymentCharge == input.StopPaymentCharge ||
                    (this.StopPaymentCharge != null &&
                    this.StopPaymentCharge.Equals(input.StopPaymentCharge))
                ) && 
                (
                    this.SubsequentRateAdjustmentMonthsCount == input.SubsequentRateAdjustmentMonthsCount ||
                    (this.SubsequentRateAdjustmentMonthsCount != null &&
                    this.SubsequentRateAdjustmentMonthsCount.Equals(input.SubsequentRateAdjustmentMonthsCount))
                ) && 
                (
                    this.TerminationFeeAmount == input.TerminationFeeAmount ||
                    (this.TerminationFeeAmount != null &&
                    this.TerminationFeeAmount.Equals(input.TerminationFeeAmount))
                ) && 
                (
                    this.TerminationPeriodMonthsCount == input.TerminationPeriodMonthsCount ||
                    (this.TerminationPeriodMonthsCount != null &&
                    this.TerminationPeriodMonthsCount.Equals(input.TerminationPeriodMonthsCount))
                ) && 
                (
                    this.ThirdPartyFeeFromAmount == input.ThirdPartyFeeFromAmount ||
                    (this.ThirdPartyFeeFromAmount != null &&
                    this.ThirdPartyFeeFromAmount.Equals(input.ThirdPartyFeeFromAmount))
                ) && 
                (
                    this.ThirdPartyFeeToAmount == input.ThirdPartyFeeToAmount ||
                    (this.ThirdPartyFeeToAmount != null &&
                    this.ThirdPartyFeeToAmount.Equals(input.ThirdPartyFeeToAmount))
                ) && 
                (
                    this.TimelyPaymentRateReductionPercent == input.TimelyPaymentRateReductionPercent ||
                    (this.TimelyPaymentRateReductionPercent != null &&
                    this.TimelyPaymentRateReductionPercent.Equals(input.TimelyPaymentRateReductionPercent))
                ) && 
                (
                    this.TimelyPaymentRewards == input.TimelyPaymentRewards ||
                    (this.TimelyPaymentRewards != null &&
                    this.TimelyPaymentRewards.Equals(input.TimelyPaymentRewards))
                ) && 
                (
                    this.TotalSubsidyAmount == input.TotalSubsidyAmount ||
                    (this.TotalSubsidyAmount != null &&
                    this.TotalSubsidyAmount.Equals(input.TotalSubsidyAmount))
                ) && 
                (
                    this.WireFee == input.WireFee ||
                    (this.WireFee != null &&
                    this.WireFee.Equals(input.WireFee))
                ) && 
                (
                    this.ParticipationFees == input.ParticipationFees ||
                    (this.ParticipationFees != null &&
                    this.ParticipationFees.Equals(input.ParticipationFees))
                ) && 
                (
                    this.TransactionFees == input.TransactionFees ||
                    (this.TransactionFees != null &&
                    this.TransactionFees.Equals(input.TransactionFees))
                ) && 
                (
                    this.NmlsPropertyType == input.NmlsPropertyType ||
                    (this.NmlsPropertyType != null &&
                    this.NmlsPropertyType.Equals(input.NmlsPropertyType))
                ) && 
                (
                    this.NmlsLienStatus == input.NmlsLienStatus ||
                    (this.NmlsLienStatus != null &&
                    this.NmlsLienStatus.Equals(input.NmlsLienStatus))
                ) && 
                (
                    this.HelocPaymentBasis == input.HelocPaymentBasis ||
                    (this.HelocPaymentBasis != null &&
                    this.HelocPaymentBasis.Equals(input.HelocPaymentBasis))
                ) && 
                (
                    this.HelocRate == input.HelocRate ||
                    (this.HelocRate != null &&
                    this.HelocRate.Equals(input.HelocRate))
                ) && 
                (
                    this.HelocCalcSign == input.HelocCalcSign ||
                    (this.HelocCalcSign != null &&
                    this.HelocCalcSign.Equals(input.HelocCalcSign))
                ) && 
                (
                    this.HelocPercent == input.HelocPercent ||
                    (this.HelocPercent != null &&
                    this.HelocPercent.Equals(input.HelocPercent))
                ) && 
                (
                    this.HelocInterestOnly == input.HelocInterestOnly ||
                    (this.HelocInterestOnly != null &&
                    this.HelocInterestOnly.Equals(input.HelocInterestOnly))
                ) && 
                (
                    this.HelocFractionBalancedividend == input.HelocFractionBalancedividend ||
                    (this.HelocFractionBalancedividend != null &&
                    this.HelocFractionBalancedividend.Equals(input.HelocFractionBalancedividend))
                ) && 
                (
                    this.HelocFractionBalancedivisor == input.HelocFractionBalancedivisor ||
                    (this.HelocFractionBalancedivisor != null &&
                    this.HelocFractionBalancedivisor.Equals(input.HelocFractionBalancedivisor))
                ) && 
                (
                    this.HelocPercentageofBalance == input.HelocPercentageofBalance ||
                    (this.HelocPercentageofBalance != null &&
                    this.HelocPercentageofBalance.Equals(input.HelocPercentageofBalance))
                ) && 
                (
                    this.HelocForceMinimumPayment == input.HelocForceMinimumPayment ||
                    (this.HelocForceMinimumPayment != null &&
                    this.HelocForceMinimumPayment.Equals(input.HelocForceMinimumPayment))
                ) && 
                (
                    this.HelocQualifyingBalance == input.HelocQualifyingBalance ||
                    (this.HelocQualifyingBalance != null &&
                    this.HelocQualifyingBalance.Equals(input.HelocQualifyingBalance))
                ) && 
                (
                    this.HelocQualifyingTerm == input.HelocQualifyingTerm ||
                    (this.HelocQualifyingTerm != null &&
                    this.HelocQualifyingTerm.Equals(input.HelocQualifyingTerm))
                ) && 
                (
                    this.HelocInitialPaymentBasis == input.HelocInitialPaymentBasis ||
                    (this.HelocInitialPaymentBasis != null &&
                    this.HelocInitialPaymentBasis.Equals(input.HelocInitialPaymentBasis))
                ) && 
                (
                    this.HelocInitialRate == input.HelocInitialRate ||
                    (this.HelocInitialRate != null &&
                    this.HelocInitialRate.Equals(input.HelocInitialRate))
                ) && 
                (
                    this.HelocInitialCalcSign == input.HelocInitialCalcSign ||
                    (this.HelocInitialCalcSign != null &&
                    this.HelocInitialCalcSign.Equals(input.HelocInitialCalcSign))
                ) && 
                (
                    this.HelocInitialPercent == input.HelocInitialPercent ||
                    (this.HelocInitialPercent != null &&
                    this.HelocInitialPercent.Equals(input.HelocInitialPercent))
                ) && 
                (
                    this.HelocInitialPI == input.HelocInitialPI ||
                    (this.HelocInitialPI != null &&
                    this.HelocInitialPI.Equals(input.HelocInitialPI))
                ) && 
                (
                    this.HelocInitialFractionBalancedividend == input.HelocInitialFractionBalancedividend ||
                    (this.HelocInitialFractionBalancedividend != null &&
                    this.HelocInitialFractionBalancedividend.Equals(input.HelocInitialFractionBalancedividend))
                ) && 
                (
                    this.HelocInitialFractionBalancedivisor == input.HelocInitialFractionBalancedivisor ||
                    (this.HelocInitialFractionBalancedivisor != null &&
                    this.HelocInitialFractionBalancedivisor.Equals(input.HelocInitialFractionBalancedivisor))
                ) && 
                (
                    this.HelocInitialPercentageofBalance == input.HelocInitialPercentageofBalance ||
                    (this.HelocInitialPercentageofBalance != null &&
                    this.HelocInitialPercentageofBalance.Equals(input.HelocInitialPercentageofBalance))
                ) && 
                (
                    this.HelocInitialForceMinimumPayment == input.HelocInitialForceMinimumPayment ||
                    (this.HelocInitialForceMinimumPayment != null &&
                    this.HelocInitialForceMinimumPayment.Equals(input.HelocInitialForceMinimumPayment))
                ) && 
                (
                    this.HelocInitialBalanceUsed == input.HelocInitialBalanceUsed ||
                    (this.HelocInitialBalanceUsed != null &&
                    this.HelocInitialBalanceUsed.Equals(input.HelocInitialBalanceUsed))
                ) && 
                (
                    this.HelocInitialTerm == input.HelocInitialTerm ||
                    (this.HelocInitialTerm != null &&
                    this.HelocInitialTerm.Equals(input.HelocInitialTerm))
                ) && 
                (
                    this.HelocInitPerDiemCalculationMethodType == input.HelocInitPerDiemCalculationMethodType ||
                    (this.HelocInitPerDiemCalculationMethodType != null &&
                    this.HelocInitPerDiemCalculationMethodType.Equals(input.HelocInitPerDiemCalculationMethodType))
                ) && 
                (
                    this.HelocNewFinancingNotLinkedDrawAmount == input.HelocNewFinancingNotLinkedDrawAmount ||
                    (this.HelocNewFinancingNotLinkedDrawAmount != null &&
                    this.HelocNewFinancingNotLinkedDrawAmount.Equals(input.HelocNewFinancingNotLinkedDrawAmount))
                ) && 
                (
                    this.HelocNewFinancingNotLinkedCreditLimit == input.HelocNewFinancingNotLinkedCreditLimit ||
                    (this.HelocNewFinancingNotLinkedCreditLimit != null &&
                    this.HelocNewFinancingNotLinkedCreditLimit.Equals(input.HelocNewFinancingNotLinkedCreditLimit))
                ) && 
                (
                    this.AmountApplyToDownPayment == input.AmountApplyToDownPayment ||
                    (this.AmountApplyToDownPayment != null &&
                    this.AmountApplyToDownPayment.Equals(input.AmountApplyToDownPayment))
                ) && 
                (
                    this.HELOCLienPosition == input.HELOCLienPosition ||
                    (this.HELOCLienPosition != null &&
                    this.HELOCLienPosition.Equals(input.HELOCLienPosition))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AnnualFeeNeededAmount != null)
                    hashCode = hashCode * 59 + this.AnnualFeeNeededAmount.GetHashCode();
                if (this.ApplyLifeCapLowIndicator != null)
                    hashCode = hashCode * 59 + this.ApplyLifeCapLowIndicator.GetHashCode();
                if (this.ArmDisclosureType != null)
                    hashCode = hashCode * 59 + this.ArmDisclosureType.GetHashCode();
                if (this.ArmIndexType != null)
                    hashCode = hashCode * 59 + this.ArmIndexType.GetHashCode();
                if (this.BalloonIndicator != null)
                    hashCode = hashCode * 59 + this.BalloonIndicator.GetHashCode();
                if (this.BalloonLoanMaturityTermMonthsCount != null)
                    hashCode = hashCode * 59 + this.BalloonLoanMaturityTermMonthsCount.GetHashCode();
                if (this.BranchLocationNmlsId != null)
                    hashCode = hashCode * 59 + this.BranchLocationNmlsId.GetHashCode();
                if (this.BranchManagerNmlsId != null)
                    hashCode = hashCode * 59 + this.BranchManagerNmlsId.GetHashCode();
                if (this.Buydowns != null)
                    hashCode = hashCode * 59 + this.Buydowns.GetHashCode();
                if (this.ConvertibleIndicator != null)
                    hashCode = hashCode * 59 + this.ConvertibleIndicator.GetHashCode();
                if (this.Discounted != null)
                    hashCode = hashCode * 59 + this.Discounted.GetHashCode();
                if (this.DiscountedRate != null)
                    hashCode = hashCode * 59 + this.DiscountedRate.GetHashCode();
                if (this.DrawPeriodMonthsCount != null)
                    hashCode = hashCode * 59 + this.DrawPeriodMonthsCount.GetHashCode();
                if (this.EscrowWaiverIndicator != null)
                    hashCode = hashCode * 59 + this.EscrowWaiverIndicator.GetHashCode();
                if (this.FloorBasis != null)
                    hashCode = hashCode * 59 + this.FloorBasis.GetHashCode();
                if (this.FloorPercent != null)
                    hashCode = hashCode * 59 + this.FloorPercent.GetHashCode();
                if (this.FloorPercentUI != null)
                    hashCode = hashCode * 59 + this.FloorPercentUI.GetHashCode();
                if (this.FloorVerbiage != null)
                    hashCode = hashCode * 59 + this.FloorVerbiage.GetHashCode();
                if (this.FnmProductPlanIdentifier != null)
                    hashCode = hashCode * 59 + this.FnmProductPlanIdentifier.GetHashCode();
                if (this.FreddieMacArmIndexType != null)
                    hashCode = hashCode * 59 + this.FreddieMacArmIndexType.GetHashCode();
                if (this.FreOfferingIdentifier != null)
                    hashCode = hashCode * 59 + this.FreOfferingIdentifier.GetHashCode();
                if (this.FullPrepaymentPenaltyOptionType != null)
                    hashCode = hashCode * 59 + this.FullPrepaymentPenaltyOptionType.GetHashCode();
                if (this.GseProjectClassificationType != null)
                    hashCode = hashCode * 59 + this.GseProjectClassificationType.GetHashCode();
                if (this.GsePropertyType != null)
                    hashCode = hashCode * 59 + this.GsePropertyType.GetHashCode();
                if (this.HardPrepaymentPenaltyMonths != null)
                    hashCode = hashCode * 59 + this.HardPrepaymentPenaltyMonths.GetHashCode();
                if (this.HelocPeriodTemplateName != null)
                    hashCode = hashCode * 59 + this.HelocPeriodTemplateName.GetHashCode();
                if (this.HelocRepaymentDrawPeriods != null)
                    hashCode = hashCode * 59 + this.HelocRepaymentDrawPeriods.GetHashCode();
                if (this.IndexCurrentValuePercent != null)
                    hashCode = hashCode * 59 + this.IndexCurrentValuePercent.GetHashCode();
                if (this.IndexLookbackPeriod != null)
                    hashCode = hashCode * 59 + this.IndexLookbackPeriod.GetHashCode();
                if (this.IndexMarginPercent != null)
                    hashCode = hashCode * 59 + this.IndexMarginPercent.GetHashCode();
                if (this.IndexMarginPercentUI != null)
                    hashCode = hashCode * 59 + this.IndexMarginPercentUI.GetHashCode();
                if (this.InitialAdvanceAmount != null)
                    hashCode = hashCode * 59 + this.InitialAdvanceAmount.GetHashCode();
                if (this.LienPriorityType != null)
                    hashCode = hashCode * 59 + this.LienPriorityType.GetHashCode();
                if (this.LoanDocumentationType != null)
                    hashCode = hashCode * 59 + this.LoanDocumentationType.GetHashCode();
                if (this.LoanRepaymentType != null)
                    hashCode = hashCode * 59 + this.LoanRepaymentType.GetHashCode();
                if (this.LoanScheduledClosingDate != null)
                    hashCode = hashCode * 59 + this.LoanScheduledClosingDate.GetHashCode();
                if (this.BorrowerEstimatedClosingDate != null)
                    hashCode = hashCode * 59 + this.BorrowerEstimatedClosingDate.GetHashCode();
                if (this.MaximumMonthlyPayment != null)
                    hashCode = hashCode * 59 + this.MaximumMonthlyPayment.GetHashCode();
                if (this.MaxLifeInterestCapPercent != null)
                    hashCode = hashCode * 59 + this.MaxLifeInterestCapPercent.GetHashCode();
                if (this.MaxLifeInterestCapPercentUI != null)
                    hashCode = hashCode * 59 + this.MaxLifeInterestCapPercentUI.GetHashCode();
                if (this.MiCoveragePercent != null)
                    hashCode = hashCode * 59 + this.MiCoveragePercent.GetHashCode();
                if (this.MinimumAdvanceAmount != null)
                    hashCode = hashCode * 59 + this.MinimumAdvanceAmount.GetHashCode();
                if (this.MinimumAllowableApr != null)
                    hashCode = hashCode * 59 + this.MinimumAllowableApr.GetHashCode();
                if (this.MinimumDrawPeroidPaymentPercent != null)
                    hashCode = hashCode * 59 + this.MinimumDrawPeroidPaymentPercent.GetHashCode();
                if (this.MinimumPaymentAmount != null)
                    hashCode = hashCode * 59 + this.MinimumPaymentAmount.GetHashCode();
                if (this.MinimumPaymentLessThanAmount != null)
                    hashCode = hashCode * 59 + this.MinimumPaymentLessThanAmount.GetHashCode();
                if (this.MinimumPaymentPercent != null)
                    hashCode = hashCode * 59 + this.MinimumPaymentPercent.GetHashCode();
                if (this.MinimumPaymentUpbAmount != null)
                    hashCode = hashCode * 59 + this.MinimumPaymentUpbAmount.GetHashCode();
                if (this.MinimumPaymentUpbPercent != null)
                    hashCode = hashCode * 59 + this.MinimumPaymentUpbPercent.GetHashCode();
                if (this.MinimumRepayPeriodPaymentPercent != null)
                    hashCode = hashCode * 59 + this.MinimumRepayPeriodPaymentPercent.GetHashCode();
                if (this.MonthsAppliedToPrepaymentPenaltyFeeCount != null)
                    hashCode = hashCode * 59 + this.MonthsAppliedToPrepaymentPenaltyFeeCount.GetHashCode();
                if (this.NegativeAmortizationLimitPercent != null)
                    hashCode = hashCode * 59 + this.NegativeAmortizationLimitPercent.GetHashCode();
                if (this.NmlsDocumentationType != null)
                    hashCode = hashCode * 59 + this.NmlsDocumentationType.GetHashCode();
                if (this.NmlsFirstMortgageType != null)
                    hashCode = hashCode * 59 + this.NmlsFirstMortgageType.GetHashCode();
                if (this.NmlsLoanType != null)
                    hashCode = hashCode * 59 + this.NmlsLoanType.GetHashCode();
                if (this.NmlsOptionARMIndicator != null)
                    hashCode = hashCode * 59 + this.NmlsOptionARMIndicator.GetHashCode();
                if (this.NmlsPiggyBackOrFundedHELOCIndicator != null)
                    hashCode = hashCode * 59 + this.NmlsPiggyBackOrFundedHELOCIndicator.GetHashCode();
                if (this.NmlsProductionSoldToType != null)
                    hashCode = hashCode * 59 + this.NmlsProductionSoldToType.GetHashCode();
                if (this.NmlsRefinancePurposeType != null)
                    hashCode = hashCode * 59 + this.NmlsRefinancePurposeType.GetHashCode();
                if (this.NmlsReverseMortgageType != null)
                    hashCode = hashCode * 59 + this.NmlsReverseMortgageType.GetHashCode();
                if (this.InitialApplicationAmount != null)
                    hashCode = hashCode * 59 + this.InitialApplicationAmount.GetHashCode();
                if (this.NetInitialAndFinal != null)
                    hashCode = hashCode * 59 + this.NetInitialAndFinal.GetHashCode();
                if (this.InquiryOrPreQualificationIndicator != null)
                    hashCode = hashCode * 59 + this.InquiryOrPreQualificationIndicator.GetHashCode();
                if (this.OralRequestForExtensionOfCreditIndicator != null)
                    hashCode = hashCode * 59 + this.OralRequestForExtensionOfCreditIndicator.GetHashCode();
                if (this.ExcludeLoanFromNMLSReportIndicator != null)
                    hashCode = hashCode * 59 + this.ExcludeLoanFromNMLSReportIndicator.GetHashCode();
                if (this.OverLimitCharge != null)
                    hashCode = hashCode * 59 + this.OverLimitCharge.GetHashCode();
                if (this.OverLimitReturnCharge != null)
                    hashCode = hashCode * 59 + this.OverLimitReturnCharge.GetHashCode();
                if (this.PaymentAdjustmentDurationMonthsCount != null)
                    hashCode = hashCode * 59 + this.PaymentAdjustmentDurationMonthsCount.GetHashCode();
                if (this.PaymentAdjustmentPeriodicCapPercent != null)
                    hashCode = hashCode * 59 + this.PaymentAdjustmentPeriodicCapPercent.GetHashCode();
                if (this.PaymentFrequencyType != null)
                    hashCode = hashCode * 59 + this.PaymentFrequencyType.GetHashCode();
                if (this.PrepaymentPenalties != null)
                    hashCode = hashCode * 59 + this.PrepaymentPenalties.GetHashCode();
                if (this.PrepaymentPenaltyBasedOn != null)
                    hashCode = hashCode * 59 + this.PrepaymentPenaltyBasedOn.GetHashCode();
                if (this.PrepaymentPenaltyIndicator != null)
                    hashCode = hashCode * 59 + this.PrepaymentPenaltyIndicator.GetHashCode();
                if (this.PrepaymentPenaltyPercent != null)
                    hashCode = hashCode * 59 + this.PrepaymentPenaltyPercent.GetHashCode();
                if (this.PrepaymentPenaltyTermMonthsCount != null)
                    hashCode = hashCode * 59 + this.PrepaymentPenaltyTermMonthsCount.GetHashCode();
                if (this.PrepaymentPenaltyVerbiage != null)
                    hashCode = hashCode * 59 + this.PrepaymentPenaltyVerbiage.GetHashCode();
                if (this.ProductName != null)
                    hashCode = hashCode * 59 + this.ProductName.GetHashCode();
                if (this.QualifyingRatePercent != null)
                    hashCode = hashCode * 59 + this.QualifyingRatePercent.GetHashCode();
                if (this.RateAdjustmentDurationMonthsCount != null)
                    hashCode = hashCode * 59 + this.RateAdjustmentDurationMonthsCount.GetHashCode();
                if (this.RateAdjustmentLifetimeCapPercent != null)
                    hashCode = hashCode * 59 + this.RateAdjustmentLifetimeCapPercent.GetHashCode();
                if (this.RateAdjustmentPercent != null)
                    hashCode = hashCode * 59 + this.RateAdjustmentPercent.GetHashCode();
                if (this.RateAdjustmentPercentUI != null)
                    hashCode = hashCode * 59 + this.RateAdjustmentPercentUI.GetHashCode();
                if (this.RateAdjustmentSubsequentCapPercent != null)
                    hashCode = hashCode * 59 + this.RateAdjustmentSubsequentCapPercent.GetHashCode();
                if (this.RateAdjustmentSubsequentCapPercentUI != null)
                    hashCode = hashCode * 59 + this.RateAdjustmentSubsequentCapPercentUI.GetHashCode();
                if (this.ReleaseRecoringCharge != null)
                    hashCode = hashCode * 59 + this.ReleaseRecoringCharge.GetHashCode();
                if (this.RemainingBuydownAmount != null)
                    hashCode = hashCode * 59 + this.RemainingBuydownAmount.GetHashCode();
                if (this.RepayPeriodMonthsCount != null)
                    hashCode = hashCode * 59 + this.RepayPeriodMonthsCount.GetHashCode();
                if (this.ReturnedCheckCharge != null)
                    hashCode = hashCode * 59 + this.ReturnedCheckCharge.GetHashCode();
                if (this.ReturnedCheckChargeRatePercent != null)
                    hashCode = hashCode * 59 + this.ReturnedCheckChargeRatePercent.GetHashCode();
                if (this.ReturnedCheckMaxCharge != null)
                    hashCode = hashCode * 59 + this.ReturnedCheckMaxCharge.GetHashCode();
                if (this.ReturnedCheckMinCharge != null)
                    hashCode = hashCode * 59 + this.ReturnedCheckMinCharge.GetHashCode();
                if (this.RoundPercent != null)
                    hashCode = hashCode * 59 + this.RoundPercent.GetHashCode();
                if (this.RoundType != null)
                    hashCode = hashCode * 59 + this.RoundType.GetHashCode();
                if (this.ScheduledFirstPaymentAdjustmentDate != null)
                    hashCode = hashCode * 59 + this.ScheduledFirstPaymentAdjustmentDate.GetHashCode();
                if (this.ScheduledFirstPaymentDate != null)
                    hashCode = hashCode * 59 + this.ScheduledFirstPaymentDate.GetHashCode();
                if (this.StopPaymentCharge != null)
                    hashCode = hashCode * 59 + this.StopPaymentCharge.GetHashCode();
                if (this.SubsequentRateAdjustmentMonthsCount != null)
                    hashCode = hashCode * 59 + this.SubsequentRateAdjustmentMonthsCount.GetHashCode();
                if (this.TerminationFeeAmount != null)
                    hashCode = hashCode * 59 + this.TerminationFeeAmount.GetHashCode();
                if (this.TerminationPeriodMonthsCount != null)
                    hashCode = hashCode * 59 + this.TerminationPeriodMonthsCount.GetHashCode();
                if (this.ThirdPartyFeeFromAmount != null)
                    hashCode = hashCode * 59 + this.ThirdPartyFeeFromAmount.GetHashCode();
                if (this.ThirdPartyFeeToAmount != null)
                    hashCode = hashCode * 59 + this.ThirdPartyFeeToAmount.GetHashCode();
                if (this.TimelyPaymentRateReductionPercent != null)
                    hashCode = hashCode * 59 + this.TimelyPaymentRateReductionPercent.GetHashCode();
                if (this.TimelyPaymentRewards != null)
                    hashCode = hashCode * 59 + this.TimelyPaymentRewards.GetHashCode();
                if (this.TotalSubsidyAmount != null)
                    hashCode = hashCode * 59 + this.TotalSubsidyAmount.GetHashCode();
                if (this.WireFee != null)
                    hashCode = hashCode * 59 + this.WireFee.GetHashCode();
                if (this.ParticipationFees != null)
                    hashCode = hashCode * 59 + this.ParticipationFees.GetHashCode();
                if (this.TransactionFees != null)
                    hashCode = hashCode * 59 + this.TransactionFees.GetHashCode();
                if (this.NmlsPropertyType != null)
                    hashCode = hashCode * 59 + this.NmlsPropertyType.GetHashCode();
                if (this.NmlsLienStatus != null)
                    hashCode = hashCode * 59 + this.NmlsLienStatus.GetHashCode();
                if (this.HelocPaymentBasis != null)
                    hashCode = hashCode * 59 + this.HelocPaymentBasis.GetHashCode();
                if (this.HelocRate != null)
                    hashCode = hashCode * 59 + this.HelocRate.GetHashCode();
                if (this.HelocCalcSign != null)
                    hashCode = hashCode * 59 + this.HelocCalcSign.GetHashCode();
                if (this.HelocPercent != null)
                    hashCode = hashCode * 59 + this.HelocPercent.GetHashCode();
                if (this.HelocInterestOnly != null)
                    hashCode = hashCode * 59 + this.HelocInterestOnly.GetHashCode();
                if (this.HelocFractionBalancedividend != null)
                    hashCode = hashCode * 59 + this.HelocFractionBalancedividend.GetHashCode();
                if (this.HelocFractionBalancedivisor != null)
                    hashCode = hashCode * 59 + this.HelocFractionBalancedivisor.GetHashCode();
                if (this.HelocPercentageofBalance != null)
                    hashCode = hashCode * 59 + this.HelocPercentageofBalance.GetHashCode();
                if (this.HelocForceMinimumPayment != null)
                    hashCode = hashCode * 59 + this.HelocForceMinimumPayment.GetHashCode();
                if (this.HelocQualifyingBalance != null)
                    hashCode = hashCode * 59 + this.HelocQualifyingBalance.GetHashCode();
                if (this.HelocQualifyingTerm != null)
                    hashCode = hashCode * 59 + this.HelocQualifyingTerm.GetHashCode();
                if (this.HelocInitialPaymentBasis != null)
                    hashCode = hashCode * 59 + this.HelocInitialPaymentBasis.GetHashCode();
                if (this.HelocInitialRate != null)
                    hashCode = hashCode * 59 + this.HelocInitialRate.GetHashCode();
                if (this.HelocInitialCalcSign != null)
                    hashCode = hashCode * 59 + this.HelocInitialCalcSign.GetHashCode();
                if (this.HelocInitialPercent != null)
                    hashCode = hashCode * 59 + this.HelocInitialPercent.GetHashCode();
                if (this.HelocInitialPI != null)
                    hashCode = hashCode * 59 + this.HelocInitialPI.GetHashCode();
                if (this.HelocInitialFractionBalancedividend != null)
                    hashCode = hashCode * 59 + this.HelocInitialFractionBalancedividend.GetHashCode();
                if (this.HelocInitialFractionBalancedivisor != null)
                    hashCode = hashCode * 59 + this.HelocInitialFractionBalancedivisor.GetHashCode();
                if (this.HelocInitialPercentageofBalance != null)
                    hashCode = hashCode * 59 + this.HelocInitialPercentageofBalance.GetHashCode();
                if (this.HelocInitialForceMinimumPayment != null)
                    hashCode = hashCode * 59 + this.HelocInitialForceMinimumPayment.GetHashCode();
                if (this.HelocInitialBalanceUsed != null)
                    hashCode = hashCode * 59 + this.HelocInitialBalanceUsed.GetHashCode();
                if (this.HelocInitialTerm != null)
                    hashCode = hashCode * 59 + this.HelocInitialTerm.GetHashCode();
                if (this.HelocInitPerDiemCalculationMethodType != null)
                    hashCode = hashCode * 59 + this.HelocInitPerDiemCalculationMethodType.GetHashCode();
                if (this.HelocNewFinancingNotLinkedDrawAmount != null)
                    hashCode = hashCode * 59 + this.HelocNewFinancingNotLinkedDrawAmount.GetHashCode();
                if (this.HelocNewFinancingNotLinkedCreditLimit != null)
                    hashCode = hashCode * 59 + this.HelocNewFinancingNotLinkedCreditLimit.GetHashCode();
                if (this.AmountApplyToDownPayment != null)
                    hashCode = hashCode * 59 + this.AmountApplyToDownPayment.GetHashCode();
                if (this.HELOCLienPosition != null)
                    hashCode = hashCode * 59 + this.HELOCLienPosition.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
