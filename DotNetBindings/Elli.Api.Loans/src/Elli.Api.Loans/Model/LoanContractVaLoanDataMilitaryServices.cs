/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractVaLoanDataMilitaryServices
    /// </summary>
    [DataContract]
    public partial class LoanContractVaLoanDataMilitaryServices :  IEquatable<LoanContractVaLoanDataMilitaryServices>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Branch
        /// </summary>
        [DataMember(Name="branch", EmitDefaultValue=false)]
        public string Branch { get; set; }

        /// <summary>
        /// Gets or Sets EndDate
        /// </summary>
        [DataMember(Name="endDate", EmitDefaultValue=false)]
        public DateTime? EndDate { get; set; }

        /// <summary>
        /// Gets or Sets MilitaryServiceIndex
        /// </summary>
        [DataMember(Name="militaryServiceIndex", EmitDefaultValue=false)]
        public int? MilitaryServiceIndex { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets OfficerOrEnlisted
        /// </summary>
        [DataMember(Name="officerOrEnlisted", EmitDefaultValue=false)]
        public string OfficerOrEnlisted { get; set; }

        /// <summary>
        /// Gets or Sets ServiceNumber
        /// </summary>
        [DataMember(Name="serviceNumber", EmitDefaultValue=false)]
        public string ServiceNumber { get; set; }

        /// <summary>
        /// Gets or Sets SSN
        /// </summary>
        [DataMember(Name="sSN", EmitDefaultValue=false)]
        public string SSN { get; set; }

        /// <summary>
        /// Gets or Sets StartDate
        /// </summary>
        [DataMember(Name="startDate", EmitDefaultValue=false)]
        public DateTime? StartDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractVaLoanDataMilitaryServices {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Branch: ").Append(Branch).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("  MilitaryServiceIndex: ").Append(MilitaryServiceIndex).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  OfficerOrEnlisted: ").Append(OfficerOrEnlisted).Append("\n");
            sb.Append("  ServiceNumber: ").Append(ServiceNumber).Append("\n");
            sb.Append("  SSN: ").Append(SSN).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractVaLoanDataMilitaryServices);
        }

        /// <summary>
        /// Returns true if LoanContractVaLoanDataMilitaryServices instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractVaLoanDataMilitaryServices to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractVaLoanDataMilitaryServices input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Branch == input.Branch ||
                    (this.Branch != null &&
                    this.Branch.Equals(input.Branch))
                ) && 
                (
                    this.EndDate == input.EndDate ||
                    (this.EndDate != null &&
                    this.EndDate.Equals(input.EndDate))
                ) && 
                (
                    this.MilitaryServiceIndex == input.MilitaryServiceIndex ||
                    (this.MilitaryServiceIndex != null &&
                    this.MilitaryServiceIndex.Equals(input.MilitaryServiceIndex))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.OfficerOrEnlisted == input.OfficerOrEnlisted ||
                    (this.OfficerOrEnlisted != null &&
                    this.OfficerOrEnlisted.Equals(input.OfficerOrEnlisted))
                ) && 
                (
                    this.ServiceNumber == input.ServiceNumber ||
                    (this.ServiceNumber != null &&
                    this.ServiceNumber.Equals(input.ServiceNumber))
                ) && 
                (
                    this.SSN == input.SSN ||
                    (this.SSN != null &&
                    this.SSN.Equals(input.SSN))
                ) && 
                (
                    this.StartDate == input.StartDate ||
                    (this.StartDate != null &&
                    this.StartDate.Equals(input.StartDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Branch != null)
                    hashCode = hashCode * 59 + this.Branch.GetHashCode();
                if (this.EndDate != null)
                    hashCode = hashCode * 59 + this.EndDate.GetHashCode();
                if (this.MilitaryServiceIndex != null)
                    hashCode = hashCode * 59 + this.MilitaryServiceIndex.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.OfficerOrEnlisted != null)
                    hashCode = hashCode * 59 + this.OfficerOrEnlisted.GetHashCode();
                if (this.ServiceNumber != null)
                    hashCode = hashCode * 59 + this.ServiceNumber.GetHashCode();
                if (this.SSN != null)
                    hashCode = hashCode * 59 + this.SSN.GetHashCode();
                if (this.StartDate != null)
                    hashCode = hashCode * 59 + this.StartDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
