/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractHomeCounselingProviders
    /// </summary>
    [DataContract]
    public partial class LoanContractHomeCounselingProviders :  IEquatable<LoanContractHomeCounselingProviders>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets HomeCounselingProviderIndex
        /// </summary>
        [DataMember(Name="homeCounselingProviderIndex", EmitDefaultValue=false)]
        public int? HomeCounselingProviderIndex { get; set; }

        /// <summary>
        /// Gets or Sets SelectedIndicator
        /// </summary>
        [DataMember(Name="selectedIndicator", EmitDefaultValue=false)]
        public bool? SelectedIndicator { get; set; }

        /// <summary>
        /// Gets or Sets AgencyName
        /// </summary>
        [DataMember(Name="agencyName", EmitDefaultValue=false)]
        public string AgencyName { get; set; }

        /// <summary>
        /// Gets or Sets AgencyAddress
        /// </summary>
        [DataMember(Name="agencyAddress", EmitDefaultValue=false)]
        public string AgencyAddress { get; set; }

        /// <summary>
        /// Gets or Sets AgencyAddressCity
        /// </summary>
        [DataMember(Name="agencyAddressCity", EmitDefaultValue=false)]
        public string AgencyAddressCity { get; set; }

        /// <summary>
        /// Gets or Sets AgencyAddressState
        /// </summary>
        [DataMember(Name="agencyAddressState", EmitDefaultValue=false)]
        public string AgencyAddressState { get; set; }

        /// <summary>
        /// Gets or Sets AgencyAddressPostalCode
        /// </summary>
        [DataMember(Name="agencyAddressPostalCode", EmitDefaultValue=false)]
        public string AgencyAddressPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets AgencyPhoneDirect
        /// </summary>
        [DataMember(Name="agencyPhoneDirect", EmitDefaultValue=false)]
        public string AgencyPhoneDirect { get; set; }

        /// <summary>
        /// Gets or Sets AgencyPhoneTollFree
        /// </summary>
        [DataMember(Name="agencyPhoneTollFree", EmitDefaultValue=false)]
        public string AgencyPhoneTollFree { get; set; }

        /// <summary>
        /// Gets or Sets AgencyFax
        /// </summary>
        [DataMember(Name="agencyFax", EmitDefaultValue=false)]
        public string AgencyFax { get; set; }

        /// <summary>
        /// Gets or Sets AgencyEmail
        /// </summary>
        [DataMember(Name="agencyEmail", EmitDefaultValue=false)]
        public string AgencyEmail { get; set; }

        /// <summary>
        /// Gets or Sets AgencyWebAddress
        /// </summary>
        [DataMember(Name="agencyWebAddress", EmitDefaultValue=false)]
        public string AgencyWebAddress { get; set; }

        /// <summary>
        /// Gets or Sets LanguagesSupported
        /// </summary>
        [DataMember(Name="languagesSupported", EmitDefaultValue=false)]
        public string LanguagesSupported { get; set; }

        /// <summary>
        /// Gets or Sets CounselingServicesProvided
        /// </summary>
        [DataMember(Name="counselingServicesProvided", EmitDefaultValue=false)]
        public string CounselingServicesProvided { get; set; }

        /// <summary>
        /// Gets or Sets AgencyAffiliationIndicator
        /// </summary>
        [DataMember(Name="agencyAffiliationIndicator", EmitDefaultValue=false)]
        public bool? AgencyAffiliationIndicator { get; set; }

        /// <summary>
        /// Gets or Sets AgencyAffiliationDescription
        /// </summary>
        [DataMember(Name="agencyAffiliationDescription", EmitDefaultValue=false)]
        public string AgencyAffiliationDescription { get; set; }

        /// <summary>
        /// Gets or Sets AgencySource
        /// </summary>
        [DataMember(Name="agencySource", EmitDefaultValue=false)]
        public string AgencySource { get; set; }

        /// <summary>
        /// Gets or Sets DistanceMiles
        /// </summary>
        [DataMember(Name="distanceMiles", EmitDefaultValue=false)]
        public double? DistanceMiles { get; set; }

        /// <summary>
        /// Gets or Sets AgencyId
        /// </summary>
        [DataMember(Name="agencyId", EmitDefaultValue=false)]
        public string AgencyId { get; set; }

        /// <summary>
        /// Gets or Sets HomeCounselingProviderId
        /// </summary>
        [DataMember(Name="homeCounselingProviderId", EmitDefaultValue=false)]
        public string HomeCounselingProviderId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractHomeCounselingProviders {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  HomeCounselingProviderIndex: ").Append(HomeCounselingProviderIndex).Append("\n");
            sb.Append("  SelectedIndicator: ").Append(SelectedIndicator).Append("\n");
            sb.Append("  AgencyName: ").Append(AgencyName).Append("\n");
            sb.Append("  AgencyAddress: ").Append(AgencyAddress).Append("\n");
            sb.Append("  AgencyAddressCity: ").Append(AgencyAddressCity).Append("\n");
            sb.Append("  AgencyAddressState: ").Append(AgencyAddressState).Append("\n");
            sb.Append("  AgencyAddressPostalCode: ").Append(AgencyAddressPostalCode).Append("\n");
            sb.Append("  AgencyPhoneDirect: ").Append(AgencyPhoneDirect).Append("\n");
            sb.Append("  AgencyPhoneTollFree: ").Append(AgencyPhoneTollFree).Append("\n");
            sb.Append("  AgencyFax: ").Append(AgencyFax).Append("\n");
            sb.Append("  AgencyEmail: ").Append(AgencyEmail).Append("\n");
            sb.Append("  AgencyWebAddress: ").Append(AgencyWebAddress).Append("\n");
            sb.Append("  LanguagesSupported: ").Append(LanguagesSupported).Append("\n");
            sb.Append("  CounselingServicesProvided: ").Append(CounselingServicesProvided).Append("\n");
            sb.Append("  AgencyAffiliationIndicator: ").Append(AgencyAffiliationIndicator).Append("\n");
            sb.Append("  AgencyAffiliationDescription: ").Append(AgencyAffiliationDescription).Append("\n");
            sb.Append("  AgencySource: ").Append(AgencySource).Append("\n");
            sb.Append("  DistanceMiles: ").Append(DistanceMiles).Append("\n");
            sb.Append("  AgencyId: ").Append(AgencyId).Append("\n");
            sb.Append("  HomeCounselingProviderId: ").Append(HomeCounselingProviderId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractHomeCounselingProviders);
        }

        /// <summary>
        /// Returns true if LoanContractHomeCounselingProviders instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractHomeCounselingProviders to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractHomeCounselingProviders input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.HomeCounselingProviderIndex == input.HomeCounselingProviderIndex ||
                    (this.HomeCounselingProviderIndex != null &&
                    this.HomeCounselingProviderIndex.Equals(input.HomeCounselingProviderIndex))
                ) && 
                (
                    this.SelectedIndicator == input.SelectedIndicator ||
                    (this.SelectedIndicator != null &&
                    this.SelectedIndicator.Equals(input.SelectedIndicator))
                ) && 
                (
                    this.AgencyName == input.AgencyName ||
                    (this.AgencyName != null &&
                    this.AgencyName.Equals(input.AgencyName))
                ) && 
                (
                    this.AgencyAddress == input.AgencyAddress ||
                    (this.AgencyAddress != null &&
                    this.AgencyAddress.Equals(input.AgencyAddress))
                ) && 
                (
                    this.AgencyAddressCity == input.AgencyAddressCity ||
                    (this.AgencyAddressCity != null &&
                    this.AgencyAddressCity.Equals(input.AgencyAddressCity))
                ) && 
                (
                    this.AgencyAddressState == input.AgencyAddressState ||
                    (this.AgencyAddressState != null &&
                    this.AgencyAddressState.Equals(input.AgencyAddressState))
                ) && 
                (
                    this.AgencyAddressPostalCode == input.AgencyAddressPostalCode ||
                    (this.AgencyAddressPostalCode != null &&
                    this.AgencyAddressPostalCode.Equals(input.AgencyAddressPostalCode))
                ) && 
                (
                    this.AgencyPhoneDirect == input.AgencyPhoneDirect ||
                    (this.AgencyPhoneDirect != null &&
                    this.AgencyPhoneDirect.Equals(input.AgencyPhoneDirect))
                ) && 
                (
                    this.AgencyPhoneTollFree == input.AgencyPhoneTollFree ||
                    (this.AgencyPhoneTollFree != null &&
                    this.AgencyPhoneTollFree.Equals(input.AgencyPhoneTollFree))
                ) && 
                (
                    this.AgencyFax == input.AgencyFax ||
                    (this.AgencyFax != null &&
                    this.AgencyFax.Equals(input.AgencyFax))
                ) && 
                (
                    this.AgencyEmail == input.AgencyEmail ||
                    (this.AgencyEmail != null &&
                    this.AgencyEmail.Equals(input.AgencyEmail))
                ) && 
                (
                    this.AgencyWebAddress == input.AgencyWebAddress ||
                    (this.AgencyWebAddress != null &&
                    this.AgencyWebAddress.Equals(input.AgencyWebAddress))
                ) && 
                (
                    this.LanguagesSupported == input.LanguagesSupported ||
                    (this.LanguagesSupported != null &&
                    this.LanguagesSupported.Equals(input.LanguagesSupported))
                ) && 
                (
                    this.CounselingServicesProvided == input.CounselingServicesProvided ||
                    (this.CounselingServicesProvided != null &&
                    this.CounselingServicesProvided.Equals(input.CounselingServicesProvided))
                ) && 
                (
                    this.AgencyAffiliationIndicator == input.AgencyAffiliationIndicator ||
                    (this.AgencyAffiliationIndicator != null &&
                    this.AgencyAffiliationIndicator.Equals(input.AgencyAffiliationIndicator))
                ) && 
                (
                    this.AgencyAffiliationDescription == input.AgencyAffiliationDescription ||
                    (this.AgencyAffiliationDescription != null &&
                    this.AgencyAffiliationDescription.Equals(input.AgencyAffiliationDescription))
                ) && 
                (
                    this.AgencySource == input.AgencySource ||
                    (this.AgencySource != null &&
                    this.AgencySource.Equals(input.AgencySource))
                ) && 
                (
                    this.DistanceMiles == input.DistanceMiles ||
                    (this.DistanceMiles != null &&
                    this.DistanceMiles.Equals(input.DistanceMiles))
                ) && 
                (
                    this.AgencyId == input.AgencyId ||
                    (this.AgencyId != null &&
                    this.AgencyId.Equals(input.AgencyId))
                ) && 
                (
                    this.HomeCounselingProviderId == input.HomeCounselingProviderId ||
                    (this.HomeCounselingProviderId != null &&
                    this.HomeCounselingProviderId.Equals(input.HomeCounselingProviderId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.HomeCounselingProviderIndex != null)
                    hashCode = hashCode * 59 + this.HomeCounselingProviderIndex.GetHashCode();
                if (this.SelectedIndicator != null)
                    hashCode = hashCode * 59 + this.SelectedIndicator.GetHashCode();
                if (this.AgencyName != null)
                    hashCode = hashCode * 59 + this.AgencyName.GetHashCode();
                if (this.AgencyAddress != null)
                    hashCode = hashCode * 59 + this.AgencyAddress.GetHashCode();
                if (this.AgencyAddressCity != null)
                    hashCode = hashCode * 59 + this.AgencyAddressCity.GetHashCode();
                if (this.AgencyAddressState != null)
                    hashCode = hashCode * 59 + this.AgencyAddressState.GetHashCode();
                if (this.AgencyAddressPostalCode != null)
                    hashCode = hashCode * 59 + this.AgencyAddressPostalCode.GetHashCode();
                if (this.AgencyPhoneDirect != null)
                    hashCode = hashCode * 59 + this.AgencyPhoneDirect.GetHashCode();
                if (this.AgencyPhoneTollFree != null)
                    hashCode = hashCode * 59 + this.AgencyPhoneTollFree.GetHashCode();
                if (this.AgencyFax != null)
                    hashCode = hashCode * 59 + this.AgencyFax.GetHashCode();
                if (this.AgencyEmail != null)
                    hashCode = hashCode * 59 + this.AgencyEmail.GetHashCode();
                if (this.AgencyWebAddress != null)
                    hashCode = hashCode * 59 + this.AgencyWebAddress.GetHashCode();
                if (this.LanguagesSupported != null)
                    hashCode = hashCode * 59 + this.LanguagesSupported.GetHashCode();
                if (this.CounselingServicesProvided != null)
                    hashCode = hashCode * 59 + this.CounselingServicesProvided.GetHashCode();
                if (this.AgencyAffiliationIndicator != null)
                    hashCode = hashCode * 59 + this.AgencyAffiliationIndicator.GetHashCode();
                if (this.AgencyAffiliationDescription != null)
                    hashCode = hashCode * 59 + this.AgencyAffiliationDescription.GetHashCode();
                if (this.AgencySource != null)
                    hashCode = hashCode * 59 + this.AgencySource.GetHashCode();
                if (this.DistanceMiles != null)
                    hashCode = hashCode * 59 + this.DistanceMiles.GetHashCode();
                if (this.AgencyId != null)
                    hashCode = hashCode * 59 + this.AgencyId.GetHashCode();
                if (this.HomeCounselingProviderId != null)
                    hashCode = hashCode * 59 + this.HomeCounselingProviderId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
