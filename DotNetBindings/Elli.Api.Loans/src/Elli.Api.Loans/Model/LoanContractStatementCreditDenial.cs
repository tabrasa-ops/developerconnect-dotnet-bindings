/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractStatementCreditDenial
    /// </summary>
    [DataContract]
    public partial class LoanContractStatementCreditDenial :  IEquatable<LoanContractStatementCreditDenial>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalStatement
        /// </summary>
        [DataMember(Name="additionalStatement", EmitDefaultValue=false)]
        public bool? AdditionalStatement { get; set; }

        /// <summary>
        /// Gets or Sets Bankruptcy
        /// </summary>
        [DataMember(Name="bankruptcy", EmitDefaultValue=false)]
        public bool? Bankruptcy { get; set; }

        /// <summary>
        /// Gets or Sets CollateralNotSufficient
        /// </summary>
        [DataMember(Name="collateralNotSufficient", EmitDefaultValue=false)]
        public bool? CollateralNotSufficient { get; set; }

        /// <summary>
        /// Gets or Sets CreditApplicationIncomplete
        /// </summary>
        [DataMember(Name="creditApplicationIncomplete", EmitDefaultValue=false)]
        public bool? CreditApplicationIncomplete { get; set; }

        /// <summary>
        /// Gets or Sets CreditReportObtainedFromConsumerReportingAgency
        /// </summary>
        [DataMember(Name="creditReportObtainedFromConsumerReportingAgency", EmitDefaultValue=false)]
        public bool? CreditReportObtainedFromConsumerReportingAgency { get; set; }

        /// <summary>
        /// Gets or Sets DelinquentCreditObligations
        /// </summary>
        [DataMember(Name="delinquentCreditObligations", EmitDefaultValue=false)]
        public bool? DelinquentCreditObligations { get; set; }

        /// <summary>
        /// Gets or Sets DenialDate
        /// </summary>
        [DataMember(Name="denialDate", EmitDefaultValue=false)]
        public DateTime? DenialDate { get; set; }

        /// <summary>
        /// Gets or Sets DenialDescription
        /// </summary>
        [DataMember(Name="denialDescription", EmitDefaultValue=false)]
        public string DenialDescription { get; set; }

        /// <summary>
        /// Gets or Sets DenialMailedOn
        /// </summary>
        [DataMember(Name="denialMailedOn", EmitDefaultValue=false)]
        public DateTime? DenialMailedOn { get; set; }

        /// <summary>
        /// Gets or Sets DenialOther1
        /// </summary>
        [DataMember(Name="denialOther1", EmitDefaultValue=false)]
        public bool? DenialOther1 { get; set; }

        /// <summary>
        /// Gets or Sets DenialOther2
        /// </summary>
        [DataMember(Name="denialOther2", EmitDefaultValue=false)]
        public bool? DenialOther2 { get; set; }

        /// <summary>
        /// Gets or Sets DenialOtherDesc1
        /// </summary>
        [DataMember(Name="denialOtherDesc1", EmitDefaultValue=false)]
        public string DenialOtherDesc1 { get; set; }

        /// <summary>
        /// Gets or Sets DenialOtherDesc2
        /// </summary>
        [DataMember(Name="denialOtherDesc2", EmitDefaultValue=false)]
        public string DenialOtherDesc2 { get; set; }

        /// <summary>
        /// Gets or Sets DeniedBy
        /// </summary>
        [DataMember(Name="deniedBy", EmitDefaultValue=false)]
        public string DeniedBy { get; set; }

        /// <summary>
        /// Gets or Sets DeniedByFhlmc
        /// </summary>
        [DataMember(Name="deniedByFhlmc", EmitDefaultValue=false)]
        public bool? DeniedByFhlmc { get; set; }

        /// <summary>
        /// Gets or Sets DeniedByFnma
        /// </summary>
        [DataMember(Name="deniedByFnma", EmitDefaultValue=false)]
        public bool? DeniedByFnma { get; set; }

        /// <summary>
        /// Gets or Sets DeniedByHud
        /// </summary>
        [DataMember(Name="deniedByHud", EmitDefaultValue=false)]
        public bool? DeniedByHud { get; set; }

        /// <summary>
        /// Gets or Sets DeniedByOther
        /// </summary>
        [DataMember(Name="deniedByOther", EmitDefaultValue=false)]
        public bool? DeniedByOther { get; set; }

        /// <summary>
        /// Gets or Sets DeniedByVa
        /// </summary>
        [DataMember(Name="deniedByVa", EmitDefaultValue=false)]
        public bool? DeniedByVa { get; set; }

        /// <summary>
        /// Gets or Sets DescriptionofAccount1
        /// </summary>
        [DataMember(Name="descriptionofAccount1", EmitDefaultValue=false)]
        public string DescriptionofAccount1 { get; set; }

        /// <summary>
        /// Gets or Sets DescriptionofAccount2
        /// </summary>
        [DataMember(Name="descriptionofAccount2", EmitDefaultValue=false)]
        public string DescriptionofAccount2 { get; set; }

        /// <summary>
        /// Gets or Sets DescriptionofAccount3
        /// </summary>
        [DataMember(Name="descriptionofAccount3", EmitDefaultValue=false)]
        public string DescriptionofAccount3 { get; set; }

        /// <summary>
        /// Gets or Sets DescriptionofActionTaken1
        /// </summary>
        [DataMember(Name="descriptionofActionTaken1", EmitDefaultValue=false)]
        public string DescriptionofActionTaken1 { get; set; }

        /// <summary>
        /// Gets or Sets DescriptionofActionTaken2
        /// </summary>
        [DataMember(Name="descriptionofActionTaken2", EmitDefaultValue=false)]
        public string DescriptionofActionTaken2 { get; set; }

        /// <summary>
        /// Gets or Sets EcoaAddress
        /// </summary>
        [DataMember(Name="ecoaAddress", EmitDefaultValue=false)]
        public string EcoaAddress { get; set; }

        /// <summary>
        /// Gets or Sets EcoaAddress2
        /// </summary>
        [DataMember(Name="ecoaAddress2", EmitDefaultValue=false)]
        public string EcoaAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets EcoaCity
        /// </summary>
        [DataMember(Name="ecoaCity", EmitDefaultValue=false)]
        public string EcoaCity { get; set; }

        /// <summary>
        /// Gets or Sets EcoaName
        /// </summary>
        [DataMember(Name="ecoaName", EmitDefaultValue=false)]
        public string EcoaName { get; set; }

        /// <summary>
        /// Gets or Sets EcoaPhone
        /// </summary>
        [DataMember(Name="ecoaPhone", EmitDefaultValue=false)]
        public string EcoaPhone { get; set; }

        /// <summary>
        /// Gets or Sets EcoaPostalCode
        /// </summary>
        [DataMember(Name="ecoaPostalCode", EmitDefaultValue=false)]
        public string EcoaPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets EcoaState
        /// </summary>
        [DataMember(Name="ecoaState", EmitDefaultValue=false)]
        public string EcoaState { get; set; }

        /// <summary>
        /// Gets or Sets ExcessiveObligations
        /// </summary>
        [DataMember(Name="excessiveObligations", EmitDefaultValue=false)]
        public bool? ExcessiveObligations { get; set; }

        /// <summary>
        /// Gets or Sets Garnishment
        /// </summary>
        [DataMember(Name="garnishment", EmitDefaultValue=false)]
        public bool? Garnishment { get; set; }

        /// <summary>
        /// Gets or Sets InadequateCollateral
        /// </summary>
        [DataMember(Name="inadequateCollateral", EmitDefaultValue=false)]
        public bool? InadequateCollateral { get; set; }

        /// <summary>
        /// Gets or Sets InformationFromAConsumerReportingAgency
        /// </summary>
        [DataMember(Name="informationFromAConsumerReportingAgency", EmitDefaultValue=false)]
        public bool? InformationFromAConsumerReportingAgency { get; set; }

        /// <summary>
        /// Gets or Sets InformationObtainedFromOutsideSource
        /// </summary>
        [DataMember(Name="informationObtainedFromOutsideSource", EmitDefaultValue=false)]
        public bool? InformationObtainedFromOutsideSource { get; set; }

        /// <summary>
        /// Gets or Sets InformationObtainedInReportFromCra
        /// </summary>
        [DataMember(Name="informationObtainedInReportFromCra", EmitDefaultValue=false)]
        public bool? InformationObtainedInReportFromCra { get; set; }

        /// <summary>
        /// Gets or Sets InsufficientCreditFile
        /// </summary>
        [DataMember(Name="insufficientCreditFile", EmitDefaultValue=false)]
        public bool? InsufficientCreditFile { get; set; }

        /// <summary>
        /// Gets or Sets InsufficientCreditReference
        /// </summary>
        [DataMember(Name="insufficientCreditReference", EmitDefaultValue=false)]
        public bool? InsufficientCreditReference { get; set; }

        /// <summary>
        /// Gets or Sets InsufficientData
        /// </summary>
        [DataMember(Name="insufficientData", EmitDefaultValue=false)]
        public bool? InsufficientData { get; set; }

        /// <summary>
        /// Gets or Sets InsufficientFundsToCloseLoan
        /// </summary>
        [DataMember(Name="insufficientFundsToCloseLoan", EmitDefaultValue=false)]
        public bool? InsufficientFundsToCloseLoan { get; set; }

        /// <summary>
        /// Gets or Sets InsufficientIncomeForTotalObligations
        /// </summary>
        [DataMember(Name="insufficientIncomeForTotalObligations", EmitDefaultValue=false)]
        public bool? InsufficientIncomeForTotalObligations { get; set; }

        /// <summary>
        /// Gets or Sets InsufficientStabilityOfIncome
        /// </summary>
        [DataMember(Name="insufficientStabilityOfIncome", EmitDefaultValue=false)]
        public bool? InsufficientStabilityOfIncome { get; set; }

        /// <summary>
        /// Gets or Sets LackOfCashReserves
        /// </summary>
        [DataMember(Name="lackOfCashReserves", EmitDefaultValue=false)]
        public bool? LackOfCashReserves { get; set; }

        /// <summary>
        /// Gets or Sets LengthOfEmployment
        /// </summary>
        [DataMember(Name="lengthOfEmployment", EmitDefaultValue=false)]
        public bool? LengthOfEmployment { get; set; }

        /// <summary>
        /// Gets or Sets NoCreditFile
        /// </summary>
        [DataMember(Name="noCreditFile", EmitDefaultValue=false)]
        public bool? NoCreditFile { get; set; }

        /// <summary>
        /// Gets or Sets NumberRecentInquiriesCredit
        /// </summary>
        [DataMember(Name="numberRecentInquiriesCredit", EmitDefaultValue=false)]
        public bool? NumberRecentInquiriesCredit { get; set; }

        /// <summary>
        /// Gets or Sets OtherDescription
        /// </summary>
        [DataMember(Name="otherDescription", EmitDefaultValue=false)]
        public string OtherDescription { get; set; }

        /// <summary>
        /// Gets or Sets PoorCreditPerformance
        /// </summary>
        [DataMember(Name="poorCreditPerformance", EmitDefaultValue=false)]
        public bool? PoorCreditPerformance { get; set; }

        /// <summary>
        /// Gets or Sets TemporaryOrIrregularEmployment
        /// </summary>
        [DataMember(Name="temporaryOrIrregularEmployment", EmitDefaultValue=false)]
        public bool? TemporaryOrIrregularEmployment { get; set; }

        /// <summary>
        /// Gets or Sets TemporaryResidence
        /// </summary>
        [DataMember(Name="temporaryResidence", EmitDefaultValue=false)]
        public bool? TemporaryResidence { get; set; }

        /// <summary>
        /// Gets or Sets ToShortPeriodOfResidence
        /// </summary>
        [DataMember(Name="toShortPeriodOfResidence", EmitDefaultValue=false)]
        public bool? ToShortPeriodOfResidence { get; set; }

        /// <summary>
        /// Gets or Sets UnableToVerifyCreditReferences
        /// </summary>
        [DataMember(Name="unableToVerifyCreditReferences", EmitDefaultValue=false)]
        public bool? UnableToVerifyCreditReferences { get; set; }

        /// <summary>
        /// Gets or Sets UnableToVerifyEmployment
        /// </summary>
        [DataMember(Name="unableToVerifyEmployment", EmitDefaultValue=false)]
        public bool? UnableToVerifyEmployment { get; set; }

        /// <summary>
        /// Gets or Sets UnableToVerifyIncome
        /// </summary>
        [DataMember(Name="unableToVerifyIncome", EmitDefaultValue=false)]
        public bool? UnableToVerifyIncome { get; set; }

        /// <summary>
        /// Gets or Sets UnableToVerifyResidence
        /// </summary>
        [DataMember(Name="unableToVerifyResidence", EmitDefaultValue=false)]
        public bool? UnableToVerifyResidence { get; set; }

        /// <summary>
        /// Gets or Sets UnacceptableAppraisal
        /// </summary>
        [DataMember(Name="unacceptableAppraisal", EmitDefaultValue=false)]
        public bool? UnacceptableAppraisal { get; set; }

        /// <summary>
        /// Gets or Sets UnacceptableCreditReferencesProvided
        /// </summary>
        [DataMember(Name="unacceptableCreditReferencesProvided", EmitDefaultValue=false)]
        public bool? UnacceptableCreditReferencesProvided { get; set; }

        /// <summary>
        /// Gets or Sets UnacceptableLeaseholdEstate
        /// </summary>
        [DataMember(Name="unacceptableLeaseholdEstate", EmitDefaultValue=false)]
        public bool? UnacceptableLeaseholdEstate { get; set; }

        /// <summary>
        /// Gets or Sets UnacceptablePaymentRecordOnPreviousMtg
        /// </summary>
        [DataMember(Name="unacceptablePaymentRecordOnPreviousMtg", EmitDefaultValue=false)]
        public bool? UnacceptablePaymentRecordOnPreviousMtg { get; set; }

        /// <summary>
        /// Gets or Sets UnacceptableProperty
        /// </summary>
        [DataMember(Name="unacceptableProperty", EmitDefaultValue=false)]
        public bool? UnacceptableProperty { get; set; }

        /// <summary>
        /// Gets or Sets WeDoNotGrantCredit
        /// </summary>
        [DataMember(Name="weDoNotGrantCredit", EmitDefaultValue=false)]
        public bool? WeDoNotGrantCredit { get; set; }

        /// <summary>
        /// Gets or Sets WithdrawnByApplicant
        /// </summary>
        [DataMember(Name="withdrawnByApplicant", EmitDefaultValue=false)]
        public bool? WithdrawnByApplicant { get; set; }

        /// <summary>
        /// Gets or Sets LenderInvestorName
        /// </summary>
        [DataMember(Name="lenderInvestorName", EmitDefaultValue=false)]
        public string LenderInvestorName { get; set; }

        /// <summary>
        /// Gets or Sets LenderInvestorAddress
        /// </summary>
        [DataMember(Name="lenderInvestorAddress", EmitDefaultValue=false)]
        public string LenderInvestorAddress { get; set; }

        /// <summary>
        /// Gets or Sets LenderInvestorCity
        /// </summary>
        [DataMember(Name="lenderInvestorCity", EmitDefaultValue=false)]
        public string LenderInvestorCity { get; set; }

        /// <summary>
        /// Gets or Sets LenderInvestorState
        /// </summary>
        [DataMember(Name="lenderInvestorState", EmitDefaultValue=false)]
        public string LenderInvestorState { get; set; }

        /// <summary>
        /// Gets or Sets LenderInvestorPostalCode
        /// </summary>
        [DataMember(Name="lenderInvestorPostalCode", EmitDefaultValue=false)]
        public string LenderInvestorPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets LenderInvestorPhone
        /// </summary>
        [DataMember(Name="lenderInvestorPhone", EmitDefaultValue=false)]
        public string LenderInvestorPhone { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractStatementCreditDenial {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AdditionalStatement: ").Append(AdditionalStatement).Append("\n");
            sb.Append("  Bankruptcy: ").Append(Bankruptcy).Append("\n");
            sb.Append("  CollateralNotSufficient: ").Append(CollateralNotSufficient).Append("\n");
            sb.Append("  CreditApplicationIncomplete: ").Append(CreditApplicationIncomplete).Append("\n");
            sb.Append("  CreditReportObtainedFromConsumerReportingAgency: ").Append(CreditReportObtainedFromConsumerReportingAgency).Append("\n");
            sb.Append("  DelinquentCreditObligations: ").Append(DelinquentCreditObligations).Append("\n");
            sb.Append("  DenialDate: ").Append(DenialDate).Append("\n");
            sb.Append("  DenialDescription: ").Append(DenialDescription).Append("\n");
            sb.Append("  DenialMailedOn: ").Append(DenialMailedOn).Append("\n");
            sb.Append("  DenialOther1: ").Append(DenialOther1).Append("\n");
            sb.Append("  DenialOther2: ").Append(DenialOther2).Append("\n");
            sb.Append("  DenialOtherDesc1: ").Append(DenialOtherDesc1).Append("\n");
            sb.Append("  DenialOtherDesc2: ").Append(DenialOtherDesc2).Append("\n");
            sb.Append("  DeniedBy: ").Append(DeniedBy).Append("\n");
            sb.Append("  DeniedByFhlmc: ").Append(DeniedByFhlmc).Append("\n");
            sb.Append("  DeniedByFnma: ").Append(DeniedByFnma).Append("\n");
            sb.Append("  DeniedByHud: ").Append(DeniedByHud).Append("\n");
            sb.Append("  DeniedByOther: ").Append(DeniedByOther).Append("\n");
            sb.Append("  DeniedByVa: ").Append(DeniedByVa).Append("\n");
            sb.Append("  DescriptionofAccount1: ").Append(DescriptionofAccount1).Append("\n");
            sb.Append("  DescriptionofAccount2: ").Append(DescriptionofAccount2).Append("\n");
            sb.Append("  DescriptionofAccount3: ").Append(DescriptionofAccount3).Append("\n");
            sb.Append("  DescriptionofActionTaken1: ").Append(DescriptionofActionTaken1).Append("\n");
            sb.Append("  DescriptionofActionTaken2: ").Append(DescriptionofActionTaken2).Append("\n");
            sb.Append("  EcoaAddress: ").Append(EcoaAddress).Append("\n");
            sb.Append("  EcoaAddress2: ").Append(EcoaAddress2).Append("\n");
            sb.Append("  EcoaCity: ").Append(EcoaCity).Append("\n");
            sb.Append("  EcoaName: ").Append(EcoaName).Append("\n");
            sb.Append("  EcoaPhone: ").Append(EcoaPhone).Append("\n");
            sb.Append("  EcoaPostalCode: ").Append(EcoaPostalCode).Append("\n");
            sb.Append("  EcoaState: ").Append(EcoaState).Append("\n");
            sb.Append("  ExcessiveObligations: ").Append(ExcessiveObligations).Append("\n");
            sb.Append("  Garnishment: ").Append(Garnishment).Append("\n");
            sb.Append("  InadequateCollateral: ").Append(InadequateCollateral).Append("\n");
            sb.Append("  InformationFromAConsumerReportingAgency: ").Append(InformationFromAConsumerReportingAgency).Append("\n");
            sb.Append("  InformationObtainedFromOutsideSource: ").Append(InformationObtainedFromOutsideSource).Append("\n");
            sb.Append("  InformationObtainedInReportFromCra: ").Append(InformationObtainedInReportFromCra).Append("\n");
            sb.Append("  InsufficientCreditFile: ").Append(InsufficientCreditFile).Append("\n");
            sb.Append("  InsufficientCreditReference: ").Append(InsufficientCreditReference).Append("\n");
            sb.Append("  InsufficientData: ").Append(InsufficientData).Append("\n");
            sb.Append("  InsufficientFundsToCloseLoan: ").Append(InsufficientFundsToCloseLoan).Append("\n");
            sb.Append("  InsufficientIncomeForTotalObligations: ").Append(InsufficientIncomeForTotalObligations).Append("\n");
            sb.Append("  InsufficientStabilityOfIncome: ").Append(InsufficientStabilityOfIncome).Append("\n");
            sb.Append("  LackOfCashReserves: ").Append(LackOfCashReserves).Append("\n");
            sb.Append("  LengthOfEmployment: ").Append(LengthOfEmployment).Append("\n");
            sb.Append("  NoCreditFile: ").Append(NoCreditFile).Append("\n");
            sb.Append("  NumberRecentInquiriesCredit: ").Append(NumberRecentInquiriesCredit).Append("\n");
            sb.Append("  OtherDescription: ").Append(OtherDescription).Append("\n");
            sb.Append("  PoorCreditPerformance: ").Append(PoorCreditPerformance).Append("\n");
            sb.Append("  TemporaryOrIrregularEmployment: ").Append(TemporaryOrIrregularEmployment).Append("\n");
            sb.Append("  TemporaryResidence: ").Append(TemporaryResidence).Append("\n");
            sb.Append("  ToShortPeriodOfResidence: ").Append(ToShortPeriodOfResidence).Append("\n");
            sb.Append("  UnableToVerifyCreditReferences: ").Append(UnableToVerifyCreditReferences).Append("\n");
            sb.Append("  UnableToVerifyEmployment: ").Append(UnableToVerifyEmployment).Append("\n");
            sb.Append("  UnableToVerifyIncome: ").Append(UnableToVerifyIncome).Append("\n");
            sb.Append("  UnableToVerifyResidence: ").Append(UnableToVerifyResidence).Append("\n");
            sb.Append("  UnacceptableAppraisal: ").Append(UnacceptableAppraisal).Append("\n");
            sb.Append("  UnacceptableCreditReferencesProvided: ").Append(UnacceptableCreditReferencesProvided).Append("\n");
            sb.Append("  UnacceptableLeaseholdEstate: ").Append(UnacceptableLeaseholdEstate).Append("\n");
            sb.Append("  UnacceptablePaymentRecordOnPreviousMtg: ").Append(UnacceptablePaymentRecordOnPreviousMtg).Append("\n");
            sb.Append("  UnacceptableProperty: ").Append(UnacceptableProperty).Append("\n");
            sb.Append("  WeDoNotGrantCredit: ").Append(WeDoNotGrantCredit).Append("\n");
            sb.Append("  WithdrawnByApplicant: ").Append(WithdrawnByApplicant).Append("\n");
            sb.Append("  LenderInvestorName: ").Append(LenderInvestorName).Append("\n");
            sb.Append("  LenderInvestorAddress: ").Append(LenderInvestorAddress).Append("\n");
            sb.Append("  LenderInvestorCity: ").Append(LenderInvestorCity).Append("\n");
            sb.Append("  LenderInvestorState: ").Append(LenderInvestorState).Append("\n");
            sb.Append("  LenderInvestorPostalCode: ").Append(LenderInvestorPostalCode).Append("\n");
            sb.Append("  LenderInvestorPhone: ").Append(LenderInvestorPhone).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractStatementCreditDenial);
        }

        /// <summary>
        /// Returns true if LoanContractStatementCreditDenial instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractStatementCreditDenial to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractStatementCreditDenial input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AdditionalStatement == input.AdditionalStatement ||
                    (this.AdditionalStatement != null &&
                    this.AdditionalStatement.Equals(input.AdditionalStatement))
                ) && 
                (
                    this.Bankruptcy == input.Bankruptcy ||
                    (this.Bankruptcy != null &&
                    this.Bankruptcy.Equals(input.Bankruptcy))
                ) && 
                (
                    this.CollateralNotSufficient == input.CollateralNotSufficient ||
                    (this.CollateralNotSufficient != null &&
                    this.CollateralNotSufficient.Equals(input.CollateralNotSufficient))
                ) && 
                (
                    this.CreditApplicationIncomplete == input.CreditApplicationIncomplete ||
                    (this.CreditApplicationIncomplete != null &&
                    this.CreditApplicationIncomplete.Equals(input.CreditApplicationIncomplete))
                ) && 
                (
                    this.CreditReportObtainedFromConsumerReportingAgency == input.CreditReportObtainedFromConsumerReportingAgency ||
                    (this.CreditReportObtainedFromConsumerReportingAgency != null &&
                    this.CreditReportObtainedFromConsumerReportingAgency.Equals(input.CreditReportObtainedFromConsumerReportingAgency))
                ) && 
                (
                    this.DelinquentCreditObligations == input.DelinquentCreditObligations ||
                    (this.DelinquentCreditObligations != null &&
                    this.DelinquentCreditObligations.Equals(input.DelinquentCreditObligations))
                ) && 
                (
                    this.DenialDate == input.DenialDate ||
                    (this.DenialDate != null &&
                    this.DenialDate.Equals(input.DenialDate))
                ) && 
                (
                    this.DenialDescription == input.DenialDescription ||
                    (this.DenialDescription != null &&
                    this.DenialDescription.Equals(input.DenialDescription))
                ) && 
                (
                    this.DenialMailedOn == input.DenialMailedOn ||
                    (this.DenialMailedOn != null &&
                    this.DenialMailedOn.Equals(input.DenialMailedOn))
                ) && 
                (
                    this.DenialOther1 == input.DenialOther1 ||
                    (this.DenialOther1 != null &&
                    this.DenialOther1.Equals(input.DenialOther1))
                ) && 
                (
                    this.DenialOther2 == input.DenialOther2 ||
                    (this.DenialOther2 != null &&
                    this.DenialOther2.Equals(input.DenialOther2))
                ) && 
                (
                    this.DenialOtherDesc1 == input.DenialOtherDesc1 ||
                    (this.DenialOtherDesc1 != null &&
                    this.DenialOtherDesc1.Equals(input.DenialOtherDesc1))
                ) && 
                (
                    this.DenialOtherDesc2 == input.DenialOtherDesc2 ||
                    (this.DenialOtherDesc2 != null &&
                    this.DenialOtherDesc2.Equals(input.DenialOtherDesc2))
                ) && 
                (
                    this.DeniedBy == input.DeniedBy ||
                    (this.DeniedBy != null &&
                    this.DeniedBy.Equals(input.DeniedBy))
                ) && 
                (
                    this.DeniedByFhlmc == input.DeniedByFhlmc ||
                    (this.DeniedByFhlmc != null &&
                    this.DeniedByFhlmc.Equals(input.DeniedByFhlmc))
                ) && 
                (
                    this.DeniedByFnma == input.DeniedByFnma ||
                    (this.DeniedByFnma != null &&
                    this.DeniedByFnma.Equals(input.DeniedByFnma))
                ) && 
                (
                    this.DeniedByHud == input.DeniedByHud ||
                    (this.DeniedByHud != null &&
                    this.DeniedByHud.Equals(input.DeniedByHud))
                ) && 
                (
                    this.DeniedByOther == input.DeniedByOther ||
                    (this.DeniedByOther != null &&
                    this.DeniedByOther.Equals(input.DeniedByOther))
                ) && 
                (
                    this.DeniedByVa == input.DeniedByVa ||
                    (this.DeniedByVa != null &&
                    this.DeniedByVa.Equals(input.DeniedByVa))
                ) && 
                (
                    this.DescriptionofAccount1 == input.DescriptionofAccount1 ||
                    (this.DescriptionofAccount1 != null &&
                    this.DescriptionofAccount1.Equals(input.DescriptionofAccount1))
                ) && 
                (
                    this.DescriptionofAccount2 == input.DescriptionofAccount2 ||
                    (this.DescriptionofAccount2 != null &&
                    this.DescriptionofAccount2.Equals(input.DescriptionofAccount2))
                ) && 
                (
                    this.DescriptionofAccount3 == input.DescriptionofAccount3 ||
                    (this.DescriptionofAccount3 != null &&
                    this.DescriptionofAccount3.Equals(input.DescriptionofAccount3))
                ) && 
                (
                    this.DescriptionofActionTaken1 == input.DescriptionofActionTaken1 ||
                    (this.DescriptionofActionTaken1 != null &&
                    this.DescriptionofActionTaken1.Equals(input.DescriptionofActionTaken1))
                ) && 
                (
                    this.DescriptionofActionTaken2 == input.DescriptionofActionTaken2 ||
                    (this.DescriptionofActionTaken2 != null &&
                    this.DescriptionofActionTaken2.Equals(input.DescriptionofActionTaken2))
                ) && 
                (
                    this.EcoaAddress == input.EcoaAddress ||
                    (this.EcoaAddress != null &&
                    this.EcoaAddress.Equals(input.EcoaAddress))
                ) && 
                (
                    this.EcoaAddress2 == input.EcoaAddress2 ||
                    (this.EcoaAddress2 != null &&
                    this.EcoaAddress2.Equals(input.EcoaAddress2))
                ) && 
                (
                    this.EcoaCity == input.EcoaCity ||
                    (this.EcoaCity != null &&
                    this.EcoaCity.Equals(input.EcoaCity))
                ) && 
                (
                    this.EcoaName == input.EcoaName ||
                    (this.EcoaName != null &&
                    this.EcoaName.Equals(input.EcoaName))
                ) && 
                (
                    this.EcoaPhone == input.EcoaPhone ||
                    (this.EcoaPhone != null &&
                    this.EcoaPhone.Equals(input.EcoaPhone))
                ) && 
                (
                    this.EcoaPostalCode == input.EcoaPostalCode ||
                    (this.EcoaPostalCode != null &&
                    this.EcoaPostalCode.Equals(input.EcoaPostalCode))
                ) && 
                (
                    this.EcoaState == input.EcoaState ||
                    (this.EcoaState != null &&
                    this.EcoaState.Equals(input.EcoaState))
                ) && 
                (
                    this.ExcessiveObligations == input.ExcessiveObligations ||
                    (this.ExcessiveObligations != null &&
                    this.ExcessiveObligations.Equals(input.ExcessiveObligations))
                ) && 
                (
                    this.Garnishment == input.Garnishment ||
                    (this.Garnishment != null &&
                    this.Garnishment.Equals(input.Garnishment))
                ) && 
                (
                    this.InadequateCollateral == input.InadequateCollateral ||
                    (this.InadequateCollateral != null &&
                    this.InadequateCollateral.Equals(input.InadequateCollateral))
                ) && 
                (
                    this.InformationFromAConsumerReportingAgency == input.InformationFromAConsumerReportingAgency ||
                    (this.InformationFromAConsumerReportingAgency != null &&
                    this.InformationFromAConsumerReportingAgency.Equals(input.InformationFromAConsumerReportingAgency))
                ) && 
                (
                    this.InformationObtainedFromOutsideSource == input.InformationObtainedFromOutsideSource ||
                    (this.InformationObtainedFromOutsideSource != null &&
                    this.InformationObtainedFromOutsideSource.Equals(input.InformationObtainedFromOutsideSource))
                ) && 
                (
                    this.InformationObtainedInReportFromCra == input.InformationObtainedInReportFromCra ||
                    (this.InformationObtainedInReportFromCra != null &&
                    this.InformationObtainedInReportFromCra.Equals(input.InformationObtainedInReportFromCra))
                ) && 
                (
                    this.InsufficientCreditFile == input.InsufficientCreditFile ||
                    (this.InsufficientCreditFile != null &&
                    this.InsufficientCreditFile.Equals(input.InsufficientCreditFile))
                ) && 
                (
                    this.InsufficientCreditReference == input.InsufficientCreditReference ||
                    (this.InsufficientCreditReference != null &&
                    this.InsufficientCreditReference.Equals(input.InsufficientCreditReference))
                ) && 
                (
                    this.InsufficientData == input.InsufficientData ||
                    (this.InsufficientData != null &&
                    this.InsufficientData.Equals(input.InsufficientData))
                ) && 
                (
                    this.InsufficientFundsToCloseLoan == input.InsufficientFundsToCloseLoan ||
                    (this.InsufficientFundsToCloseLoan != null &&
                    this.InsufficientFundsToCloseLoan.Equals(input.InsufficientFundsToCloseLoan))
                ) && 
                (
                    this.InsufficientIncomeForTotalObligations == input.InsufficientIncomeForTotalObligations ||
                    (this.InsufficientIncomeForTotalObligations != null &&
                    this.InsufficientIncomeForTotalObligations.Equals(input.InsufficientIncomeForTotalObligations))
                ) && 
                (
                    this.InsufficientStabilityOfIncome == input.InsufficientStabilityOfIncome ||
                    (this.InsufficientStabilityOfIncome != null &&
                    this.InsufficientStabilityOfIncome.Equals(input.InsufficientStabilityOfIncome))
                ) && 
                (
                    this.LackOfCashReserves == input.LackOfCashReserves ||
                    (this.LackOfCashReserves != null &&
                    this.LackOfCashReserves.Equals(input.LackOfCashReserves))
                ) && 
                (
                    this.LengthOfEmployment == input.LengthOfEmployment ||
                    (this.LengthOfEmployment != null &&
                    this.LengthOfEmployment.Equals(input.LengthOfEmployment))
                ) && 
                (
                    this.NoCreditFile == input.NoCreditFile ||
                    (this.NoCreditFile != null &&
                    this.NoCreditFile.Equals(input.NoCreditFile))
                ) && 
                (
                    this.NumberRecentInquiriesCredit == input.NumberRecentInquiriesCredit ||
                    (this.NumberRecentInquiriesCredit != null &&
                    this.NumberRecentInquiriesCredit.Equals(input.NumberRecentInquiriesCredit))
                ) && 
                (
                    this.OtherDescription == input.OtherDescription ||
                    (this.OtherDescription != null &&
                    this.OtherDescription.Equals(input.OtherDescription))
                ) && 
                (
                    this.PoorCreditPerformance == input.PoorCreditPerformance ||
                    (this.PoorCreditPerformance != null &&
                    this.PoorCreditPerformance.Equals(input.PoorCreditPerformance))
                ) && 
                (
                    this.TemporaryOrIrregularEmployment == input.TemporaryOrIrregularEmployment ||
                    (this.TemporaryOrIrregularEmployment != null &&
                    this.TemporaryOrIrregularEmployment.Equals(input.TemporaryOrIrregularEmployment))
                ) && 
                (
                    this.TemporaryResidence == input.TemporaryResidence ||
                    (this.TemporaryResidence != null &&
                    this.TemporaryResidence.Equals(input.TemporaryResidence))
                ) && 
                (
                    this.ToShortPeriodOfResidence == input.ToShortPeriodOfResidence ||
                    (this.ToShortPeriodOfResidence != null &&
                    this.ToShortPeriodOfResidence.Equals(input.ToShortPeriodOfResidence))
                ) && 
                (
                    this.UnableToVerifyCreditReferences == input.UnableToVerifyCreditReferences ||
                    (this.UnableToVerifyCreditReferences != null &&
                    this.UnableToVerifyCreditReferences.Equals(input.UnableToVerifyCreditReferences))
                ) && 
                (
                    this.UnableToVerifyEmployment == input.UnableToVerifyEmployment ||
                    (this.UnableToVerifyEmployment != null &&
                    this.UnableToVerifyEmployment.Equals(input.UnableToVerifyEmployment))
                ) && 
                (
                    this.UnableToVerifyIncome == input.UnableToVerifyIncome ||
                    (this.UnableToVerifyIncome != null &&
                    this.UnableToVerifyIncome.Equals(input.UnableToVerifyIncome))
                ) && 
                (
                    this.UnableToVerifyResidence == input.UnableToVerifyResidence ||
                    (this.UnableToVerifyResidence != null &&
                    this.UnableToVerifyResidence.Equals(input.UnableToVerifyResidence))
                ) && 
                (
                    this.UnacceptableAppraisal == input.UnacceptableAppraisal ||
                    (this.UnacceptableAppraisal != null &&
                    this.UnacceptableAppraisal.Equals(input.UnacceptableAppraisal))
                ) && 
                (
                    this.UnacceptableCreditReferencesProvided == input.UnacceptableCreditReferencesProvided ||
                    (this.UnacceptableCreditReferencesProvided != null &&
                    this.UnacceptableCreditReferencesProvided.Equals(input.UnacceptableCreditReferencesProvided))
                ) && 
                (
                    this.UnacceptableLeaseholdEstate == input.UnacceptableLeaseholdEstate ||
                    (this.UnacceptableLeaseholdEstate != null &&
                    this.UnacceptableLeaseholdEstate.Equals(input.UnacceptableLeaseholdEstate))
                ) && 
                (
                    this.UnacceptablePaymentRecordOnPreviousMtg == input.UnacceptablePaymentRecordOnPreviousMtg ||
                    (this.UnacceptablePaymentRecordOnPreviousMtg != null &&
                    this.UnacceptablePaymentRecordOnPreviousMtg.Equals(input.UnacceptablePaymentRecordOnPreviousMtg))
                ) && 
                (
                    this.UnacceptableProperty == input.UnacceptableProperty ||
                    (this.UnacceptableProperty != null &&
                    this.UnacceptableProperty.Equals(input.UnacceptableProperty))
                ) && 
                (
                    this.WeDoNotGrantCredit == input.WeDoNotGrantCredit ||
                    (this.WeDoNotGrantCredit != null &&
                    this.WeDoNotGrantCredit.Equals(input.WeDoNotGrantCredit))
                ) && 
                (
                    this.WithdrawnByApplicant == input.WithdrawnByApplicant ||
                    (this.WithdrawnByApplicant != null &&
                    this.WithdrawnByApplicant.Equals(input.WithdrawnByApplicant))
                ) && 
                (
                    this.LenderInvestorName == input.LenderInvestorName ||
                    (this.LenderInvestorName != null &&
                    this.LenderInvestorName.Equals(input.LenderInvestorName))
                ) && 
                (
                    this.LenderInvestorAddress == input.LenderInvestorAddress ||
                    (this.LenderInvestorAddress != null &&
                    this.LenderInvestorAddress.Equals(input.LenderInvestorAddress))
                ) && 
                (
                    this.LenderInvestorCity == input.LenderInvestorCity ||
                    (this.LenderInvestorCity != null &&
                    this.LenderInvestorCity.Equals(input.LenderInvestorCity))
                ) && 
                (
                    this.LenderInvestorState == input.LenderInvestorState ||
                    (this.LenderInvestorState != null &&
                    this.LenderInvestorState.Equals(input.LenderInvestorState))
                ) && 
                (
                    this.LenderInvestorPostalCode == input.LenderInvestorPostalCode ||
                    (this.LenderInvestorPostalCode != null &&
                    this.LenderInvestorPostalCode.Equals(input.LenderInvestorPostalCode))
                ) && 
                (
                    this.LenderInvestorPhone == input.LenderInvestorPhone ||
                    (this.LenderInvestorPhone != null &&
                    this.LenderInvestorPhone.Equals(input.LenderInvestorPhone))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AdditionalStatement != null)
                    hashCode = hashCode * 59 + this.AdditionalStatement.GetHashCode();
                if (this.Bankruptcy != null)
                    hashCode = hashCode * 59 + this.Bankruptcy.GetHashCode();
                if (this.CollateralNotSufficient != null)
                    hashCode = hashCode * 59 + this.CollateralNotSufficient.GetHashCode();
                if (this.CreditApplicationIncomplete != null)
                    hashCode = hashCode * 59 + this.CreditApplicationIncomplete.GetHashCode();
                if (this.CreditReportObtainedFromConsumerReportingAgency != null)
                    hashCode = hashCode * 59 + this.CreditReportObtainedFromConsumerReportingAgency.GetHashCode();
                if (this.DelinquentCreditObligations != null)
                    hashCode = hashCode * 59 + this.DelinquentCreditObligations.GetHashCode();
                if (this.DenialDate != null)
                    hashCode = hashCode * 59 + this.DenialDate.GetHashCode();
                if (this.DenialDescription != null)
                    hashCode = hashCode * 59 + this.DenialDescription.GetHashCode();
                if (this.DenialMailedOn != null)
                    hashCode = hashCode * 59 + this.DenialMailedOn.GetHashCode();
                if (this.DenialOther1 != null)
                    hashCode = hashCode * 59 + this.DenialOther1.GetHashCode();
                if (this.DenialOther2 != null)
                    hashCode = hashCode * 59 + this.DenialOther2.GetHashCode();
                if (this.DenialOtherDesc1 != null)
                    hashCode = hashCode * 59 + this.DenialOtherDesc1.GetHashCode();
                if (this.DenialOtherDesc2 != null)
                    hashCode = hashCode * 59 + this.DenialOtherDesc2.GetHashCode();
                if (this.DeniedBy != null)
                    hashCode = hashCode * 59 + this.DeniedBy.GetHashCode();
                if (this.DeniedByFhlmc != null)
                    hashCode = hashCode * 59 + this.DeniedByFhlmc.GetHashCode();
                if (this.DeniedByFnma != null)
                    hashCode = hashCode * 59 + this.DeniedByFnma.GetHashCode();
                if (this.DeniedByHud != null)
                    hashCode = hashCode * 59 + this.DeniedByHud.GetHashCode();
                if (this.DeniedByOther != null)
                    hashCode = hashCode * 59 + this.DeniedByOther.GetHashCode();
                if (this.DeniedByVa != null)
                    hashCode = hashCode * 59 + this.DeniedByVa.GetHashCode();
                if (this.DescriptionofAccount1 != null)
                    hashCode = hashCode * 59 + this.DescriptionofAccount1.GetHashCode();
                if (this.DescriptionofAccount2 != null)
                    hashCode = hashCode * 59 + this.DescriptionofAccount2.GetHashCode();
                if (this.DescriptionofAccount3 != null)
                    hashCode = hashCode * 59 + this.DescriptionofAccount3.GetHashCode();
                if (this.DescriptionofActionTaken1 != null)
                    hashCode = hashCode * 59 + this.DescriptionofActionTaken1.GetHashCode();
                if (this.DescriptionofActionTaken2 != null)
                    hashCode = hashCode * 59 + this.DescriptionofActionTaken2.GetHashCode();
                if (this.EcoaAddress != null)
                    hashCode = hashCode * 59 + this.EcoaAddress.GetHashCode();
                if (this.EcoaAddress2 != null)
                    hashCode = hashCode * 59 + this.EcoaAddress2.GetHashCode();
                if (this.EcoaCity != null)
                    hashCode = hashCode * 59 + this.EcoaCity.GetHashCode();
                if (this.EcoaName != null)
                    hashCode = hashCode * 59 + this.EcoaName.GetHashCode();
                if (this.EcoaPhone != null)
                    hashCode = hashCode * 59 + this.EcoaPhone.GetHashCode();
                if (this.EcoaPostalCode != null)
                    hashCode = hashCode * 59 + this.EcoaPostalCode.GetHashCode();
                if (this.EcoaState != null)
                    hashCode = hashCode * 59 + this.EcoaState.GetHashCode();
                if (this.ExcessiveObligations != null)
                    hashCode = hashCode * 59 + this.ExcessiveObligations.GetHashCode();
                if (this.Garnishment != null)
                    hashCode = hashCode * 59 + this.Garnishment.GetHashCode();
                if (this.InadequateCollateral != null)
                    hashCode = hashCode * 59 + this.InadequateCollateral.GetHashCode();
                if (this.InformationFromAConsumerReportingAgency != null)
                    hashCode = hashCode * 59 + this.InformationFromAConsumerReportingAgency.GetHashCode();
                if (this.InformationObtainedFromOutsideSource != null)
                    hashCode = hashCode * 59 + this.InformationObtainedFromOutsideSource.GetHashCode();
                if (this.InformationObtainedInReportFromCra != null)
                    hashCode = hashCode * 59 + this.InformationObtainedInReportFromCra.GetHashCode();
                if (this.InsufficientCreditFile != null)
                    hashCode = hashCode * 59 + this.InsufficientCreditFile.GetHashCode();
                if (this.InsufficientCreditReference != null)
                    hashCode = hashCode * 59 + this.InsufficientCreditReference.GetHashCode();
                if (this.InsufficientData != null)
                    hashCode = hashCode * 59 + this.InsufficientData.GetHashCode();
                if (this.InsufficientFundsToCloseLoan != null)
                    hashCode = hashCode * 59 + this.InsufficientFundsToCloseLoan.GetHashCode();
                if (this.InsufficientIncomeForTotalObligations != null)
                    hashCode = hashCode * 59 + this.InsufficientIncomeForTotalObligations.GetHashCode();
                if (this.InsufficientStabilityOfIncome != null)
                    hashCode = hashCode * 59 + this.InsufficientStabilityOfIncome.GetHashCode();
                if (this.LackOfCashReserves != null)
                    hashCode = hashCode * 59 + this.LackOfCashReserves.GetHashCode();
                if (this.LengthOfEmployment != null)
                    hashCode = hashCode * 59 + this.LengthOfEmployment.GetHashCode();
                if (this.NoCreditFile != null)
                    hashCode = hashCode * 59 + this.NoCreditFile.GetHashCode();
                if (this.NumberRecentInquiriesCredit != null)
                    hashCode = hashCode * 59 + this.NumberRecentInquiriesCredit.GetHashCode();
                if (this.OtherDescription != null)
                    hashCode = hashCode * 59 + this.OtherDescription.GetHashCode();
                if (this.PoorCreditPerformance != null)
                    hashCode = hashCode * 59 + this.PoorCreditPerformance.GetHashCode();
                if (this.TemporaryOrIrregularEmployment != null)
                    hashCode = hashCode * 59 + this.TemporaryOrIrregularEmployment.GetHashCode();
                if (this.TemporaryResidence != null)
                    hashCode = hashCode * 59 + this.TemporaryResidence.GetHashCode();
                if (this.ToShortPeriodOfResidence != null)
                    hashCode = hashCode * 59 + this.ToShortPeriodOfResidence.GetHashCode();
                if (this.UnableToVerifyCreditReferences != null)
                    hashCode = hashCode * 59 + this.UnableToVerifyCreditReferences.GetHashCode();
                if (this.UnableToVerifyEmployment != null)
                    hashCode = hashCode * 59 + this.UnableToVerifyEmployment.GetHashCode();
                if (this.UnableToVerifyIncome != null)
                    hashCode = hashCode * 59 + this.UnableToVerifyIncome.GetHashCode();
                if (this.UnableToVerifyResidence != null)
                    hashCode = hashCode * 59 + this.UnableToVerifyResidence.GetHashCode();
                if (this.UnacceptableAppraisal != null)
                    hashCode = hashCode * 59 + this.UnacceptableAppraisal.GetHashCode();
                if (this.UnacceptableCreditReferencesProvided != null)
                    hashCode = hashCode * 59 + this.UnacceptableCreditReferencesProvided.GetHashCode();
                if (this.UnacceptableLeaseholdEstate != null)
                    hashCode = hashCode * 59 + this.UnacceptableLeaseholdEstate.GetHashCode();
                if (this.UnacceptablePaymentRecordOnPreviousMtg != null)
                    hashCode = hashCode * 59 + this.UnacceptablePaymentRecordOnPreviousMtg.GetHashCode();
                if (this.UnacceptableProperty != null)
                    hashCode = hashCode * 59 + this.UnacceptableProperty.GetHashCode();
                if (this.WeDoNotGrantCredit != null)
                    hashCode = hashCode * 59 + this.WeDoNotGrantCredit.GetHashCode();
                if (this.WithdrawnByApplicant != null)
                    hashCode = hashCode * 59 + this.WithdrawnByApplicant.GetHashCode();
                if (this.LenderInvestorName != null)
                    hashCode = hashCode * 59 + this.LenderInvestorName.GetHashCode();
                if (this.LenderInvestorAddress != null)
                    hashCode = hashCode * 59 + this.LenderInvestorAddress.GetHashCode();
                if (this.LenderInvestorCity != null)
                    hashCode = hashCode * 59 + this.LenderInvestorCity.GetHashCode();
                if (this.LenderInvestorState != null)
                    hashCode = hashCode * 59 + this.LenderInvestorState.GetHashCode();
                if (this.LenderInvestorPostalCode != null)
                    hashCode = hashCode * 59 + this.LenderInvestorPostalCode.GetHashCode();
                if (this.LenderInvestorPhone != null)
                    hashCode = hashCode * 59 + this.LenderInvestorPhone.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
