/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractAdditionalRequests
    /// </summary>
    [DataContract]
    public partial class LoanContractAdditionalRequests :  IEquatable<LoanContractAdditionalRequests>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalContactCellPhone
        /// </summary>
        [DataMember(Name="appraisalContactCellPhone", EmitDefaultValue=false)]
        public string AppraisalContactCellPhone { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalContactEmail
        /// </summary>
        [DataMember(Name="appraisalContactEmail", EmitDefaultValue=false)]
        public string AppraisalContactEmail { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalContactForEntry
        /// </summary>
        [DataMember(Name="appraisalContactForEntry", EmitDefaultValue=false)]
        public string AppraisalContactForEntry { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalContactHomePhone
        /// </summary>
        [DataMember(Name="appraisalContactHomePhone", EmitDefaultValue=false)]
        public string AppraisalContactHomePhone { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalContactName
        /// </summary>
        [DataMember(Name="appraisalContactName", EmitDefaultValue=false)]
        public string AppraisalContactName { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalContactWorkPhone
        /// </summary>
        [DataMember(Name="appraisalContactWorkPhone", EmitDefaultValue=false)]
        public string AppraisalContactWorkPhone { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalDateOrdered
        /// </summary>
        [DataMember(Name="appraisalDateOrdered", EmitDefaultValue=false)]
        public DateTime? AppraisalDateOrdered { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalDescription1
        /// </summary>
        [DataMember(Name="appraisalDescription1", EmitDefaultValue=false)]
        public string AppraisalDescription1 { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalDescription2
        /// </summary>
        [DataMember(Name="appraisalDescription2", EmitDefaultValue=false)]
        public string AppraisalDescription2 { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalDescription3
        /// </summary>
        [DataMember(Name="appraisalDescription3", EmitDefaultValue=false)]
        public string AppraisalDescription3 { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalKeyPickUp
        /// </summary>
        [DataMember(Name="appraisalKeyPickUp", EmitDefaultValue=false)]
        public bool? AppraisalKeyPickUp { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalLockBox
        /// </summary>
        [DataMember(Name="appraisalLockBox", EmitDefaultValue=false)]
        public bool? AppraisalLockBox { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalVacant
        /// </summary>
        [DataMember(Name="appraisalVacant", EmitDefaultValue=false)]
        public bool? AppraisalVacant { get; set; }

        /// <summary>
        /// Gets or Sets FloodDescription1
        /// </summary>
        [DataMember(Name="floodDescription1", EmitDefaultValue=false)]
        public string FloodDescription1 { get; set; }

        /// <summary>
        /// Gets or Sets FloodDescription2
        /// </summary>
        [DataMember(Name="floodDescription2", EmitDefaultValue=false)]
        public string FloodDescription2 { get; set; }

        /// <summary>
        /// Gets or Sets FloodDescription3
        /// </summary>
        [DataMember(Name="floodDescription3", EmitDefaultValue=false)]
        public string FloodDescription3 { get; set; }

        /// <summary>
        /// Gets or Sets FloodInsuranceEscrowed
        /// </summary>
        [DataMember(Name="floodInsuranceEscrowed", EmitDefaultValue=false)]
        public bool? FloodInsuranceEscrowed { get; set; }

        /// <summary>
        /// Gets or Sets FloodReplacementValue
        /// </summary>
        [DataMember(Name="floodReplacementValue", EmitDefaultValue=false)]
        public string FloodReplacementValue { get; set; }

        /// <summary>
        /// Gets or Sets HazardDescription1
        /// </summary>
        [DataMember(Name="hazardDescription1", EmitDefaultValue=false)]
        public string HazardDescription1 { get; set; }

        /// <summary>
        /// Gets or Sets HazardDescription2
        /// </summary>
        [DataMember(Name="hazardDescription2", EmitDefaultValue=false)]
        public string HazardDescription2 { get; set; }

        /// <summary>
        /// Gets or Sets HazardDescription3
        /// </summary>
        [DataMember(Name="hazardDescription3", EmitDefaultValue=false)]
        public string HazardDescription3 { get; set; }

        /// <summary>
        /// Gets or Sets HazardInsuranceEscrowed
        /// </summary>
        [DataMember(Name="hazardInsuranceEscrowed", EmitDefaultValue=false)]
        public bool? HazardInsuranceEscrowed { get; set; }

        /// <summary>
        /// Gets or Sets HazardReplacementValue
        /// </summary>
        [DataMember(Name="hazardReplacementValue", EmitDefaultValue=false)]
        public string HazardReplacementValue { get; set; }

        /// <summary>
        /// Gets or Sets TitleContract
        /// </summary>
        [DataMember(Name="titleContract", EmitDefaultValue=false)]
        public bool? TitleContract { get; set; }

        /// <summary>
        /// Gets or Sets TitleDescription1
        /// </summary>
        [DataMember(Name="titleDescription1", EmitDefaultValue=false)]
        public string TitleDescription1 { get; set; }

        /// <summary>
        /// Gets or Sets TitleDescription2
        /// </summary>
        [DataMember(Name="titleDescription2", EmitDefaultValue=false)]
        public string TitleDescription2 { get; set; }

        /// <summary>
        /// Gets or Sets TitleDescription3
        /// </summary>
        [DataMember(Name="titleDescription3", EmitDefaultValue=false)]
        public string TitleDescription3 { get; set; }

        /// <summary>
        /// Gets or Sets TitleInsRequirements
        /// </summary>
        [DataMember(Name="titleInsRequirements", EmitDefaultValue=false)]
        public bool? TitleInsRequirements { get; set; }

        /// <summary>
        /// Gets or Sets TitleMailAway
        /// </summary>
        [DataMember(Name="titleMailAway", EmitDefaultValue=false)]
        public bool? TitleMailAway { get; set; }

        /// <summary>
        /// Gets or Sets TitlePriorTitlePolicy
        /// </summary>
        [DataMember(Name="titlePriorTitlePolicy", EmitDefaultValue=false)]
        public bool? TitlePriorTitlePolicy { get; set; }

        /// <summary>
        /// Gets or Sets TitleSurvey
        /// </summary>
        [DataMember(Name="titleSurvey", EmitDefaultValue=false)]
        public bool? TitleSurvey { get; set; }

        /// <summary>
        /// Gets or Sets TitleTypeOfProperty
        /// </summary>
        [DataMember(Name="titleTypeOfProperty", EmitDefaultValue=false)]
        public string TitleTypeOfProperty { get; set; }

        /// <summary>
        /// Gets or Sets TitleWarrantyDeed
        /// </summary>
        [DataMember(Name="titleWarrantyDeed", EmitDefaultValue=false)]
        public bool? TitleWarrantyDeed { get; set; }

        /// <summary>
        /// Gets or Sets MaximumDeductibleHazardPercentage
        /// </summary>
        [DataMember(Name="maximumDeductibleHazardPercentage", EmitDefaultValue=false)]
        public double? MaximumDeductibleHazardPercentage { get; set; }

        /// <summary>
        /// Gets or Sets MaximumDeductibleHazardAmount
        /// </summary>
        [DataMember(Name="maximumDeductibleHazardAmount", EmitDefaultValue=false)]
        public double? MaximumDeductibleHazardAmount { get; set; }

        /// <summary>
        /// Gets or Sets MaximumDeductibleFloodPercentage
        /// </summary>
        [DataMember(Name="maximumDeductibleFloodPercentage", EmitDefaultValue=false)]
        public double? MaximumDeductibleFloodPercentage { get; set; }

        /// <summary>
        /// Gets or Sets MaximumDeductibleFloodAmount
        /// </summary>
        [DataMember(Name="maximumDeductibleFloodAmount", EmitDefaultValue=false)]
        public double? MaximumDeductibleFloodAmount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractAdditionalRequests {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AppraisalContactCellPhone: ").Append(AppraisalContactCellPhone).Append("\n");
            sb.Append("  AppraisalContactEmail: ").Append(AppraisalContactEmail).Append("\n");
            sb.Append("  AppraisalContactForEntry: ").Append(AppraisalContactForEntry).Append("\n");
            sb.Append("  AppraisalContactHomePhone: ").Append(AppraisalContactHomePhone).Append("\n");
            sb.Append("  AppraisalContactName: ").Append(AppraisalContactName).Append("\n");
            sb.Append("  AppraisalContactWorkPhone: ").Append(AppraisalContactWorkPhone).Append("\n");
            sb.Append("  AppraisalDateOrdered: ").Append(AppraisalDateOrdered).Append("\n");
            sb.Append("  AppraisalDescription1: ").Append(AppraisalDescription1).Append("\n");
            sb.Append("  AppraisalDescription2: ").Append(AppraisalDescription2).Append("\n");
            sb.Append("  AppraisalDescription3: ").Append(AppraisalDescription3).Append("\n");
            sb.Append("  AppraisalKeyPickUp: ").Append(AppraisalKeyPickUp).Append("\n");
            sb.Append("  AppraisalLockBox: ").Append(AppraisalLockBox).Append("\n");
            sb.Append("  AppraisalVacant: ").Append(AppraisalVacant).Append("\n");
            sb.Append("  FloodDescription1: ").Append(FloodDescription1).Append("\n");
            sb.Append("  FloodDescription2: ").Append(FloodDescription2).Append("\n");
            sb.Append("  FloodDescription3: ").Append(FloodDescription3).Append("\n");
            sb.Append("  FloodInsuranceEscrowed: ").Append(FloodInsuranceEscrowed).Append("\n");
            sb.Append("  FloodReplacementValue: ").Append(FloodReplacementValue).Append("\n");
            sb.Append("  HazardDescription1: ").Append(HazardDescription1).Append("\n");
            sb.Append("  HazardDescription2: ").Append(HazardDescription2).Append("\n");
            sb.Append("  HazardDescription3: ").Append(HazardDescription3).Append("\n");
            sb.Append("  HazardInsuranceEscrowed: ").Append(HazardInsuranceEscrowed).Append("\n");
            sb.Append("  HazardReplacementValue: ").Append(HazardReplacementValue).Append("\n");
            sb.Append("  TitleContract: ").Append(TitleContract).Append("\n");
            sb.Append("  TitleDescription1: ").Append(TitleDescription1).Append("\n");
            sb.Append("  TitleDescription2: ").Append(TitleDescription2).Append("\n");
            sb.Append("  TitleDescription3: ").Append(TitleDescription3).Append("\n");
            sb.Append("  TitleInsRequirements: ").Append(TitleInsRequirements).Append("\n");
            sb.Append("  TitleMailAway: ").Append(TitleMailAway).Append("\n");
            sb.Append("  TitlePriorTitlePolicy: ").Append(TitlePriorTitlePolicy).Append("\n");
            sb.Append("  TitleSurvey: ").Append(TitleSurvey).Append("\n");
            sb.Append("  TitleTypeOfProperty: ").Append(TitleTypeOfProperty).Append("\n");
            sb.Append("  TitleWarrantyDeed: ").Append(TitleWarrantyDeed).Append("\n");
            sb.Append("  MaximumDeductibleHazardPercentage: ").Append(MaximumDeductibleHazardPercentage).Append("\n");
            sb.Append("  MaximumDeductibleHazardAmount: ").Append(MaximumDeductibleHazardAmount).Append("\n");
            sb.Append("  MaximumDeductibleFloodPercentage: ").Append(MaximumDeductibleFloodPercentage).Append("\n");
            sb.Append("  MaximumDeductibleFloodAmount: ").Append(MaximumDeductibleFloodAmount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractAdditionalRequests);
        }

        /// <summary>
        /// Returns true if LoanContractAdditionalRequests instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractAdditionalRequests to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractAdditionalRequests input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AppraisalContactCellPhone == input.AppraisalContactCellPhone ||
                    (this.AppraisalContactCellPhone != null &&
                    this.AppraisalContactCellPhone.Equals(input.AppraisalContactCellPhone))
                ) && 
                (
                    this.AppraisalContactEmail == input.AppraisalContactEmail ||
                    (this.AppraisalContactEmail != null &&
                    this.AppraisalContactEmail.Equals(input.AppraisalContactEmail))
                ) && 
                (
                    this.AppraisalContactForEntry == input.AppraisalContactForEntry ||
                    (this.AppraisalContactForEntry != null &&
                    this.AppraisalContactForEntry.Equals(input.AppraisalContactForEntry))
                ) && 
                (
                    this.AppraisalContactHomePhone == input.AppraisalContactHomePhone ||
                    (this.AppraisalContactHomePhone != null &&
                    this.AppraisalContactHomePhone.Equals(input.AppraisalContactHomePhone))
                ) && 
                (
                    this.AppraisalContactName == input.AppraisalContactName ||
                    (this.AppraisalContactName != null &&
                    this.AppraisalContactName.Equals(input.AppraisalContactName))
                ) && 
                (
                    this.AppraisalContactWorkPhone == input.AppraisalContactWorkPhone ||
                    (this.AppraisalContactWorkPhone != null &&
                    this.AppraisalContactWorkPhone.Equals(input.AppraisalContactWorkPhone))
                ) && 
                (
                    this.AppraisalDateOrdered == input.AppraisalDateOrdered ||
                    (this.AppraisalDateOrdered != null &&
                    this.AppraisalDateOrdered.Equals(input.AppraisalDateOrdered))
                ) && 
                (
                    this.AppraisalDescription1 == input.AppraisalDescription1 ||
                    (this.AppraisalDescription1 != null &&
                    this.AppraisalDescription1.Equals(input.AppraisalDescription1))
                ) && 
                (
                    this.AppraisalDescription2 == input.AppraisalDescription2 ||
                    (this.AppraisalDescription2 != null &&
                    this.AppraisalDescription2.Equals(input.AppraisalDescription2))
                ) && 
                (
                    this.AppraisalDescription3 == input.AppraisalDescription3 ||
                    (this.AppraisalDescription3 != null &&
                    this.AppraisalDescription3.Equals(input.AppraisalDescription3))
                ) && 
                (
                    this.AppraisalKeyPickUp == input.AppraisalKeyPickUp ||
                    (this.AppraisalKeyPickUp != null &&
                    this.AppraisalKeyPickUp.Equals(input.AppraisalKeyPickUp))
                ) && 
                (
                    this.AppraisalLockBox == input.AppraisalLockBox ||
                    (this.AppraisalLockBox != null &&
                    this.AppraisalLockBox.Equals(input.AppraisalLockBox))
                ) && 
                (
                    this.AppraisalVacant == input.AppraisalVacant ||
                    (this.AppraisalVacant != null &&
                    this.AppraisalVacant.Equals(input.AppraisalVacant))
                ) && 
                (
                    this.FloodDescription1 == input.FloodDescription1 ||
                    (this.FloodDescription1 != null &&
                    this.FloodDescription1.Equals(input.FloodDescription1))
                ) && 
                (
                    this.FloodDescription2 == input.FloodDescription2 ||
                    (this.FloodDescription2 != null &&
                    this.FloodDescription2.Equals(input.FloodDescription2))
                ) && 
                (
                    this.FloodDescription3 == input.FloodDescription3 ||
                    (this.FloodDescription3 != null &&
                    this.FloodDescription3.Equals(input.FloodDescription3))
                ) && 
                (
                    this.FloodInsuranceEscrowed == input.FloodInsuranceEscrowed ||
                    (this.FloodInsuranceEscrowed != null &&
                    this.FloodInsuranceEscrowed.Equals(input.FloodInsuranceEscrowed))
                ) && 
                (
                    this.FloodReplacementValue == input.FloodReplacementValue ||
                    (this.FloodReplacementValue != null &&
                    this.FloodReplacementValue.Equals(input.FloodReplacementValue))
                ) && 
                (
                    this.HazardDescription1 == input.HazardDescription1 ||
                    (this.HazardDescription1 != null &&
                    this.HazardDescription1.Equals(input.HazardDescription1))
                ) && 
                (
                    this.HazardDescription2 == input.HazardDescription2 ||
                    (this.HazardDescription2 != null &&
                    this.HazardDescription2.Equals(input.HazardDescription2))
                ) && 
                (
                    this.HazardDescription3 == input.HazardDescription3 ||
                    (this.HazardDescription3 != null &&
                    this.HazardDescription3.Equals(input.HazardDescription3))
                ) && 
                (
                    this.HazardInsuranceEscrowed == input.HazardInsuranceEscrowed ||
                    (this.HazardInsuranceEscrowed != null &&
                    this.HazardInsuranceEscrowed.Equals(input.HazardInsuranceEscrowed))
                ) && 
                (
                    this.HazardReplacementValue == input.HazardReplacementValue ||
                    (this.HazardReplacementValue != null &&
                    this.HazardReplacementValue.Equals(input.HazardReplacementValue))
                ) && 
                (
                    this.TitleContract == input.TitleContract ||
                    (this.TitleContract != null &&
                    this.TitleContract.Equals(input.TitleContract))
                ) && 
                (
                    this.TitleDescription1 == input.TitleDescription1 ||
                    (this.TitleDescription1 != null &&
                    this.TitleDescription1.Equals(input.TitleDescription1))
                ) && 
                (
                    this.TitleDescription2 == input.TitleDescription2 ||
                    (this.TitleDescription2 != null &&
                    this.TitleDescription2.Equals(input.TitleDescription2))
                ) && 
                (
                    this.TitleDescription3 == input.TitleDescription3 ||
                    (this.TitleDescription3 != null &&
                    this.TitleDescription3.Equals(input.TitleDescription3))
                ) && 
                (
                    this.TitleInsRequirements == input.TitleInsRequirements ||
                    (this.TitleInsRequirements != null &&
                    this.TitleInsRequirements.Equals(input.TitleInsRequirements))
                ) && 
                (
                    this.TitleMailAway == input.TitleMailAway ||
                    (this.TitleMailAway != null &&
                    this.TitleMailAway.Equals(input.TitleMailAway))
                ) && 
                (
                    this.TitlePriorTitlePolicy == input.TitlePriorTitlePolicy ||
                    (this.TitlePriorTitlePolicy != null &&
                    this.TitlePriorTitlePolicy.Equals(input.TitlePriorTitlePolicy))
                ) && 
                (
                    this.TitleSurvey == input.TitleSurvey ||
                    (this.TitleSurvey != null &&
                    this.TitleSurvey.Equals(input.TitleSurvey))
                ) && 
                (
                    this.TitleTypeOfProperty == input.TitleTypeOfProperty ||
                    (this.TitleTypeOfProperty != null &&
                    this.TitleTypeOfProperty.Equals(input.TitleTypeOfProperty))
                ) && 
                (
                    this.TitleWarrantyDeed == input.TitleWarrantyDeed ||
                    (this.TitleWarrantyDeed != null &&
                    this.TitleWarrantyDeed.Equals(input.TitleWarrantyDeed))
                ) && 
                (
                    this.MaximumDeductibleHazardPercentage == input.MaximumDeductibleHazardPercentage ||
                    (this.MaximumDeductibleHazardPercentage != null &&
                    this.MaximumDeductibleHazardPercentage.Equals(input.MaximumDeductibleHazardPercentage))
                ) && 
                (
                    this.MaximumDeductibleHazardAmount == input.MaximumDeductibleHazardAmount ||
                    (this.MaximumDeductibleHazardAmount != null &&
                    this.MaximumDeductibleHazardAmount.Equals(input.MaximumDeductibleHazardAmount))
                ) && 
                (
                    this.MaximumDeductibleFloodPercentage == input.MaximumDeductibleFloodPercentage ||
                    (this.MaximumDeductibleFloodPercentage != null &&
                    this.MaximumDeductibleFloodPercentage.Equals(input.MaximumDeductibleFloodPercentage))
                ) && 
                (
                    this.MaximumDeductibleFloodAmount == input.MaximumDeductibleFloodAmount ||
                    (this.MaximumDeductibleFloodAmount != null &&
                    this.MaximumDeductibleFloodAmount.Equals(input.MaximumDeductibleFloodAmount))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AppraisalContactCellPhone != null)
                    hashCode = hashCode * 59 + this.AppraisalContactCellPhone.GetHashCode();
                if (this.AppraisalContactEmail != null)
                    hashCode = hashCode * 59 + this.AppraisalContactEmail.GetHashCode();
                if (this.AppraisalContactForEntry != null)
                    hashCode = hashCode * 59 + this.AppraisalContactForEntry.GetHashCode();
                if (this.AppraisalContactHomePhone != null)
                    hashCode = hashCode * 59 + this.AppraisalContactHomePhone.GetHashCode();
                if (this.AppraisalContactName != null)
                    hashCode = hashCode * 59 + this.AppraisalContactName.GetHashCode();
                if (this.AppraisalContactWorkPhone != null)
                    hashCode = hashCode * 59 + this.AppraisalContactWorkPhone.GetHashCode();
                if (this.AppraisalDateOrdered != null)
                    hashCode = hashCode * 59 + this.AppraisalDateOrdered.GetHashCode();
                if (this.AppraisalDescription1 != null)
                    hashCode = hashCode * 59 + this.AppraisalDescription1.GetHashCode();
                if (this.AppraisalDescription2 != null)
                    hashCode = hashCode * 59 + this.AppraisalDescription2.GetHashCode();
                if (this.AppraisalDescription3 != null)
                    hashCode = hashCode * 59 + this.AppraisalDescription3.GetHashCode();
                if (this.AppraisalKeyPickUp != null)
                    hashCode = hashCode * 59 + this.AppraisalKeyPickUp.GetHashCode();
                if (this.AppraisalLockBox != null)
                    hashCode = hashCode * 59 + this.AppraisalLockBox.GetHashCode();
                if (this.AppraisalVacant != null)
                    hashCode = hashCode * 59 + this.AppraisalVacant.GetHashCode();
                if (this.FloodDescription1 != null)
                    hashCode = hashCode * 59 + this.FloodDescription1.GetHashCode();
                if (this.FloodDescription2 != null)
                    hashCode = hashCode * 59 + this.FloodDescription2.GetHashCode();
                if (this.FloodDescription3 != null)
                    hashCode = hashCode * 59 + this.FloodDescription3.GetHashCode();
                if (this.FloodInsuranceEscrowed != null)
                    hashCode = hashCode * 59 + this.FloodInsuranceEscrowed.GetHashCode();
                if (this.FloodReplacementValue != null)
                    hashCode = hashCode * 59 + this.FloodReplacementValue.GetHashCode();
                if (this.HazardDescription1 != null)
                    hashCode = hashCode * 59 + this.HazardDescription1.GetHashCode();
                if (this.HazardDescription2 != null)
                    hashCode = hashCode * 59 + this.HazardDescription2.GetHashCode();
                if (this.HazardDescription3 != null)
                    hashCode = hashCode * 59 + this.HazardDescription3.GetHashCode();
                if (this.HazardInsuranceEscrowed != null)
                    hashCode = hashCode * 59 + this.HazardInsuranceEscrowed.GetHashCode();
                if (this.HazardReplacementValue != null)
                    hashCode = hashCode * 59 + this.HazardReplacementValue.GetHashCode();
                if (this.TitleContract != null)
                    hashCode = hashCode * 59 + this.TitleContract.GetHashCode();
                if (this.TitleDescription1 != null)
                    hashCode = hashCode * 59 + this.TitleDescription1.GetHashCode();
                if (this.TitleDescription2 != null)
                    hashCode = hashCode * 59 + this.TitleDescription2.GetHashCode();
                if (this.TitleDescription3 != null)
                    hashCode = hashCode * 59 + this.TitleDescription3.GetHashCode();
                if (this.TitleInsRequirements != null)
                    hashCode = hashCode * 59 + this.TitleInsRequirements.GetHashCode();
                if (this.TitleMailAway != null)
                    hashCode = hashCode * 59 + this.TitleMailAway.GetHashCode();
                if (this.TitlePriorTitlePolicy != null)
                    hashCode = hashCode * 59 + this.TitlePriorTitlePolicy.GetHashCode();
                if (this.TitleSurvey != null)
                    hashCode = hashCode * 59 + this.TitleSurvey.GetHashCode();
                if (this.TitleTypeOfProperty != null)
                    hashCode = hashCode * 59 + this.TitleTypeOfProperty.GetHashCode();
                if (this.TitleWarrantyDeed != null)
                    hashCode = hashCode * 59 + this.TitleWarrantyDeed.GetHashCode();
                if (this.MaximumDeductibleHazardPercentage != null)
                    hashCode = hashCode * 59 + this.MaximumDeductibleHazardPercentage.GetHashCode();
                if (this.MaximumDeductibleHazardAmount != null)
                    hashCode = hashCode * 59 + this.MaximumDeductibleHazardAmount.GetHashCode();
                if (this.MaximumDeductibleFloodPercentage != null)
                    hashCode = hashCode * 59 + this.MaximumDeductibleFloodPercentage.GetHashCode();
                if (this.MaximumDeductibleFloodAmount != null)
                    hashCode = hashCode * 59 + this.MaximumDeductibleFloodAmount.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
