/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractInterimServicingSchedulePaymentTransactions
    /// </summary>
    [DataContract]
    public partial class LoanContractInterimServicingSchedulePaymentTransactions :  IEquatable<LoanContractInterimServicingSchedulePaymentTransactions>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets BuydownSubsidyAmountDue
        /// </summary>
        [DataMember(Name="buydownSubsidyAmountDue", EmitDefaultValue=false)]
        public double? BuydownSubsidyAmountDue { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="comments", EmitDefaultValue=false)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets CreatedById
        /// </summary>
        [DataMember(Name="createdById", EmitDefaultValue=false)]
        public string CreatedById { get; set; }

        /// <summary>
        /// Gets or Sets CreatedByName
        /// </summary>
        [DataMember(Name="createdByName", EmitDefaultValue=false)]
        public string CreatedByName { get; set; }

        /// <summary>
        /// Gets or Sets CreatedDateTimeUtc
        /// </summary>
        [DataMember(Name="createdDateTimeUtc", EmitDefaultValue=false)]
        public DateTime? CreatedDateTimeUtc { get; set; }

        /// <summary>
        /// Gets or Sets EscrowDue
        /// </summary>
        [DataMember(Name="escrowDue", EmitDefaultValue=false)]
        public double? EscrowDue { get; set; }

        /// <summary>
        /// Gets or Sets Guid
        /// </summary>
        [DataMember(Name="guid", EmitDefaultValue=false)]
        public string Guid { get; set; }

        /// <summary>
        /// Gets or Sets IndexRate
        /// </summary>
        [DataMember(Name="indexRate", EmitDefaultValue=false)]
        public double? IndexRate { get; set; }

        /// <summary>
        /// Gets or Sets InterestDue
        /// </summary>
        [DataMember(Name="interestDue", EmitDefaultValue=false)]
        public double? InterestDue { get; set; }

        /// <summary>
        /// Gets or Sets InterestRate
        /// </summary>
        [DataMember(Name="interestRate", EmitDefaultValue=false)]
        public double? InterestRate { get; set; }

        /// <summary>
        /// Gets or Sets LatePaymentDate
        /// </summary>
        [DataMember(Name="latePaymentDate", EmitDefaultValue=false)]
        public DateTime? LatePaymentDate { get; set; }

        /// <summary>
        /// Gets or Sets MiscFeeDue
        /// </summary>
        [DataMember(Name="miscFeeDue", EmitDefaultValue=false)]
        public double? MiscFeeDue { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedById
        /// </summary>
        [DataMember(Name="modifiedById", EmitDefaultValue=false)]
        public string ModifiedById { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedByName
        /// </summary>
        [DataMember(Name="modifiedByName", EmitDefaultValue=false)]
        public string ModifiedByName { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedDateTimeUtc
        /// </summary>
        [DataMember(Name="modifiedDateTimeUtc", EmitDefaultValue=false)]
        public DateTime? ModifiedDateTimeUtc { get; set; }

        /// <summary>
        /// Gets or Sets PaymentNumber
        /// </summary>
        [DataMember(Name="paymentNumber", EmitDefaultValue=false)]
        public int? PaymentNumber { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalDue
        /// </summary>
        [DataMember(Name="principalDue", EmitDefaultValue=false)]
        public double? PrincipalDue { get; set; }

        /// <summary>
        /// Gets or Sets ServicingPaymentMethod
        /// </summary>
        [DataMember(Name="servicingPaymentMethod", EmitDefaultValue=false)]
        public string ServicingPaymentMethod { get; set; }

        /// <summary>
        /// Gets or Sets ServicingTransactionType
        /// </summary>
        [DataMember(Name="servicingTransactionType", EmitDefaultValue=false)]
        public string ServicingTransactionType { get; set; }

        /// <summary>
        /// Gets or Sets TotalPastDue
        /// </summary>
        [DataMember(Name="totalPastDue", EmitDefaultValue=false)]
        public double? TotalPastDue { get; set; }

        /// <summary>
        /// Gets or Sets TransactionAmount
        /// </summary>
        [DataMember(Name="transactionAmount", EmitDefaultValue=false)]
        public double? TransactionAmount { get; set; }

        /// <summary>
        /// Gets or Sets TransactionDate
        /// </summary>
        [DataMember(Name="transactionDate", EmitDefaultValue=false)]
        public DateTime? TransactionDate { get; set; }

        /// <summary>
        /// Gets or Sets UnpaidLateFeeDue
        /// </summary>
        [DataMember(Name="unpaidLateFeeDue", EmitDefaultValue=false)]
        public double? UnpaidLateFeeDue { get; set; }

        /// <summary>
        /// Gets or Sets PaymentReceiveDate
        /// </summary>
        [DataMember(Name="paymentReceiveDate", EmitDefaultValue=false)]
        public DateTime? PaymentReceiveDate { get; set; }

        /// <summary>
        /// Gets or Sets EscrowTaxDue
        /// </summary>
        [DataMember(Name="escrowTaxDue", EmitDefaultValue=false)]
        public double? EscrowTaxDue { get; set; }

        /// <summary>
        /// Gets or Sets EscrowHazardInsuranceDue
        /// </summary>
        [DataMember(Name="escrowHazardInsuranceDue", EmitDefaultValue=false)]
        public double? EscrowHazardInsuranceDue { get; set; }

        /// <summary>
        /// Gets or Sets EscrowMortgageInsuranceDue
        /// </summary>
        [DataMember(Name="escrowMortgageInsuranceDue", EmitDefaultValue=false)]
        public double? EscrowMortgageInsuranceDue { get; set; }

        /// <summary>
        /// Gets or Sets EscrowFloodInsuranceDue
        /// </summary>
        [DataMember(Name="escrowFloodInsuranceDue", EmitDefaultValue=false)]
        public double? EscrowFloodInsuranceDue { get; set; }

        /// <summary>
        /// Gets or Sets EscrowCityPropertyTaxDue
        /// </summary>
        [DataMember(Name="escrowCityPropertyTaxDue", EmitDefaultValue=false)]
        public double? EscrowCityPropertyTaxDue { get; set; }

        /// <summary>
        /// Gets or Sets EscrowOther1Due
        /// </summary>
        [DataMember(Name="escrowOther1Due", EmitDefaultValue=false)]
        public double? EscrowOther1Due { get; set; }

        /// <summary>
        /// Gets or Sets EscrowOther2Due
        /// </summary>
        [DataMember(Name="escrowOther2Due", EmitDefaultValue=false)]
        public double? EscrowOther2Due { get; set; }

        /// <summary>
        /// Gets or Sets EscrowOther3Due
        /// </summary>
        [DataMember(Name="escrowOther3Due", EmitDefaultValue=false)]
        public double? EscrowOther3Due { get; set; }

        /// <summary>
        /// Gets or Sets EscrowUSDAMonthlyPremiumDue
        /// </summary>
        [DataMember(Name="escrowUSDAMonthlyPremiumDue", EmitDefaultValue=false)]
        public double? EscrowUSDAMonthlyPremiumDue { get; set; }

        /// <summary>
        /// Gets or Sets Principal
        /// </summary>
        [DataMember(Name="principal", EmitDefaultValue=false)]
        public double? Principal { get; set; }

        /// <summary>
        /// Gets or Sets Interest
        /// </summary>
        [DataMember(Name="interest", EmitDefaultValue=false)]
        public double? Interest { get; set; }

        /// <summary>
        /// Gets or Sets Escrow
        /// </summary>
        [DataMember(Name="escrow", EmitDefaultValue=false)]
        public double? Escrow { get; set; }

        /// <summary>
        /// Gets or Sets MiscFee
        /// </summary>
        [DataMember(Name="miscFee", EmitDefaultValue=false)]
        public double? MiscFee { get; set; }

        /// <summary>
        /// Gets or Sets LateFee
        /// </summary>
        [DataMember(Name="lateFee", EmitDefaultValue=false)]
        public double? LateFee { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalPrincipal
        /// </summary>
        [DataMember(Name="additionalPrincipal", EmitDefaultValue=false)]
        public double? AdditionalPrincipal { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalEscrow
        /// </summary>
        [DataMember(Name="additionalEscrow", EmitDefaultValue=false)]
        public double? AdditionalEscrow { get; set; }

        /// <summary>
        /// Gets or Sets Taxes
        /// </summary>
        [DataMember(Name="taxes", EmitDefaultValue=false)]
        public double? Taxes { get; set; }

        /// <summary>
        /// Gets or Sets HazardInsurance
        /// </summary>
        [DataMember(Name="hazardInsurance", EmitDefaultValue=false)]
        public double? HazardInsurance { get; set; }

        /// <summary>
        /// Gets or Sets MortgageInsurance
        /// </summary>
        [DataMember(Name="mortgageInsurance", EmitDefaultValue=false)]
        public double? MortgageInsurance { get; set; }

        /// <summary>
        /// Gets or Sets FloodInsurance
        /// </summary>
        [DataMember(Name="floodInsurance", EmitDefaultValue=false)]
        public double? FloodInsurance { get; set; }

        /// <summary>
        /// Gets or Sets CityPropertyTax
        /// </summary>
        [DataMember(Name="cityPropertyTax", EmitDefaultValue=false)]
        public double? CityPropertyTax { get; set; }

        /// <summary>
        /// Gets or Sets Other1Escrow
        /// </summary>
        [DataMember(Name="other1Escrow", EmitDefaultValue=false)]
        public double? Other1Escrow { get; set; }

        /// <summary>
        /// Gets or Sets Other2Escrow
        /// </summary>
        [DataMember(Name="other2Escrow", EmitDefaultValue=false)]
        public double? Other2Escrow { get; set; }

        /// <summary>
        /// Gets or Sets Other3Escrow
        /// </summary>
        [DataMember(Name="other3Escrow", EmitDefaultValue=false)]
        public double? Other3Escrow { get; set; }

        /// <summary>
        /// Gets or Sets USDAMonthlyPremium
        /// </summary>
        [DataMember(Name="uSDAMonthlyPremium", EmitDefaultValue=false)]
        public double? USDAMonthlyPremium { get; set; }

        /// <summary>
        /// Gets or Sets BuydownSubsidyAmount
        /// </summary>
        [DataMember(Name="buydownSubsidyAmount", EmitDefaultValue=false)]
        public double? BuydownSubsidyAmount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractInterimServicingSchedulePaymentTransactions {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  BuydownSubsidyAmountDue: ").Append(BuydownSubsidyAmountDue).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  CreatedById: ").Append(CreatedById).Append("\n");
            sb.Append("  CreatedByName: ").Append(CreatedByName).Append("\n");
            sb.Append("  CreatedDateTimeUtc: ").Append(CreatedDateTimeUtc).Append("\n");
            sb.Append("  EscrowDue: ").Append(EscrowDue).Append("\n");
            sb.Append("  Guid: ").Append(Guid).Append("\n");
            sb.Append("  IndexRate: ").Append(IndexRate).Append("\n");
            sb.Append("  InterestDue: ").Append(InterestDue).Append("\n");
            sb.Append("  InterestRate: ").Append(InterestRate).Append("\n");
            sb.Append("  LatePaymentDate: ").Append(LatePaymentDate).Append("\n");
            sb.Append("  MiscFeeDue: ").Append(MiscFeeDue).Append("\n");
            sb.Append("  ModifiedById: ").Append(ModifiedById).Append("\n");
            sb.Append("  ModifiedByName: ").Append(ModifiedByName).Append("\n");
            sb.Append("  ModifiedDateTimeUtc: ").Append(ModifiedDateTimeUtc).Append("\n");
            sb.Append("  PaymentNumber: ").Append(PaymentNumber).Append("\n");
            sb.Append("  PrincipalDue: ").Append(PrincipalDue).Append("\n");
            sb.Append("  ServicingPaymentMethod: ").Append(ServicingPaymentMethod).Append("\n");
            sb.Append("  ServicingTransactionType: ").Append(ServicingTransactionType).Append("\n");
            sb.Append("  TotalPastDue: ").Append(TotalPastDue).Append("\n");
            sb.Append("  TransactionAmount: ").Append(TransactionAmount).Append("\n");
            sb.Append("  TransactionDate: ").Append(TransactionDate).Append("\n");
            sb.Append("  UnpaidLateFeeDue: ").Append(UnpaidLateFeeDue).Append("\n");
            sb.Append("  PaymentReceiveDate: ").Append(PaymentReceiveDate).Append("\n");
            sb.Append("  EscrowTaxDue: ").Append(EscrowTaxDue).Append("\n");
            sb.Append("  EscrowHazardInsuranceDue: ").Append(EscrowHazardInsuranceDue).Append("\n");
            sb.Append("  EscrowMortgageInsuranceDue: ").Append(EscrowMortgageInsuranceDue).Append("\n");
            sb.Append("  EscrowFloodInsuranceDue: ").Append(EscrowFloodInsuranceDue).Append("\n");
            sb.Append("  EscrowCityPropertyTaxDue: ").Append(EscrowCityPropertyTaxDue).Append("\n");
            sb.Append("  EscrowOther1Due: ").Append(EscrowOther1Due).Append("\n");
            sb.Append("  EscrowOther2Due: ").Append(EscrowOther2Due).Append("\n");
            sb.Append("  EscrowOther3Due: ").Append(EscrowOther3Due).Append("\n");
            sb.Append("  EscrowUSDAMonthlyPremiumDue: ").Append(EscrowUSDAMonthlyPremiumDue).Append("\n");
            sb.Append("  Principal: ").Append(Principal).Append("\n");
            sb.Append("  Interest: ").Append(Interest).Append("\n");
            sb.Append("  Escrow: ").Append(Escrow).Append("\n");
            sb.Append("  MiscFee: ").Append(MiscFee).Append("\n");
            sb.Append("  LateFee: ").Append(LateFee).Append("\n");
            sb.Append("  AdditionalPrincipal: ").Append(AdditionalPrincipal).Append("\n");
            sb.Append("  AdditionalEscrow: ").Append(AdditionalEscrow).Append("\n");
            sb.Append("  Taxes: ").Append(Taxes).Append("\n");
            sb.Append("  HazardInsurance: ").Append(HazardInsurance).Append("\n");
            sb.Append("  MortgageInsurance: ").Append(MortgageInsurance).Append("\n");
            sb.Append("  FloodInsurance: ").Append(FloodInsurance).Append("\n");
            sb.Append("  CityPropertyTax: ").Append(CityPropertyTax).Append("\n");
            sb.Append("  Other1Escrow: ").Append(Other1Escrow).Append("\n");
            sb.Append("  Other2Escrow: ").Append(Other2Escrow).Append("\n");
            sb.Append("  Other3Escrow: ").Append(Other3Escrow).Append("\n");
            sb.Append("  USDAMonthlyPremium: ").Append(USDAMonthlyPremium).Append("\n");
            sb.Append("  BuydownSubsidyAmount: ").Append(BuydownSubsidyAmount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractInterimServicingSchedulePaymentTransactions);
        }

        /// <summary>
        /// Returns true if LoanContractInterimServicingSchedulePaymentTransactions instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractInterimServicingSchedulePaymentTransactions to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractInterimServicingSchedulePaymentTransactions input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.BuydownSubsidyAmountDue == input.BuydownSubsidyAmountDue ||
                    (this.BuydownSubsidyAmountDue != null &&
                    this.BuydownSubsidyAmountDue.Equals(input.BuydownSubsidyAmountDue))
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.CreatedById == input.CreatedById ||
                    (this.CreatedById != null &&
                    this.CreatedById.Equals(input.CreatedById))
                ) && 
                (
                    this.CreatedByName == input.CreatedByName ||
                    (this.CreatedByName != null &&
                    this.CreatedByName.Equals(input.CreatedByName))
                ) && 
                (
                    this.CreatedDateTimeUtc == input.CreatedDateTimeUtc ||
                    (this.CreatedDateTimeUtc != null &&
                    this.CreatedDateTimeUtc.Equals(input.CreatedDateTimeUtc))
                ) && 
                (
                    this.EscrowDue == input.EscrowDue ||
                    (this.EscrowDue != null &&
                    this.EscrowDue.Equals(input.EscrowDue))
                ) && 
                (
                    this.Guid == input.Guid ||
                    (this.Guid != null &&
                    this.Guid.Equals(input.Guid))
                ) && 
                (
                    this.IndexRate == input.IndexRate ||
                    (this.IndexRate != null &&
                    this.IndexRate.Equals(input.IndexRate))
                ) && 
                (
                    this.InterestDue == input.InterestDue ||
                    (this.InterestDue != null &&
                    this.InterestDue.Equals(input.InterestDue))
                ) && 
                (
                    this.InterestRate == input.InterestRate ||
                    (this.InterestRate != null &&
                    this.InterestRate.Equals(input.InterestRate))
                ) && 
                (
                    this.LatePaymentDate == input.LatePaymentDate ||
                    (this.LatePaymentDate != null &&
                    this.LatePaymentDate.Equals(input.LatePaymentDate))
                ) && 
                (
                    this.MiscFeeDue == input.MiscFeeDue ||
                    (this.MiscFeeDue != null &&
                    this.MiscFeeDue.Equals(input.MiscFeeDue))
                ) && 
                (
                    this.ModifiedById == input.ModifiedById ||
                    (this.ModifiedById != null &&
                    this.ModifiedById.Equals(input.ModifiedById))
                ) && 
                (
                    this.ModifiedByName == input.ModifiedByName ||
                    (this.ModifiedByName != null &&
                    this.ModifiedByName.Equals(input.ModifiedByName))
                ) && 
                (
                    this.ModifiedDateTimeUtc == input.ModifiedDateTimeUtc ||
                    (this.ModifiedDateTimeUtc != null &&
                    this.ModifiedDateTimeUtc.Equals(input.ModifiedDateTimeUtc))
                ) && 
                (
                    this.PaymentNumber == input.PaymentNumber ||
                    (this.PaymentNumber != null &&
                    this.PaymentNumber.Equals(input.PaymentNumber))
                ) && 
                (
                    this.PrincipalDue == input.PrincipalDue ||
                    (this.PrincipalDue != null &&
                    this.PrincipalDue.Equals(input.PrincipalDue))
                ) && 
                (
                    this.ServicingPaymentMethod == input.ServicingPaymentMethod ||
                    (this.ServicingPaymentMethod != null &&
                    this.ServicingPaymentMethod.Equals(input.ServicingPaymentMethod))
                ) && 
                (
                    this.ServicingTransactionType == input.ServicingTransactionType ||
                    (this.ServicingTransactionType != null &&
                    this.ServicingTransactionType.Equals(input.ServicingTransactionType))
                ) && 
                (
                    this.TotalPastDue == input.TotalPastDue ||
                    (this.TotalPastDue != null &&
                    this.TotalPastDue.Equals(input.TotalPastDue))
                ) && 
                (
                    this.TransactionAmount == input.TransactionAmount ||
                    (this.TransactionAmount != null &&
                    this.TransactionAmount.Equals(input.TransactionAmount))
                ) && 
                (
                    this.TransactionDate == input.TransactionDate ||
                    (this.TransactionDate != null &&
                    this.TransactionDate.Equals(input.TransactionDate))
                ) && 
                (
                    this.UnpaidLateFeeDue == input.UnpaidLateFeeDue ||
                    (this.UnpaidLateFeeDue != null &&
                    this.UnpaidLateFeeDue.Equals(input.UnpaidLateFeeDue))
                ) && 
                (
                    this.PaymentReceiveDate == input.PaymentReceiveDate ||
                    (this.PaymentReceiveDate != null &&
                    this.PaymentReceiveDate.Equals(input.PaymentReceiveDate))
                ) && 
                (
                    this.EscrowTaxDue == input.EscrowTaxDue ||
                    (this.EscrowTaxDue != null &&
                    this.EscrowTaxDue.Equals(input.EscrowTaxDue))
                ) && 
                (
                    this.EscrowHazardInsuranceDue == input.EscrowHazardInsuranceDue ||
                    (this.EscrowHazardInsuranceDue != null &&
                    this.EscrowHazardInsuranceDue.Equals(input.EscrowHazardInsuranceDue))
                ) && 
                (
                    this.EscrowMortgageInsuranceDue == input.EscrowMortgageInsuranceDue ||
                    (this.EscrowMortgageInsuranceDue != null &&
                    this.EscrowMortgageInsuranceDue.Equals(input.EscrowMortgageInsuranceDue))
                ) && 
                (
                    this.EscrowFloodInsuranceDue == input.EscrowFloodInsuranceDue ||
                    (this.EscrowFloodInsuranceDue != null &&
                    this.EscrowFloodInsuranceDue.Equals(input.EscrowFloodInsuranceDue))
                ) && 
                (
                    this.EscrowCityPropertyTaxDue == input.EscrowCityPropertyTaxDue ||
                    (this.EscrowCityPropertyTaxDue != null &&
                    this.EscrowCityPropertyTaxDue.Equals(input.EscrowCityPropertyTaxDue))
                ) && 
                (
                    this.EscrowOther1Due == input.EscrowOther1Due ||
                    (this.EscrowOther1Due != null &&
                    this.EscrowOther1Due.Equals(input.EscrowOther1Due))
                ) && 
                (
                    this.EscrowOther2Due == input.EscrowOther2Due ||
                    (this.EscrowOther2Due != null &&
                    this.EscrowOther2Due.Equals(input.EscrowOther2Due))
                ) && 
                (
                    this.EscrowOther3Due == input.EscrowOther3Due ||
                    (this.EscrowOther3Due != null &&
                    this.EscrowOther3Due.Equals(input.EscrowOther3Due))
                ) && 
                (
                    this.EscrowUSDAMonthlyPremiumDue == input.EscrowUSDAMonthlyPremiumDue ||
                    (this.EscrowUSDAMonthlyPremiumDue != null &&
                    this.EscrowUSDAMonthlyPremiumDue.Equals(input.EscrowUSDAMonthlyPremiumDue))
                ) && 
                (
                    this.Principal == input.Principal ||
                    (this.Principal != null &&
                    this.Principal.Equals(input.Principal))
                ) && 
                (
                    this.Interest == input.Interest ||
                    (this.Interest != null &&
                    this.Interest.Equals(input.Interest))
                ) && 
                (
                    this.Escrow == input.Escrow ||
                    (this.Escrow != null &&
                    this.Escrow.Equals(input.Escrow))
                ) && 
                (
                    this.MiscFee == input.MiscFee ||
                    (this.MiscFee != null &&
                    this.MiscFee.Equals(input.MiscFee))
                ) && 
                (
                    this.LateFee == input.LateFee ||
                    (this.LateFee != null &&
                    this.LateFee.Equals(input.LateFee))
                ) && 
                (
                    this.AdditionalPrincipal == input.AdditionalPrincipal ||
                    (this.AdditionalPrincipal != null &&
                    this.AdditionalPrincipal.Equals(input.AdditionalPrincipal))
                ) && 
                (
                    this.AdditionalEscrow == input.AdditionalEscrow ||
                    (this.AdditionalEscrow != null &&
                    this.AdditionalEscrow.Equals(input.AdditionalEscrow))
                ) && 
                (
                    this.Taxes == input.Taxes ||
                    (this.Taxes != null &&
                    this.Taxes.Equals(input.Taxes))
                ) && 
                (
                    this.HazardInsurance == input.HazardInsurance ||
                    (this.HazardInsurance != null &&
                    this.HazardInsurance.Equals(input.HazardInsurance))
                ) && 
                (
                    this.MortgageInsurance == input.MortgageInsurance ||
                    (this.MortgageInsurance != null &&
                    this.MortgageInsurance.Equals(input.MortgageInsurance))
                ) && 
                (
                    this.FloodInsurance == input.FloodInsurance ||
                    (this.FloodInsurance != null &&
                    this.FloodInsurance.Equals(input.FloodInsurance))
                ) && 
                (
                    this.CityPropertyTax == input.CityPropertyTax ||
                    (this.CityPropertyTax != null &&
                    this.CityPropertyTax.Equals(input.CityPropertyTax))
                ) && 
                (
                    this.Other1Escrow == input.Other1Escrow ||
                    (this.Other1Escrow != null &&
                    this.Other1Escrow.Equals(input.Other1Escrow))
                ) && 
                (
                    this.Other2Escrow == input.Other2Escrow ||
                    (this.Other2Escrow != null &&
                    this.Other2Escrow.Equals(input.Other2Escrow))
                ) && 
                (
                    this.Other3Escrow == input.Other3Escrow ||
                    (this.Other3Escrow != null &&
                    this.Other3Escrow.Equals(input.Other3Escrow))
                ) && 
                (
                    this.USDAMonthlyPremium == input.USDAMonthlyPremium ||
                    (this.USDAMonthlyPremium != null &&
                    this.USDAMonthlyPremium.Equals(input.USDAMonthlyPremium))
                ) && 
                (
                    this.BuydownSubsidyAmount == input.BuydownSubsidyAmount ||
                    (this.BuydownSubsidyAmount != null &&
                    this.BuydownSubsidyAmount.Equals(input.BuydownSubsidyAmount))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.BuydownSubsidyAmountDue != null)
                    hashCode = hashCode * 59 + this.BuydownSubsidyAmountDue.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.CreatedById != null)
                    hashCode = hashCode * 59 + this.CreatedById.GetHashCode();
                if (this.CreatedByName != null)
                    hashCode = hashCode * 59 + this.CreatedByName.GetHashCode();
                if (this.CreatedDateTimeUtc != null)
                    hashCode = hashCode * 59 + this.CreatedDateTimeUtc.GetHashCode();
                if (this.EscrowDue != null)
                    hashCode = hashCode * 59 + this.EscrowDue.GetHashCode();
                if (this.Guid != null)
                    hashCode = hashCode * 59 + this.Guid.GetHashCode();
                if (this.IndexRate != null)
                    hashCode = hashCode * 59 + this.IndexRate.GetHashCode();
                if (this.InterestDue != null)
                    hashCode = hashCode * 59 + this.InterestDue.GetHashCode();
                if (this.InterestRate != null)
                    hashCode = hashCode * 59 + this.InterestRate.GetHashCode();
                if (this.LatePaymentDate != null)
                    hashCode = hashCode * 59 + this.LatePaymentDate.GetHashCode();
                if (this.MiscFeeDue != null)
                    hashCode = hashCode * 59 + this.MiscFeeDue.GetHashCode();
                if (this.ModifiedById != null)
                    hashCode = hashCode * 59 + this.ModifiedById.GetHashCode();
                if (this.ModifiedByName != null)
                    hashCode = hashCode * 59 + this.ModifiedByName.GetHashCode();
                if (this.ModifiedDateTimeUtc != null)
                    hashCode = hashCode * 59 + this.ModifiedDateTimeUtc.GetHashCode();
                if (this.PaymentNumber != null)
                    hashCode = hashCode * 59 + this.PaymentNumber.GetHashCode();
                if (this.PrincipalDue != null)
                    hashCode = hashCode * 59 + this.PrincipalDue.GetHashCode();
                if (this.ServicingPaymentMethod != null)
                    hashCode = hashCode * 59 + this.ServicingPaymentMethod.GetHashCode();
                if (this.ServicingTransactionType != null)
                    hashCode = hashCode * 59 + this.ServicingTransactionType.GetHashCode();
                if (this.TotalPastDue != null)
                    hashCode = hashCode * 59 + this.TotalPastDue.GetHashCode();
                if (this.TransactionAmount != null)
                    hashCode = hashCode * 59 + this.TransactionAmount.GetHashCode();
                if (this.TransactionDate != null)
                    hashCode = hashCode * 59 + this.TransactionDate.GetHashCode();
                if (this.UnpaidLateFeeDue != null)
                    hashCode = hashCode * 59 + this.UnpaidLateFeeDue.GetHashCode();
                if (this.PaymentReceiveDate != null)
                    hashCode = hashCode * 59 + this.PaymentReceiveDate.GetHashCode();
                if (this.EscrowTaxDue != null)
                    hashCode = hashCode * 59 + this.EscrowTaxDue.GetHashCode();
                if (this.EscrowHazardInsuranceDue != null)
                    hashCode = hashCode * 59 + this.EscrowHazardInsuranceDue.GetHashCode();
                if (this.EscrowMortgageInsuranceDue != null)
                    hashCode = hashCode * 59 + this.EscrowMortgageInsuranceDue.GetHashCode();
                if (this.EscrowFloodInsuranceDue != null)
                    hashCode = hashCode * 59 + this.EscrowFloodInsuranceDue.GetHashCode();
                if (this.EscrowCityPropertyTaxDue != null)
                    hashCode = hashCode * 59 + this.EscrowCityPropertyTaxDue.GetHashCode();
                if (this.EscrowOther1Due != null)
                    hashCode = hashCode * 59 + this.EscrowOther1Due.GetHashCode();
                if (this.EscrowOther2Due != null)
                    hashCode = hashCode * 59 + this.EscrowOther2Due.GetHashCode();
                if (this.EscrowOther3Due != null)
                    hashCode = hashCode * 59 + this.EscrowOther3Due.GetHashCode();
                if (this.EscrowUSDAMonthlyPremiumDue != null)
                    hashCode = hashCode * 59 + this.EscrowUSDAMonthlyPremiumDue.GetHashCode();
                if (this.Principal != null)
                    hashCode = hashCode * 59 + this.Principal.GetHashCode();
                if (this.Interest != null)
                    hashCode = hashCode * 59 + this.Interest.GetHashCode();
                if (this.Escrow != null)
                    hashCode = hashCode * 59 + this.Escrow.GetHashCode();
                if (this.MiscFee != null)
                    hashCode = hashCode * 59 + this.MiscFee.GetHashCode();
                if (this.LateFee != null)
                    hashCode = hashCode * 59 + this.LateFee.GetHashCode();
                if (this.AdditionalPrincipal != null)
                    hashCode = hashCode * 59 + this.AdditionalPrincipal.GetHashCode();
                if (this.AdditionalEscrow != null)
                    hashCode = hashCode * 59 + this.AdditionalEscrow.GetHashCode();
                if (this.Taxes != null)
                    hashCode = hashCode * 59 + this.Taxes.GetHashCode();
                if (this.HazardInsurance != null)
                    hashCode = hashCode * 59 + this.HazardInsurance.GetHashCode();
                if (this.MortgageInsurance != null)
                    hashCode = hashCode * 59 + this.MortgageInsurance.GetHashCode();
                if (this.FloodInsurance != null)
                    hashCode = hashCode * 59 + this.FloodInsurance.GetHashCode();
                if (this.CityPropertyTax != null)
                    hashCode = hashCode * 59 + this.CityPropertyTax.GetHashCode();
                if (this.Other1Escrow != null)
                    hashCode = hashCode * 59 + this.Other1Escrow.GetHashCode();
                if (this.Other2Escrow != null)
                    hashCode = hashCode * 59 + this.Other2Escrow.GetHashCode();
                if (this.Other3Escrow != null)
                    hashCode = hashCode * 59 + this.Other3Escrow.GetHashCode();
                if (this.USDAMonthlyPremium != null)
                    hashCode = hashCode * 59 + this.USDAMonthlyPremium.GetHashCode();
                if (this.BuydownSubsidyAmount != null)
                    hashCode = hashCode * 59 + this.BuydownSubsidyAmount.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
