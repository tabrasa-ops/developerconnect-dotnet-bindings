/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractTsum
    /// </summary>
    [DataContract]
    public partial class LoanContractTsum :  IEquatable<LoanContractTsum>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets AboveOrBelowRatePercent
        /// </summary>
        [DataMember(Name="aboveOrBelowRatePercent", EmitDefaultValue=false)]
        public double? AboveOrBelowRatePercent { get; set; }

        /// <summary>
        /// Gets or Sets AdjustorCoverage
        /// </summary>
        [DataMember(Name="adjustorCoverage", EmitDefaultValue=false)]
        public string AdjustorCoverage { get; set; }

        /// <summary>
        /// Gets or Sets AusRecommendation
        /// </summary>
        [DataMember(Name="ausRecommendation", EmitDefaultValue=false)]
        public string AusRecommendation { get; set; }

        /// <summary>
        /// Gets or Sets BedroomsUnit1
        /// </summary>
        [DataMember(Name="bedroomsUnit1", EmitDefaultValue=false)]
        public int? BedroomsUnit1 { get; set; }

        /// <summary>
        /// Gets or Sets BedroomsUnit2
        /// </summary>
        [DataMember(Name="bedroomsUnit2", EmitDefaultValue=false)]
        public int? BedroomsUnit2 { get; set; }

        /// <summary>
        /// Gets or Sets BedroomsUnit3
        /// </summary>
        [DataMember(Name="bedroomsUnit3", EmitDefaultValue=false)]
        public int? BedroomsUnit3 { get; set; }

        /// <summary>
        /// Gets or Sets BedroomsUnit4
        /// </summary>
        [DataMember(Name="bedroomsUnit4", EmitDefaultValue=false)]
        public int? BedroomsUnit4 { get; set; }

        /// <summary>
        /// Gets or Sets CertificateNumber
        /// </summary>
        [DataMember(Name="certificateNumber", EmitDefaultValue=false)]
        public string CertificateNumber { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentNumber
        /// </summary>
        [DataMember(Name="commitmentNumber", EmitDefaultValue=false)]
        public string CommitmentNumber { get; set; }

        /// <summary>
        /// Gets or Sets CommunityLendingAfordableHousingInitiative
        /// </summary>
        [DataMember(Name="communityLendingAfordableHousingInitiative", EmitDefaultValue=false)]
        public bool? CommunityLendingAfordableHousingInitiative { get; set; }

        /// <summary>
        /// Gets or Sets ContactTitle
        /// </summary>
        [DataMember(Name="contactTitle", EmitDefaultValue=false)]
        public string ContactTitle { get; set; }

        /// <summary>
        /// Gets or Sets ContractNumber
        /// </summary>
        [DataMember(Name="contractNumber", EmitDefaultValue=false)]
        public string ContractNumber { get; set; }

        /// <summary>
        /// Gets or Sets CpmProjectId
        /// </summary>
        [DataMember(Name="cpmProjectId", EmitDefaultValue=false)]
        public string CpmProjectId { get; set; }

        /// <summary>
        /// Gets or Sets DuCaseIdLpAusKey
        /// </summary>
        [DataMember(Name="duCaseIdLpAusKey", EmitDefaultValue=false)]
        public string DuCaseIdLpAusKey { get; set; }

        /// <summary>
        /// Gets or Sets FormNumber
        /// </summary>
        [DataMember(Name="formNumber", EmitDefaultValue=false)]
        public string FormNumber { get; set; }

        /// <summary>
        /// Gets or Sets GrossRentUnit1
        /// </summary>
        [DataMember(Name="grossRentUnit1", EmitDefaultValue=false)]
        public int? GrossRentUnit1 { get; set; }

        /// <summary>
        /// Gets or Sets GrossRentUnit2
        /// </summary>
        [DataMember(Name="grossRentUnit2", EmitDefaultValue=false)]
        public int? GrossRentUnit2 { get; set; }

        /// <summary>
        /// Gets or Sets GrossRentUnit3
        /// </summary>
        [DataMember(Name="grossRentUnit3", EmitDefaultValue=false)]
        public int? GrossRentUnit3 { get; set; }

        /// <summary>
        /// Gets or Sets GrossRentUnit4
        /// </summary>
        [DataMember(Name="grossRentUnit4", EmitDefaultValue=false)]
        public int? GrossRentUnit4 { get; set; }

        /// <summary>
        /// Gets or Sets HomeBuyersOwnershipEducationCertificateInFile
        /// </summary>
        [DataMember(Name="homeBuyersOwnershipEducationCertificateInFile", EmitDefaultValue=false)]
        public string HomeBuyersOwnershipEducationCertificateInFile { get; set; }

        /// <summary>
        /// Gets or Sets InsurerCode
        /// </summary>
        [DataMember(Name="insurerCode", EmitDefaultValue=false)]
        public string InsurerCode { get; set; }

        /// <summary>
        /// Gets or Sets InterestedPartyContributions
        /// </summary>
        [DataMember(Name="interestedPartyContributions", EmitDefaultValue=false)]
        public double? InterestedPartyContributions { get; set; }

        /// <summary>
        /// Gets or Sets InvestorLoanNumber
        /// </summary>
        [DataMember(Name="investorLoanNumber", EmitDefaultValue=false)]
        public string InvestorLoanNumber { get; set; }

        /// <summary>
        /// Gets or Sets LevelOfPropertyReviewType
        /// </summary>
        [DataMember(Name="levelOfPropertyReviewType", EmitDefaultValue=false)]
        public string LevelOfPropertyReviewType { get; set; }

        /// <summary>
        /// Gets or Sets LpDocClass
        /// </summary>
        [DataMember(Name="lpDocClass", EmitDefaultValue=false)]
        public string LpDocClass { get; set; }

        /// <summary>
        /// Gets or Sets MortgageOriginator
        /// </summary>
        [DataMember(Name="mortgageOriginator", EmitDefaultValue=false)]
        public string MortgageOriginator { get; set; }

        /// <summary>
        /// Gets or Sets NoteDate
        /// </summary>
        [DataMember(Name="noteDate", EmitDefaultValue=false)]
        public DateTime? NoteDate { get; set; }

        /// <summary>
        /// Gets or Sets NoteRateType
        /// </summary>
        [DataMember(Name="noteRateType", EmitDefaultValue=false)]
        public string NoteRateType { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfBorrowers
        /// </summary>
        [DataMember(Name="numberOfBorrowers", EmitDefaultValue=false)]
        public int? NumberOfBorrowers { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfMonthsReserves
        /// </summary>
        [DataMember(Name="numberOfMonthsReserves", EmitDefaultValue=false)]
        public int? NumberOfMonthsReserves { get; set; }

        /// <summary>
        /// Gets or Sets OriginalAmountOfFirstMortgage
        /// </summary>
        [DataMember(Name="originalAmountOfFirstMortgage", EmitDefaultValue=false)]
        public double? OriginalAmountOfFirstMortgage { get; set; }

        /// <summary>
        /// Gets or Sets OtherTypeDescription
        /// </summary>
        [DataMember(Name="otherTypeDescription", EmitDefaultValue=false)]
        public string OtherTypeDescription { get; set; }

        /// <summary>
        /// Gets or Sets PercentageofCoverage
        /// </summary>
        [DataMember(Name="percentageofCoverage", EmitDefaultValue=false)]
        public string PercentageofCoverage { get; set; }

        /// <summary>
        /// Gets or Sets ProjectName
        /// </summary>
        [DataMember(Name="projectName", EmitDefaultValue=false)]
        public string ProjectName { get; set; }

        /// <summary>
        /// Gets or Sets PropertyType
        /// </summary>
        [DataMember(Name="propertyType", EmitDefaultValue=false)]
        public string PropertyType { get; set; }

        /// <summary>
        /// Gets or Sets Required
        /// </summary>
        [DataMember(Name="required", EmitDefaultValue=false)]
        public double? Required { get; set; }

        /// <summary>
        /// Gets or Sets RiskAssessmentType
        /// </summary>
        [DataMember(Name="riskAssessmentType", EmitDefaultValue=false)]
        public string RiskAssessmentType { get; set; }

        /// <summary>
        /// Gets or Sets SellerAddress
        /// </summary>
        [DataMember(Name="sellerAddress", EmitDefaultValue=false)]
        public string SellerAddress { get; set; }

        /// <summary>
        /// Gets or Sets SellerCity
        /// </summary>
        [DataMember(Name="sellerCity", EmitDefaultValue=false)]
        public string SellerCity { get; set; }

        /// <summary>
        /// Gets or Sets SellerContactName
        /// </summary>
        [DataMember(Name="sellerContactName", EmitDefaultValue=false)]
        public string SellerContactName { get; set; }

        /// <summary>
        /// Gets or Sets SellerName
        /// </summary>
        [DataMember(Name="sellerName", EmitDefaultValue=false)]
        public string SellerName { get; set; }

        /// <summary>
        /// Gets or Sets SellerNumber
        /// </summary>
        [DataMember(Name="sellerNumber", EmitDefaultValue=false)]
        public string SellerNumber { get; set; }

        /// <summary>
        /// Gets or Sets SellerPhone
        /// </summary>
        [DataMember(Name="sellerPhone", EmitDefaultValue=false)]
        public string SellerPhone { get; set; }

        /// <summary>
        /// Gets or Sets SellerPostalCode
        /// </summary>
        [DataMember(Name="sellerPostalCode", EmitDefaultValue=false)]
        public string SellerPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets SellerState
        /// </summary>
        [DataMember(Name="sellerState", EmitDefaultValue=false)]
        public string SellerState { get; set; }

        /// <summary>
        /// Gets or Sets SpecialFeatureCode1
        /// </summary>
        [DataMember(Name="specialFeatureCode1", EmitDefaultValue=false)]
        public string SpecialFeatureCode1 { get; set; }

        /// <summary>
        /// Gets or Sets SpecialFeatureCode2
        /// </summary>
        [DataMember(Name="specialFeatureCode2", EmitDefaultValue=false)]
        public string SpecialFeatureCode2 { get; set; }

        /// <summary>
        /// Gets or Sets SpecialFeatureCode3
        /// </summary>
        [DataMember(Name="specialFeatureCode3", EmitDefaultValue=false)]
        public string SpecialFeatureCode3 { get; set; }

        /// <summary>
        /// Gets or Sets SpecialFeatureCode4
        /// </summary>
        [DataMember(Name="specialFeatureCode4", EmitDefaultValue=false)]
        public string SpecialFeatureCode4 { get; set; }

        /// <summary>
        /// Gets or Sets SpecialFeatureCode5
        /// </summary>
        [DataMember(Name="specialFeatureCode5", EmitDefaultValue=false)]
        public string SpecialFeatureCode5 { get; set; }

        /// <summary>
        /// Gets or Sets SpecialFeatureCode6
        /// </summary>
        [DataMember(Name="specialFeatureCode6", EmitDefaultValue=false)]
        public string SpecialFeatureCode6 { get; set; }

        /// <summary>
        /// Gets or Sets ThirdPartyName1
        /// </summary>
        [DataMember(Name="thirdPartyName1", EmitDefaultValue=false)]
        public string ThirdPartyName1 { get; set; }

        /// <summary>
        /// Gets or Sets ThirdPartyName2
        /// </summary>
        [DataMember(Name="thirdPartyName2", EmitDefaultValue=false)]
        public string ThirdPartyName2 { get; set; }

        /// <summary>
        /// Gets or Sets TypeOfCommitment
        /// </summary>
        [DataMember(Name="typeOfCommitment", EmitDefaultValue=false)]
        public string TypeOfCommitment { get; set; }

        /// <summary>
        /// Gets or Sets UnderwritingComment1
        /// </summary>
        [DataMember(Name="underwritingComment1", EmitDefaultValue=false)]
        public string UnderwritingComment1 { get; set; }

        /// <summary>
        /// Gets or Sets UnderwritingComment2
        /// </summary>
        [DataMember(Name="underwritingComment2", EmitDefaultValue=false)]
        public string UnderwritingComment2 { get; set; }

        /// <summary>
        /// Gets or Sets UnderwritingComment3
        /// </summary>
        [DataMember(Name="underwritingComment3", EmitDefaultValue=false)]
        public string UnderwritingComment3 { get; set; }

        /// <summary>
        /// Gets or Sets UnderwritingComment4
        /// </summary>
        [DataMember(Name="underwritingComment4", EmitDefaultValue=false)]
        public string UnderwritingComment4 { get; set; }

        /// <summary>
        /// Gets or Sets UnderwritingComment5
        /// </summary>
        [DataMember(Name="underwritingComment5", EmitDefaultValue=false)]
        public string UnderwritingComment5 { get; set; }

        /// <summary>
        /// Gets or Sets UnderwritingComment6
        /// </summary>
        [DataMember(Name="underwritingComment6", EmitDefaultValue=false)]
        public string UnderwritingComment6 { get; set; }

        /// <summary>
        /// Gets or Sets UnderwritingComment7
        /// </summary>
        [DataMember(Name="underwritingComment7", EmitDefaultValue=false)]
        public string UnderwritingComment7 { get; set; }

        /// <summary>
        /// Gets or Sets UnderwritingComment8
        /// </summary>
        [DataMember(Name="underwritingComment8", EmitDefaultValue=false)]
        public string UnderwritingComment8 { get; set; }

        /// <summary>
        /// Gets or Sets UnpaidBalance
        /// </summary>
        [DataMember(Name="unpaidBalance", EmitDefaultValue=false)]
        public double? UnpaidBalance { get; set; }

        /// <summary>
        /// Gets or Sets Verified
        /// </summary>
        [DataMember(Name="verified", EmitDefaultValue=false)]
        public double? Verified { get; set; }

        /// <summary>
        /// Gets or Sets PropertyFormType
        /// </summary>
        [DataMember(Name="propertyFormType", EmitDefaultValue=false)]
        public string PropertyFormType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractTsum {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AboveOrBelowRatePercent: ").Append(AboveOrBelowRatePercent).Append("\n");
            sb.Append("  AdjustorCoverage: ").Append(AdjustorCoverage).Append("\n");
            sb.Append("  AusRecommendation: ").Append(AusRecommendation).Append("\n");
            sb.Append("  BedroomsUnit1: ").Append(BedroomsUnit1).Append("\n");
            sb.Append("  BedroomsUnit2: ").Append(BedroomsUnit2).Append("\n");
            sb.Append("  BedroomsUnit3: ").Append(BedroomsUnit3).Append("\n");
            sb.Append("  BedroomsUnit4: ").Append(BedroomsUnit4).Append("\n");
            sb.Append("  CertificateNumber: ").Append(CertificateNumber).Append("\n");
            sb.Append("  CommitmentNumber: ").Append(CommitmentNumber).Append("\n");
            sb.Append("  CommunityLendingAfordableHousingInitiative: ").Append(CommunityLendingAfordableHousingInitiative).Append("\n");
            sb.Append("  ContactTitle: ").Append(ContactTitle).Append("\n");
            sb.Append("  ContractNumber: ").Append(ContractNumber).Append("\n");
            sb.Append("  CpmProjectId: ").Append(CpmProjectId).Append("\n");
            sb.Append("  DuCaseIdLpAusKey: ").Append(DuCaseIdLpAusKey).Append("\n");
            sb.Append("  FormNumber: ").Append(FormNumber).Append("\n");
            sb.Append("  GrossRentUnit1: ").Append(GrossRentUnit1).Append("\n");
            sb.Append("  GrossRentUnit2: ").Append(GrossRentUnit2).Append("\n");
            sb.Append("  GrossRentUnit3: ").Append(GrossRentUnit3).Append("\n");
            sb.Append("  GrossRentUnit4: ").Append(GrossRentUnit4).Append("\n");
            sb.Append("  HomeBuyersOwnershipEducationCertificateInFile: ").Append(HomeBuyersOwnershipEducationCertificateInFile).Append("\n");
            sb.Append("  InsurerCode: ").Append(InsurerCode).Append("\n");
            sb.Append("  InterestedPartyContributions: ").Append(InterestedPartyContributions).Append("\n");
            sb.Append("  InvestorLoanNumber: ").Append(InvestorLoanNumber).Append("\n");
            sb.Append("  LevelOfPropertyReviewType: ").Append(LevelOfPropertyReviewType).Append("\n");
            sb.Append("  LpDocClass: ").Append(LpDocClass).Append("\n");
            sb.Append("  MortgageOriginator: ").Append(MortgageOriginator).Append("\n");
            sb.Append("  NoteDate: ").Append(NoteDate).Append("\n");
            sb.Append("  NoteRateType: ").Append(NoteRateType).Append("\n");
            sb.Append("  NumberOfBorrowers: ").Append(NumberOfBorrowers).Append("\n");
            sb.Append("  NumberOfMonthsReserves: ").Append(NumberOfMonthsReserves).Append("\n");
            sb.Append("  OriginalAmountOfFirstMortgage: ").Append(OriginalAmountOfFirstMortgage).Append("\n");
            sb.Append("  OtherTypeDescription: ").Append(OtherTypeDescription).Append("\n");
            sb.Append("  PercentageofCoverage: ").Append(PercentageofCoverage).Append("\n");
            sb.Append("  ProjectName: ").Append(ProjectName).Append("\n");
            sb.Append("  PropertyType: ").Append(PropertyType).Append("\n");
            sb.Append("  Required: ").Append(Required).Append("\n");
            sb.Append("  RiskAssessmentType: ").Append(RiskAssessmentType).Append("\n");
            sb.Append("  SellerAddress: ").Append(SellerAddress).Append("\n");
            sb.Append("  SellerCity: ").Append(SellerCity).Append("\n");
            sb.Append("  SellerContactName: ").Append(SellerContactName).Append("\n");
            sb.Append("  SellerName: ").Append(SellerName).Append("\n");
            sb.Append("  SellerNumber: ").Append(SellerNumber).Append("\n");
            sb.Append("  SellerPhone: ").Append(SellerPhone).Append("\n");
            sb.Append("  SellerPostalCode: ").Append(SellerPostalCode).Append("\n");
            sb.Append("  SellerState: ").Append(SellerState).Append("\n");
            sb.Append("  SpecialFeatureCode1: ").Append(SpecialFeatureCode1).Append("\n");
            sb.Append("  SpecialFeatureCode2: ").Append(SpecialFeatureCode2).Append("\n");
            sb.Append("  SpecialFeatureCode3: ").Append(SpecialFeatureCode3).Append("\n");
            sb.Append("  SpecialFeatureCode4: ").Append(SpecialFeatureCode4).Append("\n");
            sb.Append("  SpecialFeatureCode5: ").Append(SpecialFeatureCode5).Append("\n");
            sb.Append("  SpecialFeatureCode6: ").Append(SpecialFeatureCode6).Append("\n");
            sb.Append("  ThirdPartyName1: ").Append(ThirdPartyName1).Append("\n");
            sb.Append("  ThirdPartyName2: ").Append(ThirdPartyName2).Append("\n");
            sb.Append("  TypeOfCommitment: ").Append(TypeOfCommitment).Append("\n");
            sb.Append("  UnderwritingComment1: ").Append(UnderwritingComment1).Append("\n");
            sb.Append("  UnderwritingComment2: ").Append(UnderwritingComment2).Append("\n");
            sb.Append("  UnderwritingComment3: ").Append(UnderwritingComment3).Append("\n");
            sb.Append("  UnderwritingComment4: ").Append(UnderwritingComment4).Append("\n");
            sb.Append("  UnderwritingComment5: ").Append(UnderwritingComment5).Append("\n");
            sb.Append("  UnderwritingComment6: ").Append(UnderwritingComment6).Append("\n");
            sb.Append("  UnderwritingComment7: ").Append(UnderwritingComment7).Append("\n");
            sb.Append("  UnderwritingComment8: ").Append(UnderwritingComment8).Append("\n");
            sb.Append("  UnpaidBalance: ").Append(UnpaidBalance).Append("\n");
            sb.Append("  Verified: ").Append(Verified).Append("\n");
            sb.Append("  PropertyFormType: ").Append(PropertyFormType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractTsum);
        }

        /// <summary>
        /// Returns true if LoanContractTsum instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractTsum to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractTsum input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AboveOrBelowRatePercent == input.AboveOrBelowRatePercent ||
                    (this.AboveOrBelowRatePercent != null &&
                    this.AboveOrBelowRatePercent.Equals(input.AboveOrBelowRatePercent))
                ) && 
                (
                    this.AdjustorCoverage == input.AdjustorCoverage ||
                    (this.AdjustorCoverage != null &&
                    this.AdjustorCoverage.Equals(input.AdjustorCoverage))
                ) && 
                (
                    this.AusRecommendation == input.AusRecommendation ||
                    (this.AusRecommendation != null &&
                    this.AusRecommendation.Equals(input.AusRecommendation))
                ) && 
                (
                    this.BedroomsUnit1 == input.BedroomsUnit1 ||
                    (this.BedroomsUnit1 != null &&
                    this.BedroomsUnit1.Equals(input.BedroomsUnit1))
                ) && 
                (
                    this.BedroomsUnit2 == input.BedroomsUnit2 ||
                    (this.BedroomsUnit2 != null &&
                    this.BedroomsUnit2.Equals(input.BedroomsUnit2))
                ) && 
                (
                    this.BedroomsUnit3 == input.BedroomsUnit3 ||
                    (this.BedroomsUnit3 != null &&
                    this.BedroomsUnit3.Equals(input.BedroomsUnit3))
                ) && 
                (
                    this.BedroomsUnit4 == input.BedroomsUnit4 ||
                    (this.BedroomsUnit4 != null &&
                    this.BedroomsUnit4.Equals(input.BedroomsUnit4))
                ) && 
                (
                    this.CertificateNumber == input.CertificateNumber ||
                    (this.CertificateNumber != null &&
                    this.CertificateNumber.Equals(input.CertificateNumber))
                ) && 
                (
                    this.CommitmentNumber == input.CommitmentNumber ||
                    (this.CommitmentNumber != null &&
                    this.CommitmentNumber.Equals(input.CommitmentNumber))
                ) && 
                (
                    this.CommunityLendingAfordableHousingInitiative == input.CommunityLendingAfordableHousingInitiative ||
                    (this.CommunityLendingAfordableHousingInitiative != null &&
                    this.CommunityLendingAfordableHousingInitiative.Equals(input.CommunityLendingAfordableHousingInitiative))
                ) && 
                (
                    this.ContactTitle == input.ContactTitle ||
                    (this.ContactTitle != null &&
                    this.ContactTitle.Equals(input.ContactTitle))
                ) && 
                (
                    this.ContractNumber == input.ContractNumber ||
                    (this.ContractNumber != null &&
                    this.ContractNumber.Equals(input.ContractNumber))
                ) && 
                (
                    this.CpmProjectId == input.CpmProjectId ||
                    (this.CpmProjectId != null &&
                    this.CpmProjectId.Equals(input.CpmProjectId))
                ) && 
                (
                    this.DuCaseIdLpAusKey == input.DuCaseIdLpAusKey ||
                    (this.DuCaseIdLpAusKey != null &&
                    this.DuCaseIdLpAusKey.Equals(input.DuCaseIdLpAusKey))
                ) && 
                (
                    this.FormNumber == input.FormNumber ||
                    (this.FormNumber != null &&
                    this.FormNumber.Equals(input.FormNumber))
                ) && 
                (
                    this.GrossRentUnit1 == input.GrossRentUnit1 ||
                    (this.GrossRentUnit1 != null &&
                    this.GrossRentUnit1.Equals(input.GrossRentUnit1))
                ) && 
                (
                    this.GrossRentUnit2 == input.GrossRentUnit2 ||
                    (this.GrossRentUnit2 != null &&
                    this.GrossRentUnit2.Equals(input.GrossRentUnit2))
                ) && 
                (
                    this.GrossRentUnit3 == input.GrossRentUnit3 ||
                    (this.GrossRentUnit3 != null &&
                    this.GrossRentUnit3.Equals(input.GrossRentUnit3))
                ) && 
                (
                    this.GrossRentUnit4 == input.GrossRentUnit4 ||
                    (this.GrossRentUnit4 != null &&
                    this.GrossRentUnit4.Equals(input.GrossRentUnit4))
                ) && 
                (
                    this.HomeBuyersOwnershipEducationCertificateInFile == input.HomeBuyersOwnershipEducationCertificateInFile ||
                    (this.HomeBuyersOwnershipEducationCertificateInFile != null &&
                    this.HomeBuyersOwnershipEducationCertificateInFile.Equals(input.HomeBuyersOwnershipEducationCertificateInFile))
                ) && 
                (
                    this.InsurerCode == input.InsurerCode ||
                    (this.InsurerCode != null &&
                    this.InsurerCode.Equals(input.InsurerCode))
                ) && 
                (
                    this.InterestedPartyContributions == input.InterestedPartyContributions ||
                    (this.InterestedPartyContributions != null &&
                    this.InterestedPartyContributions.Equals(input.InterestedPartyContributions))
                ) && 
                (
                    this.InvestorLoanNumber == input.InvestorLoanNumber ||
                    (this.InvestorLoanNumber != null &&
                    this.InvestorLoanNumber.Equals(input.InvestorLoanNumber))
                ) && 
                (
                    this.LevelOfPropertyReviewType == input.LevelOfPropertyReviewType ||
                    (this.LevelOfPropertyReviewType != null &&
                    this.LevelOfPropertyReviewType.Equals(input.LevelOfPropertyReviewType))
                ) && 
                (
                    this.LpDocClass == input.LpDocClass ||
                    (this.LpDocClass != null &&
                    this.LpDocClass.Equals(input.LpDocClass))
                ) && 
                (
                    this.MortgageOriginator == input.MortgageOriginator ||
                    (this.MortgageOriginator != null &&
                    this.MortgageOriginator.Equals(input.MortgageOriginator))
                ) && 
                (
                    this.NoteDate == input.NoteDate ||
                    (this.NoteDate != null &&
                    this.NoteDate.Equals(input.NoteDate))
                ) && 
                (
                    this.NoteRateType == input.NoteRateType ||
                    (this.NoteRateType != null &&
                    this.NoteRateType.Equals(input.NoteRateType))
                ) && 
                (
                    this.NumberOfBorrowers == input.NumberOfBorrowers ||
                    (this.NumberOfBorrowers != null &&
                    this.NumberOfBorrowers.Equals(input.NumberOfBorrowers))
                ) && 
                (
                    this.NumberOfMonthsReserves == input.NumberOfMonthsReserves ||
                    (this.NumberOfMonthsReserves != null &&
                    this.NumberOfMonthsReserves.Equals(input.NumberOfMonthsReserves))
                ) && 
                (
                    this.OriginalAmountOfFirstMortgage == input.OriginalAmountOfFirstMortgage ||
                    (this.OriginalAmountOfFirstMortgage != null &&
                    this.OriginalAmountOfFirstMortgage.Equals(input.OriginalAmountOfFirstMortgage))
                ) && 
                (
                    this.OtherTypeDescription == input.OtherTypeDescription ||
                    (this.OtherTypeDescription != null &&
                    this.OtherTypeDescription.Equals(input.OtherTypeDescription))
                ) && 
                (
                    this.PercentageofCoverage == input.PercentageofCoverage ||
                    (this.PercentageofCoverage != null &&
                    this.PercentageofCoverage.Equals(input.PercentageofCoverage))
                ) && 
                (
                    this.ProjectName == input.ProjectName ||
                    (this.ProjectName != null &&
                    this.ProjectName.Equals(input.ProjectName))
                ) && 
                (
                    this.PropertyType == input.PropertyType ||
                    (this.PropertyType != null &&
                    this.PropertyType.Equals(input.PropertyType))
                ) && 
                (
                    this.Required == input.Required ||
                    (this.Required != null &&
                    this.Required.Equals(input.Required))
                ) && 
                (
                    this.RiskAssessmentType == input.RiskAssessmentType ||
                    (this.RiskAssessmentType != null &&
                    this.RiskAssessmentType.Equals(input.RiskAssessmentType))
                ) && 
                (
                    this.SellerAddress == input.SellerAddress ||
                    (this.SellerAddress != null &&
                    this.SellerAddress.Equals(input.SellerAddress))
                ) && 
                (
                    this.SellerCity == input.SellerCity ||
                    (this.SellerCity != null &&
                    this.SellerCity.Equals(input.SellerCity))
                ) && 
                (
                    this.SellerContactName == input.SellerContactName ||
                    (this.SellerContactName != null &&
                    this.SellerContactName.Equals(input.SellerContactName))
                ) && 
                (
                    this.SellerName == input.SellerName ||
                    (this.SellerName != null &&
                    this.SellerName.Equals(input.SellerName))
                ) && 
                (
                    this.SellerNumber == input.SellerNumber ||
                    (this.SellerNumber != null &&
                    this.SellerNumber.Equals(input.SellerNumber))
                ) && 
                (
                    this.SellerPhone == input.SellerPhone ||
                    (this.SellerPhone != null &&
                    this.SellerPhone.Equals(input.SellerPhone))
                ) && 
                (
                    this.SellerPostalCode == input.SellerPostalCode ||
                    (this.SellerPostalCode != null &&
                    this.SellerPostalCode.Equals(input.SellerPostalCode))
                ) && 
                (
                    this.SellerState == input.SellerState ||
                    (this.SellerState != null &&
                    this.SellerState.Equals(input.SellerState))
                ) && 
                (
                    this.SpecialFeatureCode1 == input.SpecialFeatureCode1 ||
                    (this.SpecialFeatureCode1 != null &&
                    this.SpecialFeatureCode1.Equals(input.SpecialFeatureCode1))
                ) && 
                (
                    this.SpecialFeatureCode2 == input.SpecialFeatureCode2 ||
                    (this.SpecialFeatureCode2 != null &&
                    this.SpecialFeatureCode2.Equals(input.SpecialFeatureCode2))
                ) && 
                (
                    this.SpecialFeatureCode3 == input.SpecialFeatureCode3 ||
                    (this.SpecialFeatureCode3 != null &&
                    this.SpecialFeatureCode3.Equals(input.SpecialFeatureCode3))
                ) && 
                (
                    this.SpecialFeatureCode4 == input.SpecialFeatureCode4 ||
                    (this.SpecialFeatureCode4 != null &&
                    this.SpecialFeatureCode4.Equals(input.SpecialFeatureCode4))
                ) && 
                (
                    this.SpecialFeatureCode5 == input.SpecialFeatureCode5 ||
                    (this.SpecialFeatureCode5 != null &&
                    this.SpecialFeatureCode5.Equals(input.SpecialFeatureCode5))
                ) && 
                (
                    this.SpecialFeatureCode6 == input.SpecialFeatureCode6 ||
                    (this.SpecialFeatureCode6 != null &&
                    this.SpecialFeatureCode6.Equals(input.SpecialFeatureCode6))
                ) && 
                (
                    this.ThirdPartyName1 == input.ThirdPartyName1 ||
                    (this.ThirdPartyName1 != null &&
                    this.ThirdPartyName1.Equals(input.ThirdPartyName1))
                ) && 
                (
                    this.ThirdPartyName2 == input.ThirdPartyName2 ||
                    (this.ThirdPartyName2 != null &&
                    this.ThirdPartyName2.Equals(input.ThirdPartyName2))
                ) && 
                (
                    this.TypeOfCommitment == input.TypeOfCommitment ||
                    (this.TypeOfCommitment != null &&
                    this.TypeOfCommitment.Equals(input.TypeOfCommitment))
                ) && 
                (
                    this.UnderwritingComment1 == input.UnderwritingComment1 ||
                    (this.UnderwritingComment1 != null &&
                    this.UnderwritingComment1.Equals(input.UnderwritingComment1))
                ) && 
                (
                    this.UnderwritingComment2 == input.UnderwritingComment2 ||
                    (this.UnderwritingComment2 != null &&
                    this.UnderwritingComment2.Equals(input.UnderwritingComment2))
                ) && 
                (
                    this.UnderwritingComment3 == input.UnderwritingComment3 ||
                    (this.UnderwritingComment3 != null &&
                    this.UnderwritingComment3.Equals(input.UnderwritingComment3))
                ) && 
                (
                    this.UnderwritingComment4 == input.UnderwritingComment4 ||
                    (this.UnderwritingComment4 != null &&
                    this.UnderwritingComment4.Equals(input.UnderwritingComment4))
                ) && 
                (
                    this.UnderwritingComment5 == input.UnderwritingComment5 ||
                    (this.UnderwritingComment5 != null &&
                    this.UnderwritingComment5.Equals(input.UnderwritingComment5))
                ) && 
                (
                    this.UnderwritingComment6 == input.UnderwritingComment6 ||
                    (this.UnderwritingComment6 != null &&
                    this.UnderwritingComment6.Equals(input.UnderwritingComment6))
                ) && 
                (
                    this.UnderwritingComment7 == input.UnderwritingComment7 ||
                    (this.UnderwritingComment7 != null &&
                    this.UnderwritingComment7.Equals(input.UnderwritingComment7))
                ) && 
                (
                    this.UnderwritingComment8 == input.UnderwritingComment8 ||
                    (this.UnderwritingComment8 != null &&
                    this.UnderwritingComment8.Equals(input.UnderwritingComment8))
                ) && 
                (
                    this.UnpaidBalance == input.UnpaidBalance ||
                    (this.UnpaidBalance != null &&
                    this.UnpaidBalance.Equals(input.UnpaidBalance))
                ) && 
                (
                    this.Verified == input.Verified ||
                    (this.Verified != null &&
                    this.Verified.Equals(input.Verified))
                ) && 
                (
                    this.PropertyFormType == input.PropertyFormType ||
                    (this.PropertyFormType != null &&
                    this.PropertyFormType.Equals(input.PropertyFormType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AboveOrBelowRatePercent != null)
                    hashCode = hashCode * 59 + this.AboveOrBelowRatePercent.GetHashCode();
                if (this.AdjustorCoverage != null)
                    hashCode = hashCode * 59 + this.AdjustorCoverage.GetHashCode();
                if (this.AusRecommendation != null)
                    hashCode = hashCode * 59 + this.AusRecommendation.GetHashCode();
                if (this.BedroomsUnit1 != null)
                    hashCode = hashCode * 59 + this.BedroomsUnit1.GetHashCode();
                if (this.BedroomsUnit2 != null)
                    hashCode = hashCode * 59 + this.BedroomsUnit2.GetHashCode();
                if (this.BedroomsUnit3 != null)
                    hashCode = hashCode * 59 + this.BedroomsUnit3.GetHashCode();
                if (this.BedroomsUnit4 != null)
                    hashCode = hashCode * 59 + this.BedroomsUnit4.GetHashCode();
                if (this.CertificateNumber != null)
                    hashCode = hashCode * 59 + this.CertificateNumber.GetHashCode();
                if (this.CommitmentNumber != null)
                    hashCode = hashCode * 59 + this.CommitmentNumber.GetHashCode();
                if (this.CommunityLendingAfordableHousingInitiative != null)
                    hashCode = hashCode * 59 + this.CommunityLendingAfordableHousingInitiative.GetHashCode();
                if (this.ContactTitle != null)
                    hashCode = hashCode * 59 + this.ContactTitle.GetHashCode();
                if (this.ContractNumber != null)
                    hashCode = hashCode * 59 + this.ContractNumber.GetHashCode();
                if (this.CpmProjectId != null)
                    hashCode = hashCode * 59 + this.CpmProjectId.GetHashCode();
                if (this.DuCaseIdLpAusKey != null)
                    hashCode = hashCode * 59 + this.DuCaseIdLpAusKey.GetHashCode();
                if (this.FormNumber != null)
                    hashCode = hashCode * 59 + this.FormNumber.GetHashCode();
                if (this.GrossRentUnit1 != null)
                    hashCode = hashCode * 59 + this.GrossRentUnit1.GetHashCode();
                if (this.GrossRentUnit2 != null)
                    hashCode = hashCode * 59 + this.GrossRentUnit2.GetHashCode();
                if (this.GrossRentUnit3 != null)
                    hashCode = hashCode * 59 + this.GrossRentUnit3.GetHashCode();
                if (this.GrossRentUnit4 != null)
                    hashCode = hashCode * 59 + this.GrossRentUnit4.GetHashCode();
                if (this.HomeBuyersOwnershipEducationCertificateInFile != null)
                    hashCode = hashCode * 59 + this.HomeBuyersOwnershipEducationCertificateInFile.GetHashCode();
                if (this.InsurerCode != null)
                    hashCode = hashCode * 59 + this.InsurerCode.GetHashCode();
                if (this.InterestedPartyContributions != null)
                    hashCode = hashCode * 59 + this.InterestedPartyContributions.GetHashCode();
                if (this.InvestorLoanNumber != null)
                    hashCode = hashCode * 59 + this.InvestorLoanNumber.GetHashCode();
                if (this.LevelOfPropertyReviewType != null)
                    hashCode = hashCode * 59 + this.LevelOfPropertyReviewType.GetHashCode();
                if (this.LpDocClass != null)
                    hashCode = hashCode * 59 + this.LpDocClass.GetHashCode();
                if (this.MortgageOriginator != null)
                    hashCode = hashCode * 59 + this.MortgageOriginator.GetHashCode();
                if (this.NoteDate != null)
                    hashCode = hashCode * 59 + this.NoteDate.GetHashCode();
                if (this.NoteRateType != null)
                    hashCode = hashCode * 59 + this.NoteRateType.GetHashCode();
                if (this.NumberOfBorrowers != null)
                    hashCode = hashCode * 59 + this.NumberOfBorrowers.GetHashCode();
                if (this.NumberOfMonthsReserves != null)
                    hashCode = hashCode * 59 + this.NumberOfMonthsReserves.GetHashCode();
                if (this.OriginalAmountOfFirstMortgage != null)
                    hashCode = hashCode * 59 + this.OriginalAmountOfFirstMortgage.GetHashCode();
                if (this.OtherTypeDescription != null)
                    hashCode = hashCode * 59 + this.OtherTypeDescription.GetHashCode();
                if (this.PercentageofCoverage != null)
                    hashCode = hashCode * 59 + this.PercentageofCoverage.GetHashCode();
                if (this.ProjectName != null)
                    hashCode = hashCode * 59 + this.ProjectName.GetHashCode();
                if (this.PropertyType != null)
                    hashCode = hashCode * 59 + this.PropertyType.GetHashCode();
                if (this.Required != null)
                    hashCode = hashCode * 59 + this.Required.GetHashCode();
                if (this.RiskAssessmentType != null)
                    hashCode = hashCode * 59 + this.RiskAssessmentType.GetHashCode();
                if (this.SellerAddress != null)
                    hashCode = hashCode * 59 + this.SellerAddress.GetHashCode();
                if (this.SellerCity != null)
                    hashCode = hashCode * 59 + this.SellerCity.GetHashCode();
                if (this.SellerContactName != null)
                    hashCode = hashCode * 59 + this.SellerContactName.GetHashCode();
                if (this.SellerName != null)
                    hashCode = hashCode * 59 + this.SellerName.GetHashCode();
                if (this.SellerNumber != null)
                    hashCode = hashCode * 59 + this.SellerNumber.GetHashCode();
                if (this.SellerPhone != null)
                    hashCode = hashCode * 59 + this.SellerPhone.GetHashCode();
                if (this.SellerPostalCode != null)
                    hashCode = hashCode * 59 + this.SellerPostalCode.GetHashCode();
                if (this.SellerState != null)
                    hashCode = hashCode * 59 + this.SellerState.GetHashCode();
                if (this.SpecialFeatureCode1 != null)
                    hashCode = hashCode * 59 + this.SpecialFeatureCode1.GetHashCode();
                if (this.SpecialFeatureCode2 != null)
                    hashCode = hashCode * 59 + this.SpecialFeatureCode2.GetHashCode();
                if (this.SpecialFeatureCode3 != null)
                    hashCode = hashCode * 59 + this.SpecialFeatureCode3.GetHashCode();
                if (this.SpecialFeatureCode4 != null)
                    hashCode = hashCode * 59 + this.SpecialFeatureCode4.GetHashCode();
                if (this.SpecialFeatureCode5 != null)
                    hashCode = hashCode * 59 + this.SpecialFeatureCode5.GetHashCode();
                if (this.SpecialFeatureCode6 != null)
                    hashCode = hashCode * 59 + this.SpecialFeatureCode6.GetHashCode();
                if (this.ThirdPartyName1 != null)
                    hashCode = hashCode * 59 + this.ThirdPartyName1.GetHashCode();
                if (this.ThirdPartyName2 != null)
                    hashCode = hashCode * 59 + this.ThirdPartyName2.GetHashCode();
                if (this.TypeOfCommitment != null)
                    hashCode = hashCode * 59 + this.TypeOfCommitment.GetHashCode();
                if (this.UnderwritingComment1 != null)
                    hashCode = hashCode * 59 + this.UnderwritingComment1.GetHashCode();
                if (this.UnderwritingComment2 != null)
                    hashCode = hashCode * 59 + this.UnderwritingComment2.GetHashCode();
                if (this.UnderwritingComment3 != null)
                    hashCode = hashCode * 59 + this.UnderwritingComment3.GetHashCode();
                if (this.UnderwritingComment4 != null)
                    hashCode = hashCode * 59 + this.UnderwritingComment4.GetHashCode();
                if (this.UnderwritingComment5 != null)
                    hashCode = hashCode * 59 + this.UnderwritingComment5.GetHashCode();
                if (this.UnderwritingComment6 != null)
                    hashCode = hashCode * 59 + this.UnderwritingComment6.GetHashCode();
                if (this.UnderwritingComment7 != null)
                    hashCode = hashCode * 59 + this.UnderwritingComment7.GetHashCode();
                if (this.UnderwritingComment8 != null)
                    hashCode = hashCode * 59 + this.UnderwritingComment8.GetHashCode();
                if (this.UnpaidBalance != null)
                    hashCode = hashCode * 59 + this.UnpaidBalance.GetHashCode();
                if (this.Verified != null)
                    hashCode = hashCode * 59 + this.Verified.GetHashCode();
                if (this.PropertyFormType != null)
                    hashCode = hashCode * 59 + this.PropertyFormType.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
