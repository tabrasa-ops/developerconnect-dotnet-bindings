/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractDisclosureNotices
    /// </summary>
    [DataContract]
    public partial class LoanContractDisclosureNotices :  IEquatable<LoanContractDisclosureNotices>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets AntiCoercionStatementIndicator
        /// </summary>
        [DataMember(Name="antiCoercionStatementIndicator", EmitDefaultValue=false)]
        public bool? AntiCoercionStatementIndicator { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentIssuedByAddress
        /// </summary>
        [DataMember(Name="commitmentIssuedByAddress", EmitDefaultValue=false)]
        public string CommitmentIssuedByAddress { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentIssuedByCity
        /// </summary>
        [DataMember(Name="commitmentIssuedByCity", EmitDefaultValue=false)]
        public string CommitmentIssuedByCity { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentIssuedByContactName
        /// </summary>
        [DataMember(Name="commitmentIssuedByContactName", EmitDefaultValue=false)]
        public string CommitmentIssuedByContactName { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentIssuedByName
        /// </summary>
        [DataMember(Name="commitmentIssuedByName", EmitDefaultValue=false)]
        public string CommitmentIssuedByName { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentIssuedByPhone
        /// </summary>
        [DataMember(Name="commitmentIssuedByPhone", EmitDefaultValue=false)]
        public string CommitmentIssuedByPhone { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentIssuedByPostalCode
        /// </summary>
        [DataMember(Name="commitmentIssuedByPostalCode", EmitDefaultValue=false)]
        public string CommitmentIssuedByPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets CommitmentIssuedByState
        /// </summary>
        [DataMember(Name="commitmentIssuedByState", EmitDefaultValue=false)]
        public string CommitmentIssuedByState { get; set; }

        /// <summary>
        /// Gets or Sets ConsumerHandbookOnAdjustableRateMortgages
        /// </summary>
        [DataMember(Name="consumerHandbookOnAdjustableRateMortgages", EmitDefaultValue=false)]
        public string ConsumerHandbookOnAdjustableRateMortgages { get; set; }

        /// <summary>
        /// Gets or Sets DaysToReceiveWrittenRequest
        /// </summary>
        [DataMember(Name="daysToReceiveWrittenRequest", EmitDefaultValue=false)]
        public string DaysToReceiveWrittenRequest { get; set; }

        /// <summary>
        /// Gets or Sets DaysToReturnToLender
        /// </summary>
        [DataMember(Name="daysToReturnToLender", EmitDefaultValue=false)]
        public int? DaysToReturnToLender { get; set; }

        /// <summary>
        /// Gets or Sets DiscloseNonPublicPersonalInformation
        /// </summary>
        [DataMember(Name="discloseNonPublicPersonalInformation", EmitDefaultValue=false)]
        public string DiscloseNonPublicPersonalInformation { get; set; }

        /// <summary>
        /// Gets or Sets EcoaAddress
        /// </summary>
        [DataMember(Name="ecoaAddress", EmitDefaultValue=false)]
        public string EcoaAddress { get; set; }

        /// <summary>
        /// Gets or Sets EcoaAddress2
        /// </summary>
        [DataMember(Name="ecoaAddress2", EmitDefaultValue=false)]
        public string EcoaAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets EcoaCity
        /// </summary>
        [DataMember(Name="ecoaCity", EmitDefaultValue=false)]
        public string EcoaCity { get; set; }

        /// <summary>
        /// Gets or Sets EcoaName
        /// </summary>
        [DataMember(Name="ecoaName", EmitDefaultValue=false)]
        public string EcoaName { get; set; }

        /// <summary>
        /// Gets or Sets EcoaPhone
        /// </summary>
        [DataMember(Name="ecoaPhone", EmitDefaultValue=false)]
        public string EcoaPhone { get; set; }

        /// <summary>
        /// Gets or Sets EcoaPostalCode
        /// </summary>
        [DataMember(Name="ecoaPostalCode", EmitDefaultValue=false)]
        public string EcoaPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets EcoaState
        /// </summary>
        [DataMember(Name="ecoaState", EmitDefaultValue=false)]
        public string EcoaState { get; set; }

        /// <summary>
        /// Gets or Sets FairLendingNoticeDescription1
        /// </summary>
        [DataMember(Name="fairLendingNoticeDescription1", EmitDefaultValue=false)]
        public string FairLendingNoticeDescription1 { get; set; }

        /// <summary>
        /// Gets or Sets FairLendingNoticeDescription2
        /// </summary>
        [DataMember(Name="fairLendingNoticeDescription2", EmitDefaultValue=false)]
        public string FairLendingNoticeDescription2 { get; set; }

        /// <summary>
        /// Gets or Sets FairLendingNoticeDescription3
        /// </summary>
        [DataMember(Name="fairLendingNoticeDescription3", EmitDefaultValue=false)]
        public string FairLendingNoticeDescription3 { get; set; }

        /// <summary>
        /// Gets or Sets FairLendingNoticeDescription4
        /// </summary>
        [DataMember(Name="fairLendingNoticeDescription4", EmitDefaultValue=false)]
        public string FairLendingNoticeDescription4 { get; set; }

        /// <summary>
        /// Gets or Sets FairLendingNoticeDescription5
        /// </summary>
        [DataMember(Name="fairLendingNoticeDescription5", EmitDefaultValue=false)]
        public string FairLendingNoticeDescription5 { get; set; }

        /// <summary>
        /// Gets or Sets FairLendingNoticeDescription6
        /// </summary>
        [DataMember(Name="fairLendingNoticeDescription6", EmitDefaultValue=false)]
        public string FairLendingNoticeDescription6 { get; set; }

        /// <summary>
        /// Gets or Sets FairLendingNoticeDescription7
        /// </summary>
        [DataMember(Name="fairLendingNoticeDescription7", EmitDefaultValue=false)]
        public string FairLendingNoticeDescription7 { get; set; }

        /// <summary>
        /// Gets or Sets FairLendingNoticeDescription8
        /// </summary>
        [DataMember(Name="fairLendingNoticeDescription8", EmitDefaultValue=false)]
        public string FairLendingNoticeDescription8 { get; set; }

        /// <summary>
        /// Gets or Sets FemaCommunityName
        /// </summary>
        [DataMember(Name="femaCommunityName", EmitDefaultValue=false)]
        public string FemaCommunityName { get; set; }

        /// <summary>
        /// Gets or Sets FloodInsuranceNotificationIndicator
        /// </summary>
        [DataMember(Name="floodInsuranceNotificationIndicator", EmitDefaultValue=false)]
        public bool? FloodInsuranceNotificationIndicator { get; set; }

        /// <summary>
        /// Gets or Sets InformationDisclosureAuthorizationIndicator
        /// </summary>
        [DataMember(Name="informationDisclosureAuthorizationIndicator", EmitDefaultValue=false)]
        public bool? InformationDisclosureAuthorizationIndicator { get; set; }

        /// <summary>
        /// Gets or Sets LicensedMortgageBrokerUnder
        /// </summary>
        [DataMember(Name="licensedMortgageBrokerUnder", EmitDefaultValue=false)]
        public string LicensedMortgageBrokerUnder { get; set; }

        /// <summary>
        /// Gets or Sets LocatedInNfipIndicator
        /// </summary>
        [DataMember(Name="locatedInNfipIndicator", EmitDefaultValue=false)]
        public bool? LocatedInNfipIndicator { get; set; }

        /// <summary>
        /// Gets or Sets LossPayeeClause
        /// </summary>
        [DataMember(Name="lossPayeeClause", EmitDefaultValue=false)]
        public string LossPayeeClause { get; set; }

        /// <summary>
        /// Gets or Sets NonFinancialCompaniesDescription1
        /// </summary>
        [DataMember(Name="nonFinancialCompaniesDescription1", EmitDefaultValue=false)]
        public string NonFinancialCompaniesDescription1 { get; set; }

        /// <summary>
        /// Gets or Sets NonFinancialCompaniesDescription2
        /// </summary>
        [DataMember(Name="nonFinancialCompaniesDescription2", EmitDefaultValue=false)]
        public string NonFinancialCompaniesDescription2 { get; set; }

        /// <summary>
        /// Gets or Sets NonFinancialCompaniesDescription3
        /// </summary>
        [DataMember(Name="nonFinancialCompaniesDescription3", EmitDefaultValue=false)]
        public string NonFinancialCompaniesDescription3 { get; set; }

        /// <summary>
        /// Gets or Sets NonFinancialCompaniesDescription4
        /// </summary>
        [DataMember(Name="nonFinancialCompaniesDescription4", EmitDefaultValue=false)]
        public string NonFinancialCompaniesDescription4 { get; set; }

        /// <summary>
        /// Gets or Sets NotLocatedInNfipIndicator
        /// </summary>
        [DataMember(Name="notLocatedInNfipIndicator", EmitDefaultValue=false)]
        public bool? NotLocatedInNfipIndicator { get; set; }

        /// <summary>
        /// Gets or Sets OccupancyStatementIndicator
        /// </summary>
        [DataMember(Name="occupancyStatementIndicator", EmitDefaultValue=false)]
        public bool? OccupancyStatementIndicator { get; set; }

        /// <summary>
        /// Gets or Sets OptOut
        /// </summary>
        [DataMember(Name="optOut", EmitDefaultValue=false)]
        public string OptOut { get; set; }

        /// <summary>
        /// Gets or Sets OptOutPhone
        /// </summary>
        [DataMember(Name="optOutPhone", EmitDefaultValue=false)]
        public string OptOutPhone { get; set; }

        /// <summary>
        /// Gets or Sets ReleaseBankingInformationIndicator
        /// </summary>
        [DataMember(Name="releaseBankingInformationIndicator", EmitDefaultValue=false)]
        public bool? ReleaseBankingInformationIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ReleaseEmploymentInformationIndicator
        /// </summary>
        [DataMember(Name="releaseEmploymentInformationIndicator", EmitDefaultValue=false)]
        public bool? ReleaseEmploymentInformationIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ReleaseInformationInConnectionWithCreditReportIndicator
        /// </summary>
        [DataMember(Name="releaseInformationInConnectionWithCreditReportIndicator", EmitDefaultValue=false)]
        public bool? ReleaseInformationInConnectionWithCreditReportIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ReleaseMortgageInformationIndicator
        /// </summary>
        [DataMember(Name="releaseMortgageInformationIndicator", EmitDefaultValue=false)]
        public bool? ReleaseMortgageInformationIndicator { get; set; }

        /// <summary>
        /// Gets or Sets RightToFinancialPrivacyActIndicator
        /// </summary>
        [DataMember(Name="rightToFinancialPrivacyActIndicator", EmitDefaultValue=false)]
        public bool? RightToFinancialPrivacyActIndicator { get; set; }

        /// <summary>
        /// Gets or Sets NFIPCommunityNumber
        /// </summary>
        [DataMember(Name="nFIPCommunityNumber", EmitDefaultValue=false)]
        public string NFIPCommunityNumber { get; set; }

        /// <summary>
        /// Gets or Sets NFIPMapEffectiveRevisedDate
        /// </summary>
        [DataMember(Name="nFIPMapEffectiveRevisedDate", EmitDefaultValue=false)]
        public DateTime? NFIPMapEffectiveRevisedDate { get; set; }

        /// <summary>
        /// Gets or Sets MapPanelNumber
        /// </summary>
        [DataMember(Name="mapPanelNumber", EmitDefaultValue=false)]
        public string MapPanelNumber { get; set; }

        /// <summary>
        /// Gets or Sets NFIPParticipationStatus
        /// </summary>
        [DataMember(Name="nFIPParticipationStatus", EmitDefaultValue=false)]
        public string NFIPParticipationStatus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractDisclosureNotices {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AntiCoercionStatementIndicator: ").Append(AntiCoercionStatementIndicator).Append("\n");
            sb.Append("  CommitmentIssuedByAddress: ").Append(CommitmentIssuedByAddress).Append("\n");
            sb.Append("  CommitmentIssuedByCity: ").Append(CommitmentIssuedByCity).Append("\n");
            sb.Append("  CommitmentIssuedByContactName: ").Append(CommitmentIssuedByContactName).Append("\n");
            sb.Append("  CommitmentIssuedByName: ").Append(CommitmentIssuedByName).Append("\n");
            sb.Append("  CommitmentIssuedByPhone: ").Append(CommitmentIssuedByPhone).Append("\n");
            sb.Append("  CommitmentIssuedByPostalCode: ").Append(CommitmentIssuedByPostalCode).Append("\n");
            sb.Append("  CommitmentIssuedByState: ").Append(CommitmentIssuedByState).Append("\n");
            sb.Append("  ConsumerHandbookOnAdjustableRateMortgages: ").Append(ConsumerHandbookOnAdjustableRateMortgages).Append("\n");
            sb.Append("  DaysToReceiveWrittenRequest: ").Append(DaysToReceiveWrittenRequest).Append("\n");
            sb.Append("  DaysToReturnToLender: ").Append(DaysToReturnToLender).Append("\n");
            sb.Append("  DiscloseNonPublicPersonalInformation: ").Append(DiscloseNonPublicPersonalInformation).Append("\n");
            sb.Append("  EcoaAddress: ").Append(EcoaAddress).Append("\n");
            sb.Append("  EcoaAddress2: ").Append(EcoaAddress2).Append("\n");
            sb.Append("  EcoaCity: ").Append(EcoaCity).Append("\n");
            sb.Append("  EcoaName: ").Append(EcoaName).Append("\n");
            sb.Append("  EcoaPhone: ").Append(EcoaPhone).Append("\n");
            sb.Append("  EcoaPostalCode: ").Append(EcoaPostalCode).Append("\n");
            sb.Append("  EcoaState: ").Append(EcoaState).Append("\n");
            sb.Append("  FairLendingNoticeDescription1: ").Append(FairLendingNoticeDescription1).Append("\n");
            sb.Append("  FairLendingNoticeDescription2: ").Append(FairLendingNoticeDescription2).Append("\n");
            sb.Append("  FairLendingNoticeDescription3: ").Append(FairLendingNoticeDescription3).Append("\n");
            sb.Append("  FairLendingNoticeDescription4: ").Append(FairLendingNoticeDescription4).Append("\n");
            sb.Append("  FairLendingNoticeDescription5: ").Append(FairLendingNoticeDescription5).Append("\n");
            sb.Append("  FairLendingNoticeDescription6: ").Append(FairLendingNoticeDescription6).Append("\n");
            sb.Append("  FairLendingNoticeDescription7: ").Append(FairLendingNoticeDescription7).Append("\n");
            sb.Append("  FairLendingNoticeDescription8: ").Append(FairLendingNoticeDescription8).Append("\n");
            sb.Append("  FemaCommunityName: ").Append(FemaCommunityName).Append("\n");
            sb.Append("  FloodInsuranceNotificationIndicator: ").Append(FloodInsuranceNotificationIndicator).Append("\n");
            sb.Append("  InformationDisclosureAuthorizationIndicator: ").Append(InformationDisclosureAuthorizationIndicator).Append("\n");
            sb.Append("  LicensedMortgageBrokerUnder: ").Append(LicensedMortgageBrokerUnder).Append("\n");
            sb.Append("  LocatedInNfipIndicator: ").Append(LocatedInNfipIndicator).Append("\n");
            sb.Append("  LossPayeeClause: ").Append(LossPayeeClause).Append("\n");
            sb.Append("  NonFinancialCompaniesDescription1: ").Append(NonFinancialCompaniesDescription1).Append("\n");
            sb.Append("  NonFinancialCompaniesDescription2: ").Append(NonFinancialCompaniesDescription2).Append("\n");
            sb.Append("  NonFinancialCompaniesDescription3: ").Append(NonFinancialCompaniesDescription3).Append("\n");
            sb.Append("  NonFinancialCompaniesDescription4: ").Append(NonFinancialCompaniesDescription4).Append("\n");
            sb.Append("  NotLocatedInNfipIndicator: ").Append(NotLocatedInNfipIndicator).Append("\n");
            sb.Append("  OccupancyStatementIndicator: ").Append(OccupancyStatementIndicator).Append("\n");
            sb.Append("  OptOut: ").Append(OptOut).Append("\n");
            sb.Append("  OptOutPhone: ").Append(OptOutPhone).Append("\n");
            sb.Append("  ReleaseBankingInformationIndicator: ").Append(ReleaseBankingInformationIndicator).Append("\n");
            sb.Append("  ReleaseEmploymentInformationIndicator: ").Append(ReleaseEmploymentInformationIndicator).Append("\n");
            sb.Append("  ReleaseInformationInConnectionWithCreditReportIndicator: ").Append(ReleaseInformationInConnectionWithCreditReportIndicator).Append("\n");
            sb.Append("  ReleaseMortgageInformationIndicator: ").Append(ReleaseMortgageInformationIndicator).Append("\n");
            sb.Append("  RightToFinancialPrivacyActIndicator: ").Append(RightToFinancialPrivacyActIndicator).Append("\n");
            sb.Append("  NFIPCommunityNumber: ").Append(NFIPCommunityNumber).Append("\n");
            sb.Append("  NFIPMapEffectiveRevisedDate: ").Append(NFIPMapEffectiveRevisedDate).Append("\n");
            sb.Append("  MapPanelNumber: ").Append(MapPanelNumber).Append("\n");
            sb.Append("  NFIPParticipationStatus: ").Append(NFIPParticipationStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractDisclosureNotices);
        }

        /// <summary>
        /// Returns true if LoanContractDisclosureNotices instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractDisclosureNotices to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractDisclosureNotices input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AntiCoercionStatementIndicator == input.AntiCoercionStatementIndicator ||
                    (this.AntiCoercionStatementIndicator != null &&
                    this.AntiCoercionStatementIndicator.Equals(input.AntiCoercionStatementIndicator))
                ) && 
                (
                    this.CommitmentIssuedByAddress == input.CommitmentIssuedByAddress ||
                    (this.CommitmentIssuedByAddress != null &&
                    this.CommitmentIssuedByAddress.Equals(input.CommitmentIssuedByAddress))
                ) && 
                (
                    this.CommitmentIssuedByCity == input.CommitmentIssuedByCity ||
                    (this.CommitmentIssuedByCity != null &&
                    this.CommitmentIssuedByCity.Equals(input.CommitmentIssuedByCity))
                ) && 
                (
                    this.CommitmentIssuedByContactName == input.CommitmentIssuedByContactName ||
                    (this.CommitmentIssuedByContactName != null &&
                    this.CommitmentIssuedByContactName.Equals(input.CommitmentIssuedByContactName))
                ) && 
                (
                    this.CommitmentIssuedByName == input.CommitmentIssuedByName ||
                    (this.CommitmentIssuedByName != null &&
                    this.CommitmentIssuedByName.Equals(input.CommitmentIssuedByName))
                ) && 
                (
                    this.CommitmentIssuedByPhone == input.CommitmentIssuedByPhone ||
                    (this.CommitmentIssuedByPhone != null &&
                    this.CommitmentIssuedByPhone.Equals(input.CommitmentIssuedByPhone))
                ) && 
                (
                    this.CommitmentIssuedByPostalCode == input.CommitmentIssuedByPostalCode ||
                    (this.CommitmentIssuedByPostalCode != null &&
                    this.CommitmentIssuedByPostalCode.Equals(input.CommitmentIssuedByPostalCode))
                ) && 
                (
                    this.CommitmentIssuedByState == input.CommitmentIssuedByState ||
                    (this.CommitmentIssuedByState != null &&
                    this.CommitmentIssuedByState.Equals(input.CommitmentIssuedByState))
                ) && 
                (
                    this.ConsumerHandbookOnAdjustableRateMortgages == input.ConsumerHandbookOnAdjustableRateMortgages ||
                    (this.ConsumerHandbookOnAdjustableRateMortgages != null &&
                    this.ConsumerHandbookOnAdjustableRateMortgages.Equals(input.ConsumerHandbookOnAdjustableRateMortgages))
                ) && 
                (
                    this.DaysToReceiveWrittenRequest == input.DaysToReceiveWrittenRequest ||
                    (this.DaysToReceiveWrittenRequest != null &&
                    this.DaysToReceiveWrittenRequest.Equals(input.DaysToReceiveWrittenRequest))
                ) && 
                (
                    this.DaysToReturnToLender == input.DaysToReturnToLender ||
                    (this.DaysToReturnToLender != null &&
                    this.DaysToReturnToLender.Equals(input.DaysToReturnToLender))
                ) && 
                (
                    this.DiscloseNonPublicPersonalInformation == input.DiscloseNonPublicPersonalInformation ||
                    (this.DiscloseNonPublicPersonalInformation != null &&
                    this.DiscloseNonPublicPersonalInformation.Equals(input.DiscloseNonPublicPersonalInformation))
                ) && 
                (
                    this.EcoaAddress == input.EcoaAddress ||
                    (this.EcoaAddress != null &&
                    this.EcoaAddress.Equals(input.EcoaAddress))
                ) && 
                (
                    this.EcoaAddress2 == input.EcoaAddress2 ||
                    (this.EcoaAddress2 != null &&
                    this.EcoaAddress2.Equals(input.EcoaAddress2))
                ) && 
                (
                    this.EcoaCity == input.EcoaCity ||
                    (this.EcoaCity != null &&
                    this.EcoaCity.Equals(input.EcoaCity))
                ) && 
                (
                    this.EcoaName == input.EcoaName ||
                    (this.EcoaName != null &&
                    this.EcoaName.Equals(input.EcoaName))
                ) && 
                (
                    this.EcoaPhone == input.EcoaPhone ||
                    (this.EcoaPhone != null &&
                    this.EcoaPhone.Equals(input.EcoaPhone))
                ) && 
                (
                    this.EcoaPostalCode == input.EcoaPostalCode ||
                    (this.EcoaPostalCode != null &&
                    this.EcoaPostalCode.Equals(input.EcoaPostalCode))
                ) && 
                (
                    this.EcoaState == input.EcoaState ||
                    (this.EcoaState != null &&
                    this.EcoaState.Equals(input.EcoaState))
                ) && 
                (
                    this.FairLendingNoticeDescription1 == input.FairLendingNoticeDescription1 ||
                    (this.FairLendingNoticeDescription1 != null &&
                    this.FairLendingNoticeDescription1.Equals(input.FairLendingNoticeDescription1))
                ) && 
                (
                    this.FairLendingNoticeDescription2 == input.FairLendingNoticeDescription2 ||
                    (this.FairLendingNoticeDescription2 != null &&
                    this.FairLendingNoticeDescription2.Equals(input.FairLendingNoticeDescription2))
                ) && 
                (
                    this.FairLendingNoticeDescription3 == input.FairLendingNoticeDescription3 ||
                    (this.FairLendingNoticeDescription3 != null &&
                    this.FairLendingNoticeDescription3.Equals(input.FairLendingNoticeDescription3))
                ) && 
                (
                    this.FairLendingNoticeDescription4 == input.FairLendingNoticeDescription4 ||
                    (this.FairLendingNoticeDescription4 != null &&
                    this.FairLendingNoticeDescription4.Equals(input.FairLendingNoticeDescription4))
                ) && 
                (
                    this.FairLendingNoticeDescription5 == input.FairLendingNoticeDescription5 ||
                    (this.FairLendingNoticeDescription5 != null &&
                    this.FairLendingNoticeDescription5.Equals(input.FairLendingNoticeDescription5))
                ) && 
                (
                    this.FairLendingNoticeDescription6 == input.FairLendingNoticeDescription6 ||
                    (this.FairLendingNoticeDescription6 != null &&
                    this.FairLendingNoticeDescription6.Equals(input.FairLendingNoticeDescription6))
                ) && 
                (
                    this.FairLendingNoticeDescription7 == input.FairLendingNoticeDescription7 ||
                    (this.FairLendingNoticeDescription7 != null &&
                    this.FairLendingNoticeDescription7.Equals(input.FairLendingNoticeDescription7))
                ) && 
                (
                    this.FairLendingNoticeDescription8 == input.FairLendingNoticeDescription8 ||
                    (this.FairLendingNoticeDescription8 != null &&
                    this.FairLendingNoticeDescription8.Equals(input.FairLendingNoticeDescription8))
                ) && 
                (
                    this.FemaCommunityName == input.FemaCommunityName ||
                    (this.FemaCommunityName != null &&
                    this.FemaCommunityName.Equals(input.FemaCommunityName))
                ) && 
                (
                    this.FloodInsuranceNotificationIndicator == input.FloodInsuranceNotificationIndicator ||
                    (this.FloodInsuranceNotificationIndicator != null &&
                    this.FloodInsuranceNotificationIndicator.Equals(input.FloodInsuranceNotificationIndicator))
                ) && 
                (
                    this.InformationDisclosureAuthorizationIndicator == input.InformationDisclosureAuthorizationIndicator ||
                    (this.InformationDisclosureAuthorizationIndicator != null &&
                    this.InformationDisclosureAuthorizationIndicator.Equals(input.InformationDisclosureAuthorizationIndicator))
                ) && 
                (
                    this.LicensedMortgageBrokerUnder == input.LicensedMortgageBrokerUnder ||
                    (this.LicensedMortgageBrokerUnder != null &&
                    this.LicensedMortgageBrokerUnder.Equals(input.LicensedMortgageBrokerUnder))
                ) && 
                (
                    this.LocatedInNfipIndicator == input.LocatedInNfipIndicator ||
                    (this.LocatedInNfipIndicator != null &&
                    this.LocatedInNfipIndicator.Equals(input.LocatedInNfipIndicator))
                ) && 
                (
                    this.LossPayeeClause == input.LossPayeeClause ||
                    (this.LossPayeeClause != null &&
                    this.LossPayeeClause.Equals(input.LossPayeeClause))
                ) && 
                (
                    this.NonFinancialCompaniesDescription1 == input.NonFinancialCompaniesDescription1 ||
                    (this.NonFinancialCompaniesDescription1 != null &&
                    this.NonFinancialCompaniesDescription1.Equals(input.NonFinancialCompaniesDescription1))
                ) && 
                (
                    this.NonFinancialCompaniesDescription2 == input.NonFinancialCompaniesDescription2 ||
                    (this.NonFinancialCompaniesDescription2 != null &&
                    this.NonFinancialCompaniesDescription2.Equals(input.NonFinancialCompaniesDescription2))
                ) && 
                (
                    this.NonFinancialCompaniesDescription3 == input.NonFinancialCompaniesDescription3 ||
                    (this.NonFinancialCompaniesDescription3 != null &&
                    this.NonFinancialCompaniesDescription3.Equals(input.NonFinancialCompaniesDescription3))
                ) && 
                (
                    this.NonFinancialCompaniesDescription4 == input.NonFinancialCompaniesDescription4 ||
                    (this.NonFinancialCompaniesDescription4 != null &&
                    this.NonFinancialCompaniesDescription4.Equals(input.NonFinancialCompaniesDescription4))
                ) && 
                (
                    this.NotLocatedInNfipIndicator == input.NotLocatedInNfipIndicator ||
                    (this.NotLocatedInNfipIndicator != null &&
                    this.NotLocatedInNfipIndicator.Equals(input.NotLocatedInNfipIndicator))
                ) && 
                (
                    this.OccupancyStatementIndicator == input.OccupancyStatementIndicator ||
                    (this.OccupancyStatementIndicator != null &&
                    this.OccupancyStatementIndicator.Equals(input.OccupancyStatementIndicator))
                ) && 
                (
                    this.OptOut == input.OptOut ||
                    (this.OptOut != null &&
                    this.OptOut.Equals(input.OptOut))
                ) && 
                (
                    this.OptOutPhone == input.OptOutPhone ||
                    (this.OptOutPhone != null &&
                    this.OptOutPhone.Equals(input.OptOutPhone))
                ) && 
                (
                    this.ReleaseBankingInformationIndicator == input.ReleaseBankingInformationIndicator ||
                    (this.ReleaseBankingInformationIndicator != null &&
                    this.ReleaseBankingInformationIndicator.Equals(input.ReleaseBankingInformationIndicator))
                ) && 
                (
                    this.ReleaseEmploymentInformationIndicator == input.ReleaseEmploymentInformationIndicator ||
                    (this.ReleaseEmploymentInformationIndicator != null &&
                    this.ReleaseEmploymentInformationIndicator.Equals(input.ReleaseEmploymentInformationIndicator))
                ) && 
                (
                    this.ReleaseInformationInConnectionWithCreditReportIndicator == input.ReleaseInformationInConnectionWithCreditReportIndicator ||
                    (this.ReleaseInformationInConnectionWithCreditReportIndicator != null &&
                    this.ReleaseInformationInConnectionWithCreditReportIndicator.Equals(input.ReleaseInformationInConnectionWithCreditReportIndicator))
                ) && 
                (
                    this.ReleaseMortgageInformationIndicator == input.ReleaseMortgageInformationIndicator ||
                    (this.ReleaseMortgageInformationIndicator != null &&
                    this.ReleaseMortgageInformationIndicator.Equals(input.ReleaseMortgageInformationIndicator))
                ) && 
                (
                    this.RightToFinancialPrivacyActIndicator == input.RightToFinancialPrivacyActIndicator ||
                    (this.RightToFinancialPrivacyActIndicator != null &&
                    this.RightToFinancialPrivacyActIndicator.Equals(input.RightToFinancialPrivacyActIndicator))
                ) && 
                (
                    this.NFIPCommunityNumber == input.NFIPCommunityNumber ||
                    (this.NFIPCommunityNumber != null &&
                    this.NFIPCommunityNumber.Equals(input.NFIPCommunityNumber))
                ) && 
                (
                    this.NFIPMapEffectiveRevisedDate == input.NFIPMapEffectiveRevisedDate ||
                    (this.NFIPMapEffectiveRevisedDate != null &&
                    this.NFIPMapEffectiveRevisedDate.Equals(input.NFIPMapEffectiveRevisedDate))
                ) && 
                (
                    this.MapPanelNumber == input.MapPanelNumber ||
                    (this.MapPanelNumber != null &&
                    this.MapPanelNumber.Equals(input.MapPanelNumber))
                ) && 
                (
                    this.NFIPParticipationStatus == input.NFIPParticipationStatus ||
                    (this.NFIPParticipationStatus != null &&
                    this.NFIPParticipationStatus.Equals(input.NFIPParticipationStatus))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AntiCoercionStatementIndicator != null)
                    hashCode = hashCode * 59 + this.AntiCoercionStatementIndicator.GetHashCode();
                if (this.CommitmentIssuedByAddress != null)
                    hashCode = hashCode * 59 + this.CommitmentIssuedByAddress.GetHashCode();
                if (this.CommitmentIssuedByCity != null)
                    hashCode = hashCode * 59 + this.CommitmentIssuedByCity.GetHashCode();
                if (this.CommitmentIssuedByContactName != null)
                    hashCode = hashCode * 59 + this.CommitmentIssuedByContactName.GetHashCode();
                if (this.CommitmentIssuedByName != null)
                    hashCode = hashCode * 59 + this.CommitmentIssuedByName.GetHashCode();
                if (this.CommitmentIssuedByPhone != null)
                    hashCode = hashCode * 59 + this.CommitmentIssuedByPhone.GetHashCode();
                if (this.CommitmentIssuedByPostalCode != null)
                    hashCode = hashCode * 59 + this.CommitmentIssuedByPostalCode.GetHashCode();
                if (this.CommitmentIssuedByState != null)
                    hashCode = hashCode * 59 + this.CommitmentIssuedByState.GetHashCode();
                if (this.ConsumerHandbookOnAdjustableRateMortgages != null)
                    hashCode = hashCode * 59 + this.ConsumerHandbookOnAdjustableRateMortgages.GetHashCode();
                if (this.DaysToReceiveWrittenRequest != null)
                    hashCode = hashCode * 59 + this.DaysToReceiveWrittenRequest.GetHashCode();
                if (this.DaysToReturnToLender != null)
                    hashCode = hashCode * 59 + this.DaysToReturnToLender.GetHashCode();
                if (this.DiscloseNonPublicPersonalInformation != null)
                    hashCode = hashCode * 59 + this.DiscloseNonPublicPersonalInformation.GetHashCode();
                if (this.EcoaAddress != null)
                    hashCode = hashCode * 59 + this.EcoaAddress.GetHashCode();
                if (this.EcoaAddress2 != null)
                    hashCode = hashCode * 59 + this.EcoaAddress2.GetHashCode();
                if (this.EcoaCity != null)
                    hashCode = hashCode * 59 + this.EcoaCity.GetHashCode();
                if (this.EcoaName != null)
                    hashCode = hashCode * 59 + this.EcoaName.GetHashCode();
                if (this.EcoaPhone != null)
                    hashCode = hashCode * 59 + this.EcoaPhone.GetHashCode();
                if (this.EcoaPostalCode != null)
                    hashCode = hashCode * 59 + this.EcoaPostalCode.GetHashCode();
                if (this.EcoaState != null)
                    hashCode = hashCode * 59 + this.EcoaState.GetHashCode();
                if (this.FairLendingNoticeDescription1 != null)
                    hashCode = hashCode * 59 + this.FairLendingNoticeDescription1.GetHashCode();
                if (this.FairLendingNoticeDescription2 != null)
                    hashCode = hashCode * 59 + this.FairLendingNoticeDescription2.GetHashCode();
                if (this.FairLendingNoticeDescription3 != null)
                    hashCode = hashCode * 59 + this.FairLendingNoticeDescription3.GetHashCode();
                if (this.FairLendingNoticeDescription4 != null)
                    hashCode = hashCode * 59 + this.FairLendingNoticeDescription4.GetHashCode();
                if (this.FairLendingNoticeDescription5 != null)
                    hashCode = hashCode * 59 + this.FairLendingNoticeDescription5.GetHashCode();
                if (this.FairLendingNoticeDescription6 != null)
                    hashCode = hashCode * 59 + this.FairLendingNoticeDescription6.GetHashCode();
                if (this.FairLendingNoticeDescription7 != null)
                    hashCode = hashCode * 59 + this.FairLendingNoticeDescription7.GetHashCode();
                if (this.FairLendingNoticeDescription8 != null)
                    hashCode = hashCode * 59 + this.FairLendingNoticeDescription8.GetHashCode();
                if (this.FemaCommunityName != null)
                    hashCode = hashCode * 59 + this.FemaCommunityName.GetHashCode();
                if (this.FloodInsuranceNotificationIndicator != null)
                    hashCode = hashCode * 59 + this.FloodInsuranceNotificationIndicator.GetHashCode();
                if (this.InformationDisclosureAuthorizationIndicator != null)
                    hashCode = hashCode * 59 + this.InformationDisclosureAuthorizationIndicator.GetHashCode();
                if (this.LicensedMortgageBrokerUnder != null)
                    hashCode = hashCode * 59 + this.LicensedMortgageBrokerUnder.GetHashCode();
                if (this.LocatedInNfipIndicator != null)
                    hashCode = hashCode * 59 + this.LocatedInNfipIndicator.GetHashCode();
                if (this.LossPayeeClause != null)
                    hashCode = hashCode * 59 + this.LossPayeeClause.GetHashCode();
                if (this.NonFinancialCompaniesDescription1 != null)
                    hashCode = hashCode * 59 + this.NonFinancialCompaniesDescription1.GetHashCode();
                if (this.NonFinancialCompaniesDescription2 != null)
                    hashCode = hashCode * 59 + this.NonFinancialCompaniesDescription2.GetHashCode();
                if (this.NonFinancialCompaniesDescription3 != null)
                    hashCode = hashCode * 59 + this.NonFinancialCompaniesDescription3.GetHashCode();
                if (this.NonFinancialCompaniesDescription4 != null)
                    hashCode = hashCode * 59 + this.NonFinancialCompaniesDescription4.GetHashCode();
                if (this.NotLocatedInNfipIndicator != null)
                    hashCode = hashCode * 59 + this.NotLocatedInNfipIndicator.GetHashCode();
                if (this.OccupancyStatementIndicator != null)
                    hashCode = hashCode * 59 + this.OccupancyStatementIndicator.GetHashCode();
                if (this.OptOut != null)
                    hashCode = hashCode * 59 + this.OptOut.GetHashCode();
                if (this.OptOutPhone != null)
                    hashCode = hashCode * 59 + this.OptOutPhone.GetHashCode();
                if (this.ReleaseBankingInformationIndicator != null)
                    hashCode = hashCode * 59 + this.ReleaseBankingInformationIndicator.GetHashCode();
                if (this.ReleaseEmploymentInformationIndicator != null)
                    hashCode = hashCode * 59 + this.ReleaseEmploymentInformationIndicator.GetHashCode();
                if (this.ReleaseInformationInConnectionWithCreditReportIndicator != null)
                    hashCode = hashCode * 59 + this.ReleaseInformationInConnectionWithCreditReportIndicator.GetHashCode();
                if (this.ReleaseMortgageInformationIndicator != null)
                    hashCode = hashCode * 59 + this.ReleaseMortgageInformationIndicator.GetHashCode();
                if (this.RightToFinancialPrivacyActIndicator != null)
                    hashCode = hashCode * 59 + this.RightToFinancialPrivacyActIndicator.GetHashCode();
                if (this.NFIPCommunityNumber != null)
                    hashCode = hashCode * 59 + this.NFIPCommunityNumber.GetHashCode();
                if (this.NFIPMapEffectiveRevisedDate != null)
                    hashCode = hashCode * 59 + this.NFIPMapEffectiveRevisedDate.GetHashCode();
                if (this.MapPanelNumber != null)
                    hashCode = hashCode * 59 + this.MapPanelNumber.GetHashCode();
                if (this.NFIPParticipationStatus != null)
                    hashCode = hashCode * 59 + this.NFIPParticipationStatus.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
