/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractGfe
    /// </summary>
    [DataContract]
    public partial class LoanContractGfe :  IEquatable<LoanContractGfe>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets AgregateAdjustment
        /// </summary>
        [DataMember(Name="agregateAdjustment", EmitDefaultValue=false)]
        public double? AgregateAdjustment { get; set; }

        /// <summary>
        /// Gets or Sets BrokerCommission
        /// </summary>
        [DataMember(Name="brokerCommission", EmitDefaultValue=false)]
        public double? BrokerCommission { get; set; }

        /// <summary>
        /// Gets or Sets BrokerLicense
        /// </summary>
        [DataMember(Name="brokerLicense", EmitDefaultValue=false)]
        public string BrokerLicense { get; set; }

        /// <summary>
        /// Gets or Sets BrokerName
        /// </summary>
        [DataMember(Name="brokerName", EmitDefaultValue=false)]
        public string BrokerName { get; set; }

        /// <summary>
        /// Gets or Sets BrokerRepresentative
        /// </summary>
        [DataMember(Name="brokerRepresentative", EmitDefaultValue=false)]
        public string BrokerRepresentative { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name="city", EmitDefaultValue=false)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets CompensationFromLenderAmount
        /// </summary>
        [DataMember(Name="compensationFromLenderAmount", EmitDefaultValue=false)]
        public double? CompensationFromLenderAmount { get; set; }

        /// <summary>
        /// Gets or Sets CompensationFromLenderPercentage
        /// </summary>
        [DataMember(Name="compensationFromLenderPercentage", EmitDefaultValue=false)]
        public double? CompensationFromLenderPercentage { get; set; }

        /// <summary>
        /// Gets or Sets CompensationFromLenderTotalAmount
        /// </summary>
        [DataMember(Name="compensationFromLenderTotalAmount", EmitDefaultValue=false)]
        public double? CompensationFromLenderTotalAmount { get; set; }

        /// <summary>
        /// Gets or Sets CreditLifeOrDisabilityPremium
        /// </summary>
        [DataMember(Name="creditLifeOrDisabilityPremium", EmitDefaultValue=false)]
        public double? CreditLifeOrDisabilityPremium { get; set; }

        /// <summary>
        /// Gets or Sets CreditToBorrowerAmount
        /// </summary>
        [DataMember(Name="creditToBorrowerAmount", EmitDefaultValue=false)]
        public double? CreditToBorrowerAmount { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedCashAtClosing
        /// </summary>
        [DataMember(Name="estimatedCashAtClosing", EmitDefaultValue=false)]
        public double? EstimatedCashAtClosing { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedCashToBorrower
        /// </summary>
        [DataMember(Name="estimatedCashToBorrower", EmitDefaultValue=false)]
        public double? EstimatedCashToBorrower { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedDueDate
        /// </summary>
        [DataMember(Name="estimatedDueDate", EmitDefaultValue=false)]
        public DateTime? EstimatedDueDate { get; set; }

        /// <summary>
        /// Gets or Sets FinalBalloonPayment
        /// </summary>
        [DataMember(Name="finalBalloonPayment", EmitDefaultValue=false)]
        public double? FinalBalloonPayment { get; set; }

        /// <summary>
        /// Gets or Sets FirstChangePayment
        /// </summary>
        [DataMember(Name="firstChangePayment", EmitDefaultValue=false)]
        public double? FirstChangePayment { get; set; }

        /// <summary>
        /// Gets or Sets FirstChangePercent
        /// </summary>
        [DataMember(Name="firstChangePercent", EmitDefaultValue=false)]
        public double? FirstChangePercent { get; set; }

        /// <summary>
        /// Gets or Sets FundingAmount
        /// </summary>
        [DataMember(Name="fundingAmount", EmitDefaultValue=false)]
        public double? FundingAmount { get; set; }

        /// <summary>
        /// Gets or Sets GfeFees
        /// </summary>
        [DataMember(Name="gfeFees", EmitDefaultValue=false)]
        public List<LoanContractGfeGfeFees> GfeFees { get; set; }

        /// <summary>
        /// Gets or Sets GfeLiens
        /// </summary>
        [DataMember(Name="gfeLiens", EmitDefaultValue=false)]
        public List<LoanContractGfeGfeLiens> GfeLiens { get; set; }

        /// <summary>
        /// Gets or Sets GfePayments
        /// </summary>
        [DataMember(Name="gfePayments", EmitDefaultValue=false)]
        public List<LoanContractGfeGfePayments> GfePayments { get; set; }

        /// <summary>
        /// Gets or Sets GfePayoffs
        /// </summary>
        [DataMember(Name="gfePayoffs", EmitDefaultValue=false)]
        public List<LoanContractGfeGfePayoffs> GfePayoffs { get; set; }

        /// <summary>
        /// Gets or Sets GfeProvidedByBrokerIndicator
        /// </summary>
        [DataMember(Name="gfeProvidedByBrokerIndicator", EmitDefaultValue=false)]
        public bool? GfeProvidedByBrokerIndicator { get; set; }

        /// <summary>
        /// Gets or Sets HasAdditionalCompensationIndicator
        /// </summary>
        [DataMember(Name="hasAdditionalCompensationIndicator", EmitDefaultValue=false)]
        public bool? HasAdditionalCompensationIndicator { get; set; }

        /// <summary>
        /// Gets or Sets HasLateChargesIndicator
        /// </summary>
        [DataMember(Name="hasLateChargesIndicator", EmitDefaultValue=false)]
        public bool? HasLateChargesIndicator { get; set; }

        /// <summary>
        /// Gets or Sets HasPrepaymentPenaltyIndicator
        /// </summary>
        [DataMember(Name="hasPrepaymentPenaltyIndicator", EmitDefaultValue=false)]
        public bool? HasPrepaymentPenaltyIndicator { get; set; }

        /// <summary>
        /// Gets or Sets InitialFixedOrArmType
        /// </summary>
        [DataMember(Name="initialFixedOrArmType", EmitDefaultValue=false)]
        public string InitialFixedOrArmType { get; set; }

        /// <summary>
        /// Gets or Sets LenderOriginationFee
        /// </summary>
        [DataMember(Name="lenderOriginationFee", EmitDefaultValue=false)]
        public double? LenderOriginationFee { get; set; }

        /// <summary>
        /// Gets or Sets LoanFromBrokerControledFundsType
        /// </summary>
        [DataMember(Name="loanFromBrokerControledFundsType", EmitDefaultValue=false)]
        public string LoanFromBrokerControledFundsType { get; set; }

        /// <summary>
        /// Gets or Sets LockField
        /// </summary>
        [DataMember(Name="lockField", EmitDefaultValue=false)]
        public bool? LockField { get; set; }

        /// <summary>
        /// Gets or Sets MaxLifePayment
        /// </summary>
        [DataMember(Name="maxLifePayment", EmitDefaultValue=false)]
        public double? MaxLifePayment { get; set; }

        /// <summary>
        /// Gets or Sets MaxPaymentAfterMonth
        /// </summary>
        [DataMember(Name="maxPaymentAfterMonth", EmitDefaultValue=false)]
        public int? MaxPaymentAfterMonth { get; set; }

        /// <summary>
        /// Gets or Sets MonthlyPaymentAndEscrow
        /// </summary>
        [DataMember(Name="monthlyPaymentAndEscrow", EmitDefaultValue=false)]
        public double? MonthlyPaymentAndEscrow { get; set; }

        /// <summary>
        /// Gets or Sets MortgageBrokerComissionFee
        /// </summary>
        [DataMember(Name="mortgageBrokerComissionFee", EmitDefaultValue=false)]
        public double? MortgageBrokerComissionFee { get; set; }

        /// <summary>
        /// Gets or Sets MortgageBrokerComissionFeePaidToName
        /// </summary>
        [DataMember(Name="mortgageBrokerComissionFeePaidToName", EmitDefaultValue=false)]
        public string MortgageBrokerComissionFeePaidToName { get; set; }

        /// <summary>
        /// Gets or Sets NatureLien1Description
        /// </summary>
        [DataMember(Name="natureLien1Description", EmitDefaultValue=false)]
        public string NatureLien1Description { get; set; }

        /// <summary>
        /// Gets or Sets NatureLien1PayoffDescription
        /// </summary>
        [DataMember(Name="natureLien1PayoffDescription", EmitDefaultValue=false)]
        public string NatureLien1PayoffDescription { get; set; }

        /// <summary>
        /// Gets or Sets NatureLien2Description
        /// </summary>
        [DataMember(Name="natureLien2Description", EmitDefaultValue=false)]
        public string NatureLien2Description { get; set; }

        /// <summary>
        /// Gets or Sets NatureLien2PayoffDescription
        /// </summary>
        [DataMember(Name="natureLien2PayoffDescription", EmitDefaultValue=false)]
        public string NatureLien2PayoffDescription { get; set; }

        /// <summary>
        /// Gets or Sets NatureLien3Description
        /// </summary>
        [DataMember(Name="natureLien3Description", EmitDefaultValue=false)]
        public string NatureLien3Description { get; set; }

        /// <summary>
        /// Gets or Sets NatureLien3PayoffDescription
        /// </summary>
        [DataMember(Name="natureLien3PayoffDescription", EmitDefaultValue=false)]
        public string NatureLien3PayoffDescription { get; set; }

        /// <summary>
        /// Gets or Sets PaymentOfPrincipleIndicator
        /// </summary>
        [DataMember(Name="paymentOfPrincipleIndicator", EmitDefaultValue=false)]
        public bool? PaymentOfPrincipleIndicator { get; set; }

        /// <summary>
        /// Gets or Sets PaymentOfPrincipleType
        /// </summary>
        [DataMember(Name="paymentOfPrincipleType", EmitDefaultValue=false)]
        public string PaymentOfPrincipleType { get; set; }

        /// <summary>
        /// Gets or Sets PenaltyNotToExceedMonths
        /// </summary>
        [DataMember(Name="penaltyNotToExceedMonths", EmitDefaultValue=false)]
        public int? PenaltyNotToExceedMonths { get; set; }

        /// <summary>
        /// Gets or Sets PocPaid1
        /// </summary>
        [DataMember(Name="pocPaid1", EmitDefaultValue=false)]
        public string PocPaid1 { get; set; }

        /// <summary>
        /// Gets or Sets PocPaid2
        /// </summary>
        [DataMember(Name="pocPaid2", EmitDefaultValue=false)]
        public string PocPaid2 { get; set; }

        /// <summary>
        /// Gets or Sets PocPaid3
        /// </summary>
        [DataMember(Name="pocPaid3", EmitDefaultValue=false)]
        public string PocPaid3 { get; set; }

        /// <summary>
        /// Gets or Sets PostalCode
        /// </summary>
        [DataMember(Name="postalCode", EmitDefaultValue=false)]
        public string PostalCode { get; set; }

        /// <summary>
        /// Gets or Sets PrepaymentOtherDescription
        /// </summary>
        [DataMember(Name="prepaymentOtherDescription", EmitDefaultValue=false)]
        public string PrepaymentOtherDescription { get; set; }

        /// <summary>
        /// Gets or Sets PrepaymentOtherTypeIndicator
        /// </summary>
        [DataMember(Name="prepaymentOtherTypeIndicator", EmitDefaultValue=false)]
        public bool? PrepaymentOtherTypeIndicator { get; set; }

        /// <summary>
        /// Gets or Sets PrepaymentPenaltyAmount
        /// </summary>
        [DataMember(Name="prepaymentPenaltyAmount", EmitDefaultValue=false)]
        public double? PrepaymentPenaltyAmount { get; set; }

        /// <summary>
        /// Gets or Sets PrepaymentPenaltyIndicator
        /// </summary>
        [DataMember(Name="prepaymentPenaltyIndicator", EmitDefaultValue=false)]
        public bool? PrepaymentPenaltyIndicator { get; set; }

        /// <summary>
        /// Gets or Sets PrepaymentPenaltyPeriod
        /// </summary>
        [DataMember(Name="prepaymentPenaltyPeriod", EmitDefaultValue=false)]
        public int? PrepaymentPenaltyPeriod { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalAmount
        /// </summary>
        [DataMember(Name="principalAmount", EmitDefaultValue=false)]
        public double? PrincipalAmount { get; set; }

        /// <summary>
        /// Gets or Sets PurchasePayOff
        /// </summary>
        [DataMember(Name="purchasePayOff", EmitDefaultValue=false)]
        public double? PurchasePayOff { get; set; }

        /// <summary>
        /// Gets or Sets Re882AdditionalCompensation
        /// </summary>
        [DataMember(Name="re882AdditionalCompensation", EmitDefaultValue=false)]
        public double? Re882AdditionalCompensation { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedFromLenderAmount
        /// </summary>
        [DataMember(Name="receivedFromLenderAmount", EmitDefaultValue=false)]
        public double? ReceivedFromLenderAmount { get; set; }

        /// <summary>
        /// Gets or Sets RepresentativeLicense
        /// </summary>
        [DataMember(Name="representativeLicense", EmitDefaultValue=false)]
        public string RepresentativeLicense { get; set; }

        /// <summary>
        /// Gets or Sets SourcesDeemedReliableIndicator
        /// </summary>
        [DataMember(Name="sourcesDeemedReliableIndicator", EmitDefaultValue=false)]
        public bool? SourcesDeemedReliableIndicator { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets SubtotalOfAllDeductions
        /// </summary>
        [DataMember(Name="subtotalOfAllDeductions", EmitDefaultValue=false)]
        public double? SubtotalOfAllDeductions { get; set; }

        /// <summary>
        /// Gets or Sets TotalBrokerCompensationAmount
        /// </summary>
        [DataMember(Name="totalBrokerCompensationAmount", EmitDefaultValue=false)]
        public double? TotalBrokerCompensationAmount { get; set; }

        /// <summary>
        /// Gets or Sets TotalClosingCostWithDiscount
        /// </summary>
        [DataMember(Name="totalClosingCostWithDiscount", EmitDefaultValue=false)]
        public double? TotalClosingCostWithDiscount { get; set; }

        /// <summary>
        /// Gets or Sets TotalCostsExpenses
        /// </summary>
        [DataMember(Name="totalCostsExpenses", EmitDefaultValue=false)]
        public double? TotalCostsExpenses { get; set; }

        /// <summary>
        /// Gets or Sets TotalMaximumCostsExpenses
        /// </summary>
        [DataMember(Name="totalMaximumCostsExpenses", EmitDefaultValue=false)]
        public double? TotalMaximumCostsExpenses { get; set; }

        /// <summary>
        /// Gets or Sets TotalOfInitialFees
        /// </summary>
        [DataMember(Name="totalOfInitialFees", EmitDefaultValue=false)]
        public double? TotalOfInitialFees { get; set; }

        /// <summary>
        /// Gets or Sets TotalPrepaidClosingCost
        /// </summary>
        [DataMember(Name="totalPrepaidClosingCost", EmitDefaultValue=false)]
        public double? TotalPrepaidClosingCost { get; set; }

        /// <summary>
        /// Gets or Sets TotalSettlementCharges
        /// </summary>
        [DataMember(Name="totalSettlementCharges", EmitDefaultValue=false)]
        public double? TotalSettlementCharges { get; set; }

        /// <summary>
        /// Gets or Sets TotalTaxAndInsurance
        /// </summary>
        [DataMember(Name="totalTaxAndInsurance", EmitDefaultValue=false)]
        public double? TotalTaxAndInsurance { get; set; }

        /// <summary>
        /// Gets or Sets YearlyFloodInsurance
        /// </summary>
        [DataMember(Name="yearlyFloodInsurance", EmitDefaultValue=false)]
        public double? YearlyFloodInsurance { get; set; }

        /// <summary>
        /// Gets or Sets YearlyInsurance
        /// </summary>
        [DataMember(Name="yearlyInsurance", EmitDefaultValue=false)]
        public double? YearlyInsurance { get; set; }

        /// <summary>
        /// Gets or Sets YearlyMortgageInsurance
        /// </summary>
        [DataMember(Name="yearlyMortgageInsurance", EmitDefaultValue=false)]
        public double? YearlyMortgageInsurance { get; set; }

        /// <summary>
        /// Gets or Sets YearlyOtherInsurance
        /// </summary>
        [DataMember(Name="yearlyOtherInsurance", EmitDefaultValue=false)]
        public double? YearlyOtherInsurance { get; set; }

        /// <summary>
        /// Gets or Sets YearlyOtherInsuranceDescription
        /// </summary>
        [DataMember(Name="yearlyOtherInsuranceDescription", EmitDefaultValue=false)]
        public string YearlyOtherInsuranceDescription { get; set; }

        /// <summary>
        /// Gets or Sets YearlyTax
        /// </summary>
        [DataMember(Name="yearlyTax", EmitDefaultValue=false)]
        public double? YearlyTax { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractGfe {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  AgregateAdjustment: ").Append(AgregateAdjustment).Append("\n");
            sb.Append("  BrokerCommission: ").Append(BrokerCommission).Append("\n");
            sb.Append("  BrokerLicense: ").Append(BrokerLicense).Append("\n");
            sb.Append("  BrokerName: ").Append(BrokerName).Append("\n");
            sb.Append("  BrokerRepresentative: ").Append(BrokerRepresentative).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  CompensationFromLenderAmount: ").Append(CompensationFromLenderAmount).Append("\n");
            sb.Append("  CompensationFromLenderPercentage: ").Append(CompensationFromLenderPercentage).Append("\n");
            sb.Append("  CompensationFromLenderTotalAmount: ").Append(CompensationFromLenderTotalAmount).Append("\n");
            sb.Append("  CreditLifeOrDisabilityPremium: ").Append(CreditLifeOrDisabilityPremium).Append("\n");
            sb.Append("  CreditToBorrowerAmount: ").Append(CreditToBorrowerAmount).Append("\n");
            sb.Append("  EstimatedCashAtClosing: ").Append(EstimatedCashAtClosing).Append("\n");
            sb.Append("  EstimatedCashToBorrower: ").Append(EstimatedCashToBorrower).Append("\n");
            sb.Append("  EstimatedDueDate: ").Append(EstimatedDueDate).Append("\n");
            sb.Append("  FinalBalloonPayment: ").Append(FinalBalloonPayment).Append("\n");
            sb.Append("  FirstChangePayment: ").Append(FirstChangePayment).Append("\n");
            sb.Append("  FirstChangePercent: ").Append(FirstChangePercent).Append("\n");
            sb.Append("  FundingAmount: ").Append(FundingAmount).Append("\n");
            sb.Append("  GfeFees: ").Append(GfeFees).Append("\n");
            sb.Append("  GfeLiens: ").Append(GfeLiens).Append("\n");
            sb.Append("  GfePayments: ").Append(GfePayments).Append("\n");
            sb.Append("  GfePayoffs: ").Append(GfePayoffs).Append("\n");
            sb.Append("  GfeProvidedByBrokerIndicator: ").Append(GfeProvidedByBrokerIndicator).Append("\n");
            sb.Append("  HasAdditionalCompensationIndicator: ").Append(HasAdditionalCompensationIndicator).Append("\n");
            sb.Append("  HasLateChargesIndicator: ").Append(HasLateChargesIndicator).Append("\n");
            sb.Append("  HasPrepaymentPenaltyIndicator: ").Append(HasPrepaymentPenaltyIndicator).Append("\n");
            sb.Append("  InitialFixedOrArmType: ").Append(InitialFixedOrArmType).Append("\n");
            sb.Append("  LenderOriginationFee: ").Append(LenderOriginationFee).Append("\n");
            sb.Append("  LoanFromBrokerControledFundsType: ").Append(LoanFromBrokerControledFundsType).Append("\n");
            sb.Append("  LockField: ").Append(LockField).Append("\n");
            sb.Append("  MaxLifePayment: ").Append(MaxLifePayment).Append("\n");
            sb.Append("  MaxPaymentAfterMonth: ").Append(MaxPaymentAfterMonth).Append("\n");
            sb.Append("  MonthlyPaymentAndEscrow: ").Append(MonthlyPaymentAndEscrow).Append("\n");
            sb.Append("  MortgageBrokerComissionFee: ").Append(MortgageBrokerComissionFee).Append("\n");
            sb.Append("  MortgageBrokerComissionFeePaidToName: ").Append(MortgageBrokerComissionFeePaidToName).Append("\n");
            sb.Append("  NatureLien1Description: ").Append(NatureLien1Description).Append("\n");
            sb.Append("  NatureLien1PayoffDescription: ").Append(NatureLien1PayoffDescription).Append("\n");
            sb.Append("  NatureLien2Description: ").Append(NatureLien2Description).Append("\n");
            sb.Append("  NatureLien2PayoffDescription: ").Append(NatureLien2PayoffDescription).Append("\n");
            sb.Append("  NatureLien3Description: ").Append(NatureLien3Description).Append("\n");
            sb.Append("  NatureLien3PayoffDescription: ").Append(NatureLien3PayoffDescription).Append("\n");
            sb.Append("  PaymentOfPrincipleIndicator: ").Append(PaymentOfPrincipleIndicator).Append("\n");
            sb.Append("  PaymentOfPrincipleType: ").Append(PaymentOfPrincipleType).Append("\n");
            sb.Append("  PenaltyNotToExceedMonths: ").Append(PenaltyNotToExceedMonths).Append("\n");
            sb.Append("  PocPaid1: ").Append(PocPaid1).Append("\n");
            sb.Append("  PocPaid2: ").Append(PocPaid2).Append("\n");
            sb.Append("  PocPaid3: ").Append(PocPaid3).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  PrepaymentOtherDescription: ").Append(PrepaymentOtherDescription).Append("\n");
            sb.Append("  PrepaymentOtherTypeIndicator: ").Append(PrepaymentOtherTypeIndicator).Append("\n");
            sb.Append("  PrepaymentPenaltyAmount: ").Append(PrepaymentPenaltyAmount).Append("\n");
            sb.Append("  PrepaymentPenaltyIndicator: ").Append(PrepaymentPenaltyIndicator).Append("\n");
            sb.Append("  PrepaymentPenaltyPeriod: ").Append(PrepaymentPenaltyPeriod).Append("\n");
            sb.Append("  PrincipalAmount: ").Append(PrincipalAmount).Append("\n");
            sb.Append("  PurchasePayOff: ").Append(PurchasePayOff).Append("\n");
            sb.Append("  Re882AdditionalCompensation: ").Append(Re882AdditionalCompensation).Append("\n");
            sb.Append("  ReceivedFromLenderAmount: ").Append(ReceivedFromLenderAmount).Append("\n");
            sb.Append("  RepresentativeLicense: ").Append(RepresentativeLicense).Append("\n");
            sb.Append("  SourcesDeemedReliableIndicator: ").Append(SourcesDeemedReliableIndicator).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  SubtotalOfAllDeductions: ").Append(SubtotalOfAllDeductions).Append("\n");
            sb.Append("  TotalBrokerCompensationAmount: ").Append(TotalBrokerCompensationAmount).Append("\n");
            sb.Append("  TotalClosingCostWithDiscount: ").Append(TotalClosingCostWithDiscount).Append("\n");
            sb.Append("  TotalCostsExpenses: ").Append(TotalCostsExpenses).Append("\n");
            sb.Append("  TotalMaximumCostsExpenses: ").Append(TotalMaximumCostsExpenses).Append("\n");
            sb.Append("  TotalOfInitialFees: ").Append(TotalOfInitialFees).Append("\n");
            sb.Append("  TotalPrepaidClosingCost: ").Append(TotalPrepaidClosingCost).Append("\n");
            sb.Append("  TotalSettlementCharges: ").Append(TotalSettlementCharges).Append("\n");
            sb.Append("  TotalTaxAndInsurance: ").Append(TotalTaxAndInsurance).Append("\n");
            sb.Append("  YearlyFloodInsurance: ").Append(YearlyFloodInsurance).Append("\n");
            sb.Append("  YearlyInsurance: ").Append(YearlyInsurance).Append("\n");
            sb.Append("  YearlyMortgageInsurance: ").Append(YearlyMortgageInsurance).Append("\n");
            sb.Append("  YearlyOtherInsurance: ").Append(YearlyOtherInsurance).Append("\n");
            sb.Append("  YearlyOtherInsuranceDescription: ").Append(YearlyOtherInsuranceDescription).Append("\n");
            sb.Append("  YearlyTax: ").Append(YearlyTax).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractGfe);
        }

        /// <summary>
        /// Returns true if LoanContractGfe instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractGfe to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractGfe input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.AgregateAdjustment == input.AgregateAdjustment ||
                    (this.AgregateAdjustment != null &&
                    this.AgregateAdjustment.Equals(input.AgregateAdjustment))
                ) && 
                (
                    this.BrokerCommission == input.BrokerCommission ||
                    (this.BrokerCommission != null &&
                    this.BrokerCommission.Equals(input.BrokerCommission))
                ) && 
                (
                    this.BrokerLicense == input.BrokerLicense ||
                    (this.BrokerLicense != null &&
                    this.BrokerLicense.Equals(input.BrokerLicense))
                ) && 
                (
                    this.BrokerName == input.BrokerName ||
                    (this.BrokerName != null &&
                    this.BrokerName.Equals(input.BrokerName))
                ) && 
                (
                    this.BrokerRepresentative == input.BrokerRepresentative ||
                    (this.BrokerRepresentative != null &&
                    this.BrokerRepresentative.Equals(input.BrokerRepresentative))
                ) && 
                (
                    this.City == input.City ||
                    (this.City != null &&
                    this.City.Equals(input.City))
                ) && 
                (
                    this.CompensationFromLenderAmount == input.CompensationFromLenderAmount ||
                    (this.CompensationFromLenderAmount != null &&
                    this.CompensationFromLenderAmount.Equals(input.CompensationFromLenderAmount))
                ) && 
                (
                    this.CompensationFromLenderPercentage == input.CompensationFromLenderPercentage ||
                    (this.CompensationFromLenderPercentage != null &&
                    this.CompensationFromLenderPercentage.Equals(input.CompensationFromLenderPercentage))
                ) && 
                (
                    this.CompensationFromLenderTotalAmount == input.CompensationFromLenderTotalAmount ||
                    (this.CompensationFromLenderTotalAmount != null &&
                    this.CompensationFromLenderTotalAmount.Equals(input.CompensationFromLenderTotalAmount))
                ) && 
                (
                    this.CreditLifeOrDisabilityPremium == input.CreditLifeOrDisabilityPremium ||
                    (this.CreditLifeOrDisabilityPremium != null &&
                    this.CreditLifeOrDisabilityPremium.Equals(input.CreditLifeOrDisabilityPremium))
                ) && 
                (
                    this.CreditToBorrowerAmount == input.CreditToBorrowerAmount ||
                    (this.CreditToBorrowerAmount != null &&
                    this.CreditToBorrowerAmount.Equals(input.CreditToBorrowerAmount))
                ) && 
                (
                    this.EstimatedCashAtClosing == input.EstimatedCashAtClosing ||
                    (this.EstimatedCashAtClosing != null &&
                    this.EstimatedCashAtClosing.Equals(input.EstimatedCashAtClosing))
                ) && 
                (
                    this.EstimatedCashToBorrower == input.EstimatedCashToBorrower ||
                    (this.EstimatedCashToBorrower != null &&
                    this.EstimatedCashToBorrower.Equals(input.EstimatedCashToBorrower))
                ) && 
                (
                    this.EstimatedDueDate == input.EstimatedDueDate ||
                    (this.EstimatedDueDate != null &&
                    this.EstimatedDueDate.Equals(input.EstimatedDueDate))
                ) && 
                (
                    this.FinalBalloonPayment == input.FinalBalloonPayment ||
                    (this.FinalBalloonPayment != null &&
                    this.FinalBalloonPayment.Equals(input.FinalBalloonPayment))
                ) && 
                (
                    this.FirstChangePayment == input.FirstChangePayment ||
                    (this.FirstChangePayment != null &&
                    this.FirstChangePayment.Equals(input.FirstChangePayment))
                ) && 
                (
                    this.FirstChangePercent == input.FirstChangePercent ||
                    (this.FirstChangePercent != null &&
                    this.FirstChangePercent.Equals(input.FirstChangePercent))
                ) && 
                (
                    this.FundingAmount == input.FundingAmount ||
                    (this.FundingAmount != null &&
                    this.FundingAmount.Equals(input.FundingAmount))
                ) && 
                (
                    this.GfeFees == input.GfeFees ||
                    this.GfeFees != null &&
                    this.GfeFees.SequenceEqual(input.GfeFees)
                ) && 
                (
                    this.GfeLiens == input.GfeLiens ||
                    this.GfeLiens != null &&
                    this.GfeLiens.SequenceEqual(input.GfeLiens)
                ) && 
                (
                    this.GfePayments == input.GfePayments ||
                    this.GfePayments != null &&
                    this.GfePayments.SequenceEqual(input.GfePayments)
                ) && 
                (
                    this.GfePayoffs == input.GfePayoffs ||
                    this.GfePayoffs != null &&
                    this.GfePayoffs.SequenceEqual(input.GfePayoffs)
                ) && 
                (
                    this.GfeProvidedByBrokerIndicator == input.GfeProvidedByBrokerIndicator ||
                    (this.GfeProvidedByBrokerIndicator != null &&
                    this.GfeProvidedByBrokerIndicator.Equals(input.GfeProvidedByBrokerIndicator))
                ) && 
                (
                    this.HasAdditionalCompensationIndicator == input.HasAdditionalCompensationIndicator ||
                    (this.HasAdditionalCompensationIndicator != null &&
                    this.HasAdditionalCompensationIndicator.Equals(input.HasAdditionalCompensationIndicator))
                ) && 
                (
                    this.HasLateChargesIndicator == input.HasLateChargesIndicator ||
                    (this.HasLateChargesIndicator != null &&
                    this.HasLateChargesIndicator.Equals(input.HasLateChargesIndicator))
                ) && 
                (
                    this.HasPrepaymentPenaltyIndicator == input.HasPrepaymentPenaltyIndicator ||
                    (this.HasPrepaymentPenaltyIndicator != null &&
                    this.HasPrepaymentPenaltyIndicator.Equals(input.HasPrepaymentPenaltyIndicator))
                ) && 
                (
                    this.InitialFixedOrArmType == input.InitialFixedOrArmType ||
                    (this.InitialFixedOrArmType != null &&
                    this.InitialFixedOrArmType.Equals(input.InitialFixedOrArmType))
                ) && 
                (
                    this.LenderOriginationFee == input.LenderOriginationFee ||
                    (this.LenderOriginationFee != null &&
                    this.LenderOriginationFee.Equals(input.LenderOriginationFee))
                ) && 
                (
                    this.LoanFromBrokerControledFundsType == input.LoanFromBrokerControledFundsType ||
                    (this.LoanFromBrokerControledFundsType != null &&
                    this.LoanFromBrokerControledFundsType.Equals(input.LoanFromBrokerControledFundsType))
                ) && 
                (
                    this.LockField == input.LockField ||
                    (this.LockField != null &&
                    this.LockField.Equals(input.LockField))
                ) && 
                (
                    this.MaxLifePayment == input.MaxLifePayment ||
                    (this.MaxLifePayment != null &&
                    this.MaxLifePayment.Equals(input.MaxLifePayment))
                ) && 
                (
                    this.MaxPaymentAfterMonth == input.MaxPaymentAfterMonth ||
                    (this.MaxPaymentAfterMonth != null &&
                    this.MaxPaymentAfterMonth.Equals(input.MaxPaymentAfterMonth))
                ) && 
                (
                    this.MonthlyPaymentAndEscrow == input.MonthlyPaymentAndEscrow ||
                    (this.MonthlyPaymentAndEscrow != null &&
                    this.MonthlyPaymentAndEscrow.Equals(input.MonthlyPaymentAndEscrow))
                ) && 
                (
                    this.MortgageBrokerComissionFee == input.MortgageBrokerComissionFee ||
                    (this.MortgageBrokerComissionFee != null &&
                    this.MortgageBrokerComissionFee.Equals(input.MortgageBrokerComissionFee))
                ) && 
                (
                    this.MortgageBrokerComissionFeePaidToName == input.MortgageBrokerComissionFeePaidToName ||
                    (this.MortgageBrokerComissionFeePaidToName != null &&
                    this.MortgageBrokerComissionFeePaidToName.Equals(input.MortgageBrokerComissionFeePaidToName))
                ) && 
                (
                    this.NatureLien1Description == input.NatureLien1Description ||
                    (this.NatureLien1Description != null &&
                    this.NatureLien1Description.Equals(input.NatureLien1Description))
                ) && 
                (
                    this.NatureLien1PayoffDescription == input.NatureLien1PayoffDescription ||
                    (this.NatureLien1PayoffDescription != null &&
                    this.NatureLien1PayoffDescription.Equals(input.NatureLien1PayoffDescription))
                ) && 
                (
                    this.NatureLien2Description == input.NatureLien2Description ||
                    (this.NatureLien2Description != null &&
                    this.NatureLien2Description.Equals(input.NatureLien2Description))
                ) && 
                (
                    this.NatureLien2PayoffDescription == input.NatureLien2PayoffDescription ||
                    (this.NatureLien2PayoffDescription != null &&
                    this.NatureLien2PayoffDescription.Equals(input.NatureLien2PayoffDescription))
                ) && 
                (
                    this.NatureLien3Description == input.NatureLien3Description ||
                    (this.NatureLien3Description != null &&
                    this.NatureLien3Description.Equals(input.NatureLien3Description))
                ) && 
                (
                    this.NatureLien3PayoffDescription == input.NatureLien3PayoffDescription ||
                    (this.NatureLien3PayoffDescription != null &&
                    this.NatureLien3PayoffDescription.Equals(input.NatureLien3PayoffDescription))
                ) && 
                (
                    this.PaymentOfPrincipleIndicator == input.PaymentOfPrincipleIndicator ||
                    (this.PaymentOfPrincipleIndicator != null &&
                    this.PaymentOfPrincipleIndicator.Equals(input.PaymentOfPrincipleIndicator))
                ) && 
                (
                    this.PaymentOfPrincipleType == input.PaymentOfPrincipleType ||
                    (this.PaymentOfPrincipleType != null &&
                    this.PaymentOfPrincipleType.Equals(input.PaymentOfPrincipleType))
                ) && 
                (
                    this.PenaltyNotToExceedMonths == input.PenaltyNotToExceedMonths ||
                    (this.PenaltyNotToExceedMonths != null &&
                    this.PenaltyNotToExceedMonths.Equals(input.PenaltyNotToExceedMonths))
                ) && 
                (
                    this.PocPaid1 == input.PocPaid1 ||
                    (this.PocPaid1 != null &&
                    this.PocPaid1.Equals(input.PocPaid1))
                ) && 
                (
                    this.PocPaid2 == input.PocPaid2 ||
                    (this.PocPaid2 != null &&
                    this.PocPaid2.Equals(input.PocPaid2))
                ) && 
                (
                    this.PocPaid3 == input.PocPaid3 ||
                    (this.PocPaid3 != null &&
                    this.PocPaid3.Equals(input.PocPaid3))
                ) && 
                (
                    this.PostalCode == input.PostalCode ||
                    (this.PostalCode != null &&
                    this.PostalCode.Equals(input.PostalCode))
                ) && 
                (
                    this.PrepaymentOtherDescription == input.PrepaymentOtherDescription ||
                    (this.PrepaymentOtherDescription != null &&
                    this.PrepaymentOtherDescription.Equals(input.PrepaymentOtherDescription))
                ) && 
                (
                    this.PrepaymentOtherTypeIndicator == input.PrepaymentOtherTypeIndicator ||
                    (this.PrepaymentOtherTypeIndicator != null &&
                    this.PrepaymentOtherTypeIndicator.Equals(input.PrepaymentOtherTypeIndicator))
                ) && 
                (
                    this.PrepaymentPenaltyAmount == input.PrepaymentPenaltyAmount ||
                    (this.PrepaymentPenaltyAmount != null &&
                    this.PrepaymentPenaltyAmount.Equals(input.PrepaymentPenaltyAmount))
                ) && 
                (
                    this.PrepaymentPenaltyIndicator == input.PrepaymentPenaltyIndicator ||
                    (this.PrepaymentPenaltyIndicator != null &&
                    this.PrepaymentPenaltyIndicator.Equals(input.PrepaymentPenaltyIndicator))
                ) && 
                (
                    this.PrepaymentPenaltyPeriod == input.PrepaymentPenaltyPeriod ||
                    (this.PrepaymentPenaltyPeriod != null &&
                    this.PrepaymentPenaltyPeriod.Equals(input.PrepaymentPenaltyPeriod))
                ) && 
                (
                    this.PrincipalAmount == input.PrincipalAmount ||
                    (this.PrincipalAmount != null &&
                    this.PrincipalAmount.Equals(input.PrincipalAmount))
                ) && 
                (
                    this.PurchasePayOff == input.PurchasePayOff ||
                    (this.PurchasePayOff != null &&
                    this.PurchasePayOff.Equals(input.PurchasePayOff))
                ) && 
                (
                    this.Re882AdditionalCompensation == input.Re882AdditionalCompensation ||
                    (this.Re882AdditionalCompensation != null &&
                    this.Re882AdditionalCompensation.Equals(input.Re882AdditionalCompensation))
                ) && 
                (
                    this.ReceivedFromLenderAmount == input.ReceivedFromLenderAmount ||
                    (this.ReceivedFromLenderAmount != null &&
                    this.ReceivedFromLenderAmount.Equals(input.ReceivedFromLenderAmount))
                ) && 
                (
                    this.RepresentativeLicense == input.RepresentativeLicense ||
                    (this.RepresentativeLicense != null &&
                    this.RepresentativeLicense.Equals(input.RepresentativeLicense))
                ) && 
                (
                    this.SourcesDeemedReliableIndicator == input.SourcesDeemedReliableIndicator ||
                    (this.SourcesDeemedReliableIndicator != null &&
                    this.SourcesDeemedReliableIndicator.Equals(input.SourcesDeemedReliableIndicator))
                ) && 
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                ) && 
                (
                    this.SubtotalOfAllDeductions == input.SubtotalOfAllDeductions ||
                    (this.SubtotalOfAllDeductions != null &&
                    this.SubtotalOfAllDeductions.Equals(input.SubtotalOfAllDeductions))
                ) && 
                (
                    this.TotalBrokerCompensationAmount == input.TotalBrokerCompensationAmount ||
                    (this.TotalBrokerCompensationAmount != null &&
                    this.TotalBrokerCompensationAmount.Equals(input.TotalBrokerCompensationAmount))
                ) && 
                (
                    this.TotalClosingCostWithDiscount == input.TotalClosingCostWithDiscount ||
                    (this.TotalClosingCostWithDiscount != null &&
                    this.TotalClosingCostWithDiscount.Equals(input.TotalClosingCostWithDiscount))
                ) && 
                (
                    this.TotalCostsExpenses == input.TotalCostsExpenses ||
                    (this.TotalCostsExpenses != null &&
                    this.TotalCostsExpenses.Equals(input.TotalCostsExpenses))
                ) && 
                (
                    this.TotalMaximumCostsExpenses == input.TotalMaximumCostsExpenses ||
                    (this.TotalMaximumCostsExpenses != null &&
                    this.TotalMaximumCostsExpenses.Equals(input.TotalMaximumCostsExpenses))
                ) && 
                (
                    this.TotalOfInitialFees == input.TotalOfInitialFees ||
                    (this.TotalOfInitialFees != null &&
                    this.TotalOfInitialFees.Equals(input.TotalOfInitialFees))
                ) && 
                (
                    this.TotalPrepaidClosingCost == input.TotalPrepaidClosingCost ||
                    (this.TotalPrepaidClosingCost != null &&
                    this.TotalPrepaidClosingCost.Equals(input.TotalPrepaidClosingCost))
                ) && 
                (
                    this.TotalSettlementCharges == input.TotalSettlementCharges ||
                    (this.TotalSettlementCharges != null &&
                    this.TotalSettlementCharges.Equals(input.TotalSettlementCharges))
                ) && 
                (
                    this.TotalTaxAndInsurance == input.TotalTaxAndInsurance ||
                    (this.TotalTaxAndInsurance != null &&
                    this.TotalTaxAndInsurance.Equals(input.TotalTaxAndInsurance))
                ) && 
                (
                    this.YearlyFloodInsurance == input.YearlyFloodInsurance ||
                    (this.YearlyFloodInsurance != null &&
                    this.YearlyFloodInsurance.Equals(input.YearlyFloodInsurance))
                ) && 
                (
                    this.YearlyInsurance == input.YearlyInsurance ||
                    (this.YearlyInsurance != null &&
                    this.YearlyInsurance.Equals(input.YearlyInsurance))
                ) && 
                (
                    this.YearlyMortgageInsurance == input.YearlyMortgageInsurance ||
                    (this.YearlyMortgageInsurance != null &&
                    this.YearlyMortgageInsurance.Equals(input.YearlyMortgageInsurance))
                ) && 
                (
                    this.YearlyOtherInsurance == input.YearlyOtherInsurance ||
                    (this.YearlyOtherInsurance != null &&
                    this.YearlyOtherInsurance.Equals(input.YearlyOtherInsurance))
                ) && 
                (
                    this.YearlyOtherInsuranceDescription == input.YearlyOtherInsuranceDescription ||
                    (this.YearlyOtherInsuranceDescription != null &&
                    this.YearlyOtherInsuranceDescription.Equals(input.YearlyOtherInsuranceDescription))
                ) && 
                (
                    this.YearlyTax == input.YearlyTax ||
                    (this.YearlyTax != null &&
                    this.YearlyTax.Equals(input.YearlyTax))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.AgregateAdjustment != null)
                    hashCode = hashCode * 59 + this.AgregateAdjustment.GetHashCode();
                if (this.BrokerCommission != null)
                    hashCode = hashCode * 59 + this.BrokerCommission.GetHashCode();
                if (this.BrokerLicense != null)
                    hashCode = hashCode * 59 + this.BrokerLicense.GetHashCode();
                if (this.BrokerName != null)
                    hashCode = hashCode * 59 + this.BrokerName.GetHashCode();
                if (this.BrokerRepresentative != null)
                    hashCode = hashCode * 59 + this.BrokerRepresentative.GetHashCode();
                if (this.City != null)
                    hashCode = hashCode * 59 + this.City.GetHashCode();
                if (this.CompensationFromLenderAmount != null)
                    hashCode = hashCode * 59 + this.CompensationFromLenderAmount.GetHashCode();
                if (this.CompensationFromLenderPercentage != null)
                    hashCode = hashCode * 59 + this.CompensationFromLenderPercentage.GetHashCode();
                if (this.CompensationFromLenderTotalAmount != null)
                    hashCode = hashCode * 59 + this.CompensationFromLenderTotalAmount.GetHashCode();
                if (this.CreditLifeOrDisabilityPremium != null)
                    hashCode = hashCode * 59 + this.CreditLifeOrDisabilityPremium.GetHashCode();
                if (this.CreditToBorrowerAmount != null)
                    hashCode = hashCode * 59 + this.CreditToBorrowerAmount.GetHashCode();
                if (this.EstimatedCashAtClosing != null)
                    hashCode = hashCode * 59 + this.EstimatedCashAtClosing.GetHashCode();
                if (this.EstimatedCashToBorrower != null)
                    hashCode = hashCode * 59 + this.EstimatedCashToBorrower.GetHashCode();
                if (this.EstimatedDueDate != null)
                    hashCode = hashCode * 59 + this.EstimatedDueDate.GetHashCode();
                if (this.FinalBalloonPayment != null)
                    hashCode = hashCode * 59 + this.FinalBalloonPayment.GetHashCode();
                if (this.FirstChangePayment != null)
                    hashCode = hashCode * 59 + this.FirstChangePayment.GetHashCode();
                if (this.FirstChangePercent != null)
                    hashCode = hashCode * 59 + this.FirstChangePercent.GetHashCode();
                if (this.FundingAmount != null)
                    hashCode = hashCode * 59 + this.FundingAmount.GetHashCode();
                if (this.GfeFees != null)
                    hashCode = hashCode * 59 + this.GfeFees.GetHashCode();
                if (this.GfeLiens != null)
                    hashCode = hashCode * 59 + this.GfeLiens.GetHashCode();
                if (this.GfePayments != null)
                    hashCode = hashCode * 59 + this.GfePayments.GetHashCode();
                if (this.GfePayoffs != null)
                    hashCode = hashCode * 59 + this.GfePayoffs.GetHashCode();
                if (this.GfeProvidedByBrokerIndicator != null)
                    hashCode = hashCode * 59 + this.GfeProvidedByBrokerIndicator.GetHashCode();
                if (this.HasAdditionalCompensationIndicator != null)
                    hashCode = hashCode * 59 + this.HasAdditionalCompensationIndicator.GetHashCode();
                if (this.HasLateChargesIndicator != null)
                    hashCode = hashCode * 59 + this.HasLateChargesIndicator.GetHashCode();
                if (this.HasPrepaymentPenaltyIndicator != null)
                    hashCode = hashCode * 59 + this.HasPrepaymentPenaltyIndicator.GetHashCode();
                if (this.InitialFixedOrArmType != null)
                    hashCode = hashCode * 59 + this.InitialFixedOrArmType.GetHashCode();
                if (this.LenderOriginationFee != null)
                    hashCode = hashCode * 59 + this.LenderOriginationFee.GetHashCode();
                if (this.LoanFromBrokerControledFundsType != null)
                    hashCode = hashCode * 59 + this.LoanFromBrokerControledFundsType.GetHashCode();
                if (this.LockField != null)
                    hashCode = hashCode * 59 + this.LockField.GetHashCode();
                if (this.MaxLifePayment != null)
                    hashCode = hashCode * 59 + this.MaxLifePayment.GetHashCode();
                if (this.MaxPaymentAfterMonth != null)
                    hashCode = hashCode * 59 + this.MaxPaymentAfterMonth.GetHashCode();
                if (this.MonthlyPaymentAndEscrow != null)
                    hashCode = hashCode * 59 + this.MonthlyPaymentAndEscrow.GetHashCode();
                if (this.MortgageBrokerComissionFee != null)
                    hashCode = hashCode * 59 + this.MortgageBrokerComissionFee.GetHashCode();
                if (this.MortgageBrokerComissionFeePaidToName != null)
                    hashCode = hashCode * 59 + this.MortgageBrokerComissionFeePaidToName.GetHashCode();
                if (this.NatureLien1Description != null)
                    hashCode = hashCode * 59 + this.NatureLien1Description.GetHashCode();
                if (this.NatureLien1PayoffDescription != null)
                    hashCode = hashCode * 59 + this.NatureLien1PayoffDescription.GetHashCode();
                if (this.NatureLien2Description != null)
                    hashCode = hashCode * 59 + this.NatureLien2Description.GetHashCode();
                if (this.NatureLien2PayoffDescription != null)
                    hashCode = hashCode * 59 + this.NatureLien2PayoffDescription.GetHashCode();
                if (this.NatureLien3Description != null)
                    hashCode = hashCode * 59 + this.NatureLien3Description.GetHashCode();
                if (this.NatureLien3PayoffDescription != null)
                    hashCode = hashCode * 59 + this.NatureLien3PayoffDescription.GetHashCode();
                if (this.PaymentOfPrincipleIndicator != null)
                    hashCode = hashCode * 59 + this.PaymentOfPrincipleIndicator.GetHashCode();
                if (this.PaymentOfPrincipleType != null)
                    hashCode = hashCode * 59 + this.PaymentOfPrincipleType.GetHashCode();
                if (this.PenaltyNotToExceedMonths != null)
                    hashCode = hashCode * 59 + this.PenaltyNotToExceedMonths.GetHashCode();
                if (this.PocPaid1 != null)
                    hashCode = hashCode * 59 + this.PocPaid1.GetHashCode();
                if (this.PocPaid2 != null)
                    hashCode = hashCode * 59 + this.PocPaid2.GetHashCode();
                if (this.PocPaid3 != null)
                    hashCode = hashCode * 59 + this.PocPaid3.GetHashCode();
                if (this.PostalCode != null)
                    hashCode = hashCode * 59 + this.PostalCode.GetHashCode();
                if (this.PrepaymentOtherDescription != null)
                    hashCode = hashCode * 59 + this.PrepaymentOtherDescription.GetHashCode();
                if (this.PrepaymentOtherTypeIndicator != null)
                    hashCode = hashCode * 59 + this.PrepaymentOtherTypeIndicator.GetHashCode();
                if (this.PrepaymentPenaltyAmount != null)
                    hashCode = hashCode * 59 + this.PrepaymentPenaltyAmount.GetHashCode();
                if (this.PrepaymentPenaltyIndicator != null)
                    hashCode = hashCode * 59 + this.PrepaymentPenaltyIndicator.GetHashCode();
                if (this.PrepaymentPenaltyPeriod != null)
                    hashCode = hashCode * 59 + this.PrepaymentPenaltyPeriod.GetHashCode();
                if (this.PrincipalAmount != null)
                    hashCode = hashCode * 59 + this.PrincipalAmount.GetHashCode();
                if (this.PurchasePayOff != null)
                    hashCode = hashCode * 59 + this.PurchasePayOff.GetHashCode();
                if (this.Re882AdditionalCompensation != null)
                    hashCode = hashCode * 59 + this.Re882AdditionalCompensation.GetHashCode();
                if (this.ReceivedFromLenderAmount != null)
                    hashCode = hashCode * 59 + this.ReceivedFromLenderAmount.GetHashCode();
                if (this.RepresentativeLicense != null)
                    hashCode = hashCode * 59 + this.RepresentativeLicense.GetHashCode();
                if (this.SourcesDeemedReliableIndicator != null)
                    hashCode = hashCode * 59 + this.SourcesDeemedReliableIndicator.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                if (this.SubtotalOfAllDeductions != null)
                    hashCode = hashCode * 59 + this.SubtotalOfAllDeductions.GetHashCode();
                if (this.TotalBrokerCompensationAmount != null)
                    hashCode = hashCode * 59 + this.TotalBrokerCompensationAmount.GetHashCode();
                if (this.TotalClosingCostWithDiscount != null)
                    hashCode = hashCode * 59 + this.TotalClosingCostWithDiscount.GetHashCode();
                if (this.TotalCostsExpenses != null)
                    hashCode = hashCode * 59 + this.TotalCostsExpenses.GetHashCode();
                if (this.TotalMaximumCostsExpenses != null)
                    hashCode = hashCode * 59 + this.TotalMaximumCostsExpenses.GetHashCode();
                if (this.TotalOfInitialFees != null)
                    hashCode = hashCode * 59 + this.TotalOfInitialFees.GetHashCode();
                if (this.TotalPrepaidClosingCost != null)
                    hashCode = hashCode * 59 + this.TotalPrepaidClosingCost.GetHashCode();
                if (this.TotalSettlementCharges != null)
                    hashCode = hashCode * 59 + this.TotalSettlementCharges.GetHashCode();
                if (this.TotalTaxAndInsurance != null)
                    hashCode = hashCode * 59 + this.TotalTaxAndInsurance.GetHashCode();
                if (this.YearlyFloodInsurance != null)
                    hashCode = hashCode * 59 + this.YearlyFloodInsurance.GetHashCode();
                if (this.YearlyInsurance != null)
                    hashCode = hashCode * 59 + this.YearlyInsurance.GetHashCode();
                if (this.YearlyMortgageInsurance != null)
                    hashCode = hashCode * 59 + this.YearlyMortgageInsurance.GetHashCode();
                if (this.YearlyOtherInsurance != null)
                    hashCode = hashCode * 59 + this.YearlyOtherInsurance.GetHashCode();
                if (this.YearlyOtherInsuranceDescription != null)
                    hashCode = hashCode * 59 + this.YearlyOtherInsuranceDescription.GetHashCode();
                if (this.YearlyTax != null)
                    hashCode = hashCode * 59 + this.YearlyTax.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
