/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractPrequalification
    /// </summary>
    [DataContract]
    public partial class LoanContractPrequalification :  IEquatable<LoanContractPrequalification>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets AfterTaxOwnMoSavings
        /// </summary>
        [DataMember(Name="afterTaxOwnMoSavings", EmitDefaultValue=false)]
        public double? AfterTaxOwnMoSavings { get; set; }

        /// <summary>
        /// Gets or Sets AfterTaxRentMoSavings
        /// </summary>
        [DataMember(Name="afterTaxRentMoSavings", EmitDefaultValue=false)]
        public double? AfterTaxRentMoSavings { get; set; }

        /// <summary>
        /// Gets or Sets AnnualHomeMaintenance
        /// </summary>
        [DataMember(Name="annualHomeMaintenance", EmitDefaultValue=false)]
        public double? AnnualHomeMaintenance { get; set; }

        /// <summary>
        /// Gets or Sets AvgMoPmtSavings
        /// </summary>
        [DataMember(Name="avgMoPmtSavings", EmitDefaultValue=false)]
        public double? AvgMoPmtSavings { get; set; }

        /// <summary>
        /// Gets or Sets BeforeTaxOwnMoPmt
        /// </summary>
        [DataMember(Name="beforeTaxOwnMoPmt", EmitDefaultValue=false)]
        public double? BeforeTaxOwnMoPmt { get; set; }

        /// <summary>
        /// Gets or Sets BeforeTaxRentMoPmt
        /// </summary>
        [DataMember(Name="beforeTaxRentMoPmt", EmitDefaultValue=false)]
        public double? BeforeTaxRentMoPmt { get; set; }

        /// <summary>
        /// Gets or Sets CashOutBalance
        /// </summary>
        [DataMember(Name="cashOutBalance", EmitDefaultValue=false)]
        public int? CashOutBalance { get; set; }

        /// <summary>
        /// Gets or Sets CombinedGain
        /// </summary>
        [DataMember(Name="combinedGain", EmitDefaultValue=false)]
        public double? CombinedGain { get; set; }

        /// <summary>
        /// Gets or Sets CostIncreasePerYear
        /// </summary>
        [DataMember(Name="costIncreasePerYear", EmitDefaultValue=false)]
        public double? CostIncreasePerYear { get; set; }

        /// <summary>
        /// Gets or Sets DownPaymentAmount
        /// </summary>
        [DataMember(Name="downPaymentAmount", EmitDefaultValue=false)]
        public double? DownPaymentAmount { get; set; }

        /// <summary>
        /// Gets or Sets FavorableOption
        /// </summary>
        [DataMember(Name="favorableOption", EmitDefaultValue=false)]
        public string FavorableOption { get; set; }

        /// <summary>
        /// Gets or Sets HomeSellingPriceAfterYears
        /// </summary>
        [DataMember(Name="homeSellingPriceAfterYears", EmitDefaultValue=false)]
        public double? HomeSellingPriceAfterYears { get; set; }

        /// <summary>
        /// Gets or Sets InvestmentGain
        /// </summary>
        [DataMember(Name="investmentGain", EmitDefaultValue=false)]
        public double? InvestmentGain { get; set; }

        /// <summary>
        /// Gets or Sets MaxLoanLimit
        /// </summary>
        [DataMember(Name="maxLoanLimit", EmitDefaultValue=false)]
        public double? MaxLoanLimit { get; set; }

        /// <summary>
        /// Gets or Sets MaxPropValue
        /// </summary>
        [DataMember(Name="maxPropValue", EmitDefaultValue=false)]
        public double? MaxPropValue { get; set; }

        /// <summary>
        /// Gets or Sets MinusDownPmtAndClosingCosts
        /// </summary>
        [DataMember(Name="minusDownPmtAndClosingCosts", EmitDefaultValue=false)]
        public double? MinusDownPmtAndClosingCosts { get; set; }

        /// <summary>
        /// Gets or Sets MinusLoanBalance
        /// </summary>
        [DataMember(Name="minusLoanBalance", EmitDefaultValue=false)]
        public double? MinusLoanBalance { get; set; }

        /// <summary>
        /// Gets or Sets MonthlyBenefit
        /// </summary>
        [DataMember(Name="monthlyBenefit", EmitDefaultValue=false)]
        public double? MonthlyBenefit { get; set; }

        /// <summary>
        /// Gets or Sets MonthlyHomeAppreciation
        /// </summary>
        [DataMember(Name="monthlyHomeAppreciation", EmitDefaultValue=false)]
        public double? MonthlyHomeAppreciation { get; set; }

        /// <summary>
        /// Gets or Sets MonthlyHomeEquity
        /// </summary>
        [DataMember(Name="monthlyHomeEquity", EmitDefaultValue=false)]
        public double? MonthlyHomeEquity { get; set; }

        /// <summary>
        /// Gets or Sets MonthlyIncomeTax
        /// </summary>
        [DataMember(Name="monthlyIncomeTax", EmitDefaultValue=false)]
        public double? MonthlyIncomeTax { get; set; }

        /// <summary>
        /// Gets or Sets MonthlyInvestmentInterest
        /// </summary>
        [DataMember(Name="monthlyInvestmentInterest", EmitDefaultValue=false)]
        public double? MonthlyInvestmentInterest { get; set; }

        /// <summary>
        /// Gets or Sets MonthlySavings
        /// </summary>
        [DataMember(Name="monthlySavings", EmitDefaultValue=false)]
        public int? MonthlySavings { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfMonths
        /// </summary>
        [DataMember(Name="numberOfMonths", EmitDefaultValue=false)]
        public string NumberOfMonths { get; set; }

        /// <summary>
        /// Gets or Sets PercentAnnualHomeMaint
        /// </summary>
        [DataMember(Name="percentAnnualHomeMaint", EmitDefaultValue=false)]
        public double? PercentAnnualHomeMaint { get; set; }

        /// <summary>
        /// Gets or Sets PercentOfHomeAppreciation
        /// </summary>
        [DataMember(Name="percentOfHomeAppreciation", EmitDefaultValue=false)]
        public double? PercentOfHomeAppreciation { get; set; }

        /// <summary>
        /// Gets or Sets PercentOfIncomeTax
        /// </summary>
        [DataMember(Name="percentOfIncomeTax", EmitDefaultValue=false)]
        public double? PercentOfIncomeTax { get; set; }

        /// <summary>
        /// Gets or Sets PercentOfInvestmentInterest
        /// </summary>
        [DataMember(Name="percentOfInvestmentInterest", EmitDefaultValue=false)]
        public double? PercentOfInvestmentInterest { get; set; }

        /// <summary>
        /// Gets or Sets PrequalificationScenarios
        /// </summary>
        [DataMember(Name="prequalificationScenarios", EmitDefaultValue=false)]
        public List<LoanContractPrequalificationPrequalificationScenarios> PrequalificationScenarios { get; set; }

        /// <summary>
        /// Gets or Sets QualificationStatus
        /// </summary>
        [DataMember(Name="qualificationStatus", EmitDefaultValue=false)]
        public string QualificationStatus { get; set; }

        /// <summary>
        /// Gets or Sets RentalCost
        /// </summary>
        [DataMember(Name="rentalCost", EmitDefaultValue=false)]
        public double? RentalCost { get; set; }

        /// <summary>
        /// Gets or Sets RentersInsurance
        /// </summary>
        [DataMember(Name="rentersInsurance", EmitDefaultValue=false)]
        public double? RentersInsurance { get; set; }

        /// <summary>
        /// Gets or Sets TotalBenefit
        /// </summary>
        [DataMember(Name="totalBenefit", EmitDefaultValue=false)]
        public double? TotalBenefit { get; set; }

        /// <summary>
        /// Gets or Sets TotalCashFlow
        /// </summary>
        [DataMember(Name="totalCashFlow", EmitDefaultValue=false)]
        public double? TotalCashFlow { get; set; }

        /// <summary>
        /// Gets or Sets TotalGain
        /// </summary>
        [DataMember(Name="totalGain", EmitDefaultValue=false)]
        public double? TotalGain { get; set; }

        /// <summary>
        /// Gets or Sets TotalHomeAppreciation
        /// </summary>
        [DataMember(Name="totalHomeAppreciation", EmitDefaultValue=false)]
        public double? TotalHomeAppreciation { get; set; }

        /// <summary>
        /// Gets or Sets TotalHomeEquity
        /// </summary>
        [DataMember(Name="totalHomeEquity", EmitDefaultValue=false)]
        public double? TotalHomeEquity { get; set; }

        /// <summary>
        /// Gets or Sets TotalHousingExpense
        /// </summary>
        [DataMember(Name="totalHousingExpense", EmitDefaultValue=false)]
        public double? TotalHousingExpense { get; set; }

        /// <summary>
        /// Gets or Sets TotalIncomeTax
        /// </summary>
        [DataMember(Name="totalIncomeTax", EmitDefaultValue=false)]
        public double? TotalIncomeTax { get; set; }

        /// <summary>
        /// Gets or Sets TotalInvestmentInterest
        /// </summary>
        [DataMember(Name="totalInvestmentInterest", EmitDefaultValue=false)]
        public double? TotalInvestmentInterest { get; set; }

        /// <summary>
        /// Gets or Sets TotalLiabilityPayment
        /// </summary>
        [DataMember(Name="totalLiabilityPayment", EmitDefaultValue=false)]
        public int? TotalLiabilityPayment { get; set; }

        /// <summary>
        /// Gets or Sets TotalLiabilityUnpaid
        /// </summary>
        [DataMember(Name="totalLiabilityUnpaid", EmitDefaultValue=false)]
        public int? TotalLiabilityUnpaid { get; set; }

        /// <summary>
        /// Gets or Sets TotalLoanSavings
        /// </summary>
        [DataMember(Name="totalLoanSavings", EmitDefaultValue=false)]
        public int? TotalLoanSavings { get; set; }

        /// <summary>
        /// Gets or Sets TotalOtherExpenses
        /// </summary>
        [DataMember(Name="totalOtherExpenses", EmitDefaultValue=false)]
        public double? TotalOtherExpenses { get; set; }

        /// <summary>
        /// Gets or Sets TotalOwnPmtOverYears
        /// </summary>
        [DataMember(Name="totalOwnPmtOverYears", EmitDefaultValue=false)]
        public double? TotalOwnPmtOverYears { get; set; }

        /// <summary>
        /// Gets or Sets TotalOwnTaxSavings
        /// </summary>
        [DataMember(Name="totalOwnTaxSavings", EmitDefaultValue=false)]
        public double? TotalOwnTaxSavings { get; set; }

        /// <summary>
        /// Gets or Sets TotalPaidOffBalance
        /// </summary>
        [DataMember(Name="totalPaidOffBalance", EmitDefaultValue=false)]
        public int? TotalPaidOffBalance { get; set; }

        /// <summary>
        /// Gets or Sets TotalPaidOffMonthly
        /// </summary>
        [DataMember(Name="totalPaidOffMonthly", EmitDefaultValue=false)]
        public int? TotalPaidOffMonthly { get; set; }

        /// <summary>
        /// Gets or Sets TotalPmtSavings
        /// </summary>
        [DataMember(Name="totalPmtSavings", EmitDefaultValue=false)]
        public double? TotalPmtSavings { get; set; }

        /// <summary>
        /// Gets or Sets TotalRentPmtOverYears
        /// </summary>
        [DataMember(Name="totalRentPmtOverYears", EmitDefaultValue=false)]
        public double? TotalRentPmtOverYears { get; set; }

        /// <summary>
        /// Gets or Sets WithinLimits1
        /// </summary>
        [DataMember(Name="withinLimits1", EmitDefaultValue=false)]
        public string WithinLimits1 { get; set; }

        /// <summary>
        /// Gets or Sets WithinLimits2
        /// </summary>
        [DataMember(Name="withinLimits2", EmitDefaultValue=false)]
        public string WithinLimits2 { get; set; }

        /// <summary>
        /// Gets or Sets WithinLimits3
        /// </summary>
        [DataMember(Name="withinLimits3", EmitDefaultValue=false)]
        public string WithinLimits3 { get; set; }

        /// <summary>
        /// Gets or Sets WithinLimits4
        /// </summary>
        [DataMember(Name="withinLimits4", EmitDefaultValue=false)]
        public string WithinLimits4 { get; set; }

        /// <summary>
        /// Gets or Sets WithinLimits5
        /// </summary>
        [DataMember(Name="withinLimits5", EmitDefaultValue=false)]
        public string WithinLimits5 { get; set; }

        /// <summary>
        /// Gets or Sets WithinLimits6
        /// </summary>
        [DataMember(Name="withinLimits6", EmitDefaultValue=false)]
        public string WithinLimits6 { get; set; }

        /// <summary>
        /// Gets or Sets WithinLimits7
        /// </summary>
        [DataMember(Name="withinLimits7", EmitDefaultValue=false)]
        public string WithinLimits7 { get; set; }

        /// <summary>
        /// Gets or Sets WithinLimits8
        /// </summary>
        [DataMember(Name="withinLimits8", EmitDefaultValue=false)]
        public string WithinLimits8 { get; set; }

        /// <summary>
        /// Gets or Sets WithinLimits9
        /// </summary>
        [DataMember(Name="withinLimits9", EmitDefaultValue=false)]
        public string WithinLimits9 { get; set; }

        /// <summary>
        /// Gets or Sets YearsForComparison
        /// </summary>
        [DataMember(Name="yearsForComparison", EmitDefaultValue=false)]
        public int? YearsForComparison { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractPrequalification {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AfterTaxOwnMoSavings: ").Append(AfterTaxOwnMoSavings).Append("\n");
            sb.Append("  AfterTaxRentMoSavings: ").Append(AfterTaxRentMoSavings).Append("\n");
            sb.Append("  AnnualHomeMaintenance: ").Append(AnnualHomeMaintenance).Append("\n");
            sb.Append("  AvgMoPmtSavings: ").Append(AvgMoPmtSavings).Append("\n");
            sb.Append("  BeforeTaxOwnMoPmt: ").Append(BeforeTaxOwnMoPmt).Append("\n");
            sb.Append("  BeforeTaxRentMoPmt: ").Append(BeforeTaxRentMoPmt).Append("\n");
            sb.Append("  CashOutBalance: ").Append(CashOutBalance).Append("\n");
            sb.Append("  CombinedGain: ").Append(CombinedGain).Append("\n");
            sb.Append("  CostIncreasePerYear: ").Append(CostIncreasePerYear).Append("\n");
            sb.Append("  DownPaymentAmount: ").Append(DownPaymentAmount).Append("\n");
            sb.Append("  FavorableOption: ").Append(FavorableOption).Append("\n");
            sb.Append("  HomeSellingPriceAfterYears: ").Append(HomeSellingPriceAfterYears).Append("\n");
            sb.Append("  InvestmentGain: ").Append(InvestmentGain).Append("\n");
            sb.Append("  MaxLoanLimit: ").Append(MaxLoanLimit).Append("\n");
            sb.Append("  MaxPropValue: ").Append(MaxPropValue).Append("\n");
            sb.Append("  MinusDownPmtAndClosingCosts: ").Append(MinusDownPmtAndClosingCosts).Append("\n");
            sb.Append("  MinusLoanBalance: ").Append(MinusLoanBalance).Append("\n");
            sb.Append("  MonthlyBenefit: ").Append(MonthlyBenefit).Append("\n");
            sb.Append("  MonthlyHomeAppreciation: ").Append(MonthlyHomeAppreciation).Append("\n");
            sb.Append("  MonthlyHomeEquity: ").Append(MonthlyHomeEquity).Append("\n");
            sb.Append("  MonthlyIncomeTax: ").Append(MonthlyIncomeTax).Append("\n");
            sb.Append("  MonthlyInvestmentInterest: ").Append(MonthlyInvestmentInterest).Append("\n");
            sb.Append("  MonthlySavings: ").Append(MonthlySavings).Append("\n");
            sb.Append("  NumberOfMonths: ").Append(NumberOfMonths).Append("\n");
            sb.Append("  PercentAnnualHomeMaint: ").Append(PercentAnnualHomeMaint).Append("\n");
            sb.Append("  PercentOfHomeAppreciation: ").Append(PercentOfHomeAppreciation).Append("\n");
            sb.Append("  PercentOfIncomeTax: ").Append(PercentOfIncomeTax).Append("\n");
            sb.Append("  PercentOfInvestmentInterest: ").Append(PercentOfInvestmentInterest).Append("\n");
            sb.Append("  PrequalificationScenarios: ").Append(PrequalificationScenarios).Append("\n");
            sb.Append("  QualificationStatus: ").Append(QualificationStatus).Append("\n");
            sb.Append("  RentalCost: ").Append(RentalCost).Append("\n");
            sb.Append("  RentersInsurance: ").Append(RentersInsurance).Append("\n");
            sb.Append("  TotalBenefit: ").Append(TotalBenefit).Append("\n");
            sb.Append("  TotalCashFlow: ").Append(TotalCashFlow).Append("\n");
            sb.Append("  TotalGain: ").Append(TotalGain).Append("\n");
            sb.Append("  TotalHomeAppreciation: ").Append(TotalHomeAppreciation).Append("\n");
            sb.Append("  TotalHomeEquity: ").Append(TotalHomeEquity).Append("\n");
            sb.Append("  TotalHousingExpense: ").Append(TotalHousingExpense).Append("\n");
            sb.Append("  TotalIncomeTax: ").Append(TotalIncomeTax).Append("\n");
            sb.Append("  TotalInvestmentInterest: ").Append(TotalInvestmentInterest).Append("\n");
            sb.Append("  TotalLiabilityPayment: ").Append(TotalLiabilityPayment).Append("\n");
            sb.Append("  TotalLiabilityUnpaid: ").Append(TotalLiabilityUnpaid).Append("\n");
            sb.Append("  TotalLoanSavings: ").Append(TotalLoanSavings).Append("\n");
            sb.Append("  TotalOtherExpenses: ").Append(TotalOtherExpenses).Append("\n");
            sb.Append("  TotalOwnPmtOverYears: ").Append(TotalOwnPmtOverYears).Append("\n");
            sb.Append("  TotalOwnTaxSavings: ").Append(TotalOwnTaxSavings).Append("\n");
            sb.Append("  TotalPaidOffBalance: ").Append(TotalPaidOffBalance).Append("\n");
            sb.Append("  TotalPaidOffMonthly: ").Append(TotalPaidOffMonthly).Append("\n");
            sb.Append("  TotalPmtSavings: ").Append(TotalPmtSavings).Append("\n");
            sb.Append("  TotalRentPmtOverYears: ").Append(TotalRentPmtOverYears).Append("\n");
            sb.Append("  WithinLimits1: ").Append(WithinLimits1).Append("\n");
            sb.Append("  WithinLimits2: ").Append(WithinLimits2).Append("\n");
            sb.Append("  WithinLimits3: ").Append(WithinLimits3).Append("\n");
            sb.Append("  WithinLimits4: ").Append(WithinLimits4).Append("\n");
            sb.Append("  WithinLimits5: ").Append(WithinLimits5).Append("\n");
            sb.Append("  WithinLimits6: ").Append(WithinLimits6).Append("\n");
            sb.Append("  WithinLimits7: ").Append(WithinLimits7).Append("\n");
            sb.Append("  WithinLimits8: ").Append(WithinLimits8).Append("\n");
            sb.Append("  WithinLimits9: ").Append(WithinLimits9).Append("\n");
            sb.Append("  YearsForComparison: ").Append(YearsForComparison).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractPrequalification);
        }

        /// <summary>
        /// Returns true if LoanContractPrequalification instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractPrequalification to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractPrequalification input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AfterTaxOwnMoSavings == input.AfterTaxOwnMoSavings ||
                    (this.AfterTaxOwnMoSavings != null &&
                    this.AfterTaxOwnMoSavings.Equals(input.AfterTaxOwnMoSavings))
                ) && 
                (
                    this.AfterTaxRentMoSavings == input.AfterTaxRentMoSavings ||
                    (this.AfterTaxRentMoSavings != null &&
                    this.AfterTaxRentMoSavings.Equals(input.AfterTaxRentMoSavings))
                ) && 
                (
                    this.AnnualHomeMaintenance == input.AnnualHomeMaintenance ||
                    (this.AnnualHomeMaintenance != null &&
                    this.AnnualHomeMaintenance.Equals(input.AnnualHomeMaintenance))
                ) && 
                (
                    this.AvgMoPmtSavings == input.AvgMoPmtSavings ||
                    (this.AvgMoPmtSavings != null &&
                    this.AvgMoPmtSavings.Equals(input.AvgMoPmtSavings))
                ) && 
                (
                    this.BeforeTaxOwnMoPmt == input.BeforeTaxOwnMoPmt ||
                    (this.BeforeTaxOwnMoPmt != null &&
                    this.BeforeTaxOwnMoPmt.Equals(input.BeforeTaxOwnMoPmt))
                ) && 
                (
                    this.BeforeTaxRentMoPmt == input.BeforeTaxRentMoPmt ||
                    (this.BeforeTaxRentMoPmt != null &&
                    this.BeforeTaxRentMoPmt.Equals(input.BeforeTaxRentMoPmt))
                ) && 
                (
                    this.CashOutBalance == input.CashOutBalance ||
                    (this.CashOutBalance != null &&
                    this.CashOutBalance.Equals(input.CashOutBalance))
                ) && 
                (
                    this.CombinedGain == input.CombinedGain ||
                    (this.CombinedGain != null &&
                    this.CombinedGain.Equals(input.CombinedGain))
                ) && 
                (
                    this.CostIncreasePerYear == input.CostIncreasePerYear ||
                    (this.CostIncreasePerYear != null &&
                    this.CostIncreasePerYear.Equals(input.CostIncreasePerYear))
                ) && 
                (
                    this.DownPaymentAmount == input.DownPaymentAmount ||
                    (this.DownPaymentAmount != null &&
                    this.DownPaymentAmount.Equals(input.DownPaymentAmount))
                ) && 
                (
                    this.FavorableOption == input.FavorableOption ||
                    (this.FavorableOption != null &&
                    this.FavorableOption.Equals(input.FavorableOption))
                ) && 
                (
                    this.HomeSellingPriceAfterYears == input.HomeSellingPriceAfterYears ||
                    (this.HomeSellingPriceAfterYears != null &&
                    this.HomeSellingPriceAfterYears.Equals(input.HomeSellingPriceAfterYears))
                ) && 
                (
                    this.InvestmentGain == input.InvestmentGain ||
                    (this.InvestmentGain != null &&
                    this.InvestmentGain.Equals(input.InvestmentGain))
                ) && 
                (
                    this.MaxLoanLimit == input.MaxLoanLimit ||
                    (this.MaxLoanLimit != null &&
                    this.MaxLoanLimit.Equals(input.MaxLoanLimit))
                ) && 
                (
                    this.MaxPropValue == input.MaxPropValue ||
                    (this.MaxPropValue != null &&
                    this.MaxPropValue.Equals(input.MaxPropValue))
                ) && 
                (
                    this.MinusDownPmtAndClosingCosts == input.MinusDownPmtAndClosingCosts ||
                    (this.MinusDownPmtAndClosingCosts != null &&
                    this.MinusDownPmtAndClosingCosts.Equals(input.MinusDownPmtAndClosingCosts))
                ) && 
                (
                    this.MinusLoanBalance == input.MinusLoanBalance ||
                    (this.MinusLoanBalance != null &&
                    this.MinusLoanBalance.Equals(input.MinusLoanBalance))
                ) && 
                (
                    this.MonthlyBenefit == input.MonthlyBenefit ||
                    (this.MonthlyBenefit != null &&
                    this.MonthlyBenefit.Equals(input.MonthlyBenefit))
                ) && 
                (
                    this.MonthlyHomeAppreciation == input.MonthlyHomeAppreciation ||
                    (this.MonthlyHomeAppreciation != null &&
                    this.MonthlyHomeAppreciation.Equals(input.MonthlyHomeAppreciation))
                ) && 
                (
                    this.MonthlyHomeEquity == input.MonthlyHomeEquity ||
                    (this.MonthlyHomeEquity != null &&
                    this.MonthlyHomeEquity.Equals(input.MonthlyHomeEquity))
                ) && 
                (
                    this.MonthlyIncomeTax == input.MonthlyIncomeTax ||
                    (this.MonthlyIncomeTax != null &&
                    this.MonthlyIncomeTax.Equals(input.MonthlyIncomeTax))
                ) && 
                (
                    this.MonthlyInvestmentInterest == input.MonthlyInvestmentInterest ||
                    (this.MonthlyInvestmentInterest != null &&
                    this.MonthlyInvestmentInterest.Equals(input.MonthlyInvestmentInterest))
                ) && 
                (
                    this.MonthlySavings == input.MonthlySavings ||
                    (this.MonthlySavings != null &&
                    this.MonthlySavings.Equals(input.MonthlySavings))
                ) && 
                (
                    this.NumberOfMonths == input.NumberOfMonths ||
                    (this.NumberOfMonths != null &&
                    this.NumberOfMonths.Equals(input.NumberOfMonths))
                ) && 
                (
                    this.PercentAnnualHomeMaint == input.PercentAnnualHomeMaint ||
                    (this.PercentAnnualHomeMaint != null &&
                    this.PercentAnnualHomeMaint.Equals(input.PercentAnnualHomeMaint))
                ) && 
                (
                    this.PercentOfHomeAppreciation == input.PercentOfHomeAppreciation ||
                    (this.PercentOfHomeAppreciation != null &&
                    this.PercentOfHomeAppreciation.Equals(input.PercentOfHomeAppreciation))
                ) && 
                (
                    this.PercentOfIncomeTax == input.PercentOfIncomeTax ||
                    (this.PercentOfIncomeTax != null &&
                    this.PercentOfIncomeTax.Equals(input.PercentOfIncomeTax))
                ) && 
                (
                    this.PercentOfInvestmentInterest == input.PercentOfInvestmentInterest ||
                    (this.PercentOfInvestmentInterest != null &&
                    this.PercentOfInvestmentInterest.Equals(input.PercentOfInvestmentInterest))
                ) && 
                (
                    this.PrequalificationScenarios == input.PrequalificationScenarios ||
                    this.PrequalificationScenarios != null &&
                    this.PrequalificationScenarios.SequenceEqual(input.PrequalificationScenarios)
                ) && 
                (
                    this.QualificationStatus == input.QualificationStatus ||
                    (this.QualificationStatus != null &&
                    this.QualificationStatus.Equals(input.QualificationStatus))
                ) && 
                (
                    this.RentalCost == input.RentalCost ||
                    (this.RentalCost != null &&
                    this.RentalCost.Equals(input.RentalCost))
                ) && 
                (
                    this.RentersInsurance == input.RentersInsurance ||
                    (this.RentersInsurance != null &&
                    this.RentersInsurance.Equals(input.RentersInsurance))
                ) && 
                (
                    this.TotalBenefit == input.TotalBenefit ||
                    (this.TotalBenefit != null &&
                    this.TotalBenefit.Equals(input.TotalBenefit))
                ) && 
                (
                    this.TotalCashFlow == input.TotalCashFlow ||
                    (this.TotalCashFlow != null &&
                    this.TotalCashFlow.Equals(input.TotalCashFlow))
                ) && 
                (
                    this.TotalGain == input.TotalGain ||
                    (this.TotalGain != null &&
                    this.TotalGain.Equals(input.TotalGain))
                ) && 
                (
                    this.TotalHomeAppreciation == input.TotalHomeAppreciation ||
                    (this.TotalHomeAppreciation != null &&
                    this.TotalHomeAppreciation.Equals(input.TotalHomeAppreciation))
                ) && 
                (
                    this.TotalHomeEquity == input.TotalHomeEquity ||
                    (this.TotalHomeEquity != null &&
                    this.TotalHomeEquity.Equals(input.TotalHomeEquity))
                ) && 
                (
                    this.TotalHousingExpense == input.TotalHousingExpense ||
                    (this.TotalHousingExpense != null &&
                    this.TotalHousingExpense.Equals(input.TotalHousingExpense))
                ) && 
                (
                    this.TotalIncomeTax == input.TotalIncomeTax ||
                    (this.TotalIncomeTax != null &&
                    this.TotalIncomeTax.Equals(input.TotalIncomeTax))
                ) && 
                (
                    this.TotalInvestmentInterest == input.TotalInvestmentInterest ||
                    (this.TotalInvestmentInterest != null &&
                    this.TotalInvestmentInterest.Equals(input.TotalInvestmentInterest))
                ) && 
                (
                    this.TotalLiabilityPayment == input.TotalLiabilityPayment ||
                    (this.TotalLiabilityPayment != null &&
                    this.TotalLiabilityPayment.Equals(input.TotalLiabilityPayment))
                ) && 
                (
                    this.TotalLiabilityUnpaid == input.TotalLiabilityUnpaid ||
                    (this.TotalLiabilityUnpaid != null &&
                    this.TotalLiabilityUnpaid.Equals(input.TotalLiabilityUnpaid))
                ) && 
                (
                    this.TotalLoanSavings == input.TotalLoanSavings ||
                    (this.TotalLoanSavings != null &&
                    this.TotalLoanSavings.Equals(input.TotalLoanSavings))
                ) && 
                (
                    this.TotalOtherExpenses == input.TotalOtherExpenses ||
                    (this.TotalOtherExpenses != null &&
                    this.TotalOtherExpenses.Equals(input.TotalOtherExpenses))
                ) && 
                (
                    this.TotalOwnPmtOverYears == input.TotalOwnPmtOverYears ||
                    (this.TotalOwnPmtOverYears != null &&
                    this.TotalOwnPmtOverYears.Equals(input.TotalOwnPmtOverYears))
                ) && 
                (
                    this.TotalOwnTaxSavings == input.TotalOwnTaxSavings ||
                    (this.TotalOwnTaxSavings != null &&
                    this.TotalOwnTaxSavings.Equals(input.TotalOwnTaxSavings))
                ) && 
                (
                    this.TotalPaidOffBalance == input.TotalPaidOffBalance ||
                    (this.TotalPaidOffBalance != null &&
                    this.TotalPaidOffBalance.Equals(input.TotalPaidOffBalance))
                ) && 
                (
                    this.TotalPaidOffMonthly == input.TotalPaidOffMonthly ||
                    (this.TotalPaidOffMonthly != null &&
                    this.TotalPaidOffMonthly.Equals(input.TotalPaidOffMonthly))
                ) && 
                (
                    this.TotalPmtSavings == input.TotalPmtSavings ||
                    (this.TotalPmtSavings != null &&
                    this.TotalPmtSavings.Equals(input.TotalPmtSavings))
                ) && 
                (
                    this.TotalRentPmtOverYears == input.TotalRentPmtOverYears ||
                    (this.TotalRentPmtOverYears != null &&
                    this.TotalRentPmtOverYears.Equals(input.TotalRentPmtOverYears))
                ) && 
                (
                    this.WithinLimits1 == input.WithinLimits1 ||
                    (this.WithinLimits1 != null &&
                    this.WithinLimits1.Equals(input.WithinLimits1))
                ) && 
                (
                    this.WithinLimits2 == input.WithinLimits2 ||
                    (this.WithinLimits2 != null &&
                    this.WithinLimits2.Equals(input.WithinLimits2))
                ) && 
                (
                    this.WithinLimits3 == input.WithinLimits3 ||
                    (this.WithinLimits3 != null &&
                    this.WithinLimits3.Equals(input.WithinLimits3))
                ) && 
                (
                    this.WithinLimits4 == input.WithinLimits4 ||
                    (this.WithinLimits4 != null &&
                    this.WithinLimits4.Equals(input.WithinLimits4))
                ) && 
                (
                    this.WithinLimits5 == input.WithinLimits5 ||
                    (this.WithinLimits5 != null &&
                    this.WithinLimits5.Equals(input.WithinLimits5))
                ) && 
                (
                    this.WithinLimits6 == input.WithinLimits6 ||
                    (this.WithinLimits6 != null &&
                    this.WithinLimits6.Equals(input.WithinLimits6))
                ) && 
                (
                    this.WithinLimits7 == input.WithinLimits7 ||
                    (this.WithinLimits7 != null &&
                    this.WithinLimits7.Equals(input.WithinLimits7))
                ) && 
                (
                    this.WithinLimits8 == input.WithinLimits8 ||
                    (this.WithinLimits8 != null &&
                    this.WithinLimits8.Equals(input.WithinLimits8))
                ) && 
                (
                    this.WithinLimits9 == input.WithinLimits9 ||
                    (this.WithinLimits9 != null &&
                    this.WithinLimits9.Equals(input.WithinLimits9))
                ) && 
                (
                    this.YearsForComparison == input.YearsForComparison ||
                    (this.YearsForComparison != null &&
                    this.YearsForComparison.Equals(input.YearsForComparison))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AfterTaxOwnMoSavings != null)
                    hashCode = hashCode * 59 + this.AfterTaxOwnMoSavings.GetHashCode();
                if (this.AfterTaxRentMoSavings != null)
                    hashCode = hashCode * 59 + this.AfterTaxRentMoSavings.GetHashCode();
                if (this.AnnualHomeMaintenance != null)
                    hashCode = hashCode * 59 + this.AnnualHomeMaintenance.GetHashCode();
                if (this.AvgMoPmtSavings != null)
                    hashCode = hashCode * 59 + this.AvgMoPmtSavings.GetHashCode();
                if (this.BeforeTaxOwnMoPmt != null)
                    hashCode = hashCode * 59 + this.BeforeTaxOwnMoPmt.GetHashCode();
                if (this.BeforeTaxRentMoPmt != null)
                    hashCode = hashCode * 59 + this.BeforeTaxRentMoPmt.GetHashCode();
                if (this.CashOutBalance != null)
                    hashCode = hashCode * 59 + this.CashOutBalance.GetHashCode();
                if (this.CombinedGain != null)
                    hashCode = hashCode * 59 + this.CombinedGain.GetHashCode();
                if (this.CostIncreasePerYear != null)
                    hashCode = hashCode * 59 + this.CostIncreasePerYear.GetHashCode();
                if (this.DownPaymentAmount != null)
                    hashCode = hashCode * 59 + this.DownPaymentAmount.GetHashCode();
                if (this.FavorableOption != null)
                    hashCode = hashCode * 59 + this.FavorableOption.GetHashCode();
                if (this.HomeSellingPriceAfterYears != null)
                    hashCode = hashCode * 59 + this.HomeSellingPriceAfterYears.GetHashCode();
                if (this.InvestmentGain != null)
                    hashCode = hashCode * 59 + this.InvestmentGain.GetHashCode();
                if (this.MaxLoanLimit != null)
                    hashCode = hashCode * 59 + this.MaxLoanLimit.GetHashCode();
                if (this.MaxPropValue != null)
                    hashCode = hashCode * 59 + this.MaxPropValue.GetHashCode();
                if (this.MinusDownPmtAndClosingCosts != null)
                    hashCode = hashCode * 59 + this.MinusDownPmtAndClosingCosts.GetHashCode();
                if (this.MinusLoanBalance != null)
                    hashCode = hashCode * 59 + this.MinusLoanBalance.GetHashCode();
                if (this.MonthlyBenefit != null)
                    hashCode = hashCode * 59 + this.MonthlyBenefit.GetHashCode();
                if (this.MonthlyHomeAppreciation != null)
                    hashCode = hashCode * 59 + this.MonthlyHomeAppreciation.GetHashCode();
                if (this.MonthlyHomeEquity != null)
                    hashCode = hashCode * 59 + this.MonthlyHomeEquity.GetHashCode();
                if (this.MonthlyIncomeTax != null)
                    hashCode = hashCode * 59 + this.MonthlyIncomeTax.GetHashCode();
                if (this.MonthlyInvestmentInterest != null)
                    hashCode = hashCode * 59 + this.MonthlyInvestmentInterest.GetHashCode();
                if (this.MonthlySavings != null)
                    hashCode = hashCode * 59 + this.MonthlySavings.GetHashCode();
                if (this.NumberOfMonths != null)
                    hashCode = hashCode * 59 + this.NumberOfMonths.GetHashCode();
                if (this.PercentAnnualHomeMaint != null)
                    hashCode = hashCode * 59 + this.PercentAnnualHomeMaint.GetHashCode();
                if (this.PercentOfHomeAppreciation != null)
                    hashCode = hashCode * 59 + this.PercentOfHomeAppreciation.GetHashCode();
                if (this.PercentOfIncomeTax != null)
                    hashCode = hashCode * 59 + this.PercentOfIncomeTax.GetHashCode();
                if (this.PercentOfInvestmentInterest != null)
                    hashCode = hashCode * 59 + this.PercentOfInvestmentInterest.GetHashCode();
                if (this.PrequalificationScenarios != null)
                    hashCode = hashCode * 59 + this.PrequalificationScenarios.GetHashCode();
                if (this.QualificationStatus != null)
                    hashCode = hashCode * 59 + this.QualificationStatus.GetHashCode();
                if (this.RentalCost != null)
                    hashCode = hashCode * 59 + this.RentalCost.GetHashCode();
                if (this.RentersInsurance != null)
                    hashCode = hashCode * 59 + this.RentersInsurance.GetHashCode();
                if (this.TotalBenefit != null)
                    hashCode = hashCode * 59 + this.TotalBenefit.GetHashCode();
                if (this.TotalCashFlow != null)
                    hashCode = hashCode * 59 + this.TotalCashFlow.GetHashCode();
                if (this.TotalGain != null)
                    hashCode = hashCode * 59 + this.TotalGain.GetHashCode();
                if (this.TotalHomeAppreciation != null)
                    hashCode = hashCode * 59 + this.TotalHomeAppreciation.GetHashCode();
                if (this.TotalHomeEquity != null)
                    hashCode = hashCode * 59 + this.TotalHomeEquity.GetHashCode();
                if (this.TotalHousingExpense != null)
                    hashCode = hashCode * 59 + this.TotalHousingExpense.GetHashCode();
                if (this.TotalIncomeTax != null)
                    hashCode = hashCode * 59 + this.TotalIncomeTax.GetHashCode();
                if (this.TotalInvestmentInterest != null)
                    hashCode = hashCode * 59 + this.TotalInvestmentInterest.GetHashCode();
                if (this.TotalLiabilityPayment != null)
                    hashCode = hashCode * 59 + this.TotalLiabilityPayment.GetHashCode();
                if (this.TotalLiabilityUnpaid != null)
                    hashCode = hashCode * 59 + this.TotalLiabilityUnpaid.GetHashCode();
                if (this.TotalLoanSavings != null)
                    hashCode = hashCode * 59 + this.TotalLoanSavings.GetHashCode();
                if (this.TotalOtherExpenses != null)
                    hashCode = hashCode * 59 + this.TotalOtherExpenses.GetHashCode();
                if (this.TotalOwnPmtOverYears != null)
                    hashCode = hashCode * 59 + this.TotalOwnPmtOverYears.GetHashCode();
                if (this.TotalOwnTaxSavings != null)
                    hashCode = hashCode * 59 + this.TotalOwnTaxSavings.GetHashCode();
                if (this.TotalPaidOffBalance != null)
                    hashCode = hashCode * 59 + this.TotalPaidOffBalance.GetHashCode();
                if (this.TotalPaidOffMonthly != null)
                    hashCode = hashCode * 59 + this.TotalPaidOffMonthly.GetHashCode();
                if (this.TotalPmtSavings != null)
                    hashCode = hashCode * 59 + this.TotalPmtSavings.GetHashCode();
                if (this.TotalRentPmtOverYears != null)
                    hashCode = hashCode * 59 + this.TotalRentPmtOverYears.GetHashCode();
                if (this.WithinLimits1 != null)
                    hashCode = hashCode * 59 + this.WithinLimits1.GetHashCode();
                if (this.WithinLimits2 != null)
                    hashCode = hashCode * 59 + this.WithinLimits2.GetHashCode();
                if (this.WithinLimits3 != null)
                    hashCode = hashCode * 59 + this.WithinLimits3.GetHashCode();
                if (this.WithinLimits4 != null)
                    hashCode = hashCode * 59 + this.WithinLimits4.GetHashCode();
                if (this.WithinLimits5 != null)
                    hashCode = hashCode * 59 + this.WithinLimits5.GetHashCode();
                if (this.WithinLimits6 != null)
                    hashCode = hashCode * 59 + this.WithinLimits6.GetHashCode();
                if (this.WithinLimits7 != null)
                    hashCode = hashCode * 59 + this.WithinLimits7.GetHashCode();
                if (this.WithinLimits8 != null)
                    hashCode = hashCode * 59 + this.WithinLimits8.GetHashCode();
                if (this.WithinLimits9 != null)
                    hashCode = hashCode * 59 + this.WithinLimits9.GetHashCode();
                if (this.YearsForComparison != null)
                    hashCode = hashCode * 59 + this.YearsForComparison.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
