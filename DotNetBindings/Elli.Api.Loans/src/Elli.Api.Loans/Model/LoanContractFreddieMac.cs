/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractFreddieMac
    /// </summary>
    [DataContract]
    public partial class LoanContractFreddieMac :  IEquatable<LoanContractFreddieMac>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets AffordableProduct
        /// </summary>
        [DataMember(Name="affordableProduct", EmitDefaultValue=false)]
        public string AffordableProduct { get; set; }

        /// <summary>
        /// Gets or Sets AlimonyAsIncomeReduction
        /// </summary>
        [DataMember(Name="alimonyAsIncomeReduction", EmitDefaultValue=false)]
        public double? AlimonyAsIncomeReduction { get; set; }

        /// <summary>
        /// Gets or Sets AllMonthlyPayments
        /// </summary>
        [DataMember(Name="allMonthlyPayments", EmitDefaultValue=false)]
        public double? AllMonthlyPayments { get; set; }

        /// <summary>
        /// Gets or Sets AllowsNegativeAmortizationIndicator
        /// </summary>
        [DataMember(Name="allowsNegativeAmortizationIndicator", EmitDefaultValue=false)]
        public bool? AllowsNegativeAmortizationIndicator { get; set; }

        /// <summary>
        /// Gets or Sets AmountOfFinancedMI
        /// </summary>
        [DataMember(Name="amountOfFinancedMI", EmitDefaultValue=false)]
        public string AmountOfFinancedMI { get; set; }

        /// <summary>
        /// Gets or Sets APNCity
        /// </summary>
        [DataMember(Name="aPNCity", EmitDefaultValue=false)]
        public string APNCity { get; set; }

        /// <summary>
        /// Gets or Sets ArmsLengthTransactionIndicator
        /// </summary>
        [DataMember(Name="armsLengthTransactionIndicator", EmitDefaultValue=false)]
        public bool? ArmsLengthTransactionIndicator { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerQualifiesAsVeteranIndicator
        /// </summary>
        [DataMember(Name="borrowerQualifiesAsVeteranIndicator", EmitDefaultValue=false)]
        public bool? BorrowerQualifiesAsVeteranIndicator { get; set; }

        /// <summary>
        /// Gets or Sets BrokerOriginated
        /// </summary>
        [DataMember(Name="brokerOriginated", EmitDefaultValue=false)]
        public string BrokerOriginated { get; set; }

        /// <summary>
        /// Gets or Sets BuydownContributor
        /// </summary>
        [DataMember(Name="buydownContributor", EmitDefaultValue=false)]
        public string BuydownContributor { get; set; }

        /// <summary>
        /// Gets or Sets CondoClass
        /// </summary>
        [DataMember(Name="condoClass", EmitDefaultValue=false)]
        public string CondoClass { get; set; }

        /// <summary>
        /// Gets or Sets ConvertibleFeeAmount
        /// </summary>
        [DataMember(Name="convertibleFeeAmount", EmitDefaultValue=false)]
        public double? ConvertibleFeeAmount { get; set; }

        /// <summary>
        /// Gets or Sets ConvertibleFeePercent
        /// </summary>
        [DataMember(Name="convertibleFeePercent", EmitDefaultValue=false)]
        public double? ConvertibleFeePercent { get; set; }

        /// <summary>
        /// Gets or Sets ConvertibleMaxRateAdjPercent
        /// </summary>
        [DataMember(Name="convertibleMaxRateAdjPercent", EmitDefaultValue=false)]
        public double? ConvertibleMaxRateAdjPercent { get; set; }

        /// <summary>
        /// Gets or Sets ConvertibleMinRateAdjPercent
        /// </summary>
        [DataMember(Name="convertibleMinRateAdjPercent", EmitDefaultValue=false)]
        public double? ConvertibleMinRateAdjPercent { get; set; }

        /// <summary>
        /// Gets or Sets County
        /// </summary>
        [DataMember(Name="county", EmitDefaultValue=false)]
        public string County { get; set; }

        /// <summary>
        /// Gets or Sets CreditReportCompany
        /// </summary>
        [DataMember(Name="creditReportCompany", EmitDefaultValue=false)]
        public string CreditReportCompany { get; set; }

        /// <summary>
        /// Gets or Sets FinancingConcessions
        /// </summary>
        [DataMember(Name="financingConcessions", EmitDefaultValue=false)]
        public double? FinancingConcessions { get; set; }

        /// <summary>
        /// Gets or Sets FreddieFiel11
        /// </summary>
        [DataMember(Name="freddieFiel11", EmitDefaultValue=false)]
        public string FreddieFiel11 { get; set; }

        /// <summary>
        /// Gets or Sets FreddieFiel12
        /// </summary>
        [DataMember(Name="freddieFiel12", EmitDefaultValue=false)]
        public string FreddieFiel12 { get; set; }

        /// <summary>
        /// Gets or Sets FreddieFiel13
        /// </summary>
        [DataMember(Name="freddieFiel13", EmitDefaultValue=false)]
        public string FreddieFiel13 { get; set; }

        /// <summary>
        /// Gets or Sets FreddieFiel14
        /// </summary>
        [DataMember(Name="freddieFiel14", EmitDefaultValue=false)]
        public string FreddieFiel14 { get; set; }

        /// <summary>
        /// Gets or Sets FreddieFiel15
        /// </summary>
        [DataMember(Name="freddieFiel15", EmitDefaultValue=false)]
        public string FreddieFiel15 { get; set; }

        /// <summary>
        /// Gets or Sets FreddieField3
        /// </summary>
        [DataMember(Name="freddieField3", EmitDefaultValue=false)]
        public string FreddieField3 { get; set; }

        /// <summary>
        /// Gets or Sets FreddieField7
        /// </summary>
        [DataMember(Name="freddieField7", EmitDefaultValue=false)]
        public string FreddieField7 { get; set; }

        /// <summary>
        /// Gets or Sets HELOCActualBalance
        /// </summary>
        [DataMember(Name="hELOCActualBalance", EmitDefaultValue=false)]
        public string HELOCActualBalance { get; set; }

        /// <summary>
        /// Gets or Sets HELOCCreditLimit
        /// </summary>
        [DataMember(Name="hELOCCreditLimit", EmitDefaultValue=false)]
        public string HELOCCreditLimit { get; set; }

        /// <summary>
        /// Gets or Sets LenderAltPhone
        /// </summary>
        [DataMember(Name="lenderAltPhone", EmitDefaultValue=false)]
        public string LenderAltPhone { get; set; }

        /// <summary>
        /// Gets or Sets LenderRegistration
        /// </summary>
        [DataMember(Name="lenderRegistration", EmitDefaultValue=false)]
        public string LenderRegistration { get; set; }

        /// <summary>
        /// Gets or Sets LoanProspectorID
        /// </summary>
        [DataMember(Name="loanProspectorID", EmitDefaultValue=false)]
        public string LoanProspectorID { get; set; }

        /// <summary>
        /// Gets or Sets LoanToConduitCode
        /// </summary>
        [DataMember(Name="loanToConduitCode", EmitDefaultValue=false)]
        public string LoanToConduitCode { get; set; }

        /// <summary>
        /// Gets or Sets LongLegalDescription
        /// </summary>
        [DataMember(Name="longLegalDescription", EmitDefaultValue=false)]
        public string LongLegalDescription { get; set; }

        /// <summary>
        /// Gets or Sets LossCoverage
        /// </summary>
        [DataMember(Name="lossCoverage", EmitDefaultValue=false)]
        public string LossCoverage { get; set; }

        /// <summary>
        /// Gets or Sets LPKeyNumber
        /// </summary>
        [DataMember(Name="lPKeyNumber", EmitDefaultValue=false)]
        public string LPKeyNumber { get; set; }

        /// <summary>
        /// Gets or Sets MIRefundOption
        /// </summary>
        [DataMember(Name="mIRefundOption", EmitDefaultValue=false)]
        public string MIRefundOption { get; set; }

        /// <summary>
        /// Gets or Sets MortgageInsuranceCompany
        /// </summary>
        [DataMember(Name="mortgageInsuranceCompany", EmitDefaultValue=false)]
        public string MortgageInsuranceCompany { get; set; }

        /// <summary>
        /// Gets or Sets NetPurchasePrice
        /// </summary>
        [DataMember(Name="netPurchasePrice", EmitDefaultValue=false)]
        public double? NetPurchasePrice { get; set; }

        /// <summary>
        /// Gets or Sets NewConstructionType
        /// </summary>
        [DataMember(Name="newConstructionType", EmitDefaultValue=false)]
        public string NewConstructionType { get; set; }

        /// <summary>
        /// Gets or Sets NoAppraisalMAF
        /// </summary>
        [DataMember(Name="noAppraisalMAF", EmitDefaultValue=false)]
        public string NoAppraisalMAF { get; set; }

        /// <summary>
        /// Gets or Sets NonOccupantNonHousingDebt
        /// </summary>
        [DataMember(Name="nonOccupantNonHousingDebt", EmitDefaultValue=false)]
        public double? NonOccupantNonHousingDebt { get; set; }

        /// <summary>
        /// Gets or Sets NonOccupantPresentHE
        /// </summary>
        [DataMember(Name="nonOccupantPresentHE", EmitDefaultValue=false)]
        public double? NonOccupantPresentHE { get; set; }

        /// <summary>
        /// Gets or Sets OrderCreditEvaluationIndicator
        /// </summary>
        [DataMember(Name="orderCreditEvaluationIndicator", EmitDefaultValue=false)]
        public bool? OrderCreditEvaluationIndicator { get; set; }

        /// <summary>
        /// Gets or Sets OrderMergedCreditReportIndicator
        /// </summary>
        [DataMember(Name="orderMergedCreditReportIndicator", EmitDefaultValue=false)]
        public bool? OrderMergedCreditReportIndicator { get; set; }

        /// <summary>
        /// Gets or Sets OrderMortgageInsurance
        /// </summary>
        [DataMember(Name="orderMortgageInsurance", EmitDefaultValue=false)]
        public string OrderMortgageInsurance { get; set; }

        /// <summary>
        /// Gets or Sets OrderRiskGradeEvaluationIndicator
        /// </summary>
        [DataMember(Name="orderRiskGradeEvaluationIndicator", EmitDefaultValue=false)]
        public bool? OrderRiskGradeEvaluationIndicator { get; set; }

        /// <summary>
        /// Gets or Sets OriginalIntRate
        /// </summary>
        [DataMember(Name="originalIntRate", EmitDefaultValue=false)]
        public double? OriginalIntRate { get; set; }

        /// <summary>
        /// Gets or Sets OriginateID
        /// </summary>
        [DataMember(Name="originateID", EmitDefaultValue=false)]
        public string OriginateID { get; set; }

        /// <summary>
        /// Gets or Sets PaymentFrequency
        /// </summary>
        [DataMember(Name="paymentFrequency", EmitDefaultValue=false)]
        public string PaymentFrequency { get; set; }

        /// <summary>
        /// Gets or Sets PaymentOption
        /// </summary>
        [DataMember(Name="paymentOption", EmitDefaultValue=false)]
        public string PaymentOption { get; set; }

        /// <summary>
        /// Gets or Sets PersonIncomeForSelfEmployment1
        /// </summary>
        [DataMember(Name="personIncomeForSelfEmployment1", EmitDefaultValue=false)]
        public double? PersonIncomeForSelfEmployment1 { get; set; }

        /// <summary>
        /// Gets or Sets PersonIncomeForSelfEmployment2
        /// </summary>
        [DataMember(Name="personIncomeForSelfEmployment2", EmitDefaultValue=false)]
        public double? PersonIncomeForSelfEmployment2 { get; set; }

        /// <summary>
        /// Gets or Sets PersonPercentOfBusinessOwned1
        /// </summary>
        [DataMember(Name="personPercentOfBusinessOwned1", EmitDefaultValue=false)]
        public int? PersonPercentOfBusinessOwned1 { get; set; }

        /// <summary>
        /// Gets or Sets PersonPercentOfBusinessOwned2
        /// </summary>
        [DataMember(Name="personPercentOfBusinessOwned2", EmitDefaultValue=false)]
        public int? PersonPercentOfBusinessOwned2 { get; set; }

        /// <summary>
        /// Gets or Sets PremiumSource
        /// </summary>
        [DataMember(Name="premiumSource", EmitDefaultValue=false)]
        public string PremiumSource { get; set; }

        /// <summary>
        /// Gets or Sets PresentHousingExpense
        /// </summary>
        [DataMember(Name="presentHousingExpense", EmitDefaultValue=false)]
        public double? PresentHousingExpense { get; set; }

        /// <summary>
        /// Gets or Sets ProcessingPoint
        /// </summary>
        [DataMember(Name="processingPoint", EmitDefaultValue=false)]
        public string ProcessingPoint { get; set; }

        /// <summary>
        /// Gets or Sets PropertyType
        /// </summary>
        [DataMember(Name="propertyType", EmitDefaultValue=false)]
        public string PropertyType { get; set; }

        /// <summary>
        /// Gets or Sets PurposeOfLoan
        /// </summary>
        [DataMember(Name="purposeOfLoan", EmitDefaultValue=false)]
        public string PurposeOfLoan { get; set; }

        /// <summary>
        /// Gets or Sets RenewalOption
        /// </summary>
        [DataMember(Name="renewalOption", EmitDefaultValue=false)]
        public string RenewalOption { get; set; }

        /// <summary>
        /// Gets or Sets RenewalType
        /// </summary>
        [DataMember(Name="renewalType", EmitDefaultValue=false)]
        public string RenewalType { get; set; }

        /// <summary>
        /// Gets or Sets RequiredDocumentType
        /// </summary>
        [DataMember(Name="requiredDocumentType", EmitDefaultValue=false)]
        public string RequiredDocumentType { get; set; }

        /// <summary>
        /// Gets or Sets Reserves
        /// </summary>
        [DataMember(Name="reserves", EmitDefaultValue=false)]
        public double? Reserves { get; set; }

        /// <summary>
        /// Gets or Sets RetailLoanIndicator
        /// </summary>
        [DataMember(Name="retailLoanIndicator", EmitDefaultValue=false)]
        public bool? RetailLoanIndicator { get; set; }

        /// <summary>
        /// Gets or Sets RiskClass
        /// </summary>
        [DataMember(Name="riskClass", EmitDefaultValue=false)]
        public string RiskClass { get; set; }

        /// <summary>
        /// Gets or Sets RiskGradeEvaluationType
        /// </summary>
        [DataMember(Name="riskGradeEvaluationType", EmitDefaultValue=false)]
        public string RiskGradeEvaluationType { get; set; }

        /// <summary>
        /// Gets or Sets SalesConcessions
        /// </summary>
        [DataMember(Name="salesConcessions", EmitDefaultValue=false)]
        public double? SalesConcessions { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryFinancingType
        /// </summary>
        [DataMember(Name="secondaryFinancingType", EmitDefaultValue=false)]
        public string SecondaryFinancingType { get; set; }

        /// <summary>
        /// Gets or Sets SecondTrustRefiIndicator
        /// </summary>
        [DataMember(Name="secondTrustRefiIndicator", EmitDefaultValue=false)]
        public bool? SecondTrustRefiIndicator { get; set; }

        /// <summary>
        /// Gets or Sets SimulatedPITI
        /// </summary>
        [DataMember(Name="simulatedPITI", EmitDefaultValue=false)]
        public double? SimulatedPITI { get; set; }

        /// <summary>
        /// Gets or Sets SizeOfHousehold
        /// </summary>
        [DataMember(Name="sizeOfHousehold", EmitDefaultValue=false)]
        public string SizeOfHousehold { get; set; }

        /// <summary>
        /// Gets or Sets SpecialInstruction1
        /// </summary>
        [DataMember(Name="specialInstruction1", EmitDefaultValue=false)]
        public string SpecialInstruction1 { get; set; }

        /// <summary>
        /// Gets or Sets SpecialInstruction2
        /// </summary>
        [DataMember(Name="specialInstruction2", EmitDefaultValue=false)]
        public string SpecialInstruction2 { get; set; }

        /// <summary>
        /// Gets or Sets SpecialInstruction3
        /// </summary>
        [DataMember(Name="specialInstruction3", EmitDefaultValue=false)]
        public string SpecialInstruction3 { get; set; }

        /// <summary>
        /// Gets or Sets SpecialInstruction4
        /// </summary>
        [DataMember(Name="specialInstruction4", EmitDefaultValue=false)]
        public string SpecialInstruction4 { get; set; }

        /// <summary>
        /// Gets or Sets SpecialInstruction5
        /// </summary>
        [DataMember(Name="specialInstruction5", EmitDefaultValue=false)]
        public string SpecialInstruction5 { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets TransferLoanToConduitIndicator
        /// </summary>
        [DataMember(Name="transferLoanToConduitIndicator", EmitDefaultValue=false)]
        public bool? TransferLoanToConduitIndicator { get; set; }

        /// <summary>
        /// Gets or Sets YearsOfCoverage
        /// </summary>
        [DataMember(Name="yearsOfCoverage", EmitDefaultValue=false)]
        public string YearsOfCoverage { get; set; }

        /// <summary>
        /// Gets or Sets CorrespondentAssignmentID
        /// </summary>
        [DataMember(Name="correspondentAssignmentID", EmitDefaultValue=false)]
        public string CorrespondentAssignmentID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractFreddieMac {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AffordableProduct: ").Append(AffordableProduct).Append("\n");
            sb.Append("  AlimonyAsIncomeReduction: ").Append(AlimonyAsIncomeReduction).Append("\n");
            sb.Append("  AllMonthlyPayments: ").Append(AllMonthlyPayments).Append("\n");
            sb.Append("  AllowsNegativeAmortizationIndicator: ").Append(AllowsNegativeAmortizationIndicator).Append("\n");
            sb.Append("  AmountOfFinancedMI: ").Append(AmountOfFinancedMI).Append("\n");
            sb.Append("  APNCity: ").Append(APNCity).Append("\n");
            sb.Append("  ArmsLengthTransactionIndicator: ").Append(ArmsLengthTransactionIndicator).Append("\n");
            sb.Append("  BorrowerQualifiesAsVeteranIndicator: ").Append(BorrowerQualifiesAsVeteranIndicator).Append("\n");
            sb.Append("  BrokerOriginated: ").Append(BrokerOriginated).Append("\n");
            sb.Append("  BuydownContributor: ").Append(BuydownContributor).Append("\n");
            sb.Append("  CondoClass: ").Append(CondoClass).Append("\n");
            sb.Append("  ConvertibleFeeAmount: ").Append(ConvertibleFeeAmount).Append("\n");
            sb.Append("  ConvertibleFeePercent: ").Append(ConvertibleFeePercent).Append("\n");
            sb.Append("  ConvertibleMaxRateAdjPercent: ").Append(ConvertibleMaxRateAdjPercent).Append("\n");
            sb.Append("  ConvertibleMinRateAdjPercent: ").Append(ConvertibleMinRateAdjPercent).Append("\n");
            sb.Append("  County: ").Append(County).Append("\n");
            sb.Append("  CreditReportCompany: ").Append(CreditReportCompany).Append("\n");
            sb.Append("  FinancingConcessions: ").Append(FinancingConcessions).Append("\n");
            sb.Append("  FreddieFiel11: ").Append(FreddieFiel11).Append("\n");
            sb.Append("  FreddieFiel12: ").Append(FreddieFiel12).Append("\n");
            sb.Append("  FreddieFiel13: ").Append(FreddieFiel13).Append("\n");
            sb.Append("  FreddieFiel14: ").Append(FreddieFiel14).Append("\n");
            sb.Append("  FreddieFiel15: ").Append(FreddieFiel15).Append("\n");
            sb.Append("  FreddieField3: ").Append(FreddieField3).Append("\n");
            sb.Append("  FreddieField7: ").Append(FreddieField7).Append("\n");
            sb.Append("  HELOCActualBalance: ").Append(HELOCActualBalance).Append("\n");
            sb.Append("  HELOCCreditLimit: ").Append(HELOCCreditLimit).Append("\n");
            sb.Append("  LenderAltPhone: ").Append(LenderAltPhone).Append("\n");
            sb.Append("  LenderRegistration: ").Append(LenderRegistration).Append("\n");
            sb.Append("  LoanProspectorID: ").Append(LoanProspectorID).Append("\n");
            sb.Append("  LoanToConduitCode: ").Append(LoanToConduitCode).Append("\n");
            sb.Append("  LongLegalDescription: ").Append(LongLegalDescription).Append("\n");
            sb.Append("  LossCoverage: ").Append(LossCoverage).Append("\n");
            sb.Append("  LPKeyNumber: ").Append(LPKeyNumber).Append("\n");
            sb.Append("  MIRefundOption: ").Append(MIRefundOption).Append("\n");
            sb.Append("  MortgageInsuranceCompany: ").Append(MortgageInsuranceCompany).Append("\n");
            sb.Append("  NetPurchasePrice: ").Append(NetPurchasePrice).Append("\n");
            sb.Append("  NewConstructionType: ").Append(NewConstructionType).Append("\n");
            sb.Append("  NoAppraisalMAF: ").Append(NoAppraisalMAF).Append("\n");
            sb.Append("  NonOccupantNonHousingDebt: ").Append(NonOccupantNonHousingDebt).Append("\n");
            sb.Append("  NonOccupantPresentHE: ").Append(NonOccupantPresentHE).Append("\n");
            sb.Append("  OrderCreditEvaluationIndicator: ").Append(OrderCreditEvaluationIndicator).Append("\n");
            sb.Append("  OrderMergedCreditReportIndicator: ").Append(OrderMergedCreditReportIndicator).Append("\n");
            sb.Append("  OrderMortgageInsurance: ").Append(OrderMortgageInsurance).Append("\n");
            sb.Append("  OrderRiskGradeEvaluationIndicator: ").Append(OrderRiskGradeEvaluationIndicator).Append("\n");
            sb.Append("  OriginalIntRate: ").Append(OriginalIntRate).Append("\n");
            sb.Append("  OriginateID: ").Append(OriginateID).Append("\n");
            sb.Append("  PaymentFrequency: ").Append(PaymentFrequency).Append("\n");
            sb.Append("  PaymentOption: ").Append(PaymentOption).Append("\n");
            sb.Append("  PersonIncomeForSelfEmployment1: ").Append(PersonIncomeForSelfEmployment1).Append("\n");
            sb.Append("  PersonIncomeForSelfEmployment2: ").Append(PersonIncomeForSelfEmployment2).Append("\n");
            sb.Append("  PersonPercentOfBusinessOwned1: ").Append(PersonPercentOfBusinessOwned1).Append("\n");
            sb.Append("  PersonPercentOfBusinessOwned2: ").Append(PersonPercentOfBusinessOwned2).Append("\n");
            sb.Append("  PremiumSource: ").Append(PremiumSource).Append("\n");
            sb.Append("  PresentHousingExpense: ").Append(PresentHousingExpense).Append("\n");
            sb.Append("  ProcessingPoint: ").Append(ProcessingPoint).Append("\n");
            sb.Append("  PropertyType: ").Append(PropertyType).Append("\n");
            sb.Append("  PurposeOfLoan: ").Append(PurposeOfLoan).Append("\n");
            sb.Append("  RenewalOption: ").Append(RenewalOption).Append("\n");
            sb.Append("  RenewalType: ").Append(RenewalType).Append("\n");
            sb.Append("  RequiredDocumentType: ").Append(RequiredDocumentType).Append("\n");
            sb.Append("  Reserves: ").Append(Reserves).Append("\n");
            sb.Append("  RetailLoanIndicator: ").Append(RetailLoanIndicator).Append("\n");
            sb.Append("  RiskClass: ").Append(RiskClass).Append("\n");
            sb.Append("  RiskGradeEvaluationType: ").Append(RiskGradeEvaluationType).Append("\n");
            sb.Append("  SalesConcessions: ").Append(SalesConcessions).Append("\n");
            sb.Append("  SecondaryFinancingType: ").Append(SecondaryFinancingType).Append("\n");
            sb.Append("  SecondTrustRefiIndicator: ").Append(SecondTrustRefiIndicator).Append("\n");
            sb.Append("  SimulatedPITI: ").Append(SimulatedPITI).Append("\n");
            sb.Append("  SizeOfHousehold: ").Append(SizeOfHousehold).Append("\n");
            sb.Append("  SpecialInstruction1: ").Append(SpecialInstruction1).Append("\n");
            sb.Append("  SpecialInstruction2: ").Append(SpecialInstruction2).Append("\n");
            sb.Append("  SpecialInstruction3: ").Append(SpecialInstruction3).Append("\n");
            sb.Append("  SpecialInstruction4: ").Append(SpecialInstruction4).Append("\n");
            sb.Append("  SpecialInstruction5: ").Append(SpecialInstruction5).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  TransferLoanToConduitIndicator: ").Append(TransferLoanToConduitIndicator).Append("\n");
            sb.Append("  YearsOfCoverage: ").Append(YearsOfCoverage).Append("\n");
            sb.Append("  CorrespondentAssignmentID: ").Append(CorrespondentAssignmentID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractFreddieMac);
        }

        /// <summary>
        /// Returns true if LoanContractFreddieMac instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractFreddieMac to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractFreddieMac input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AffordableProduct == input.AffordableProduct ||
                    (this.AffordableProduct != null &&
                    this.AffordableProduct.Equals(input.AffordableProduct))
                ) && 
                (
                    this.AlimonyAsIncomeReduction == input.AlimonyAsIncomeReduction ||
                    (this.AlimonyAsIncomeReduction != null &&
                    this.AlimonyAsIncomeReduction.Equals(input.AlimonyAsIncomeReduction))
                ) && 
                (
                    this.AllMonthlyPayments == input.AllMonthlyPayments ||
                    (this.AllMonthlyPayments != null &&
                    this.AllMonthlyPayments.Equals(input.AllMonthlyPayments))
                ) && 
                (
                    this.AllowsNegativeAmortizationIndicator == input.AllowsNegativeAmortizationIndicator ||
                    (this.AllowsNegativeAmortizationIndicator != null &&
                    this.AllowsNegativeAmortizationIndicator.Equals(input.AllowsNegativeAmortizationIndicator))
                ) && 
                (
                    this.AmountOfFinancedMI == input.AmountOfFinancedMI ||
                    (this.AmountOfFinancedMI != null &&
                    this.AmountOfFinancedMI.Equals(input.AmountOfFinancedMI))
                ) && 
                (
                    this.APNCity == input.APNCity ||
                    (this.APNCity != null &&
                    this.APNCity.Equals(input.APNCity))
                ) && 
                (
                    this.ArmsLengthTransactionIndicator == input.ArmsLengthTransactionIndicator ||
                    (this.ArmsLengthTransactionIndicator != null &&
                    this.ArmsLengthTransactionIndicator.Equals(input.ArmsLengthTransactionIndicator))
                ) && 
                (
                    this.BorrowerQualifiesAsVeteranIndicator == input.BorrowerQualifiesAsVeteranIndicator ||
                    (this.BorrowerQualifiesAsVeteranIndicator != null &&
                    this.BorrowerQualifiesAsVeteranIndicator.Equals(input.BorrowerQualifiesAsVeteranIndicator))
                ) && 
                (
                    this.BrokerOriginated == input.BrokerOriginated ||
                    (this.BrokerOriginated != null &&
                    this.BrokerOriginated.Equals(input.BrokerOriginated))
                ) && 
                (
                    this.BuydownContributor == input.BuydownContributor ||
                    (this.BuydownContributor != null &&
                    this.BuydownContributor.Equals(input.BuydownContributor))
                ) && 
                (
                    this.CondoClass == input.CondoClass ||
                    (this.CondoClass != null &&
                    this.CondoClass.Equals(input.CondoClass))
                ) && 
                (
                    this.ConvertibleFeeAmount == input.ConvertibleFeeAmount ||
                    (this.ConvertibleFeeAmount != null &&
                    this.ConvertibleFeeAmount.Equals(input.ConvertibleFeeAmount))
                ) && 
                (
                    this.ConvertibleFeePercent == input.ConvertibleFeePercent ||
                    (this.ConvertibleFeePercent != null &&
                    this.ConvertibleFeePercent.Equals(input.ConvertibleFeePercent))
                ) && 
                (
                    this.ConvertibleMaxRateAdjPercent == input.ConvertibleMaxRateAdjPercent ||
                    (this.ConvertibleMaxRateAdjPercent != null &&
                    this.ConvertibleMaxRateAdjPercent.Equals(input.ConvertibleMaxRateAdjPercent))
                ) && 
                (
                    this.ConvertibleMinRateAdjPercent == input.ConvertibleMinRateAdjPercent ||
                    (this.ConvertibleMinRateAdjPercent != null &&
                    this.ConvertibleMinRateAdjPercent.Equals(input.ConvertibleMinRateAdjPercent))
                ) && 
                (
                    this.County == input.County ||
                    (this.County != null &&
                    this.County.Equals(input.County))
                ) && 
                (
                    this.CreditReportCompany == input.CreditReportCompany ||
                    (this.CreditReportCompany != null &&
                    this.CreditReportCompany.Equals(input.CreditReportCompany))
                ) && 
                (
                    this.FinancingConcessions == input.FinancingConcessions ||
                    (this.FinancingConcessions != null &&
                    this.FinancingConcessions.Equals(input.FinancingConcessions))
                ) && 
                (
                    this.FreddieFiel11 == input.FreddieFiel11 ||
                    (this.FreddieFiel11 != null &&
                    this.FreddieFiel11.Equals(input.FreddieFiel11))
                ) && 
                (
                    this.FreddieFiel12 == input.FreddieFiel12 ||
                    (this.FreddieFiel12 != null &&
                    this.FreddieFiel12.Equals(input.FreddieFiel12))
                ) && 
                (
                    this.FreddieFiel13 == input.FreddieFiel13 ||
                    (this.FreddieFiel13 != null &&
                    this.FreddieFiel13.Equals(input.FreddieFiel13))
                ) && 
                (
                    this.FreddieFiel14 == input.FreddieFiel14 ||
                    (this.FreddieFiel14 != null &&
                    this.FreddieFiel14.Equals(input.FreddieFiel14))
                ) && 
                (
                    this.FreddieFiel15 == input.FreddieFiel15 ||
                    (this.FreddieFiel15 != null &&
                    this.FreddieFiel15.Equals(input.FreddieFiel15))
                ) && 
                (
                    this.FreddieField3 == input.FreddieField3 ||
                    (this.FreddieField3 != null &&
                    this.FreddieField3.Equals(input.FreddieField3))
                ) && 
                (
                    this.FreddieField7 == input.FreddieField7 ||
                    (this.FreddieField7 != null &&
                    this.FreddieField7.Equals(input.FreddieField7))
                ) && 
                (
                    this.HELOCActualBalance == input.HELOCActualBalance ||
                    (this.HELOCActualBalance != null &&
                    this.HELOCActualBalance.Equals(input.HELOCActualBalance))
                ) && 
                (
                    this.HELOCCreditLimit == input.HELOCCreditLimit ||
                    (this.HELOCCreditLimit != null &&
                    this.HELOCCreditLimit.Equals(input.HELOCCreditLimit))
                ) && 
                (
                    this.LenderAltPhone == input.LenderAltPhone ||
                    (this.LenderAltPhone != null &&
                    this.LenderAltPhone.Equals(input.LenderAltPhone))
                ) && 
                (
                    this.LenderRegistration == input.LenderRegistration ||
                    (this.LenderRegistration != null &&
                    this.LenderRegistration.Equals(input.LenderRegistration))
                ) && 
                (
                    this.LoanProspectorID == input.LoanProspectorID ||
                    (this.LoanProspectorID != null &&
                    this.LoanProspectorID.Equals(input.LoanProspectorID))
                ) && 
                (
                    this.LoanToConduitCode == input.LoanToConduitCode ||
                    (this.LoanToConduitCode != null &&
                    this.LoanToConduitCode.Equals(input.LoanToConduitCode))
                ) && 
                (
                    this.LongLegalDescription == input.LongLegalDescription ||
                    (this.LongLegalDescription != null &&
                    this.LongLegalDescription.Equals(input.LongLegalDescription))
                ) && 
                (
                    this.LossCoverage == input.LossCoverage ||
                    (this.LossCoverage != null &&
                    this.LossCoverage.Equals(input.LossCoverage))
                ) && 
                (
                    this.LPKeyNumber == input.LPKeyNumber ||
                    (this.LPKeyNumber != null &&
                    this.LPKeyNumber.Equals(input.LPKeyNumber))
                ) && 
                (
                    this.MIRefundOption == input.MIRefundOption ||
                    (this.MIRefundOption != null &&
                    this.MIRefundOption.Equals(input.MIRefundOption))
                ) && 
                (
                    this.MortgageInsuranceCompany == input.MortgageInsuranceCompany ||
                    (this.MortgageInsuranceCompany != null &&
                    this.MortgageInsuranceCompany.Equals(input.MortgageInsuranceCompany))
                ) && 
                (
                    this.NetPurchasePrice == input.NetPurchasePrice ||
                    (this.NetPurchasePrice != null &&
                    this.NetPurchasePrice.Equals(input.NetPurchasePrice))
                ) && 
                (
                    this.NewConstructionType == input.NewConstructionType ||
                    (this.NewConstructionType != null &&
                    this.NewConstructionType.Equals(input.NewConstructionType))
                ) && 
                (
                    this.NoAppraisalMAF == input.NoAppraisalMAF ||
                    (this.NoAppraisalMAF != null &&
                    this.NoAppraisalMAF.Equals(input.NoAppraisalMAF))
                ) && 
                (
                    this.NonOccupantNonHousingDebt == input.NonOccupantNonHousingDebt ||
                    (this.NonOccupantNonHousingDebt != null &&
                    this.NonOccupantNonHousingDebt.Equals(input.NonOccupantNonHousingDebt))
                ) && 
                (
                    this.NonOccupantPresentHE == input.NonOccupantPresentHE ||
                    (this.NonOccupantPresentHE != null &&
                    this.NonOccupantPresentHE.Equals(input.NonOccupantPresentHE))
                ) && 
                (
                    this.OrderCreditEvaluationIndicator == input.OrderCreditEvaluationIndicator ||
                    (this.OrderCreditEvaluationIndicator != null &&
                    this.OrderCreditEvaluationIndicator.Equals(input.OrderCreditEvaluationIndicator))
                ) && 
                (
                    this.OrderMergedCreditReportIndicator == input.OrderMergedCreditReportIndicator ||
                    (this.OrderMergedCreditReportIndicator != null &&
                    this.OrderMergedCreditReportIndicator.Equals(input.OrderMergedCreditReportIndicator))
                ) && 
                (
                    this.OrderMortgageInsurance == input.OrderMortgageInsurance ||
                    (this.OrderMortgageInsurance != null &&
                    this.OrderMortgageInsurance.Equals(input.OrderMortgageInsurance))
                ) && 
                (
                    this.OrderRiskGradeEvaluationIndicator == input.OrderRiskGradeEvaluationIndicator ||
                    (this.OrderRiskGradeEvaluationIndicator != null &&
                    this.OrderRiskGradeEvaluationIndicator.Equals(input.OrderRiskGradeEvaluationIndicator))
                ) && 
                (
                    this.OriginalIntRate == input.OriginalIntRate ||
                    (this.OriginalIntRate != null &&
                    this.OriginalIntRate.Equals(input.OriginalIntRate))
                ) && 
                (
                    this.OriginateID == input.OriginateID ||
                    (this.OriginateID != null &&
                    this.OriginateID.Equals(input.OriginateID))
                ) && 
                (
                    this.PaymentFrequency == input.PaymentFrequency ||
                    (this.PaymentFrequency != null &&
                    this.PaymentFrequency.Equals(input.PaymentFrequency))
                ) && 
                (
                    this.PaymentOption == input.PaymentOption ||
                    (this.PaymentOption != null &&
                    this.PaymentOption.Equals(input.PaymentOption))
                ) && 
                (
                    this.PersonIncomeForSelfEmployment1 == input.PersonIncomeForSelfEmployment1 ||
                    (this.PersonIncomeForSelfEmployment1 != null &&
                    this.PersonIncomeForSelfEmployment1.Equals(input.PersonIncomeForSelfEmployment1))
                ) && 
                (
                    this.PersonIncomeForSelfEmployment2 == input.PersonIncomeForSelfEmployment2 ||
                    (this.PersonIncomeForSelfEmployment2 != null &&
                    this.PersonIncomeForSelfEmployment2.Equals(input.PersonIncomeForSelfEmployment2))
                ) && 
                (
                    this.PersonPercentOfBusinessOwned1 == input.PersonPercentOfBusinessOwned1 ||
                    (this.PersonPercentOfBusinessOwned1 != null &&
                    this.PersonPercentOfBusinessOwned1.Equals(input.PersonPercentOfBusinessOwned1))
                ) && 
                (
                    this.PersonPercentOfBusinessOwned2 == input.PersonPercentOfBusinessOwned2 ||
                    (this.PersonPercentOfBusinessOwned2 != null &&
                    this.PersonPercentOfBusinessOwned2.Equals(input.PersonPercentOfBusinessOwned2))
                ) && 
                (
                    this.PremiumSource == input.PremiumSource ||
                    (this.PremiumSource != null &&
                    this.PremiumSource.Equals(input.PremiumSource))
                ) && 
                (
                    this.PresentHousingExpense == input.PresentHousingExpense ||
                    (this.PresentHousingExpense != null &&
                    this.PresentHousingExpense.Equals(input.PresentHousingExpense))
                ) && 
                (
                    this.ProcessingPoint == input.ProcessingPoint ||
                    (this.ProcessingPoint != null &&
                    this.ProcessingPoint.Equals(input.ProcessingPoint))
                ) && 
                (
                    this.PropertyType == input.PropertyType ||
                    (this.PropertyType != null &&
                    this.PropertyType.Equals(input.PropertyType))
                ) && 
                (
                    this.PurposeOfLoan == input.PurposeOfLoan ||
                    (this.PurposeOfLoan != null &&
                    this.PurposeOfLoan.Equals(input.PurposeOfLoan))
                ) && 
                (
                    this.RenewalOption == input.RenewalOption ||
                    (this.RenewalOption != null &&
                    this.RenewalOption.Equals(input.RenewalOption))
                ) && 
                (
                    this.RenewalType == input.RenewalType ||
                    (this.RenewalType != null &&
                    this.RenewalType.Equals(input.RenewalType))
                ) && 
                (
                    this.RequiredDocumentType == input.RequiredDocumentType ||
                    (this.RequiredDocumentType != null &&
                    this.RequiredDocumentType.Equals(input.RequiredDocumentType))
                ) && 
                (
                    this.Reserves == input.Reserves ||
                    (this.Reserves != null &&
                    this.Reserves.Equals(input.Reserves))
                ) && 
                (
                    this.RetailLoanIndicator == input.RetailLoanIndicator ||
                    (this.RetailLoanIndicator != null &&
                    this.RetailLoanIndicator.Equals(input.RetailLoanIndicator))
                ) && 
                (
                    this.RiskClass == input.RiskClass ||
                    (this.RiskClass != null &&
                    this.RiskClass.Equals(input.RiskClass))
                ) && 
                (
                    this.RiskGradeEvaluationType == input.RiskGradeEvaluationType ||
                    (this.RiskGradeEvaluationType != null &&
                    this.RiskGradeEvaluationType.Equals(input.RiskGradeEvaluationType))
                ) && 
                (
                    this.SalesConcessions == input.SalesConcessions ||
                    (this.SalesConcessions != null &&
                    this.SalesConcessions.Equals(input.SalesConcessions))
                ) && 
                (
                    this.SecondaryFinancingType == input.SecondaryFinancingType ||
                    (this.SecondaryFinancingType != null &&
                    this.SecondaryFinancingType.Equals(input.SecondaryFinancingType))
                ) && 
                (
                    this.SecondTrustRefiIndicator == input.SecondTrustRefiIndicator ||
                    (this.SecondTrustRefiIndicator != null &&
                    this.SecondTrustRefiIndicator.Equals(input.SecondTrustRefiIndicator))
                ) && 
                (
                    this.SimulatedPITI == input.SimulatedPITI ||
                    (this.SimulatedPITI != null &&
                    this.SimulatedPITI.Equals(input.SimulatedPITI))
                ) && 
                (
                    this.SizeOfHousehold == input.SizeOfHousehold ||
                    (this.SizeOfHousehold != null &&
                    this.SizeOfHousehold.Equals(input.SizeOfHousehold))
                ) && 
                (
                    this.SpecialInstruction1 == input.SpecialInstruction1 ||
                    (this.SpecialInstruction1 != null &&
                    this.SpecialInstruction1.Equals(input.SpecialInstruction1))
                ) && 
                (
                    this.SpecialInstruction2 == input.SpecialInstruction2 ||
                    (this.SpecialInstruction2 != null &&
                    this.SpecialInstruction2.Equals(input.SpecialInstruction2))
                ) && 
                (
                    this.SpecialInstruction3 == input.SpecialInstruction3 ||
                    (this.SpecialInstruction3 != null &&
                    this.SpecialInstruction3.Equals(input.SpecialInstruction3))
                ) && 
                (
                    this.SpecialInstruction4 == input.SpecialInstruction4 ||
                    (this.SpecialInstruction4 != null &&
                    this.SpecialInstruction4.Equals(input.SpecialInstruction4))
                ) && 
                (
                    this.SpecialInstruction5 == input.SpecialInstruction5 ||
                    (this.SpecialInstruction5 != null &&
                    this.SpecialInstruction5.Equals(input.SpecialInstruction5))
                ) && 
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                ) && 
                (
                    this.TransferLoanToConduitIndicator == input.TransferLoanToConduitIndicator ||
                    (this.TransferLoanToConduitIndicator != null &&
                    this.TransferLoanToConduitIndicator.Equals(input.TransferLoanToConduitIndicator))
                ) && 
                (
                    this.YearsOfCoverage == input.YearsOfCoverage ||
                    (this.YearsOfCoverage != null &&
                    this.YearsOfCoverage.Equals(input.YearsOfCoverage))
                ) && 
                (
                    this.CorrespondentAssignmentID == input.CorrespondentAssignmentID ||
                    (this.CorrespondentAssignmentID != null &&
                    this.CorrespondentAssignmentID.Equals(input.CorrespondentAssignmentID))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AffordableProduct != null)
                    hashCode = hashCode * 59 + this.AffordableProduct.GetHashCode();
                if (this.AlimonyAsIncomeReduction != null)
                    hashCode = hashCode * 59 + this.AlimonyAsIncomeReduction.GetHashCode();
                if (this.AllMonthlyPayments != null)
                    hashCode = hashCode * 59 + this.AllMonthlyPayments.GetHashCode();
                if (this.AllowsNegativeAmortizationIndicator != null)
                    hashCode = hashCode * 59 + this.AllowsNegativeAmortizationIndicator.GetHashCode();
                if (this.AmountOfFinancedMI != null)
                    hashCode = hashCode * 59 + this.AmountOfFinancedMI.GetHashCode();
                if (this.APNCity != null)
                    hashCode = hashCode * 59 + this.APNCity.GetHashCode();
                if (this.ArmsLengthTransactionIndicator != null)
                    hashCode = hashCode * 59 + this.ArmsLengthTransactionIndicator.GetHashCode();
                if (this.BorrowerQualifiesAsVeteranIndicator != null)
                    hashCode = hashCode * 59 + this.BorrowerQualifiesAsVeteranIndicator.GetHashCode();
                if (this.BrokerOriginated != null)
                    hashCode = hashCode * 59 + this.BrokerOriginated.GetHashCode();
                if (this.BuydownContributor != null)
                    hashCode = hashCode * 59 + this.BuydownContributor.GetHashCode();
                if (this.CondoClass != null)
                    hashCode = hashCode * 59 + this.CondoClass.GetHashCode();
                if (this.ConvertibleFeeAmount != null)
                    hashCode = hashCode * 59 + this.ConvertibleFeeAmount.GetHashCode();
                if (this.ConvertibleFeePercent != null)
                    hashCode = hashCode * 59 + this.ConvertibleFeePercent.GetHashCode();
                if (this.ConvertibleMaxRateAdjPercent != null)
                    hashCode = hashCode * 59 + this.ConvertibleMaxRateAdjPercent.GetHashCode();
                if (this.ConvertibleMinRateAdjPercent != null)
                    hashCode = hashCode * 59 + this.ConvertibleMinRateAdjPercent.GetHashCode();
                if (this.County != null)
                    hashCode = hashCode * 59 + this.County.GetHashCode();
                if (this.CreditReportCompany != null)
                    hashCode = hashCode * 59 + this.CreditReportCompany.GetHashCode();
                if (this.FinancingConcessions != null)
                    hashCode = hashCode * 59 + this.FinancingConcessions.GetHashCode();
                if (this.FreddieFiel11 != null)
                    hashCode = hashCode * 59 + this.FreddieFiel11.GetHashCode();
                if (this.FreddieFiel12 != null)
                    hashCode = hashCode * 59 + this.FreddieFiel12.GetHashCode();
                if (this.FreddieFiel13 != null)
                    hashCode = hashCode * 59 + this.FreddieFiel13.GetHashCode();
                if (this.FreddieFiel14 != null)
                    hashCode = hashCode * 59 + this.FreddieFiel14.GetHashCode();
                if (this.FreddieFiel15 != null)
                    hashCode = hashCode * 59 + this.FreddieFiel15.GetHashCode();
                if (this.FreddieField3 != null)
                    hashCode = hashCode * 59 + this.FreddieField3.GetHashCode();
                if (this.FreddieField7 != null)
                    hashCode = hashCode * 59 + this.FreddieField7.GetHashCode();
                if (this.HELOCActualBalance != null)
                    hashCode = hashCode * 59 + this.HELOCActualBalance.GetHashCode();
                if (this.HELOCCreditLimit != null)
                    hashCode = hashCode * 59 + this.HELOCCreditLimit.GetHashCode();
                if (this.LenderAltPhone != null)
                    hashCode = hashCode * 59 + this.LenderAltPhone.GetHashCode();
                if (this.LenderRegistration != null)
                    hashCode = hashCode * 59 + this.LenderRegistration.GetHashCode();
                if (this.LoanProspectorID != null)
                    hashCode = hashCode * 59 + this.LoanProspectorID.GetHashCode();
                if (this.LoanToConduitCode != null)
                    hashCode = hashCode * 59 + this.LoanToConduitCode.GetHashCode();
                if (this.LongLegalDescription != null)
                    hashCode = hashCode * 59 + this.LongLegalDescription.GetHashCode();
                if (this.LossCoverage != null)
                    hashCode = hashCode * 59 + this.LossCoverage.GetHashCode();
                if (this.LPKeyNumber != null)
                    hashCode = hashCode * 59 + this.LPKeyNumber.GetHashCode();
                if (this.MIRefundOption != null)
                    hashCode = hashCode * 59 + this.MIRefundOption.GetHashCode();
                if (this.MortgageInsuranceCompany != null)
                    hashCode = hashCode * 59 + this.MortgageInsuranceCompany.GetHashCode();
                if (this.NetPurchasePrice != null)
                    hashCode = hashCode * 59 + this.NetPurchasePrice.GetHashCode();
                if (this.NewConstructionType != null)
                    hashCode = hashCode * 59 + this.NewConstructionType.GetHashCode();
                if (this.NoAppraisalMAF != null)
                    hashCode = hashCode * 59 + this.NoAppraisalMAF.GetHashCode();
                if (this.NonOccupantNonHousingDebt != null)
                    hashCode = hashCode * 59 + this.NonOccupantNonHousingDebt.GetHashCode();
                if (this.NonOccupantPresentHE != null)
                    hashCode = hashCode * 59 + this.NonOccupantPresentHE.GetHashCode();
                if (this.OrderCreditEvaluationIndicator != null)
                    hashCode = hashCode * 59 + this.OrderCreditEvaluationIndicator.GetHashCode();
                if (this.OrderMergedCreditReportIndicator != null)
                    hashCode = hashCode * 59 + this.OrderMergedCreditReportIndicator.GetHashCode();
                if (this.OrderMortgageInsurance != null)
                    hashCode = hashCode * 59 + this.OrderMortgageInsurance.GetHashCode();
                if (this.OrderRiskGradeEvaluationIndicator != null)
                    hashCode = hashCode * 59 + this.OrderRiskGradeEvaluationIndicator.GetHashCode();
                if (this.OriginalIntRate != null)
                    hashCode = hashCode * 59 + this.OriginalIntRate.GetHashCode();
                if (this.OriginateID != null)
                    hashCode = hashCode * 59 + this.OriginateID.GetHashCode();
                if (this.PaymentFrequency != null)
                    hashCode = hashCode * 59 + this.PaymentFrequency.GetHashCode();
                if (this.PaymentOption != null)
                    hashCode = hashCode * 59 + this.PaymentOption.GetHashCode();
                if (this.PersonIncomeForSelfEmployment1 != null)
                    hashCode = hashCode * 59 + this.PersonIncomeForSelfEmployment1.GetHashCode();
                if (this.PersonIncomeForSelfEmployment2 != null)
                    hashCode = hashCode * 59 + this.PersonIncomeForSelfEmployment2.GetHashCode();
                if (this.PersonPercentOfBusinessOwned1 != null)
                    hashCode = hashCode * 59 + this.PersonPercentOfBusinessOwned1.GetHashCode();
                if (this.PersonPercentOfBusinessOwned2 != null)
                    hashCode = hashCode * 59 + this.PersonPercentOfBusinessOwned2.GetHashCode();
                if (this.PremiumSource != null)
                    hashCode = hashCode * 59 + this.PremiumSource.GetHashCode();
                if (this.PresentHousingExpense != null)
                    hashCode = hashCode * 59 + this.PresentHousingExpense.GetHashCode();
                if (this.ProcessingPoint != null)
                    hashCode = hashCode * 59 + this.ProcessingPoint.GetHashCode();
                if (this.PropertyType != null)
                    hashCode = hashCode * 59 + this.PropertyType.GetHashCode();
                if (this.PurposeOfLoan != null)
                    hashCode = hashCode * 59 + this.PurposeOfLoan.GetHashCode();
                if (this.RenewalOption != null)
                    hashCode = hashCode * 59 + this.RenewalOption.GetHashCode();
                if (this.RenewalType != null)
                    hashCode = hashCode * 59 + this.RenewalType.GetHashCode();
                if (this.RequiredDocumentType != null)
                    hashCode = hashCode * 59 + this.RequiredDocumentType.GetHashCode();
                if (this.Reserves != null)
                    hashCode = hashCode * 59 + this.Reserves.GetHashCode();
                if (this.RetailLoanIndicator != null)
                    hashCode = hashCode * 59 + this.RetailLoanIndicator.GetHashCode();
                if (this.RiskClass != null)
                    hashCode = hashCode * 59 + this.RiskClass.GetHashCode();
                if (this.RiskGradeEvaluationType != null)
                    hashCode = hashCode * 59 + this.RiskGradeEvaluationType.GetHashCode();
                if (this.SalesConcessions != null)
                    hashCode = hashCode * 59 + this.SalesConcessions.GetHashCode();
                if (this.SecondaryFinancingType != null)
                    hashCode = hashCode * 59 + this.SecondaryFinancingType.GetHashCode();
                if (this.SecondTrustRefiIndicator != null)
                    hashCode = hashCode * 59 + this.SecondTrustRefiIndicator.GetHashCode();
                if (this.SimulatedPITI != null)
                    hashCode = hashCode * 59 + this.SimulatedPITI.GetHashCode();
                if (this.SizeOfHousehold != null)
                    hashCode = hashCode * 59 + this.SizeOfHousehold.GetHashCode();
                if (this.SpecialInstruction1 != null)
                    hashCode = hashCode * 59 + this.SpecialInstruction1.GetHashCode();
                if (this.SpecialInstruction2 != null)
                    hashCode = hashCode * 59 + this.SpecialInstruction2.GetHashCode();
                if (this.SpecialInstruction3 != null)
                    hashCode = hashCode * 59 + this.SpecialInstruction3.GetHashCode();
                if (this.SpecialInstruction4 != null)
                    hashCode = hashCode * 59 + this.SpecialInstruction4.GetHashCode();
                if (this.SpecialInstruction5 != null)
                    hashCode = hashCode * 59 + this.SpecialInstruction5.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                if (this.TransferLoanToConduitIndicator != null)
                    hashCode = hashCode * 59 + this.TransferLoanToConduitIndicator.GetHashCode();
                if (this.YearsOfCoverage != null)
                    hashCode = hashCode * 59 + this.YearsOfCoverage.GetHashCode();
                if (this.CorrespondentAssignmentID != null)
                    hashCode = hashCode * 59 + this.CorrespondentAssignmentID.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
