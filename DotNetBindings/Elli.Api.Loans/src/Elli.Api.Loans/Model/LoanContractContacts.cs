/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractContacts
    /// </summary>
    [DataContract]
    public partial class LoanContractContacts :  IEquatable<LoanContractContacts>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets ABA
        /// </summary>
        [DataMember(Name="aBA", EmitDefaultValue=false)]
        public string ABA { get; set; }

        /// <summary>
        /// Gets or Sets AccountName
        /// </summary>
        [DataMember(Name="accountName", EmitDefaultValue=false)]
        public string AccountName { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets Address2
        /// </summary>
        [DataMember(Name="address2", EmitDefaultValue=false)]
        public string Address2 { get; set; }

        /// <summary>
        /// Gets or Sets AddToCdContactInfo
        /// </summary>
        [DataMember(Name="addToCdContactInfo", EmitDefaultValue=false)]
        public bool? AddToCdContactInfo { get; set; }

        /// <summary>
        /// Gets or Sets BizLicenseNumber
        /// </summary>
        [DataMember(Name="bizLicenseNumber", EmitDefaultValue=false)]
        public string BizLicenseNumber { get; set; }

        /// <summary>
        /// Gets or Sets BizLicenseAuthDate
        /// </summary>
        [DataMember(Name="bizLicenseAuthDate", EmitDefaultValue=false)]
        public DateTime? BizLicenseAuthDate { get; set; }

        /// <summary>
        /// Gets or Sets BizLicenseAuthName
        /// </summary>
        [DataMember(Name="bizLicenseAuthName", EmitDefaultValue=false)]
        public string BizLicenseAuthName { get; set; }

        /// <summary>
        /// Gets or Sets BizLicenseAuthStateCode
        /// </summary>
        [DataMember(Name="bizLicenseAuthStateCode", EmitDefaultValue=false)]
        public string BizLicenseAuthStateCode { get; set; }

        /// <summary>
        /// Gets or Sets BizLicenseAuthType
        /// </summary>
        [DataMember(Name="bizLicenseAuthType", EmitDefaultValue=false)]
        public string BizLicenseAuthType { get; set; }

        /// <summary>
        /// Gets or Sets BusinessPhone
        /// </summary>
        [DataMember(Name="businessPhone", EmitDefaultValue=false)]
        public string BusinessPhone { get; set; }

        /// <summary>
        /// Gets or Sets CategoryName
        /// </summary>
        [DataMember(Name="categoryName", EmitDefaultValue=false)]
        public string CategoryName { get; set; }

        /// <summary>
        /// Gets or Sets Cell
        /// </summary>
        [DataMember(Name="cell", EmitDefaultValue=false)]
        public string Cell { get; set; }

        /// <summary>
        /// Gets or Sets CheckConfirmedDate
        /// </summary>
        [DataMember(Name="checkConfirmedDate", EmitDefaultValue=false)]
        public DateTime? CheckConfirmedDate { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name="city", EmitDefaultValue=false)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets Clause
        /// </summary>
        [DataMember(Name="clause", EmitDefaultValue=false)]
        public string Clause { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="comments", EmitDefaultValue=false)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets CompanyId
        /// </summary>
        [DataMember(Name="companyId", EmitDefaultValue=false)]
        public string CompanyId { get; set; }

        /// <summary>
        /// Gets or Sets ContactName
        /// </summary>
        [DataMember(Name="contactName", EmitDefaultValue=false)]
        public string ContactName { get; set; }

        /// <summary>
        /// Gets or Sets ContactNMLSNo
        /// </summary>
        [DataMember(Name="contactNMLSNo", EmitDefaultValue=false)]
        public string ContactNMLSNo { get; set; }

        /// <summary>
        /// Gets or Sets ContactTitle
        /// </summary>
        [DataMember(Name="contactTitle", EmitDefaultValue=false)]
        public string ContactTitle { get; set; }

        /// <summary>
        /// Gets or Sets ContactType
        /// </summary>
        [DataMember(Name="contactType", EmitDefaultValue=false)]
        public string ContactType { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Fax
        /// </summary>
        [DataMember(Name="fax", EmitDefaultValue=false)]
        public string Fax { get; set; }

        /// <summary>
        /// Gets or Sets Fax2
        /// </summary>
        [DataMember(Name="fax2", EmitDefaultValue=false)]
        public string Fax2 { get; set; }

        /// <summary>
        /// Gets or Sets FhaLenderId
        /// </summary>
        [DataMember(Name="fhaLenderId", EmitDefaultValue=false)]
        public string FhaLenderId { get; set; }

        /// <summary>
        /// Gets or Sets InsuranceCertNumber
        /// </summary>
        [DataMember(Name="insuranceCertNumber", EmitDefaultValue=false)]
        public string InsuranceCertNumber { get; set; }

        /// <summary>
        /// Gets or Sets InsuranceCoverageAmount
        /// </summary>
        [DataMember(Name="insuranceCoverageAmount", EmitDefaultValue=false)]
        public double? InsuranceCoverageAmount { get; set; }

        /// <summary>
        /// Gets or Sets InsuranceDeterminationDate
        /// </summary>
        [DataMember(Name="insuranceDeterminationDate", EmitDefaultValue=false)]
        public DateTime? InsuranceDeterminationDate { get; set; }

        /// <summary>
        /// Gets or Sets InsuranceDeterminationNumber
        /// </summary>
        [DataMember(Name="insuranceDeterminationNumber", EmitDefaultValue=false)]
        public string InsuranceDeterminationNumber { get; set; }

        /// <summary>
        /// Gets or Sets InsuranceFloodZone
        /// </summary>
        [DataMember(Name="insuranceFloodZone", EmitDefaultValue=false)]
        public bool? InsuranceFloodZone { get; set; }

        /// <summary>
        /// Gets or Sets InsuranceMap
        /// </summary>
        [DataMember(Name="insuranceMap", EmitDefaultValue=false)]
        public string InsuranceMap { get; set; }

        /// <summary>
        /// Gets or Sets InsuranceNoOfBedrooms
        /// </summary>
        [DataMember(Name="insuranceNoOfBedrooms", EmitDefaultValue=false)]
        public int? InsuranceNoOfBedrooms { get; set; }

        /// <summary>
        /// Gets or Sets InsurancePremium
        /// </summary>
        [DataMember(Name="insurancePremium", EmitDefaultValue=false)]
        public double? InsurancePremium { get; set; }

        /// <summary>
        /// Gets or Sets InsuranceProjectType
        /// </summary>
        [DataMember(Name="insuranceProjectType", EmitDefaultValue=false)]
        public string InsuranceProjectType { get; set; }

        /// <summary>
        /// Gets or Sets InsuranceRenewalDate
        /// </summary>
        [DataMember(Name="insuranceRenewalDate", EmitDefaultValue=false)]
        public DateTime? InsuranceRenewalDate { get; set; }

        /// <summary>
        /// Gets or Sets InvestorGrade1
        /// </summary>
        [DataMember(Name="investorGrade1", EmitDefaultValue=false)]
        public string InvestorGrade1 { get; set; }

        /// <summary>
        /// Gets or Sets InvestorGrade2
        /// </summary>
        [DataMember(Name="investorGrade2", EmitDefaultValue=false)]
        public string InvestorGrade2 { get; set; }

        /// <summary>
        /// Gets or Sets InvestorGrade3
        /// </summary>
        [DataMember(Name="investorGrade3", EmitDefaultValue=false)]
        public string InvestorGrade3 { get; set; }

        /// <summary>
        /// Gets or Sets InvestorName1
        /// </summary>
        [DataMember(Name="investorName1", EmitDefaultValue=false)]
        public string InvestorName1 { get; set; }

        /// <summary>
        /// Gets or Sets InvestorName2
        /// </summary>
        [DataMember(Name="investorName2", EmitDefaultValue=false)]
        public string InvestorName2 { get; set; }

        /// <summary>
        /// Gets or Sets InvestorName3
        /// </summary>
        [DataMember(Name="investorName3", EmitDefaultValue=false)]
        public string InvestorName3 { get; set; }

        /// <summary>
        /// Gets or Sets InvestorScore1
        /// </summary>
        [DataMember(Name="investorScore1", EmitDefaultValue=false)]
        public string InvestorScore1 { get; set; }

        /// <summary>
        /// Gets or Sets InvestorScore2
        /// </summary>
        [DataMember(Name="investorScore2", EmitDefaultValue=false)]
        public string InvestorScore2 { get; set; }

        /// <summary>
        /// Gets or Sets InvestorScore3
        /// </summary>
        [DataMember(Name="investorScore3", EmitDefaultValue=false)]
        public string InvestorScore3 { get; set; }

        /// <summary>
        /// Gets or Sets License
        /// </summary>
        [DataMember(Name="license", EmitDefaultValue=false)]
        public string License { get; set; }

        /// <summary>
        /// Gets or Sets LineItemNumber
        /// </summary>
        [DataMember(Name="lineItemNumber", EmitDefaultValue=false)]
        public string LineItemNumber { get; set; }

        /// <summary>
        /// Gets or Sets LoginId
        /// </summary>
        [DataMember(Name="loginId", EmitDefaultValue=false)]
        public string LoginId { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets NmlsLicense
        /// </summary>
        [DataMember(Name="nmlsLicense", EmitDefaultValue=false)]
        public string NmlsLicense { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationState
        /// </summary>
        [DataMember(Name="organizationState", EmitDefaultValue=false)]
        public string OrganizationState { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationType
        /// </summary>
        [DataMember(Name="organizationType", EmitDefaultValue=false)]
        public string OrganizationType { get; set; }

        /// <summary>
        /// Gets or Sets PersonalLicenseAuthDate
        /// </summary>
        [DataMember(Name="personalLicenseAuthDate", EmitDefaultValue=false)]
        public DateTime? PersonalLicenseAuthDate { get; set; }

        /// <summary>
        /// Gets or Sets PersonalLicenseAuthName
        /// </summary>
        [DataMember(Name="personalLicenseAuthName", EmitDefaultValue=false)]
        public string PersonalLicenseAuthName { get; set; }

        /// <summary>
        /// Gets or Sets PersonalLicenseAuthStateCode
        /// </summary>
        [DataMember(Name="personalLicenseAuthStateCode", EmitDefaultValue=false)]
        public string PersonalLicenseAuthStateCode { get; set; }

        /// <summary>
        /// Gets or Sets PersonalLicenseAuthType
        /// </summary>
        [DataMember(Name="personalLicenseAuthType", EmitDefaultValue=false)]
        public string PersonalLicenseAuthType { get; set; }

        /// <summary>
        /// Gets or Sets PersonalLicenseNumber
        /// </summary>
        [DataMember(Name="personalLicenseNumber", EmitDefaultValue=false)]
        public string PersonalLicenseNumber { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name="phone", EmitDefaultValue=false)]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets Phone2
        /// </summary>
        [DataMember(Name="phone2", EmitDefaultValue=false)]
        public string Phone2 { get; set; }

        /// <summary>
        /// Gets or Sets PostalCode
        /// </summary>
        [DataMember(Name="postalCode", EmitDefaultValue=false)]
        public string PostalCode { get; set; }

        /// <summary>
        /// Gets or Sets RecCity
        /// </summary>
        [DataMember(Name="recCity", EmitDefaultValue=false)]
        public string RecCity { get; set; }

        /// <summary>
        /// Gets or Sets ReferenceNumber
        /// </summary>
        [DataMember(Name="referenceNumber", EmitDefaultValue=false)]
        public string ReferenceNumber { get; set; }

        /// <summary>
        /// Gets or Sets Relationship
        /// </summary>
        [DataMember(Name="relationship", EmitDefaultValue=false)]
        public string Relationship { get; set; }

        /// <summary>
        /// Gets or Sets SettlementAgent
        /// </summary>
        [DataMember(Name="settlementAgent", EmitDefaultValue=false)]
        public bool? SettlementAgent { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets TaxID
        /// </summary>
        [DataMember(Name="taxID", EmitDefaultValue=false)]
        public string TaxID { get; set; }

        /// <summary>
        /// Gets or Sets TqlCommentHistory
        /// </summary>
        [DataMember(Name="tqlCommentHistory", EmitDefaultValue=false)]
        public string TqlCommentHistory { get; set; }

        /// <summary>
        /// Gets or Sets TQLConsentSelection
        /// </summary>
        [DataMember(Name="tQLConsentSelection", EmitDefaultValue=false)]
        public string TQLConsentSelection { get; set; }

        /// <summary>
        /// Gets or Sets TqlId
        /// </summary>
        [DataMember(Name="tqlId", EmitDefaultValue=false)]
        public int? TqlId { get; set; }

        /// <summary>
        /// Gets or Sets TqlIsPublishingIndicator
        /// </summary>
        [DataMember(Name="tqlIsPublishingIndicator", EmitDefaultValue=false)]
        public bool? TqlIsPublishingIndicator { get; set; }

        /// <summary>
        /// Gets or Sets TqlName
        /// </summary>
        [DataMember(Name="tqlName", EmitDefaultValue=false)]
        public string TqlName { get; set; }

        /// <summary>
        /// Gets or Sets LenderType
        /// </summary>
        [DataMember(Name="lenderType", EmitDefaultValue=false)]
        public string LenderType { get; set; }

        /// <summary>
        /// Gets or Sets LicenseHomeState
        /// </summary>
        [DataMember(Name="licenseHomeState", EmitDefaultValue=false)]
        public string LicenseHomeState { get; set; }

        /// <summary>
        /// Gets or Sets LicenseType
        /// </summary>
        [DataMember(Name="licenseType", EmitDefaultValue=false)]
        public string LicenseType { get; set; }

        /// <summary>
        /// Gets or Sets LicenseExempt
        /// </summary>
        [DataMember(Name="licenseExempt", EmitDefaultValue=false)]
        public bool? LicenseExempt { get; set; }

        /// <summary>
        /// Gets or Sets InvestorLicense
        /// </summary>
        [DataMember(Name="investorLicense", EmitDefaultValue=false)]
        public string InvestorLicense { get; set; }

        /// <summary>
        /// Gets or Sets ContactIndex
        /// </summary>
        [DataMember(Name="contactIndex", EmitDefaultValue=false)]
        public int? ContactIndex { get; set; }

        /// <summary>
        /// Gets or Sets BrokerLenderType
        /// </summary>
        [DataMember(Name="brokerLenderType", EmitDefaultValue=false)]
        public string BrokerLenderType { get; set; }

        /// <summary>
        /// Gets or Sets BrokerLicenseType
        /// </summary>
        [DataMember(Name="brokerLicenseType", EmitDefaultValue=false)]
        public string BrokerLicenseType { get; set; }

        /// <summary>
        /// Gets or Sets BrokerLicenseExempt
        /// </summary>
        [DataMember(Name="brokerLicenseExempt", EmitDefaultValue=false)]
        public bool? BrokerLicenseExempt { get; set; }

        /// <summary>
        /// Gets or Sets InvestorLicenseType
        /// </summary>
        [DataMember(Name="investorLicenseType", EmitDefaultValue=false)]
        public string InvestorLicenseType { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerActingAsContractorIndicator
        /// </summary>
        [DataMember(Name="borrowerActingAsContractorIndicator", EmitDefaultValue=false)]
        public bool? BorrowerActingAsContractorIndicator { get; set; }

        /// <summary>
        /// Gets or Sets GeneralLiabilityInsuranceMin
        /// </summary>
        [DataMember(Name="generalLiabilityInsuranceMin", EmitDefaultValue=false)]
        public double? GeneralLiabilityInsuranceMin { get; set; }

        /// <summary>
        /// Gets or Sets EmployerLiabilityInsuranceMin
        /// </summary>
        [DataMember(Name="employerLiabilityInsuranceMin", EmitDefaultValue=false)]
        public double? EmployerLiabilityInsuranceMin { get; set; }

        /// <summary>
        /// Gets or Sets CompletionAffidavitPunchListTotal
        /// </summary>
        [DataMember(Name="completionAffidavitPunchListTotal", EmitDefaultValue=false)]
        public double? CompletionAffidavitPunchListTotal { get; set; }

        /// <summary>
        /// Gets or Sets DesigneeAcceptedDate
        /// </summary>
        [DataMember(Name="designeeAcceptedDate", EmitDefaultValue=false)]
        public DateTime? DesigneeAcceptedDate { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalMade
        /// </summary>
        [DataMember(Name="appraisalMade", EmitDefaultValue=false)]
        public string AppraisalMade { get; set; }

        /// <summary>
        /// Gets or Sets NotNaturalPersonFlag
        /// </summary>
        [DataMember(Name="notNaturalPersonFlag", EmitDefaultValue=false)]
        public bool? NotNaturalPersonFlag { get; set; }

        /// <summary>
        /// Gets or Sets MortgageLenderCompanyWebURL
        /// </summary>
        [DataMember(Name="mortgageLenderCompanyWebURL", EmitDefaultValue=false)]
        public string MortgageLenderCompanyWebURL { get; set; }

        /// <summary>
        /// Gets or Sets MortgageLenderLoanOfficerWebURL
        /// </summary>
        [DataMember(Name="mortgageLenderLoanOfficerWebURL", EmitDefaultValue=false)]
        public string MortgageLenderLoanOfficerWebURL { get; set; }

        /// <summary>
        /// Gets or Sets MortgageBrokerCompanyWebURL
        /// </summary>
        [DataMember(Name="mortgageBrokerCompanyWebURL", EmitDefaultValue=false)]
        public string MortgageBrokerCompanyWebURL { get; set; }

        /// <summary>
        /// Gets or Sets MortgageBrokerLoanOfficerWebURL
        /// </summary>
        [DataMember(Name="mortgageBrokerLoanOfficerWebURL", EmitDefaultValue=false)]
        public string MortgageBrokerLoanOfficerWebURL { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateAgencyWebURL
        /// </summary>
        [DataMember(Name="realEstateAgencyWebURL", EmitDefaultValue=false)]
        public string RealEstateAgencyWebURL { get; set; }

        /// <summary>
        /// Gets or Sets RealEstateAgentWebURL
        /// </summary>
        [DataMember(Name="realEstateAgentWebURL", EmitDefaultValue=false)]
        public string RealEstateAgentWebURL { get; set; }

        /// <summary>
        /// Gets or Sets ClosingCompanyWebURL
        /// </summary>
        [DataMember(Name="closingCompanyWebURL", EmitDefaultValue=false)]
        public string ClosingCompanyWebURL { get; set; }

        /// <summary>
        /// Gets or Sets ClosingAgentWebURL
        /// </summary>
        [DataMember(Name="closingAgentWebURL", EmitDefaultValue=false)]
        public string ClosingAgentWebURL { get; set; }

        /// <summary>
        /// Gets or Sets Contact
        /// </summary>
        [DataMember(Name="contact", EmitDefaultValue=false)]
        public EntityRefContract Contact { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractContacts {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ABA: ").Append(ABA).Append("\n");
            sb.Append("  AccountName: ").Append(AccountName).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  Address2: ").Append(Address2).Append("\n");
            sb.Append("  AddToCdContactInfo: ").Append(AddToCdContactInfo).Append("\n");
            sb.Append("  BizLicenseNumber: ").Append(BizLicenseNumber).Append("\n");
            sb.Append("  BizLicenseAuthDate: ").Append(BizLicenseAuthDate).Append("\n");
            sb.Append("  BizLicenseAuthName: ").Append(BizLicenseAuthName).Append("\n");
            sb.Append("  BizLicenseAuthStateCode: ").Append(BizLicenseAuthStateCode).Append("\n");
            sb.Append("  BizLicenseAuthType: ").Append(BizLicenseAuthType).Append("\n");
            sb.Append("  BusinessPhone: ").Append(BusinessPhone).Append("\n");
            sb.Append("  CategoryName: ").Append(CategoryName).Append("\n");
            sb.Append("  Cell: ").Append(Cell).Append("\n");
            sb.Append("  CheckConfirmedDate: ").Append(CheckConfirmedDate).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  Clause: ").Append(Clause).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  CompanyId: ").Append(CompanyId).Append("\n");
            sb.Append("  ContactName: ").Append(ContactName).Append("\n");
            sb.Append("  ContactNMLSNo: ").Append(ContactNMLSNo).Append("\n");
            sb.Append("  ContactTitle: ").Append(ContactTitle).Append("\n");
            sb.Append("  ContactType: ").Append(ContactType).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("  Fax2: ").Append(Fax2).Append("\n");
            sb.Append("  FhaLenderId: ").Append(FhaLenderId).Append("\n");
            sb.Append("  InsuranceCertNumber: ").Append(InsuranceCertNumber).Append("\n");
            sb.Append("  InsuranceCoverageAmount: ").Append(InsuranceCoverageAmount).Append("\n");
            sb.Append("  InsuranceDeterminationDate: ").Append(InsuranceDeterminationDate).Append("\n");
            sb.Append("  InsuranceDeterminationNumber: ").Append(InsuranceDeterminationNumber).Append("\n");
            sb.Append("  InsuranceFloodZone: ").Append(InsuranceFloodZone).Append("\n");
            sb.Append("  InsuranceMap: ").Append(InsuranceMap).Append("\n");
            sb.Append("  InsuranceNoOfBedrooms: ").Append(InsuranceNoOfBedrooms).Append("\n");
            sb.Append("  InsurancePremium: ").Append(InsurancePremium).Append("\n");
            sb.Append("  InsuranceProjectType: ").Append(InsuranceProjectType).Append("\n");
            sb.Append("  InsuranceRenewalDate: ").Append(InsuranceRenewalDate).Append("\n");
            sb.Append("  InvestorGrade1: ").Append(InvestorGrade1).Append("\n");
            sb.Append("  InvestorGrade2: ").Append(InvestorGrade2).Append("\n");
            sb.Append("  InvestorGrade3: ").Append(InvestorGrade3).Append("\n");
            sb.Append("  InvestorName1: ").Append(InvestorName1).Append("\n");
            sb.Append("  InvestorName2: ").Append(InvestorName2).Append("\n");
            sb.Append("  InvestorName3: ").Append(InvestorName3).Append("\n");
            sb.Append("  InvestorScore1: ").Append(InvestorScore1).Append("\n");
            sb.Append("  InvestorScore2: ").Append(InvestorScore2).Append("\n");
            sb.Append("  InvestorScore3: ").Append(InvestorScore3).Append("\n");
            sb.Append("  License: ").Append(License).Append("\n");
            sb.Append("  LineItemNumber: ").Append(LineItemNumber).Append("\n");
            sb.Append("  LoginId: ").Append(LoginId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  NmlsLicense: ").Append(NmlsLicense).Append("\n");
            sb.Append("  OrganizationState: ").Append(OrganizationState).Append("\n");
            sb.Append("  OrganizationType: ").Append(OrganizationType).Append("\n");
            sb.Append("  PersonalLicenseAuthDate: ").Append(PersonalLicenseAuthDate).Append("\n");
            sb.Append("  PersonalLicenseAuthName: ").Append(PersonalLicenseAuthName).Append("\n");
            sb.Append("  PersonalLicenseAuthStateCode: ").Append(PersonalLicenseAuthStateCode).Append("\n");
            sb.Append("  PersonalLicenseAuthType: ").Append(PersonalLicenseAuthType).Append("\n");
            sb.Append("  PersonalLicenseNumber: ").Append(PersonalLicenseNumber).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  Phone2: ").Append(Phone2).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  RecCity: ").Append(RecCity).Append("\n");
            sb.Append("  ReferenceNumber: ").Append(ReferenceNumber).Append("\n");
            sb.Append("  Relationship: ").Append(Relationship).Append("\n");
            sb.Append("  SettlementAgent: ").Append(SettlementAgent).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  TaxID: ").Append(TaxID).Append("\n");
            sb.Append("  TqlCommentHistory: ").Append(TqlCommentHistory).Append("\n");
            sb.Append("  TQLConsentSelection: ").Append(TQLConsentSelection).Append("\n");
            sb.Append("  TqlId: ").Append(TqlId).Append("\n");
            sb.Append("  TqlIsPublishingIndicator: ").Append(TqlIsPublishingIndicator).Append("\n");
            sb.Append("  TqlName: ").Append(TqlName).Append("\n");
            sb.Append("  LenderType: ").Append(LenderType).Append("\n");
            sb.Append("  LicenseHomeState: ").Append(LicenseHomeState).Append("\n");
            sb.Append("  LicenseType: ").Append(LicenseType).Append("\n");
            sb.Append("  LicenseExempt: ").Append(LicenseExempt).Append("\n");
            sb.Append("  InvestorLicense: ").Append(InvestorLicense).Append("\n");
            sb.Append("  ContactIndex: ").Append(ContactIndex).Append("\n");
            sb.Append("  BrokerLenderType: ").Append(BrokerLenderType).Append("\n");
            sb.Append("  BrokerLicenseType: ").Append(BrokerLicenseType).Append("\n");
            sb.Append("  BrokerLicenseExempt: ").Append(BrokerLicenseExempt).Append("\n");
            sb.Append("  InvestorLicenseType: ").Append(InvestorLicenseType).Append("\n");
            sb.Append("  BorrowerActingAsContractorIndicator: ").Append(BorrowerActingAsContractorIndicator).Append("\n");
            sb.Append("  GeneralLiabilityInsuranceMin: ").Append(GeneralLiabilityInsuranceMin).Append("\n");
            sb.Append("  EmployerLiabilityInsuranceMin: ").Append(EmployerLiabilityInsuranceMin).Append("\n");
            sb.Append("  CompletionAffidavitPunchListTotal: ").Append(CompletionAffidavitPunchListTotal).Append("\n");
            sb.Append("  DesigneeAcceptedDate: ").Append(DesigneeAcceptedDate).Append("\n");
            sb.Append("  AppraisalMade: ").Append(AppraisalMade).Append("\n");
            sb.Append("  NotNaturalPersonFlag: ").Append(NotNaturalPersonFlag).Append("\n");
            sb.Append("  MortgageLenderCompanyWebURL: ").Append(MortgageLenderCompanyWebURL).Append("\n");
            sb.Append("  MortgageLenderLoanOfficerWebURL: ").Append(MortgageLenderLoanOfficerWebURL).Append("\n");
            sb.Append("  MortgageBrokerCompanyWebURL: ").Append(MortgageBrokerCompanyWebURL).Append("\n");
            sb.Append("  MortgageBrokerLoanOfficerWebURL: ").Append(MortgageBrokerLoanOfficerWebURL).Append("\n");
            sb.Append("  RealEstateAgencyWebURL: ").Append(RealEstateAgencyWebURL).Append("\n");
            sb.Append("  RealEstateAgentWebURL: ").Append(RealEstateAgentWebURL).Append("\n");
            sb.Append("  ClosingCompanyWebURL: ").Append(ClosingCompanyWebURL).Append("\n");
            sb.Append("  ClosingAgentWebURL: ").Append(ClosingAgentWebURL).Append("\n");
            sb.Append("  Contact: ").Append(Contact).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractContacts);
        }

        /// <summary>
        /// Returns true if LoanContractContacts instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractContacts to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractContacts input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ABA == input.ABA ||
                    (this.ABA != null &&
                    this.ABA.Equals(input.ABA))
                ) && 
                (
                    this.AccountName == input.AccountName ||
                    (this.AccountName != null &&
                    this.AccountName.Equals(input.AccountName))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.Address2 == input.Address2 ||
                    (this.Address2 != null &&
                    this.Address2.Equals(input.Address2))
                ) && 
                (
                    this.AddToCdContactInfo == input.AddToCdContactInfo ||
                    (this.AddToCdContactInfo != null &&
                    this.AddToCdContactInfo.Equals(input.AddToCdContactInfo))
                ) && 
                (
                    this.BizLicenseNumber == input.BizLicenseNumber ||
                    (this.BizLicenseNumber != null &&
                    this.BizLicenseNumber.Equals(input.BizLicenseNumber))
                ) && 
                (
                    this.BizLicenseAuthDate == input.BizLicenseAuthDate ||
                    (this.BizLicenseAuthDate != null &&
                    this.BizLicenseAuthDate.Equals(input.BizLicenseAuthDate))
                ) && 
                (
                    this.BizLicenseAuthName == input.BizLicenseAuthName ||
                    (this.BizLicenseAuthName != null &&
                    this.BizLicenseAuthName.Equals(input.BizLicenseAuthName))
                ) && 
                (
                    this.BizLicenseAuthStateCode == input.BizLicenseAuthStateCode ||
                    (this.BizLicenseAuthStateCode != null &&
                    this.BizLicenseAuthStateCode.Equals(input.BizLicenseAuthStateCode))
                ) && 
                (
                    this.BizLicenseAuthType == input.BizLicenseAuthType ||
                    (this.BizLicenseAuthType != null &&
                    this.BizLicenseAuthType.Equals(input.BizLicenseAuthType))
                ) && 
                (
                    this.BusinessPhone == input.BusinessPhone ||
                    (this.BusinessPhone != null &&
                    this.BusinessPhone.Equals(input.BusinessPhone))
                ) && 
                (
                    this.CategoryName == input.CategoryName ||
                    (this.CategoryName != null &&
                    this.CategoryName.Equals(input.CategoryName))
                ) && 
                (
                    this.Cell == input.Cell ||
                    (this.Cell != null &&
                    this.Cell.Equals(input.Cell))
                ) && 
                (
                    this.CheckConfirmedDate == input.CheckConfirmedDate ||
                    (this.CheckConfirmedDate != null &&
                    this.CheckConfirmedDate.Equals(input.CheckConfirmedDate))
                ) && 
                (
                    this.City == input.City ||
                    (this.City != null &&
                    this.City.Equals(input.City))
                ) && 
                (
                    this.Clause == input.Clause ||
                    (this.Clause != null &&
                    this.Clause.Equals(input.Clause))
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.CompanyId == input.CompanyId ||
                    (this.CompanyId != null &&
                    this.CompanyId.Equals(input.CompanyId))
                ) && 
                (
                    this.ContactName == input.ContactName ||
                    (this.ContactName != null &&
                    this.ContactName.Equals(input.ContactName))
                ) && 
                (
                    this.ContactNMLSNo == input.ContactNMLSNo ||
                    (this.ContactNMLSNo != null &&
                    this.ContactNMLSNo.Equals(input.ContactNMLSNo))
                ) && 
                (
                    this.ContactTitle == input.ContactTitle ||
                    (this.ContactTitle != null &&
                    this.ContactTitle.Equals(input.ContactTitle))
                ) && 
                (
                    this.ContactType == input.ContactType ||
                    (this.ContactType != null &&
                    this.ContactType.Equals(input.ContactType))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Fax == input.Fax ||
                    (this.Fax != null &&
                    this.Fax.Equals(input.Fax))
                ) && 
                (
                    this.Fax2 == input.Fax2 ||
                    (this.Fax2 != null &&
                    this.Fax2.Equals(input.Fax2))
                ) && 
                (
                    this.FhaLenderId == input.FhaLenderId ||
                    (this.FhaLenderId != null &&
                    this.FhaLenderId.Equals(input.FhaLenderId))
                ) && 
                (
                    this.InsuranceCertNumber == input.InsuranceCertNumber ||
                    (this.InsuranceCertNumber != null &&
                    this.InsuranceCertNumber.Equals(input.InsuranceCertNumber))
                ) && 
                (
                    this.InsuranceCoverageAmount == input.InsuranceCoverageAmount ||
                    (this.InsuranceCoverageAmount != null &&
                    this.InsuranceCoverageAmount.Equals(input.InsuranceCoverageAmount))
                ) && 
                (
                    this.InsuranceDeterminationDate == input.InsuranceDeterminationDate ||
                    (this.InsuranceDeterminationDate != null &&
                    this.InsuranceDeterminationDate.Equals(input.InsuranceDeterminationDate))
                ) && 
                (
                    this.InsuranceDeterminationNumber == input.InsuranceDeterminationNumber ||
                    (this.InsuranceDeterminationNumber != null &&
                    this.InsuranceDeterminationNumber.Equals(input.InsuranceDeterminationNumber))
                ) && 
                (
                    this.InsuranceFloodZone == input.InsuranceFloodZone ||
                    (this.InsuranceFloodZone != null &&
                    this.InsuranceFloodZone.Equals(input.InsuranceFloodZone))
                ) && 
                (
                    this.InsuranceMap == input.InsuranceMap ||
                    (this.InsuranceMap != null &&
                    this.InsuranceMap.Equals(input.InsuranceMap))
                ) && 
                (
                    this.InsuranceNoOfBedrooms == input.InsuranceNoOfBedrooms ||
                    (this.InsuranceNoOfBedrooms != null &&
                    this.InsuranceNoOfBedrooms.Equals(input.InsuranceNoOfBedrooms))
                ) && 
                (
                    this.InsurancePremium == input.InsurancePremium ||
                    (this.InsurancePremium != null &&
                    this.InsurancePremium.Equals(input.InsurancePremium))
                ) && 
                (
                    this.InsuranceProjectType == input.InsuranceProjectType ||
                    (this.InsuranceProjectType != null &&
                    this.InsuranceProjectType.Equals(input.InsuranceProjectType))
                ) && 
                (
                    this.InsuranceRenewalDate == input.InsuranceRenewalDate ||
                    (this.InsuranceRenewalDate != null &&
                    this.InsuranceRenewalDate.Equals(input.InsuranceRenewalDate))
                ) && 
                (
                    this.InvestorGrade1 == input.InvestorGrade1 ||
                    (this.InvestorGrade1 != null &&
                    this.InvestorGrade1.Equals(input.InvestorGrade1))
                ) && 
                (
                    this.InvestorGrade2 == input.InvestorGrade2 ||
                    (this.InvestorGrade2 != null &&
                    this.InvestorGrade2.Equals(input.InvestorGrade2))
                ) && 
                (
                    this.InvestorGrade3 == input.InvestorGrade3 ||
                    (this.InvestorGrade3 != null &&
                    this.InvestorGrade3.Equals(input.InvestorGrade3))
                ) && 
                (
                    this.InvestorName1 == input.InvestorName1 ||
                    (this.InvestorName1 != null &&
                    this.InvestorName1.Equals(input.InvestorName1))
                ) && 
                (
                    this.InvestorName2 == input.InvestorName2 ||
                    (this.InvestorName2 != null &&
                    this.InvestorName2.Equals(input.InvestorName2))
                ) && 
                (
                    this.InvestorName3 == input.InvestorName3 ||
                    (this.InvestorName3 != null &&
                    this.InvestorName3.Equals(input.InvestorName3))
                ) && 
                (
                    this.InvestorScore1 == input.InvestorScore1 ||
                    (this.InvestorScore1 != null &&
                    this.InvestorScore1.Equals(input.InvestorScore1))
                ) && 
                (
                    this.InvestorScore2 == input.InvestorScore2 ||
                    (this.InvestorScore2 != null &&
                    this.InvestorScore2.Equals(input.InvestorScore2))
                ) && 
                (
                    this.InvestorScore3 == input.InvestorScore3 ||
                    (this.InvestorScore3 != null &&
                    this.InvestorScore3.Equals(input.InvestorScore3))
                ) && 
                (
                    this.License == input.License ||
                    (this.License != null &&
                    this.License.Equals(input.License))
                ) && 
                (
                    this.LineItemNumber == input.LineItemNumber ||
                    (this.LineItemNumber != null &&
                    this.LineItemNumber.Equals(input.LineItemNumber))
                ) && 
                (
                    this.LoginId == input.LoginId ||
                    (this.LoginId != null &&
                    this.LoginId.Equals(input.LoginId))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.NmlsLicense == input.NmlsLicense ||
                    (this.NmlsLicense != null &&
                    this.NmlsLicense.Equals(input.NmlsLicense))
                ) && 
                (
                    this.OrganizationState == input.OrganizationState ||
                    (this.OrganizationState != null &&
                    this.OrganizationState.Equals(input.OrganizationState))
                ) && 
                (
                    this.OrganizationType == input.OrganizationType ||
                    (this.OrganizationType != null &&
                    this.OrganizationType.Equals(input.OrganizationType))
                ) && 
                (
                    this.PersonalLicenseAuthDate == input.PersonalLicenseAuthDate ||
                    (this.PersonalLicenseAuthDate != null &&
                    this.PersonalLicenseAuthDate.Equals(input.PersonalLicenseAuthDate))
                ) && 
                (
                    this.PersonalLicenseAuthName == input.PersonalLicenseAuthName ||
                    (this.PersonalLicenseAuthName != null &&
                    this.PersonalLicenseAuthName.Equals(input.PersonalLicenseAuthName))
                ) && 
                (
                    this.PersonalLicenseAuthStateCode == input.PersonalLicenseAuthStateCode ||
                    (this.PersonalLicenseAuthStateCode != null &&
                    this.PersonalLicenseAuthStateCode.Equals(input.PersonalLicenseAuthStateCode))
                ) && 
                (
                    this.PersonalLicenseAuthType == input.PersonalLicenseAuthType ||
                    (this.PersonalLicenseAuthType != null &&
                    this.PersonalLicenseAuthType.Equals(input.PersonalLicenseAuthType))
                ) && 
                (
                    this.PersonalLicenseNumber == input.PersonalLicenseNumber ||
                    (this.PersonalLicenseNumber != null &&
                    this.PersonalLicenseNumber.Equals(input.PersonalLicenseNumber))
                ) && 
                (
                    this.Phone == input.Phone ||
                    (this.Phone != null &&
                    this.Phone.Equals(input.Phone))
                ) && 
                (
                    this.Phone2 == input.Phone2 ||
                    (this.Phone2 != null &&
                    this.Phone2.Equals(input.Phone2))
                ) && 
                (
                    this.PostalCode == input.PostalCode ||
                    (this.PostalCode != null &&
                    this.PostalCode.Equals(input.PostalCode))
                ) && 
                (
                    this.RecCity == input.RecCity ||
                    (this.RecCity != null &&
                    this.RecCity.Equals(input.RecCity))
                ) && 
                (
                    this.ReferenceNumber == input.ReferenceNumber ||
                    (this.ReferenceNumber != null &&
                    this.ReferenceNumber.Equals(input.ReferenceNumber))
                ) && 
                (
                    this.Relationship == input.Relationship ||
                    (this.Relationship != null &&
                    this.Relationship.Equals(input.Relationship))
                ) && 
                (
                    this.SettlementAgent == input.SettlementAgent ||
                    (this.SettlementAgent != null &&
                    this.SettlementAgent.Equals(input.SettlementAgent))
                ) && 
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                ) && 
                (
                    this.TaxID == input.TaxID ||
                    (this.TaxID != null &&
                    this.TaxID.Equals(input.TaxID))
                ) && 
                (
                    this.TqlCommentHistory == input.TqlCommentHistory ||
                    (this.TqlCommentHistory != null &&
                    this.TqlCommentHistory.Equals(input.TqlCommentHistory))
                ) && 
                (
                    this.TQLConsentSelection == input.TQLConsentSelection ||
                    (this.TQLConsentSelection != null &&
                    this.TQLConsentSelection.Equals(input.TQLConsentSelection))
                ) && 
                (
                    this.TqlId == input.TqlId ||
                    (this.TqlId != null &&
                    this.TqlId.Equals(input.TqlId))
                ) && 
                (
                    this.TqlIsPublishingIndicator == input.TqlIsPublishingIndicator ||
                    (this.TqlIsPublishingIndicator != null &&
                    this.TqlIsPublishingIndicator.Equals(input.TqlIsPublishingIndicator))
                ) && 
                (
                    this.TqlName == input.TqlName ||
                    (this.TqlName != null &&
                    this.TqlName.Equals(input.TqlName))
                ) && 
                (
                    this.LenderType == input.LenderType ||
                    (this.LenderType != null &&
                    this.LenderType.Equals(input.LenderType))
                ) && 
                (
                    this.LicenseHomeState == input.LicenseHomeState ||
                    (this.LicenseHomeState != null &&
                    this.LicenseHomeState.Equals(input.LicenseHomeState))
                ) && 
                (
                    this.LicenseType == input.LicenseType ||
                    (this.LicenseType != null &&
                    this.LicenseType.Equals(input.LicenseType))
                ) && 
                (
                    this.LicenseExempt == input.LicenseExempt ||
                    (this.LicenseExempt != null &&
                    this.LicenseExempt.Equals(input.LicenseExempt))
                ) && 
                (
                    this.InvestorLicense == input.InvestorLicense ||
                    (this.InvestorLicense != null &&
                    this.InvestorLicense.Equals(input.InvestorLicense))
                ) && 
                (
                    this.ContactIndex == input.ContactIndex ||
                    (this.ContactIndex != null &&
                    this.ContactIndex.Equals(input.ContactIndex))
                ) && 
                (
                    this.BrokerLenderType == input.BrokerLenderType ||
                    (this.BrokerLenderType != null &&
                    this.BrokerLenderType.Equals(input.BrokerLenderType))
                ) && 
                (
                    this.BrokerLicenseType == input.BrokerLicenseType ||
                    (this.BrokerLicenseType != null &&
                    this.BrokerLicenseType.Equals(input.BrokerLicenseType))
                ) && 
                (
                    this.BrokerLicenseExempt == input.BrokerLicenseExempt ||
                    (this.BrokerLicenseExempt != null &&
                    this.BrokerLicenseExempt.Equals(input.BrokerLicenseExempt))
                ) && 
                (
                    this.InvestorLicenseType == input.InvestorLicenseType ||
                    (this.InvestorLicenseType != null &&
                    this.InvestorLicenseType.Equals(input.InvestorLicenseType))
                ) && 
                (
                    this.BorrowerActingAsContractorIndicator == input.BorrowerActingAsContractorIndicator ||
                    (this.BorrowerActingAsContractorIndicator != null &&
                    this.BorrowerActingAsContractorIndicator.Equals(input.BorrowerActingAsContractorIndicator))
                ) && 
                (
                    this.GeneralLiabilityInsuranceMin == input.GeneralLiabilityInsuranceMin ||
                    (this.GeneralLiabilityInsuranceMin != null &&
                    this.GeneralLiabilityInsuranceMin.Equals(input.GeneralLiabilityInsuranceMin))
                ) && 
                (
                    this.EmployerLiabilityInsuranceMin == input.EmployerLiabilityInsuranceMin ||
                    (this.EmployerLiabilityInsuranceMin != null &&
                    this.EmployerLiabilityInsuranceMin.Equals(input.EmployerLiabilityInsuranceMin))
                ) && 
                (
                    this.CompletionAffidavitPunchListTotal == input.CompletionAffidavitPunchListTotal ||
                    (this.CompletionAffidavitPunchListTotal != null &&
                    this.CompletionAffidavitPunchListTotal.Equals(input.CompletionAffidavitPunchListTotal))
                ) && 
                (
                    this.DesigneeAcceptedDate == input.DesigneeAcceptedDate ||
                    (this.DesigneeAcceptedDate != null &&
                    this.DesigneeAcceptedDate.Equals(input.DesigneeAcceptedDate))
                ) && 
                (
                    this.AppraisalMade == input.AppraisalMade ||
                    (this.AppraisalMade != null &&
                    this.AppraisalMade.Equals(input.AppraisalMade))
                ) && 
                (
                    this.NotNaturalPersonFlag == input.NotNaturalPersonFlag ||
                    (this.NotNaturalPersonFlag != null &&
                    this.NotNaturalPersonFlag.Equals(input.NotNaturalPersonFlag))
                ) && 
                (
                    this.MortgageLenderCompanyWebURL == input.MortgageLenderCompanyWebURL ||
                    (this.MortgageLenderCompanyWebURL != null &&
                    this.MortgageLenderCompanyWebURL.Equals(input.MortgageLenderCompanyWebURL))
                ) && 
                (
                    this.MortgageLenderLoanOfficerWebURL == input.MortgageLenderLoanOfficerWebURL ||
                    (this.MortgageLenderLoanOfficerWebURL != null &&
                    this.MortgageLenderLoanOfficerWebURL.Equals(input.MortgageLenderLoanOfficerWebURL))
                ) && 
                (
                    this.MortgageBrokerCompanyWebURL == input.MortgageBrokerCompanyWebURL ||
                    (this.MortgageBrokerCompanyWebURL != null &&
                    this.MortgageBrokerCompanyWebURL.Equals(input.MortgageBrokerCompanyWebURL))
                ) && 
                (
                    this.MortgageBrokerLoanOfficerWebURL == input.MortgageBrokerLoanOfficerWebURL ||
                    (this.MortgageBrokerLoanOfficerWebURL != null &&
                    this.MortgageBrokerLoanOfficerWebURL.Equals(input.MortgageBrokerLoanOfficerWebURL))
                ) && 
                (
                    this.RealEstateAgencyWebURL == input.RealEstateAgencyWebURL ||
                    (this.RealEstateAgencyWebURL != null &&
                    this.RealEstateAgencyWebURL.Equals(input.RealEstateAgencyWebURL))
                ) && 
                (
                    this.RealEstateAgentWebURL == input.RealEstateAgentWebURL ||
                    (this.RealEstateAgentWebURL != null &&
                    this.RealEstateAgentWebURL.Equals(input.RealEstateAgentWebURL))
                ) && 
                (
                    this.ClosingCompanyWebURL == input.ClosingCompanyWebURL ||
                    (this.ClosingCompanyWebURL != null &&
                    this.ClosingCompanyWebURL.Equals(input.ClosingCompanyWebURL))
                ) && 
                (
                    this.ClosingAgentWebURL == input.ClosingAgentWebURL ||
                    (this.ClosingAgentWebURL != null &&
                    this.ClosingAgentWebURL.Equals(input.ClosingAgentWebURL))
                ) && 
                (
                    this.Contact == input.Contact ||
                    (this.Contact != null &&
                    this.Contact.Equals(input.Contact))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.ABA != null)
                    hashCode = hashCode * 59 + this.ABA.GetHashCode();
                if (this.AccountName != null)
                    hashCode = hashCode * 59 + this.AccountName.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.Address2 != null)
                    hashCode = hashCode * 59 + this.Address2.GetHashCode();
                if (this.AddToCdContactInfo != null)
                    hashCode = hashCode * 59 + this.AddToCdContactInfo.GetHashCode();
                if (this.BizLicenseNumber != null)
                    hashCode = hashCode * 59 + this.BizLicenseNumber.GetHashCode();
                if (this.BizLicenseAuthDate != null)
                    hashCode = hashCode * 59 + this.BizLicenseAuthDate.GetHashCode();
                if (this.BizLicenseAuthName != null)
                    hashCode = hashCode * 59 + this.BizLicenseAuthName.GetHashCode();
                if (this.BizLicenseAuthStateCode != null)
                    hashCode = hashCode * 59 + this.BizLicenseAuthStateCode.GetHashCode();
                if (this.BizLicenseAuthType != null)
                    hashCode = hashCode * 59 + this.BizLicenseAuthType.GetHashCode();
                if (this.BusinessPhone != null)
                    hashCode = hashCode * 59 + this.BusinessPhone.GetHashCode();
                if (this.CategoryName != null)
                    hashCode = hashCode * 59 + this.CategoryName.GetHashCode();
                if (this.Cell != null)
                    hashCode = hashCode * 59 + this.Cell.GetHashCode();
                if (this.CheckConfirmedDate != null)
                    hashCode = hashCode * 59 + this.CheckConfirmedDate.GetHashCode();
                if (this.City != null)
                    hashCode = hashCode * 59 + this.City.GetHashCode();
                if (this.Clause != null)
                    hashCode = hashCode * 59 + this.Clause.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.CompanyId != null)
                    hashCode = hashCode * 59 + this.CompanyId.GetHashCode();
                if (this.ContactName != null)
                    hashCode = hashCode * 59 + this.ContactName.GetHashCode();
                if (this.ContactNMLSNo != null)
                    hashCode = hashCode * 59 + this.ContactNMLSNo.GetHashCode();
                if (this.ContactTitle != null)
                    hashCode = hashCode * 59 + this.ContactTitle.GetHashCode();
                if (this.ContactType != null)
                    hashCode = hashCode * 59 + this.ContactType.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.Fax != null)
                    hashCode = hashCode * 59 + this.Fax.GetHashCode();
                if (this.Fax2 != null)
                    hashCode = hashCode * 59 + this.Fax2.GetHashCode();
                if (this.FhaLenderId != null)
                    hashCode = hashCode * 59 + this.FhaLenderId.GetHashCode();
                if (this.InsuranceCertNumber != null)
                    hashCode = hashCode * 59 + this.InsuranceCertNumber.GetHashCode();
                if (this.InsuranceCoverageAmount != null)
                    hashCode = hashCode * 59 + this.InsuranceCoverageAmount.GetHashCode();
                if (this.InsuranceDeterminationDate != null)
                    hashCode = hashCode * 59 + this.InsuranceDeterminationDate.GetHashCode();
                if (this.InsuranceDeterminationNumber != null)
                    hashCode = hashCode * 59 + this.InsuranceDeterminationNumber.GetHashCode();
                if (this.InsuranceFloodZone != null)
                    hashCode = hashCode * 59 + this.InsuranceFloodZone.GetHashCode();
                if (this.InsuranceMap != null)
                    hashCode = hashCode * 59 + this.InsuranceMap.GetHashCode();
                if (this.InsuranceNoOfBedrooms != null)
                    hashCode = hashCode * 59 + this.InsuranceNoOfBedrooms.GetHashCode();
                if (this.InsurancePremium != null)
                    hashCode = hashCode * 59 + this.InsurancePremium.GetHashCode();
                if (this.InsuranceProjectType != null)
                    hashCode = hashCode * 59 + this.InsuranceProjectType.GetHashCode();
                if (this.InsuranceRenewalDate != null)
                    hashCode = hashCode * 59 + this.InsuranceRenewalDate.GetHashCode();
                if (this.InvestorGrade1 != null)
                    hashCode = hashCode * 59 + this.InvestorGrade1.GetHashCode();
                if (this.InvestorGrade2 != null)
                    hashCode = hashCode * 59 + this.InvestorGrade2.GetHashCode();
                if (this.InvestorGrade3 != null)
                    hashCode = hashCode * 59 + this.InvestorGrade3.GetHashCode();
                if (this.InvestorName1 != null)
                    hashCode = hashCode * 59 + this.InvestorName1.GetHashCode();
                if (this.InvestorName2 != null)
                    hashCode = hashCode * 59 + this.InvestorName2.GetHashCode();
                if (this.InvestorName3 != null)
                    hashCode = hashCode * 59 + this.InvestorName3.GetHashCode();
                if (this.InvestorScore1 != null)
                    hashCode = hashCode * 59 + this.InvestorScore1.GetHashCode();
                if (this.InvestorScore2 != null)
                    hashCode = hashCode * 59 + this.InvestorScore2.GetHashCode();
                if (this.InvestorScore3 != null)
                    hashCode = hashCode * 59 + this.InvestorScore3.GetHashCode();
                if (this.License != null)
                    hashCode = hashCode * 59 + this.License.GetHashCode();
                if (this.LineItemNumber != null)
                    hashCode = hashCode * 59 + this.LineItemNumber.GetHashCode();
                if (this.LoginId != null)
                    hashCode = hashCode * 59 + this.LoginId.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.NmlsLicense != null)
                    hashCode = hashCode * 59 + this.NmlsLicense.GetHashCode();
                if (this.OrganizationState != null)
                    hashCode = hashCode * 59 + this.OrganizationState.GetHashCode();
                if (this.OrganizationType != null)
                    hashCode = hashCode * 59 + this.OrganizationType.GetHashCode();
                if (this.PersonalLicenseAuthDate != null)
                    hashCode = hashCode * 59 + this.PersonalLicenseAuthDate.GetHashCode();
                if (this.PersonalLicenseAuthName != null)
                    hashCode = hashCode * 59 + this.PersonalLicenseAuthName.GetHashCode();
                if (this.PersonalLicenseAuthStateCode != null)
                    hashCode = hashCode * 59 + this.PersonalLicenseAuthStateCode.GetHashCode();
                if (this.PersonalLicenseAuthType != null)
                    hashCode = hashCode * 59 + this.PersonalLicenseAuthType.GetHashCode();
                if (this.PersonalLicenseNumber != null)
                    hashCode = hashCode * 59 + this.PersonalLicenseNumber.GetHashCode();
                if (this.Phone != null)
                    hashCode = hashCode * 59 + this.Phone.GetHashCode();
                if (this.Phone2 != null)
                    hashCode = hashCode * 59 + this.Phone2.GetHashCode();
                if (this.PostalCode != null)
                    hashCode = hashCode * 59 + this.PostalCode.GetHashCode();
                if (this.RecCity != null)
                    hashCode = hashCode * 59 + this.RecCity.GetHashCode();
                if (this.ReferenceNumber != null)
                    hashCode = hashCode * 59 + this.ReferenceNumber.GetHashCode();
                if (this.Relationship != null)
                    hashCode = hashCode * 59 + this.Relationship.GetHashCode();
                if (this.SettlementAgent != null)
                    hashCode = hashCode * 59 + this.SettlementAgent.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                if (this.TaxID != null)
                    hashCode = hashCode * 59 + this.TaxID.GetHashCode();
                if (this.TqlCommentHistory != null)
                    hashCode = hashCode * 59 + this.TqlCommentHistory.GetHashCode();
                if (this.TQLConsentSelection != null)
                    hashCode = hashCode * 59 + this.TQLConsentSelection.GetHashCode();
                if (this.TqlId != null)
                    hashCode = hashCode * 59 + this.TqlId.GetHashCode();
                if (this.TqlIsPublishingIndicator != null)
                    hashCode = hashCode * 59 + this.TqlIsPublishingIndicator.GetHashCode();
                if (this.TqlName != null)
                    hashCode = hashCode * 59 + this.TqlName.GetHashCode();
                if (this.LenderType != null)
                    hashCode = hashCode * 59 + this.LenderType.GetHashCode();
                if (this.LicenseHomeState != null)
                    hashCode = hashCode * 59 + this.LicenseHomeState.GetHashCode();
                if (this.LicenseType != null)
                    hashCode = hashCode * 59 + this.LicenseType.GetHashCode();
                if (this.LicenseExempt != null)
                    hashCode = hashCode * 59 + this.LicenseExempt.GetHashCode();
                if (this.InvestorLicense != null)
                    hashCode = hashCode * 59 + this.InvestorLicense.GetHashCode();
                if (this.ContactIndex != null)
                    hashCode = hashCode * 59 + this.ContactIndex.GetHashCode();
                if (this.BrokerLenderType != null)
                    hashCode = hashCode * 59 + this.BrokerLenderType.GetHashCode();
                if (this.BrokerLicenseType != null)
                    hashCode = hashCode * 59 + this.BrokerLicenseType.GetHashCode();
                if (this.BrokerLicenseExempt != null)
                    hashCode = hashCode * 59 + this.BrokerLicenseExempt.GetHashCode();
                if (this.InvestorLicenseType != null)
                    hashCode = hashCode * 59 + this.InvestorLicenseType.GetHashCode();
                if (this.BorrowerActingAsContractorIndicator != null)
                    hashCode = hashCode * 59 + this.BorrowerActingAsContractorIndicator.GetHashCode();
                if (this.GeneralLiabilityInsuranceMin != null)
                    hashCode = hashCode * 59 + this.GeneralLiabilityInsuranceMin.GetHashCode();
                if (this.EmployerLiabilityInsuranceMin != null)
                    hashCode = hashCode * 59 + this.EmployerLiabilityInsuranceMin.GetHashCode();
                if (this.CompletionAffidavitPunchListTotal != null)
                    hashCode = hashCode * 59 + this.CompletionAffidavitPunchListTotal.GetHashCode();
                if (this.DesigneeAcceptedDate != null)
                    hashCode = hashCode * 59 + this.DesigneeAcceptedDate.GetHashCode();
                if (this.AppraisalMade != null)
                    hashCode = hashCode * 59 + this.AppraisalMade.GetHashCode();
                if (this.NotNaturalPersonFlag != null)
                    hashCode = hashCode * 59 + this.NotNaturalPersonFlag.GetHashCode();
                if (this.MortgageLenderCompanyWebURL != null)
                    hashCode = hashCode * 59 + this.MortgageLenderCompanyWebURL.GetHashCode();
                if (this.MortgageLenderLoanOfficerWebURL != null)
                    hashCode = hashCode * 59 + this.MortgageLenderLoanOfficerWebURL.GetHashCode();
                if (this.MortgageBrokerCompanyWebURL != null)
                    hashCode = hashCode * 59 + this.MortgageBrokerCompanyWebURL.GetHashCode();
                if (this.MortgageBrokerLoanOfficerWebURL != null)
                    hashCode = hashCode * 59 + this.MortgageBrokerLoanOfficerWebURL.GetHashCode();
                if (this.RealEstateAgencyWebURL != null)
                    hashCode = hashCode * 59 + this.RealEstateAgencyWebURL.GetHashCode();
                if (this.RealEstateAgentWebURL != null)
                    hashCode = hashCode * 59 + this.RealEstateAgentWebURL.GetHashCode();
                if (this.ClosingCompanyWebURL != null)
                    hashCode = hashCode * 59 + this.ClosingCompanyWebURL.GetHashCode();
                if (this.ClosingAgentWebURL != null)
                    hashCode = hashCode * 59 + this.ClosingAgentWebURL.GetHashCode();
                if (this.Contact != null)
                    hashCode = hashCode * 59 + this.Contact.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
