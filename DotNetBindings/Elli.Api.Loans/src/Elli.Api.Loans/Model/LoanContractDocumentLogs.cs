/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractDocumentLogs
    /// </summary>
    [DataContract]
    public partial class LoanContractDocumentLogs :  IEquatable<LoanContractDocumentLogs>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets AccessedBy
        /// </summary>
        [DataMember(Name="accessedBy", EmitDefaultValue=false)]
        public string AccessedBy { get; set; }

        /// <summary>
        /// Gets or Sets AccessedDateUtc
        /// </summary>
        [DataMember(Name="accessedDateUtc", EmitDefaultValue=false)]
        public DateTime? AccessedDateUtc { get; set; }

        /// <summary>
        /// Gets or Sets AddedBy
        /// </summary>
        [DataMember(Name="addedBy", EmitDefaultValue=false)]
        public string AddedBy { get; set; }

        /// <summary>
        /// Gets or Sets Alerts
        /// </summary>
        [DataMember(Name="alerts", EmitDefaultValue=false)]
        public List<LoanContractAlerts> Alerts { get; set; }

        /// <summary>
        /// Gets or Sets AllowedRoles
        /// </summary>
        [DataMember(Name="allowedRoles", EmitDefaultValue=false)]
        public List<LoanContractAllowedRoles> AllowedRoles { get; set; }

        /// <summary>
        /// Gets or Sets ArchiveDateUtc
        /// </summary>
        [DataMember(Name="archiveDateUtc", EmitDefaultValue=false)]
        public DateTime? ArchiveDateUtc { get; set; }

        /// <summary>
        /// Gets or Sets ArchivedBy
        /// </summary>
        [DataMember(Name="archivedBy", EmitDefaultValue=false)]
        public string ArchivedBy { get; set; }

        /// <summary>
        /// Gets or Sets ClosingDocumentIndicator
        /// </summary>
        [DataMember(Name="closingDocumentIndicator", EmitDefaultValue=false)]
        public bool? ClosingDocumentIndicator { get; set; }

        /// <summary>
        /// Gets or Sets CommentList
        /// </summary>
        [DataMember(Name="commentList", EmitDefaultValue=false)]
        public List<LoanContractLogRecordCommentList> CommentList { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="comments", EmitDefaultValue=false)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets Company
        /// </summary>
        [DataMember(Name="company", EmitDefaultValue=false)]
        public string Company { get; set; }

        /// <summary>
        /// Gets or Sets Conditions
        /// </summary>
        [DataMember(Name="conditions", EmitDefaultValue=false)]
        public List<LoanContractAllowedRoles> Conditions { get; set; }

        /// <summary>
        /// Gets or Sets DateAddedUtc
        /// </summary>
        [DataMember(Name="dateAddedUtc", EmitDefaultValue=false)]
        public DateTime? DateAddedUtc { get; set; }

        /// <summary>
        /// Gets or Sets DateUtc
        /// </summary>
        [DataMember(Name="dateUtc", EmitDefaultValue=false)]
        public DateTime? DateUtc { get; set; }

        /// <summary>
        /// Gets or Sets DaysDue
        /// </summary>
        [DataMember(Name="daysDue", EmitDefaultValue=false)]
        public int? DaysDue { get; set; }

        /// <summary>
        /// Gets or Sets DaysTillExpire
        /// </summary>
        [DataMember(Name="daysTillExpire", EmitDefaultValue=false)]
        public int? DaysTillExpire { get; set; }

        /// <summary>
        /// Gets or Sets EDisclosureIndicator
        /// </summary>
        [DataMember(Name="eDisclosureIndicator", EmitDefaultValue=false)]
        public bool? EDisclosureIndicator { get; set; }

        /// <summary>
        /// Gets or Sets EPassSignature
        /// </summary>
        [DataMember(Name="ePassSignature", EmitDefaultValue=false)]
        public string EPassSignature { get; set; }

        /// <summary>
        /// Gets or Sets FileAttachmentsMigrated
        /// </summary>
        [DataMember(Name="fileAttachmentsMigrated", EmitDefaultValue=false)]
        public bool? FileAttachmentsMigrated { get; set; }

        /// <summary>
        /// Gets or Sets FileAttachmentReferences
        /// </summary>
        [DataMember(Name="fileAttachmentReferences", EmitDefaultValue=false)]
        public List<LoanContractFileAttachmentReferences> FileAttachmentReferences { get; set; }

        /// <summary>
        /// Gets or Sets Guid
        /// </summary>
        [DataMember(Name="guid", EmitDefaultValue=false)]
        public string Guid { get; set; }

        /// <summary>
        /// Gets or Sets IsEPassIndicator
        /// </summary>
        [DataMember(Name="isEPassIndicator", EmitDefaultValue=false)]
        public bool? IsEPassIndicator { get; set; }

        /// <summary>
        /// Gets or Sets IsSystemSpecificIndicator
        /// </summary>
        [DataMember(Name="isSystemSpecificIndicator", EmitDefaultValue=false)]
        public bool? IsSystemSpecificIndicator { get; set; }

        /// <summary>
        /// Gets or Sets IsThirdPartyDocIndicator
        /// </summary>
        [DataMember(Name="isThirdPartyDocIndicator", EmitDefaultValue=false)]
        public bool? IsThirdPartyDocIndicator { get; set; }

        /// <summary>
        /// Gets or Sets IsTPOWebcenterPortalIndicator
        /// </summary>
        [DataMember(Name="isTPOWebcenterPortalIndicator", EmitDefaultValue=false)]
        public bool? IsTPOWebcenterPortalIndicator { get; set; }

        /// <summary>
        /// Gets or Sets IsWebCenterIndicator
        /// </summary>
        [DataMember(Name="isWebCenterIndicator", EmitDefaultValue=false)]
        public bool? IsWebCenterIndicator { get; set; }

        /// <summary>
        /// Gets or Sets LogRecordIndex
        /// </summary>
        [DataMember(Name="logRecordIndex", EmitDefaultValue=false)]
        public int? LogRecordIndex { get; set; }

        /// <summary>
        /// Gets or Sets OrderDateUtc
        /// </summary>
        [DataMember(Name="orderDateUtc", EmitDefaultValue=false)]
        public DateTime? OrderDateUtc { get; set; }

        /// <summary>
        /// Gets or Sets PairId
        /// </summary>
        [DataMember(Name="pairId", EmitDefaultValue=false)]
        public string PairId { get; set; }

        /// <summary>
        /// Gets or Sets ReceiveDateUtc
        /// </summary>
        [DataMember(Name="receiveDateUtc", EmitDefaultValue=false)]
        public DateTime? ReceiveDateUtc { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedBy
        /// </summary>
        [DataMember(Name="receivedBy", EmitDefaultValue=false)]
        public string ReceivedBy { get; set; }

        /// <summary>
        /// Gets or Sets ReorderDateUtc
        /// </summary>
        [DataMember(Name="reorderDateUtc", EmitDefaultValue=false)]
        public DateTime? ReorderDateUtc { get; set; }

        /// <summary>
        /// Gets or Sets RequestedBy
        /// </summary>
        [DataMember(Name="requestedBy", EmitDefaultValue=false)]
        public string RequestedBy { get; set; }

        /// <summary>
        /// Gets or Sets RerequestedBy
        /// </summary>
        [DataMember(Name="rerequestedBy", EmitDefaultValue=false)]
        public string RerequestedBy { get; set; }

        /// <summary>
        /// Gets or Sets ReviewedBy
        /// </summary>
        [DataMember(Name="reviewedBy", EmitDefaultValue=false)]
        public string ReviewedBy { get; set; }

        /// <summary>
        /// Gets or Sets ReviewedDateUtc
        /// </summary>
        [DataMember(Name="reviewedDateUtc", EmitDefaultValue=false)]
        public DateTime? ReviewedDateUtc { get; set; }

        /// <summary>
        /// Gets or Sets ShippingReadyBy
        /// </summary>
        [DataMember(Name="shippingReadyBy", EmitDefaultValue=false)]
        public string ShippingReadyBy { get; set; }

        /// <summary>
        /// Gets or Sets ShippingReadyDateUtc
        /// </summary>
        [DataMember(Name="shippingReadyDateUtc", EmitDefaultValue=false)]
        public DateTime? ShippingReadyDateUtc { get; set; }

        /// <summary>
        /// Gets or Sets Stage
        /// </summary>
        [DataMember(Name="stage", EmitDefaultValue=false)]
        public string Stage { get; set; }

        /// <summary>
        /// Gets or Sets SystemId
        /// </summary>
        [DataMember(Name="systemId", EmitDefaultValue=false)]
        public string SystemId { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets UnderwritingReadyBy
        /// </summary>
        [DataMember(Name="underwritingReadyBy", EmitDefaultValue=false)]
        public string UnderwritingReadyBy { get; set; }

        /// <summary>
        /// Gets or Sets UnderwritingReadyDateUtc
        /// </summary>
        [DataMember(Name="underwritingReadyDateUtc", EmitDefaultValue=false)]
        public DateTime? UnderwritingReadyDateUtc { get; set; }

        /// <summary>
        /// Gets or Sets DocumentDateTimeType
        /// </summary>
        [DataMember(Name="documentDateTimeType", EmitDefaultValue=false)]
        public Object DocumentDateTimeType { get; set; }

        /// <summary>
        /// Gets or Sets PreClosingDocumentIndicator
        /// </summary>
        [DataMember(Name="preClosingDocumentIndicator", EmitDefaultValue=false)]
        public bool? PreClosingDocumentIndicator { get; set; }

        /// <summary>
        /// Gets or Sets RequestedFrom
        /// </summary>
        [DataMember(Name="requestedFrom", EmitDefaultValue=false)]
        public string RequestedFrom { get; set; }

        /// <summary>
        /// Gets or Sets Requested
        /// </summary>
        [DataMember(Name="requested", EmitDefaultValue=false)]
        public bool? Requested { get; set; }

        /// <summary>
        /// Gets or Sets DateRequested
        /// </summary>
        [DataMember(Name="dateRequested", EmitDefaultValue=false)]
        public DateTime? DateRequested { get; set; }

        /// <summary>
        /// Gets or Sets Rerequested
        /// </summary>
        [DataMember(Name="rerequested", EmitDefaultValue=false)]
        public bool? Rerequested { get; set; }

        /// <summary>
        /// Gets or Sets DateRerequested
        /// </summary>
        [DataMember(Name="dateRerequested", EmitDefaultValue=false)]
        public DateTime? DateRerequested { get; set; }

        /// <summary>
        /// Gets or Sets Received
        /// </summary>
        [DataMember(Name="received", EmitDefaultValue=false)]
        public bool? Received { get; set; }

        /// <summary>
        /// Gets or Sets DateReceived
        /// </summary>
        [DataMember(Name="dateReceived", EmitDefaultValue=false)]
        public DateTime? DateReceived { get; set; }

        /// <summary>
        /// Gets or Sets DateExpected
        /// </summary>
        [DataMember(Name="dateExpected", EmitDefaultValue=false)]
        public DateTime? DateExpected { get; set; }

        /// <summary>
        /// Gets or Sets DateExpires
        /// </summary>
        [DataMember(Name="dateExpires", EmitDefaultValue=false)]
        public DateTime? DateExpires { get; set; }

        /// <summary>
        /// Gets or Sets Expires
        /// </summary>
        [DataMember(Name="expires", EmitDefaultValue=false)]
        public bool? Expires { get; set; }

        /// <summary>
        /// Gets or Sets IsExpired
        /// </summary>
        [DataMember(Name="isExpired", EmitDefaultValue=false)]
        public bool? IsExpired { get; set; }

        /// <summary>
        /// Gets or Sets ShippingReady
        /// </summary>
        [DataMember(Name="shippingReady", EmitDefaultValue=false)]
        public bool? ShippingReady { get; set; }

        /// <summary>
        /// Gets or Sets UnderwritingReady
        /// </summary>
        [DataMember(Name="underwritingReady", EmitDefaultValue=false)]
        public bool? UnderwritingReady { get; set; }

        /// <summary>
        /// Gets or Sets Reviewed
        /// </summary>
        [DataMember(Name="reviewed", EmitDefaultValue=false)]
        public bool? Reviewed { get; set; }

        /// <summary>
        /// Gets or Sets Expected
        /// </summary>
        [DataMember(Name="expected", EmitDefaultValue=false)]
        public bool? Expected { get; set; }

        /// <summary>
        /// Gets or Sets IsPastDue
        /// </summary>
        [DataMember(Name="isPastDue", EmitDefaultValue=false)]
        public bool? IsPastDue { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets ConditionsXml
        /// </summary>
        [DataMember(Name="conditionsXml", EmitDefaultValue=false)]
        public string ConditionsXml { get; set; }

        /// <summary>
        /// Gets or Sets AllowedRolesXml
        /// </summary>
        [DataMember(Name="allowedRolesXml", EmitDefaultValue=false)]
        public string AllowedRolesXml { get; set; }

        /// <summary>
        /// Gets or Sets AllowedRoleDelimitedList
        /// </summary>
        [DataMember(Name="allowedRoleDelimitedList", EmitDefaultValue=false)]
        public string AllowedRoleDelimitedList { get; set; }

        /// <summary>
        /// Gets or Sets FileAttachmentsXml
        /// </summary>
        [DataMember(Name="fileAttachmentsXml", EmitDefaultValue=false)]
        public string FileAttachmentsXml { get; set; }

        /// <summary>
        /// Gets or Sets AlertsXml
        /// </summary>
        [DataMember(Name="alertsXml", EmitDefaultValue=false)]
        public string AlertsXml { get; set; }

        /// <summary>
        /// Gets or Sets CommentListXml
        /// </summary>
        [DataMember(Name="commentListXml", EmitDefaultValue=false)]
        public string CommentListXml { get; set; }

        /// <summary>
        /// Gets or Sets IsExternalIndicator
        /// </summary>
        [DataMember(Name="isExternalIndicator", EmitDefaultValue=false)]
        public bool? IsExternalIndicator { get; set; }

        /// <summary>
        /// Gets or Sets GroupName
        /// </summary>
        [DataMember(Name="groupName", EmitDefaultValue=false)]
        public string GroupName { get; set; }

        /// <summary>
        /// Gets or Sets IsObligationVerification
        /// </summary>
        [DataMember(Name="isObligationVerification", EmitDefaultValue=false)]
        public bool? IsObligationVerification { get; set; }

        /// <summary>
        /// Gets or Sets IsIncomeVerification
        /// </summary>
        [DataMember(Name="isIncomeVerification", EmitDefaultValue=false)]
        public bool? IsIncomeVerification { get; set; }

        /// <summary>
        /// Gets or Sets IsEmploymentVerification
        /// </summary>
        [DataMember(Name="isEmploymentVerification", EmitDefaultValue=false)]
        public bool? IsEmploymentVerification { get; set; }

        /// <summary>
        /// Gets or Sets IsAssetVerification
        /// </summary>
        [DataMember(Name="isAssetVerification", EmitDefaultValue=false)]
        public bool? IsAssetVerification { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets LastAttachmentDateUtc
        /// </summary>
        [DataMember(Name="lastAttachmentDateUtc", EmitDefaultValue=false)]
        public DateTime? LastAttachmentDateUtc { get; set; }

        /// <summary>
        /// Gets or Sets DocVerificationsXml
        /// </summary>
        [DataMember(Name="docVerificationsXml", EmitDefaultValue=false)]
        public string DocVerificationsXml { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedDateUtc
        /// </summary>
        [DataMember(Name="updatedDateUtc", EmitDefaultValue=false)]
        public DateTime? UpdatedDateUtc { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractDocumentLogs {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AccessedBy: ").Append(AccessedBy).Append("\n");
            sb.Append("  AccessedDateUtc: ").Append(AccessedDateUtc).Append("\n");
            sb.Append("  AddedBy: ").Append(AddedBy).Append("\n");
            sb.Append("  Alerts: ").Append(Alerts).Append("\n");
            sb.Append("  AllowedRoles: ").Append(AllowedRoles).Append("\n");
            sb.Append("  ArchiveDateUtc: ").Append(ArchiveDateUtc).Append("\n");
            sb.Append("  ArchivedBy: ").Append(ArchivedBy).Append("\n");
            sb.Append("  ClosingDocumentIndicator: ").Append(ClosingDocumentIndicator).Append("\n");
            sb.Append("  CommentList: ").Append(CommentList).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  Company: ").Append(Company).Append("\n");
            sb.Append("  Conditions: ").Append(Conditions).Append("\n");
            sb.Append("  DateAddedUtc: ").Append(DateAddedUtc).Append("\n");
            sb.Append("  DateUtc: ").Append(DateUtc).Append("\n");
            sb.Append("  DaysDue: ").Append(DaysDue).Append("\n");
            sb.Append("  DaysTillExpire: ").Append(DaysTillExpire).Append("\n");
            sb.Append("  EDisclosureIndicator: ").Append(EDisclosureIndicator).Append("\n");
            sb.Append("  EPassSignature: ").Append(EPassSignature).Append("\n");
            sb.Append("  FileAttachmentsMigrated: ").Append(FileAttachmentsMigrated).Append("\n");
            sb.Append("  FileAttachmentReferences: ").Append(FileAttachmentReferences).Append("\n");
            sb.Append("  Guid: ").Append(Guid).Append("\n");
            sb.Append("  IsEPassIndicator: ").Append(IsEPassIndicator).Append("\n");
            sb.Append("  IsSystemSpecificIndicator: ").Append(IsSystemSpecificIndicator).Append("\n");
            sb.Append("  IsThirdPartyDocIndicator: ").Append(IsThirdPartyDocIndicator).Append("\n");
            sb.Append("  IsTPOWebcenterPortalIndicator: ").Append(IsTPOWebcenterPortalIndicator).Append("\n");
            sb.Append("  IsWebCenterIndicator: ").Append(IsWebCenterIndicator).Append("\n");
            sb.Append("  LogRecordIndex: ").Append(LogRecordIndex).Append("\n");
            sb.Append("  OrderDateUtc: ").Append(OrderDateUtc).Append("\n");
            sb.Append("  PairId: ").Append(PairId).Append("\n");
            sb.Append("  ReceiveDateUtc: ").Append(ReceiveDateUtc).Append("\n");
            sb.Append("  ReceivedBy: ").Append(ReceivedBy).Append("\n");
            sb.Append("  ReorderDateUtc: ").Append(ReorderDateUtc).Append("\n");
            sb.Append("  RequestedBy: ").Append(RequestedBy).Append("\n");
            sb.Append("  RerequestedBy: ").Append(RerequestedBy).Append("\n");
            sb.Append("  ReviewedBy: ").Append(ReviewedBy).Append("\n");
            sb.Append("  ReviewedDateUtc: ").Append(ReviewedDateUtc).Append("\n");
            sb.Append("  ShippingReadyBy: ").Append(ShippingReadyBy).Append("\n");
            sb.Append("  ShippingReadyDateUtc: ").Append(ShippingReadyDateUtc).Append("\n");
            sb.Append("  Stage: ").Append(Stage).Append("\n");
            sb.Append("  SystemId: ").Append(SystemId).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  UnderwritingReadyBy: ").Append(UnderwritingReadyBy).Append("\n");
            sb.Append("  UnderwritingReadyDateUtc: ").Append(UnderwritingReadyDateUtc).Append("\n");
            sb.Append("  DocumentDateTimeType: ").Append(DocumentDateTimeType).Append("\n");
            sb.Append("  PreClosingDocumentIndicator: ").Append(PreClosingDocumentIndicator).Append("\n");
            sb.Append("  RequestedFrom: ").Append(RequestedFrom).Append("\n");
            sb.Append("  Requested: ").Append(Requested).Append("\n");
            sb.Append("  DateRequested: ").Append(DateRequested).Append("\n");
            sb.Append("  Rerequested: ").Append(Rerequested).Append("\n");
            sb.Append("  DateRerequested: ").Append(DateRerequested).Append("\n");
            sb.Append("  Received: ").Append(Received).Append("\n");
            sb.Append("  DateReceived: ").Append(DateReceived).Append("\n");
            sb.Append("  DateExpected: ").Append(DateExpected).Append("\n");
            sb.Append("  DateExpires: ").Append(DateExpires).Append("\n");
            sb.Append("  Expires: ").Append(Expires).Append("\n");
            sb.Append("  IsExpired: ").Append(IsExpired).Append("\n");
            sb.Append("  ShippingReady: ").Append(ShippingReady).Append("\n");
            sb.Append("  UnderwritingReady: ").Append(UnderwritingReady).Append("\n");
            sb.Append("  Reviewed: ").Append(Reviewed).Append("\n");
            sb.Append("  Expected: ").Append(Expected).Append("\n");
            sb.Append("  IsPastDue: ").Append(IsPastDue).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  ConditionsXml: ").Append(ConditionsXml).Append("\n");
            sb.Append("  AllowedRolesXml: ").Append(AllowedRolesXml).Append("\n");
            sb.Append("  AllowedRoleDelimitedList: ").Append(AllowedRoleDelimitedList).Append("\n");
            sb.Append("  FileAttachmentsXml: ").Append(FileAttachmentsXml).Append("\n");
            sb.Append("  AlertsXml: ").Append(AlertsXml).Append("\n");
            sb.Append("  CommentListXml: ").Append(CommentListXml).Append("\n");
            sb.Append("  IsExternalIndicator: ").Append(IsExternalIndicator).Append("\n");
            sb.Append("  GroupName: ").Append(GroupName).Append("\n");
            sb.Append("  IsObligationVerification: ").Append(IsObligationVerification).Append("\n");
            sb.Append("  IsIncomeVerification: ").Append(IsIncomeVerification).Append("\n");
            sb.Append("  IsEmploymentVerification: ").Append(IsEmploymentVerification).Append("\n");
            sb.Append("  IsAssetVerification: ").Append(IsAssetVerification).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  LastAttachmentDateUtc: ").Append(LastAttachmentDateUtc).Append("\n");
            sb.Append("  DocVerificationsXml: ").Append(DocVerificationsXml).Append("\n");
            sb.Append("  UpdatedDateUtc: ").Append(UpdatedDateUtc).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractDocumentLogs);
        }

        /// <summary>
        /// Returns true if LoanContractDocumentLogs instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractDocumentLogs to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractDocumentLogs input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AccessedBy == input.AccessedBy ||
                    (this.AccessedBy != null &&
                    this.AccessedBy.Equals(input.AccessedBy))
                ) && 
                (
                    this.AccessedDateUtc == input.AccessedDateUtc ||
                    (this.AccessedDateUtc != null &&
                    this.AccessedDateUtc.Equals(input.AccessedDateUtc))
                ) && 
                (
                    this.AddedBy == input.AddedBy ||
                    (this.AddedBy != null &&
                    this.AddedBy.Equals(input.AddedBy))
                ) && 
                (
                    this.Alerts == input.Alerts ||
                    this.Alerts != null &&
                    this.Alerts.SequenceEqual(input.Alerts)
                ) && 
                (
                    this.AllowedRoles == input.AllowedRoles ||
                    this.AllowedRoles != null &&
                    this.AllowedRoles.SequenceEqual(input.AllowedRoles)
                ) && 
                (
                    this.ArchiveDateUtc == input.ArchiveDateUtc ||
                    (this.ArchiveDateUtc != null &&
                    this.ArchiveDateUtc.Equals(input.ArchiveDateUtc))
                ) && 
                (
                    this.ArchivedBy == input.ArchivedBy ||
                    (this.ArchivedBy != null &&
                    this.ArchivedBy.Equals(input.ArchivedBy))
                ) && 
                (
                    this.ClosingDocumentIndicator == input.ClosingDocumentIndicator ||
                    (this.ClosingDocumentIndicator != null &&
                    this.ClosingDocumentIndicator.Equals(input.ClosingDocumentIndicator))
                ) && 
                (
                    this.CommentList == input.CommentList ||
                    this.CommentList != null &&
                    this.CommentList.SequenceEqual(input.CommentList)
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.Company == input.Company ||
                    (this.Company != null &&
                    this.Company.Equals(input.Company))
                ) && 
                (
                    this.Conditions == input.Conditions ||
                    this.Conditions != null &&
                    this.Conditions.SequenceEqual(input.Conditions)
                ) && 
                (
                    this.DateAddedUtc == input.DateAddedUtc ||
                    (this.DateAddedUtc != null &&
                    this.DateAddedUtc.Equals(input.DateAddedUtc))
                ) && 
                (
                    this.DateUtc == input.DateUtc ||
                    (this.DateUtc != null &&
                    this.DateUtc.Equals(input.DateUtc))
                ) && 
                (
                    this.DaysDue == input.DaysDue ||
                    (this.DaysDue != null &&
                    this.DaysDue.Equals(input.DaysDue))
                ) && 
                (
                    this.DaysTillExpire == input.DaysTillExpire ||
                    (this.DaysTillExpire != null &&
                    this.DaysTillExpire.Equals(input.DaysTillExpire))
                ) && 
                (
                    this.EDisclosureIndicator == input.EDisclosureIndicator ||
                    (this.EDisclosureIndicator != null &&
                    this.EDisclosureIndicator.Equals(input.EDisclosureIndicator))
                ) && 
                (
                    this.EPassSignature == input.EPassSignature ||
                    (this.EPassSignature != null &&
                    this.EPassSignature.Equals(input.EPassSignature))
                ) && 
                (
                    this.FileAttachmentsMigrated == input.FileAttachmentsMigrated ||
                    (this.FileAttachmentsMigrated != null &&
                    this.FileAttachmentsMigrated.Equals(input.FileAttachmentsMigrated))
                ) && 
                (
                    this.FileAttachmentReferences == input.FileAttachmentReferences ||
                    this.FileAttachmentReferences != null &&
                    this.FileAttachmentReferences.SequenceEqual(input.FileAttachmentReferences)
                ) && 
                (
                    this.Guid == input.Guid ||
                    (this.Guid != null &&
                    this.Guid.Equals(input.Guid))
                ) && 
                (
                    this.IsEPassIndicator == input.IsEPassIndicator ||
                    (this.IsEPassIndicator != null &&
                    this.IsEPassIndicator.Equals(input.IsEPassIndicator))
                ) && 
                (
                    this.IsSystemSpecificIndicator == input.IsSystemSpecificIndicator ||
                    (this.IsSystemSpecificIndicator != null &&
                    this.IsSystemSpecificIndicator.Equals(input.IsSystemSpecificIndicator))
                ) && 
                (
                    this.IsThirdPartyDocIndicator == input.IsThirdPartyDocIndicator ||
                    (this.IsThirdPartyDocIndicator != null &&
                    this.IsThirdPartyDocIndicator.Equals(input.IsThirdPartyDocIndicator))
                ) && 
                (
                    this.IsTPOWebcenterPortalIndicator == input.IsTPOWebcenterPortalIndicator ||
                    (this.IsTPOWebcenterPortalIndicator != null &&
                    this.IsTPOWebcenterPortalIndicator.Equals(input.IsTPOWebcenterPortalIndicator))
                ) && 
                (
                    this.IsWebCenterIndicator == input.IsWebCenterIndicator ||
                    (this.IsWebCenterIndicator != null &&
                    this.IsWebCenterIndicator.Equals(input.IsWebCenterIndicator))
                ) && 
                (
                    this.LogRecordIndex == input.LogRecordIndex ||
                    (this.LogRecordIndex != null &&
                    this.LogRecordIndex.Equals(input.LogRecordIndex))
                ) && 
                (
                    this.OrderDateUtc == input.OrderDateUtc ||
                    (this.OrderDateUtc != null &&
                    this.OrderDateUtc.Equals(input.OrderDateUtc))
                ) && 
                (
                    this.PairId == input.PairId ||
                    (this.PairId != null &&
                    this.PairId.Equals(input.PairId))
                ) && 
                (
                    this.ReceiveDateUtc == input.ReceiveDateUtc ||
                    (this.ReceiveDateUtc != null &&
                    this.ReceiveDateUtc.Equals(input.ReceiveDateUtc))
                ) && 
                (
                    this.ReceivedBy == input.ReceivedBy ||
                    (this.ReceivedBy != null &&
                    this.ReceivedBy.Equals(input.ReceivedBy))
                ) && 
                (
                    this.ReorderDateUtc == input.ReorderDateUtc ||
                    (this.ReorderDateUtc != null &&
                    this.ReorderDateUtc.Equals(input.ReorderDateUtc))
                ) && 
                (
                    this.RequestedBy == input.RequestedBy ||
                    (this.RequestedBy != null &&
                    this.RequestedBy.Equals(input.RequestedBy))
                ) && 
                (
                    this.RerequestedBy == input.RerequestedBy ||
                    (this.RerequestedBy != null &&
                    this.RerequestedBy.Equals(input.RerequestedBy))
                ) && 
                (
                    this.ReviewedBy == input.ReviewedBy ||
                    (this.ReviewedBy != null &&
                    this.ReviewedBy.Equals(input.ReviewedBy))
                ) && 
                (
                    this.ReviewedDateUtc == input.ReviewedDateUtc ||
                    (this.ReviewedDateUtc != null &&
                    this.ReviewedDateUtc.Equals(input.ReviewedDateUtc))
                ) && 
                (
                    this.ShippingReadyBy == input.ShippingReadyBy ||
                    (this.ShippingReadyBy != null &&
                    this.ShippingReadyBy.Equals(input.ShippingReadyBy))
                ) && 
                (
                    this.ShippingReadyDateUtc == input.ShippingReadyDateUtc ||
                    (this.ShippingReadyDateUtc != null &&
                    this.ShippingReadyDateUtc.Equals(input.ShippingReadyDateUtc))
                ) && 
                (
                    this.Stage == input.Stage ||
                    (this.Stage != null &&
                    this.Stage.Equals(input.Stage))
                ) && 
                (
                    this.SystemId == input.SystemId ||
                    (this.SystemId != null &&
                    this.SystemId.Equals(input.SystemId))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.UnderwritingReadyBy == input.UnderwritingReadyBy ||
                    (this.UnderwritingReadyBy != null &&
                    this.UnderwritingReadyBy.Equals(input.UnderwritingReadyBy))
                ) && 
                (
                    this.UnderwritingReadyDateUtc == input.UnderwritingReadyDateUtc ||
                    (this.UnderwritingReadyDateUtc != null &&
                    this.UnderwritingReadyDateUtc.Equals(input.UnderwritingReadyDateUtc))
                ) && 
                (
                    this.DocumentDateTimeType == input.DocumentDateTimeType ||
                    (this.DocumentDateTimeType != null &&
                    this.DocumentDateTimeType.Equals(input.DocumentDateTimeType))
                ) && 
                (
                    this.PreClosingDocumentIndicator == input.PreClosingDocumentIndicator ||
                    (this.PreClosingDocumentIndicator != null &&
                    this.PreClosingDocumentIndicator.Equals(input.PreClosingDocumentIndicator))
                ) && 
                (
                    this.RequestedFrom == input.RequestedFrom ||
                    (this.RequestedFrom != null &&
                    this.RequestedFrom.Equals(input.RequestedFrom))
                ) && 
                (
                    this.Requested == input.Requested ||
                    (this.Requested != null &&
                    this.Requested.Equals(input.Requested))
                ) && 
                (
                    this.DateRequested == input.DateRequested ||
                    (this.DateRequested != null &&
                    this.DateRequested.Equals(input.DateRequested))
                ) && 
                (
                    this.Rerequested == input.Rerequested ||
                    (this.Rerequested != null &&
                    this.Rerequested.Equals(input.Rerequested))
                ) && 
                (
                    this.DateRerequested == input.DateRerequested ||
                    (this.DateRerequested != null &&
                    this.DateRerequested.Equals(input.DateRerequested))
                ) && 
                (
                    this.Received == input.Received ||
                    (this.Received != null &&
                    this.Received.Equals(input.Received))
                ) && 
                (
                    this.DateReceived == input.DateReceived ||
                    (this.DateReceived != null &&
                    this.DateReceived.Equals(input.DateReceived))
                ) && 
                (
                    this.DateExpected == input.DateExpected ||
                    (this.DateExpected != null &&
                    this.DateExpected.Equals(input.DateExpected))
                ) && 
                (
                    this.DateExpires == input.DateExpires ||
                    (this.DateExpires != null &&
                    this.DateExpires.Equals(input.DateExpires))
                ) && 
                (
                    this.Expires == input.Expires ||
                    (this.Expires != null &&
                    this.Expires.Equals(input.Expires))
                ) && 
                (
                    this.IsExpired == input.IsExpired ||
                    (this.IsExpired != null &&
                    this.IsExpired.Equals(input.IsExpired))
                ) && 
                (
                    this.ShippingReady == input.ShippingReady ||
                    (this.ShippingReady != null &&
                    this.ShippingReady.Equals(input.ShippingReady))
                ) && 
                (
                    this.UnderwritingReady == input.UnderwritingReady ||
                    (this.UnderwritingReady != null &&
                    this.UnderwritingReady.Equals(input.UnderwritingReady))
                ) && 
                (
                    this.Reviewed == input.Reviewed ||
                    (this.Reviewed != null &&
                    this.Reviewed.Equals(input.Reviewed))
                ) && 
                (
                    this.Expected == input.Expected ||
                    (this.Expected != null &&
                    this.Expected.Equals(input.Expected))
                ) && 
                (
                    this.IsPastDue == input.IsPastDue ||
                    (this.IsPastDue != null &&
                    this.IsPastDue.Equals(input.IsPastDue))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.ConditionsXml == input.ConditionsXml ||
                    (this.ConditionsXml != null &&
                    this.ConditionsXml.Equals(input.ConditionsXml))
                ) && 
                (
                    this.AllowedRolesXml == input.AllowedRolesXml ||
                    (this.AllowedRolesXml != null &&
                    this.AllowedRolesXml.Equals(input.AllowedRolesXml))
                ) && 
                (
                    this.AllowedRoleDelimitedList == input.AllowedRoleDelimitedList ||
                    (this.AllowedRoleDelimitedList != null &&
                    this.AllowedRoleDelimitedList.Equals(input.AllowedRoleDelimitedList))
                ) && 
                (
                    this.FileAttachmentsXml == input.FileAttachmentsXml ||
                    (this.FileAttachmentsXml != null &&
                    this.FileAttachmentsXml.Equals(input.FileAttachmentsXml))
                ) && 
                (
                    this.AlertsXml == input.AlertsXml ||
                    (this.AlertsXml != null &&
                    this.AlertsXml.Equals(input.AlertsXml))
                ) && 
                (
                    this.CommentListXml == input.CommentListXml ||
                    (this.CommentListXml != null &&
                    this.CommentListXml.Equals(input.CommentListXml))
                ) && 
                (
                    this.IsExternalIndicator == input.IsExternalIndicator ||
                    (this.IsExternalIndicator != null &&
                    this.IsExternalIndicator.Equals(input.IsExternalIndicator))
                ) && 
                (
                    this.GroupName == input.GroupName ||
                    (this.GroupName != null &&
                    this.GroupName.Equals(input.GroupName))
                ) && 
                (
                    this.IsObligationVerification == input.IsObligationVerification ||
                    (this.IsObligationVerification != null &&
                    this.IsObligationVerification.Equals(input.IsObligationVerification))
                ) && 
                (
                    this.IsIncomeVerification == input.IsIncomeVerification ||
                    (this.IsIncomeVerification != null &&
                    this.IsIncomeVerification.Equals(input.IsIncomeVerification))
                ) && 
                (
                    this.IsEmploymentVerification == input.IsEmploymentVerification ||
                    (this.IsEmploymentVerification != null &&
                    this.IsEmploymentVerification.Equals(input.IsEmploymentVerification))
                ) && 
                (
                    this.IsAssetVerification == input.IsAssetVerification ||
                    (this.IsAssetVerification != null &&
                    this.IsAssetVerification.Equals(input.IsAssetVerification))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.LastAttachmentDateUtc == input.LastAttachmentDateUtc ||
                    (this.LastAttachmentDateUtc != null &&
                    this.LastAttachmentDateUtc.Equals(input.LastAttachmentDateUtc))
                ) && 
                (
                    this.DocVerificationsXml == input.DocVerificationsXml ||
                    (this.DocVerificationsXml != null &&
                    this.DocVerificationsXml.Equals(input.DocVerificationsXml))
                ) && 
                (
                    this.UpdatedDateUtc == input.UpdatedDateUtc ||
                    (this.UpdatedDateUtc != null &&
                    this.UpdatedDateUtc.Equals(input.UpdatedDateUtc))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AccessedBy != null)
                    hashCode = hashCode * 59 + this.AccessedBy.GetHashCode();
                if (this.AccessedDateUtc != null)
                    hashCode = hashCode * 59 + this.AccessedDateUtc.GetHashCode();
                if (this.AddedBy != null)
                    hashCode = hashCode * 59 + this.AddedBy.GetHashCode();
                if (this.Alerts != null)
                    hashCode = hashCode * 59 + this.Alerts.GetHashCode();
                if (this.AllowedRoles != null)
                    hashCode = hashCode * 59 + this.AllowedRoles.GetHashCode();
                if (this.ArchiveDateUtc != null)
                    hashCode = hashCode * 59 + this.ArchiveDateUtc.GetHashCode();
                if (this.ArchivedBy != null)
                    hashCode = hashCode * 59 + this.ArchivedBy.GetHashCode();
                if (this.ClosingDocumentIndicator != null)
                    hashCode = hashCode * 59 + this.ClosingDocumentIndicator.GetHashCode();
                if (this.CommentList != null)
                    hashCode = hashCode * 59 + this.CommentList.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.Company != null)
                    hashCode = hashCode * 59 + this.Company.GetHashCode();
                if (this.Conditions != null)
                    hashCode = hashCode * 59 + this.Conditions.GetHashCode();
                if (this.DateAddedUtc != null)
                    hashCode = hashCode * 59 + this.DateAddedUtc.GetHashCode();
                if (this.DateUtc != null)
                    hashCode = hashCode * 59 + this.DateUtc.GetHashCode();
                if (this.DaysDue != null)
                    hashCode = hashCode * 59 + this.DaysDue.GetHashCode();
                if (this.DaysTillExpire != null)
                    hashCode = hashCode * 59 + this.DaysTillExpire.GetHashCode();
                if (this.EDisclosureIndicator != null)
                    hashCode = hashCode * 59 + this.EDisclosureIndicator.GetHashCode();
                if (this.EPassSignature != null)
                    hashCode = hashCode * 59 + this.EPassSignature.GetHashCode();
                if (this.FileAttachmentsMigrated != null)
                    hashCode = hashCode * 59 + this.FileAttachmentsMigrated.GetHashCode();
                if (this.FileAttachmentReferences != null)
                    hashCode = hashCode * 59 + this.FileAttachmentReferences.GetHashCode();
                if (this.Guid != null)
                    hashCode = hashCode * 59 + this.Guid.GetHashCode();
                if (this.IsEPassIndicator != null)
                    hashCode = hashCode * 59 + this.IsEPassIndicator.GetHashCode();
                if (this.IsSystemSpecificIndicator != null)
                    hashCode = hashCode * 59 + this.IsSystemSpecificIndicator.GetHashCode();
                if (this.IsThirdPartyDocIndicator != null)
                    hashCode = hashCode * 59 + this.IsThirdPartyDocIndicator.GetHashCode();
                if (this.IsTPOWebcenterPortalIndicator != null)
                    hashCode = hashCode * 59 + this.IsTPOWebcenterPortalIndicator.GetHashCode();
                if (this.IsWebCenterIndicator != null)
                    hashCode = hashCode * 59 + this.IsWebCenterIndicator.GetHashCode();
                if (this.LogRecordIndex != null)
                    hashCode = hashCode * 59 + this.LogRecordIndex.GetHashCode();
                if (this.OrderDateUtc != null)
                    hashCode = hashCode * 59 + this.OrderDateUtc.GetHashCode();
                if (this.PairId != null)
                    hashCode = hashCode * 59 + this.PairId.GetHashCode();
                if (this.ReceiveDateUtc != null)
                    hashCode = hashCode * 59 + this.ReceiveDateUtc.GetHashCode();
                if (this.ReceivedBy != null)
                    hashCode = hashCode * 59 + this.ReceivedBy.GetHashCode();
                if (this.ReorderDateUtc != null)
                    hashCode = hashCode * 59 + this.ReorderDateUtc.GetHashCode();
                if (this.RequestedBy != null)
                    hashCode = hashCode * 59 + this.RequestedBy.GetHashCode();
                if (this.RerequestedBy != null)
                    hashCode = hashCode * 59 + this.RerequestedBy.GetHashCode();
                if (this.ReviewedBy != null)
                    hashCode = hashCode * 59 + this.ReviewedBy.GetHashCode();
                if (this.ReviewedDateUtc != null)
                    hashCode = hashCode * 59 + this.ReviewedDateUtc.GetHashCode();
                if (this.ShippingReadyBy != null)
                    hashCode = hashCode * 59 + this.ShippingReadyBy.GetHashCode();
                if (this.ShippingReadyDateUtc != null)
                    hashCode = hashCode * 59 + this.ShippingReadyDateUtc.GetHashCode();
                if (this.Stage != null)
                    hashCode = hashCode * 59 + this.Stage.GetHashCode();
                if (this.SystemId != null)
                    hashCode = hashCode * 59 + this.SystemId.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.UnderwritingReadyBy != null)
                    hashCode = hashCode * 59 + this.UnderwritingReadyBy.GetHashCode();
                if (this.UnderwritingReadyDateUtc != null)
                    hashCode = hashCode * 59 + this.UnderwritingReadyDateUtc.GetHashCode();
                if (this.DocumentDateTimeType != null)
                    hashCode = hashCode * 59 + this.DocumentDateTimeType.GetHashCode();
                if (this.PreClosingDocumentIndicator != null)
                    hashCode = hashCode * 59 + this.PreClosingDocumentIndicator.GetHashCode();
                if (this.RequestedFrom != null)
                    hashCode = hashCode * 59 + this.RequestedFrom.GetHashCode();
                if (this.Requested != null)
                    hashCode = hashCode * 59 + this.Requested.GetHashCode();
                if (this.DateRequested != null)
                    hashCode = hashCode * 59 + this.DateRequested.GetHashCode();
                if (this.Rerequested != null)
                    hashCode = hashCode * 59 + this.Rerequested.GetHashCode();
                if (this.DateRerequested != null)
                    hashCode = hashCode * 59 + this.DateRerequested.GetHashCode();
                if (this.Received != null)
                    hashCode = hashCode * 59 + this.Received.GetHashCode();
                if (this.DateReceived != null)
                    hashCode = hashCode * 59 + this.DateReceived.GetHashCode();
                if (this.DateExpected != null)
                    hashCode = hashCode * 59 + this.DateExpected.GetHashCode();
                if (this.DateExpires != null)
                    hashCode = hashCode * 59 + this.DateExpires.GetHashCode();
                if (this.Expires != null)
                    hashCode = hashCode * 59 + this.Expires.GetHashCode();
                if (this.IsExpired != null)
                    hashCode = hashCode * 59 + this.IsExpired.GetHashCode();
                if (this.ShippingReady != null)
                    hashCode = hashCode * 59 + this.ShippingReady.GetHashCode();
                if (this.UnderwritingReady != null)
                    hashCode = hashCode * 59 + this.UnderwritingReady.GetHashCode();
                if (this.Reviewed != null)
                    hashCode = hashCode * 59 + this.Reviewed.GetHashCode();
                if (this.Expected != null)
                    hashCode = hashCode * 59 + this.Expected.GetHashCode();
                if (this.IsPastDue != null)
                    hashCode = hashCode * 59 + this.IsPastDue.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.ConditionsXml != null)
                    hashCode = hashCode * 59 + this.ConditionsXml.GetHashCode();
                if (this.AllowedRolesXml != null)
                    hashCode = hashCode * 59 + this.AllowedRolesXml.GetHashCode();
                if (this.AllowedRoleDelimitedList != null)
                    hashCode = hashCode * 59 + this.AllowedRoleDelimitedList.GetHashCode();
                if (this.FileAttachmentsXml != null)
                    hashCode = hashCode * 59 + this.FileAttachmentsXml.GetHashCode();
                if (this.AlertsXml != null)
                    hashCode = hashCode * 59 + this.AlertsXml.GetHashCode();
                if (this.CommentListXml != null)
                    hashCode = hashCode * 59 + this.CommentListXml.GetHashCode();
                if (this.IsExternalIndicator != null)
                    hashCode = hashCode * 59 + this.IsExternalIndicator.GetHashCode();
                if (this.GroupName != null)
                    hashCode = hashCode * 59 + this.GroupName.GetHashCode();
                if (this.IsObligationVerification != null)
                    hashCode = hashCode * 59 + this.IsObligationVerification.GetHashCode();
                if (this.IsIncomeVerification != null)
                    hashCode = hashCode * 59 + this.IsIncomeVerification.GetHashCode();
                if (this.IsEmploymentVerification != null)
                    hashCode = hashCode * 59 + this.IsEmploymentVerification.GetHashCode();
                if (this.IsAssetVerification != null)
                    hashCode = hashCode * 59 + this.IsAssetVerification.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.LastAttachmentDateUtc != null)
                    hashCode = hashCode * 59 + this.LastAttachmentDateUtc.GetHashCode();
                if (this.DocVerificationsXml != null)
                    hashCode = hashCode * 59 + this.DocVerificationsXml.GetHashCode();
                if (this.UpdatedDateUtc != null)
                    hashCode = hashCode * 59 + this.UpdatedDateUtc.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
