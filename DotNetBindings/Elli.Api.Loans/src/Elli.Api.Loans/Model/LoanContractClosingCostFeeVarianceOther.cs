/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractClosingCostFeeVarianceOther
    /// </summary>
    [DataContract]
    public partial class LoanContractClosingCostFeeVarianceOther :  IEquatable<LoanContractClosingCostFeeVarianceOther>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets ChargesThatCannotDecreaseInitialLE1
        /// </summary>
        [DataMember(Name="chargesThatCannotDecreaseInitialLE1", EmitDefaultValue=false)]
        public DateTime? ChargesThatCannotDecreaseInitialLE1 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesThatCannotDecreaseLE1
        /// </summary>
        [DataMember(Name="chargesThatCannotDecreaseLE1", EmitDefaultValue=false)]
        public DateTime? ChargesThatCannotDecreaseLE1 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesThatCannotDecreaseCD1
        /// </summary>
        [DataMember(Name="chargesThatCannotDecreaseCD1", EmitDefaultValue=false)]
        public DateTime? ChargesThatCannotDecreaseCD1 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesThatCannotIncreaseInitialLE1
        /// </summary>
        [DataMember(Name="chargesThatCannotIncreaseInitialLE1", EmitDefaultValue=false)]
        public DateTime? ChargesThatCannotIncreaseInitialLE1 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesThatCannotIncreaseLE1
        /// </summary>
        [DataMember(Name="chargesThatCannotIncreaseLE1", EmitDefaultValue=false)]
        public DateTime? ChargesThatCannotIncreaseLE1 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesThatCannotIncreaseCD1
        /// </summary>
        [DataMember(Name="chargesThatCannotIncreaseCD1", EmitDefaultValue=false)]
        public DateTime? ChargesThatCannotIncreaseCD1 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesCannotIncrease10InitialLE1
        /// </summary>
        [DataMember(Name="chargesCannotIncrease10InitialLE1", EmitDefaultValue=false)]
        public DateTime? ChargesCannotIncrease10InitialLE1 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesCannotIncrease10LE1
        /// </summary>
        [DataMember(Name="chargesCannotIncrease10LE1", EmitDefaultValue=false)]
        public DateTime? ChargesCannotIncrease10LE1 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesCannotIncrease10CD1
        /// </summary>
        [DataMember(Name="chargesCannotIncrease10CD1", EmitDefaultValue=false)]
        public DateTime? ChargesCannotIncrease10CD1 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesThatCanChangeInitialLE1
        /// </summary>
        [DataMember(Name="chargesThatCanChangeInitialLE1", EmitDefaultValue=false)]
        public DateTime? ChargesThatCanChangeInitialLE1 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesThatCanChangeLE1
        /// </summary>
        [DataMember(Name="chargesThatCanChangeLE1", EmitDefaultValue=false)]
        public DateTime? ChargesThatCanChangeLE1 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesThatCanChangeCD1
        /// </summary>
        [DataMember(Name="chargesThatCanChangeCD1", EmitDefaultValue=false)]
        public DateTime? ChargesThatCanChangeCD1 { get; set; }

        /// <summary>
        /// Gets or Sets GoodFaithAmountInitialLE1
        /// </summary>
        [DataMember(Name="goodFaithAmountInitialLE1", EmitDefaultValue=false)]
        public DateTime? GoodFaithAmountInitialLE1 { get; set; }

        /// <summary>
        /// Gets or Sets RequiredCureAmount
        /// </summary>
        [DataMember(Name="requiredCureAmount", EmitDefaultValue=false)]
        public double? RequiredCureAmount { get; set; }

        /// <summary>
        /// Gets or Sets AppliedCureAmount
        /// </summary>
        [DataMember(Name="appliedCureAmount", EmitDefaultValue=false)]
        public double? AppliedCureAmount { get; set; }

        /// <summary>
        /// Gets or Sets LEInitialGuid
        /// </summary>
        [DataMember(Name="lEInitialGuid", EmitDefaultValue=false)]
        public string LEInitialGuid { get; set; }

        /// <summary>
        /// Gets or Sets LELatestGuid
        /// </summary>
        [DataMember(Name="lELatestGuid", EmitDefaultValue=false)]
        public string LELatestGuid { get; set; }

        /// <summary>
        /// Gets or Sets CDInitialGuid
        /// </summary>
        [DataMember(Name="cDInitialGuid", EmitDefaultValue=false)]
        public string CDInitialGuid { get; set; }

        /// <summary>
        /// Gets or Sets CDLatestGuid
        /// </summary>
        [DataMember(Name="cDLatestGuid", EmitDefaultValue=false)]
        public string CDLatestGuid { get; set; }

        /// <summary>
        /// Gets or Sets CannotDecreaseLEBaselineGuid
        /// </summary>
        [DataMember(Name="cannotDecreaseLEBaselineGuid", EmitDefaultValue=false)]
        public string CannotDecreaseLEBaselineGuid { get; set; }

        /// <summary>
        /// Gets or Sets CannotDecreaseCDBaselineGuid
        /// </summary>
        [DataMember(Name="cannotDecreaseCDBaselineGuid", EmitDefaultValue=false)]
        public string CannotDecreaseCDBaselineGuid { get; set; }

        /// <summary>
        /// Gets or Sets CannotIncreaseLEBaselineGuid
        /// </summary>
        [DataMember(Name="cannotIncreaseLEBaselineGuid", EmitDefaultValue=false)]
        public string CannotIncreaseLEBaselineGuid { get; set; }

        /// <summary>
        /// Gets or Sets CannotIncreaseCDBaselineGuid
        /// </summary>
        [DataMember(Name="cannotIncreaseCDBaselineGuid", EmitDefaultValue=false)]
        public string CannotIncreaseCDBaselineGuid { get; set; }

        /// <summary>
        /// Gets or Sets CannotIncrease10LEBaselineGuid
        /// </summary>
        [DataMember(Name="cannotIncrease10LEBaselineGuid", EmitDefaultValue=false)]
        public string CannotIncrease10LEBaselineGuid { get; set; }

        /// <summary>
        /// Gets or Sets CannotIncrease10CDBaselineGuid
        /// </summary>
        [DataMember(Name="cannotIncrease10CDBaselineGuid", EmitDefaultValue=false)]
        public string CannotIncrease10CDBaselineGuid { get; set; }

        /// <summary>
        /// Gets or Sets CDPostConGuid
        /// </summary>
        [DataMember(Name="cDPostConGuid", EmitDefaultValue=false)]
        public string CDPostConGuid { get; set; }

        /// <summary>
        /// Gets or Sets SafeHarborGuid
        /// </summary>
        [DataMember(Name="safeHarborGuid", EmitDefaultValue=false)]
        public string SafeHarborGuid { get; set; }

        /// <summary>
        /// Gets or Sets SSPLGuid
        /// </summary>
        [DataMember(Name="sSPLGuid", EmitDefaultValue=false)]
        public string SSPLGuid { get; set; }

        /// <summary>
        /// Gets or Sets LEBaselineUsedCannotDecrease
        /// </summary>
        [DataMember(Name="lEBaselineUsedCannotDecrease", EmitDefaultValue=false)]
        public bool? LEBaselineUsedCannotDecrease { get; set; }

        /// <summary>
        /// Gets or Sets LEBaselineUsedCannotIncrease
        /// </summary>
        [DataMember(Name="lEBaselineUsedCannotIncrease", EmitDefaultValue=false)]
        public bool? LEBaselineUsedCannotIncrease { get; set; }

        /// <summary>
        /// Gets or Sets LEBaselineUsedCannotIncrease10
        /// </summary>
        [DataMember(Name="lEBaselineUsedCannotIncrease10", EmitDefaultValue=false)]
        public bool? LEBaselineUsedCannotIncrease10 { get; set; }

        /// <summary>
        /// Gets or Sets LEInitialDTGuid
        /// </summary>
        [DataMember(Name="lEInitialDTGuid", EmitDefaultValue=false)]
        public string LEInitialDTGuid { get; set; }

        /// <summary>
        /// Gets or Sets CDRecentAppliedCure
        /// </summary>
        [DataMember(Name="cDRecentAppliedCure", EmitDefaultValue=false)]
        public string CDRecentAppliedCure { get; set; }

        /// <summary>
        /// Gets or Sets DisclosureLogGUIDForECD
        /// </summary>
        [DataMember(Name="disclosureLogGUIDForECD", EmitDefaultValue=false)]
        public string DisclosureLogGUIDForECD { get; set; }

        /// <summary>
        /// Gets or Sets DisclosureLogGUIDReceivedForECD
        /// </summary>
        [DataMember(Name="disclosureLogGUIDReceivedForECD", EmitDefaultValue=false)]
        public string DisclosureLogGUIDReceivedForECD { get; set; }

        /// <summary>
        /// Gets or Sets LERevisedSentDateGuid
        /// </summary>
        [DataMember(Name="lERevisedSentDateGuid", EmitDefaultValue=false)]
        public string LERevisedSentDateGuid { get; set; }

        /// <summary>
        /// Gets or Sets LEInitialReceivedDateGuid
        /// </summary>
        [DataMember(Name="lEInitialReceivedDateGuid", EmitDefaultValue=false)]
        public string LEInitialReceivedDateGuid { get; set; }

        /// <summary>
        /// Gets or Sets LERevisedReceivedDateGuid
        /// </summary>
        [DataMember(Name="lERevisedReceivedDateGuid", EmitDefaultValue=false)]
        public string LERevisedReceivedDateGuid { get; set; }

        /// <summary>
        /// Gets or Sets CDInitialReceivedDateGuid
        /// </summary>
        [DataMember(Name="cDInitialReceivedDateGuid", EmitDefaultValue=false)]
        public string CDInitialReceivedDateGuid { get; set; }

        /// <summary>
        /// Gets or Sets CDRevisedReceivedDateGuid
        /// </summary>
        [DataMember(Name="cDRevisedReceivedDateGuid", EmitDefaultValue=false)]
        public string CDRevisedReceivedDateGuid { get; set; }

        /// <summary>
        /// Gets or Sets CureAppliedToLenderCredit
        /// </summary>
        [DataMember(Name="cureAppliedToLenderCredit", EmitDefaultValue=false)]
        public double? CureAppliedToLenderCredit { get; set; }

        /// <summary>
        /// Gets or Sets CureAppliedToPrincipalReduction
        /// </summary>
        [DataMember(Name="cureAppliedToPrincipalReduction", EmitDefaultValue=false)]
        public double? CureAppliedToPrincipalReduction { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractClosingCostFeeVarianceOther {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ChargesThatCannotDecreaseInitialLE1: ").Append(ChargesThatCannotDecreaseInitialLE1).Append("\n");
            sb.Append("  ChargesThatCannotDecreaseLE1: ").Append(ChargesThatCannotDecreaseLE1).Append("\n");
            sb.Append("  ChargesThatCannotDecreaseCD1: ").Append(ChargesThatCannotDecreaseCD1).Append("\n");
            sb.Append("  ChargesThatCannotIncreaseInitialLE1: ").Append(ChargesThatCannotIncreaseInitialLE1).Append("\n");
            sb.Append("  ChargesThatCannotIncreaseLE1: ").Append(ChargesThatCannotIncreaseLE1).Append("\n");
            sb.Append("  ChargesThatCannotIncreaseCD1: ").Append(ChargesThatCannotIncreaseCD1).Append("\n");
            sb.Append("  ChargesCannotIncrease10InitialLE1: ").Append(ChargesCannotIncrease10InitialLE1).Append("\n");
            sb.Append("  ChargesCannotIncrease10LE1: ").Append(ChargesCannotIncrease10LE1).Append("\n");
            sb.Append("  ChargesCannotIncrease10CD1: ").Append(ChargesCannotIncrease10CD1).Append("\n");
            sb.Append("  ChargesThatCanChangeInitialLE1: ").Append(ChargesThatCanChangeInitialLE1).Append("\n");
            sb.Append("  ChargesThatCanChangeLE1: ").Append(ChargesThatCanChangeLE1).Append("\n");
            sb.Append("  ChargesThatCanChangeCD1: ").Append(ChargesThatCanChangeCD1).Append("\n");
            sb.Append("  GoodFaithAmountInitialLE1: ").Append(GoodFaithAmountInitialLE1).Append("\n");
            sb.Append("  RequiredCureAmount: ").Append(RequiredCureAmount).Append("\n");
            sb.Append("  AppliedCureAmount: ").Append(AppliedCureAmount).Append("\n");
            sb.Append("  LEInitialGuid: ").Append(LEInitialGuid).Append("\n");
            sb.Append("  LELatestGuid: ").Append(LELatestGuid).Append("\n");
            sb.Append("  CDInitialGuid: ").Append(CDInitialGuid).Append("\n");
            sb.Append("  CDLatestGuid: ").Append(CDLatestGuid).Append("\n");
            sb.Append("  CannotDecreaseLEBaselineGuid: ").Append(CannotDecreaseLEBaselineGuid).Append("\n");
            sb.Append("  CannotDecreaseCDBaselineGuid: ").Append(CannotDecreaseCDBaselineGuid).Append("\n");
            sb.Append("  CannotIncreaseLEBaselineGuid: ").Append(CannotIncreaseLEBaselineGuid).Append("\n");
            sb.Append("  CannotIncreaseCDBaselineGuid: ").Append(CannotIncreaseCDBaselineGuid).Append("\n");
            sb.Append("  CannotIncrease10LEBaselineGuid: ").Append(CannotIncrease10LEBaselineGuid).Append("\n");
            sb.Append("  CannotIncrease10CDBaselineGuid: ").Append(CannotIncrease10CDBaselineGuid).Append("\n");
            sb.Append("  CDPostConGuid: ").Append(CDPostConGuid).Append("\n");
            sb.Append("  SafeHarborGuid: ").Append(SafeHarborGuid).Append("\n");
            sb.Append("  SSPLGuid: ").Append(SSPLGuid).Append("\n");
            sb.Append("  LEBaselineUsedCannotDecrease: ").Append(LEBaselineUsedCannotDecrease).Append("\n");
            sb.Append("  LEBaselineUsedCannotIncrease: ").Append(LEBaselineUsedCannotIncrease).Append("\n");
            sb.Append("  LEBaselineUsedCannotIncrease10: ").Append(LEBaselineUsedCannotIncrease10).Append("\n");
            sb.Append("  LEInitialDTGuid: ").Append(LEInitialDTGuid).Append("\n");
            sb.Append("  CDRecentAppliedCure: ").Append(CDRecentAppliedCure).Append("\n");
            sb.Append("  DisclosureLogGUIDForECD: ").Append(DisclosureLogGUIDForECD).Append("\n");
            sb.Append("  DisclosureLogGUIDReceivedForECD: ").Append(DisclosureLogGUIDReceivedForECD).Append("\n");
            sb.Append("  LERevisedSentDateGuid: ").Append(LERevisedSentDateGuid).Append("\n");
            sb.Append("  LEInitialReceivedDateGuid: ").Append(LEInitialReceivedDateGuid).Append("\n");
            sb.Append("  LERevisedReceivedDateGuid: ").Append(LERevisedReceivedDateGuid).Append("\n");
            sb.Append("  CDInitialReceivedDateGuid: ").Append(CDInitialReceivedDateGuid).Append("\n");
            sb.Append("  CDRevisedReceivedDateGuid: ").Append(CDRevisedReceivedDateGuid).Append("\n");
            sb.Append("  CureAppliedToLenderCredit: ").Append(CureAppliedToLenderCredit).Append("\n");
            sb.Append("  CureAppliedToPrincipalReduction: ").Append(CureAppliedToPrincipalReduction).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractClosingCostFeeVarianceOther);
        }

        /// <summary>
        /// Returns true if LoanContractClosingCostFeeVarianceOther instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractClosingCostFeeVarianceOther to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractClosingCostFeeVarianceOther input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ChargesThatCannotDecreaseInitialLE1 == input.ChargesThatCannotDecreaseInitialLE1 ||
                    (this.ChargesThatCannotDecreaseInitialLE1 != null &&
                    this.ChargesThatCannotDecreaseInitialLE1.Equals(input.ChargesThatCannotDecreaseInitialLE1))
                ) && 
                (
                    this.ChargesThatCannotDecreaseLE1 == input.ChargesThatCannotDecreaseLE1 ||
                    (this.ChargesThatCannotDecreaseLE1 != null &&
                    this.ChargesThatCannotDecreaseLE1.Equals(input.ChargesThatCannotDecreaseLE1))
                ) && 
                (
                    this.ChargesThatCannotDecreaseCD1 == input.ChargesThatCannotDecreaseCD1 ||
                    (this.ChargesThatCannotDecreaseCD1 != null &&
                    this.ChargesThatCannotDecreaseCD1.Equals(input.ChargesThatCannotDecreaseCD1))
                ) && 
                (
                    this.ChargesThatCannotIncreaseInitialLE1 == input.ChargesThatCannotIncreaseInitialLE1 ||
                    (this.ChargesThatCannotIncreaseInitialLE1 != null &&
                    this.ChargesThatCannotIncreaseInitialLE1.Equals(input.ChargesThatCannotIncreaseInitialLE1))
                ) && 
                (
                    this.ChargesThatCannotIncreaseLE1 == input.ChargesThatCannotIncreaseLE1 ||
                    (this.ChargesThatCannotIncreaseLE1 != null &&
                    this.ChargesThatCannotIncreaseLE1.Equals(input.ChargesThatCannotIncreaseLE1))
                ) && 
                (
                    this.ChargesThatCannotIncreaseCD1 == input.ChargesThatCannotIncreaseCD1 ||
                    (this.ChargesThatCannotIncreaseCD1 != null &&
                    this.ChargesThatCannotIncreaseCD1.Equals(input.ChargesThatCannotIncreaseCD1))
                ) && 
                (
                    this.ChargesCannotIncrease10InitialLE1 == input.ChargesCannotIncrease10InitialLE1 ||
                    (this.ChargesCannotIncrease10InitialLE1 != null &&
                    this.ChargesCannotIncrease10InitialLE1.Equals(input.ChargesCannotIncrease10InitialLE1))
                ) && 
                (
                    this.ChargesCannotIncrease10LE1 == input.ChargesCannotIncrease10LE1 ||
                    (this.ChargesCannotIncrease10LE1 != null &&
                    this.ChargesCannotIncrease10LE1.Equals(input.ChargesCannotIncrease10LE1))
                ) && 
                (
                    this.ChargesCannotIncrease10CD1 == input.ChargesCannotIncrease10CD1 ||
                    (this.ChargesCannotIncrease10CD1 != null &&
                    this.ChargesCannotIncrease10CD1.Equals(input.ChargesCannotIncrease10CD1))
                ) && 
                (
                    this.ChargesThatCanChangeInitialLE1 == input.ChargesThatCanChangeInitialLE1 ||
                    (this.ChargesThatCanChangeInitialLE1 != null &&
                    this.ChargesThatCanChangeInitialLE1.Equals(input.ChargesThatCanChangeInitialLE1))
                ) && 
                (
                    this.ChargesThatCanChangeLE1 == input.ChargesThatCanChangeLE1 ||
                    (this.ChargesThatCanChangeLE1 != null &&
                    this.ChargesThatCanChangeLE1.Equals(input.ChargesThatCanChangeLE1))
                ) && 
                (
                    this.ChargesThatCanChangeCD1 == input.ChargesThatCanChangeCD1 ||
                    (this.ChargesThatCanChangeCD1 != null &&
                    this.ChargesThatCanChangeCD1.Equals(input.ChargesThatCanChangeCD1))
                ) && 
                (
                    this.GoodFaithAmountInitialLE1 == input.GoodFaithAmountInitialLE1 ||
                    (this.GoodFaithAmountInitialLE1 != null &&
                    this.GoodFaithAmountInitialLE1.Equals(input.GoodFaithAmountInitialLE1))
                ) && 
                (
                    this.RequiredCureAmount == input.RequiredCureAmount ||
                    (this.RequiredCureAmount != null &&
                    this.RequiredCureAmount.Equals(input.RequiredCureAmount))
                ) && 
                (
                    this.AppliedCureAmount == input.AppliedCureAmount ||
                    (this.AppliedCureAmount != null &&
                    this.AppliedCureAmount.Equals(input.AppliedCureAmount))
                ) && 
                (
                    this.LEInitialGuid == input.LEInitialGuid ||
                    (this.LEInitialGuid != null &&
                    this.LEInitialGuid.Equals(input.LEInitialGuid))
                ) && 
                (
                    this.LELatestGuid == input.LELatestGuid ||
                    (this.LELatestGuid != null &&
                    this.LELatestGuid.Equals(input.LELatestGuid))
                ) && 
                (
                    this.CDInitialGuid == input.CDInitialGuid ||
                    (this.CDInitialGuid != null &&
                    this.CDInitialGuid.Equals(input.CDInitialGuid))
                ) && 
                (
                    this.CDLatestGuid == input.CDLatestGuid ||
                    (this.CDLatestGuid != null &&
                    this.CDLatestGuid.Equals(input.CDLatestGuid))
                ) && 
                (
                    this.CannotDecreaseLEBaselineGuid == input.CannotDecreaseLEBaselineGuid ||
                    (this.CannotDecreaseLEBaselineGuid != null &&
                    this.CannotDecreaseLEBaselineGuid.Equals(input.CannotDecreaseLEBaselineGuid))
                ) && 
                (
                    this.CannotDecreaseCDBaselineGuid == input.CannotDecreaseCDBaselineGuid ||
                    (this.CannotDecreaseCDBaselineGuid != null &&
                    this.CannotDecreaseCDBaselineGuid.Equals(input.CannotDecreaseCDBaselineGuid))
                ) && 
                (
                    this.CannotIncreaseLEBaselineGuid == input.CannotIncreaseLEBaselineGuid ||
                    (this.CannotIncreaseLEBaselineGuid != null &&
                    this.CannotIncreaseLEBaselineGuid.Equals(input.CannotIncreaseLEBaselineGuid))
                ) && 
                (
                    this.CannotIncreaseCDBaselineGuid == input.CannotIncreaseCDBaselineGuid ||
                    (this.CannotIncreaseCDBaselineGuid != null &&
                    this.CannotIncreaseCDBaselineGuid.Equals(input.CannotIncreaseCDBaselineGuid))
                ) && 
                (
                    this.CannotIncrease10LEBaselineGuid == input.CannotIncrease10LEBaselineGuid ||
                    (this.CannotIncrease10LEBaselineGuid != null &&
                    this.CannotIncrease10LEBaselineGuid.Equals(input.CannotIncrease10LEBaselineGuid))
                ) && 
                (
                    this.CannotIncrease10CDBaselineGuid == input.CannotIncrease10CDBaselineGuid ||
                    (this.CannotIncrease10CDBaselineGuid != null &&
                    this.CannotIncrease10CDBaselineGuid.Equals(input.CannotIncrease10CDBaselineGuid))
                ) && 
                (
                    this.CDPostConGuid == input.CDPostConGuid ||
                    (this.CDPostConGuid != null &&
                    this.CDPostConGuid.Equals(input.CDPostConGuid))
                ) && 
                (
                    this.SafeHarborGuid == input.SafeHarborGuid ||
                    (this.SafeHarborGuid != null &&
                    this.SafeHarborGuid.Equals(input.SafeHarborGuid))
                ) && 
                (
                    this.SSPLGuid == input.SSPLGuid ||
                    (this.SSPLGuid != null &&
                    this.SSPLGuid.Equals(input.SSPLGuid))
                ) && 
                (
                    this.LEBaselineUsedCannotDecrease == input.LEBaselineUsedCannotDecrease ||
                    (this.LEBaselineUsedCannotDecrease != null &&
                    this.LEBaselineUsedCannotDecrease.Equals(input.LEBaselineUsedCannotDecrease))
                ) && 
                (
                    this.LEBaselineUsedCannotIncrease == input.LEBaselineUsedCannotIncrease ||
                    (this.LEBaselineUsedCannotIncrease != null &&
                    this.LEBaselineUsedCannotIncrease.Equals(input.LEBaselineUsedCannotIncrease))
                ) && 
                (
                    this.LEBaselineUsedCannotIncrease10 == input.LEBaselineUsedCannotIncrease10 ||
                    (this.LEBaselineUsedCannotIncrease10 != null &&
                    this.LEBaselineUsedCannotIncrease10.Equals(input.LEBaselineUsedCannotIncrease10))
                ) && 
                (
                    this.LEInitialDTGuid == input.LEInitialDTGuid ||
                    (this.LEInitialDTGuid != null &&
                    this.LEInitialDTGuid.Equals(input.LEInitialDTGuid))
                ) && 
                (
                    this.CDRecentAppliedCure == input.CDRecentAppliedCure ||
                    (this.CDRecentAppliedCure != null &&
                    this.CDRecentAppliedCure.Equals(input.CDRecentAppliedCure))
                ) && 
                (
                    this.DisclosureLogGUIDForECD == input.DisclosureLogGUIDForECD ||
                    (this.DisclosureLogGUIDForECD != null &&
                    this.DisclosureLogGUIDForECD.Equals(input.DisclosureLogGUIDForECD))
                ) && 
                (
                    this.DisclosureLogGUIDReceivedForECD == input.DisclosureLogGUIDReceivedForECD ||
                    (this.DisclosureLogGUIDReceivedForECD != null &&
                    this.DisclosureLogGUIDReceivedForECD.Equals(input.DisclosureLogGUIDReceivedForECD))
                ) && 
                (
                    this.LERevisedSentDateGuid == input.LERevisedSentDateGuid ||
                    (this.LERevisedSentDateGuid != null &&
                    this.LERevisedSentDateGuid.Equals(input.LERevisedSentDateGuid))
                ) && 
                (
                    this.LEInitialReceivedDateGuid == input.LEInitialReceivedDateGuid ||
                    (this.LEInitialReceivedDateGuid != null &&
                    this.LEInitialReceivedDateGuid.Equals(input.LEInitialReceivedDateGuid))
                ) && 
                (
                    this.LERevisedReceivedDateGuid == input.LERevisedReceivedDateGuid ||
                    (this.LERevisedReceivedDateGuid != null &&
                    this.LERevisedReceivedDateGuid.Equals(input.LERevisedReceivedDateGuid))
                ) && 
                (
                    this.CDInitialReceivedDateGuid == input.CDInitialReceivedDateGuid ||
                    (this.CDInitialReceivedDateGuid != null &&
                    this.CDInitialReceivedDateGuid.Equals(input.CDInitialReceivedDateGuid))
                ) && 
                (
                    this.CDRevisedReceivedDateGuid == input.CDRevisedReceivedDateGuid ||
                    (this.CDRevisedReceivedDateGuid != null &&
                    this.CDRevisedReceivedDateGuid.Equals(input.CDRevisedReceivedDateGuid))
                ) && 
                (
                    this.CureAppliedToLenderCredit == input.CureAppliedToLenderCredit ||
                    (this.CureAppliedToLenderCredit != null &&
                    this.CureAppliedToLenderCredit.Equals(input.CureAppliedToLenderCredit))
                ) && 
                (
                    this.CureAppliedToPrincipalReduction == input.CureAppliedToPrincipalReduction ||
                    (this.CureAppliedToPrincipalReduction != null &&
                    this.CureAppliedToPrincipalReduction.Equals(input.CureAppliedToPrincipalReduction))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.ChargesThatCannotDecreaseInitialLE1 != null)
                    hashCode = hashCode * 59 + this.ChargesThatCannotDecreaseInitialLE1.GetHashCode();
                if (this.ChargesThatCannotDecreaseLE1 != null)
                    hashCode = hashCode * 59 + this.ChargesThatCannotDecreaseLE1.GetHashCode();
                if (this.ChargesThatCannotDecreaseCD1 != null)
                    hashCode = hashCode * 59 + this.ChargesThatCannotDecreaseCD1.GetHashCode();
                if (this.ChargesThatCannotIncreaseInitialLE1 != null)
                    hashCode = hashCode * 59 + this.ChargesThatCannotIncreaseInitialLE1.GetHashCode();
                if (this.ChargesThatCannotIncreaseLE1 != null)
                    hashCode = hashCode * 59 + this.ChargesThatCannotIncreaseLE1.GetHashCode();
                if (this.ChargesThatCannotIncreaseCD1 != null)
                    hashCode = hashCode * 59 + this.ChargesThatCannotIncreaseCD1.GetHashCode();
                if (this.ChargesCannotIncrease10InitialLE1 != null)
                    hashCode = hashCode * 59 + this.ChargesCannotIncrease10InitialLE1.GetHashCode();
                if (this.ChargesCannotIncrease10LE1 != null)
                    hashCode = hashCode * 59 + this.ChargesCannotIncrease10LE1.GetHashCode();
                if (this.ChargesCannotIncrease10CD1 != null)
                    hashCode = hashCode * 59 + this.ChargesCannotIncrease10CD1.GetHashCode();
                if (this.ChargesThatCanChangeInitialLE1 != null)
                    hashCode = hashCode * 59 + this.ChargesThatCanChangeInitialLE1.GetHashCode();
                if (this.ChargesThatCanChangeLE1 != null)
                    hashCode = hashCode * 59 + this.ChargesThatCanChangeLE1.GetHashCode();
                if (this.ChargesThatCanChangeCD1 != null)
                    hashCode = hashCode * 59 + this.ChargesThatCanChangeCD1.GetHashCode();
                if (this.GoodFaithAmountInitialLE1 != null)
                    hashCode = hashCode * 59 + this.GoodFaithAmountInitialLE1.GetHashCode();
                if (this.RequiredCureAmount != null)
                    hashCode = hashCode * 59 + this.RequiredCureAmount.GetHashCode();
                if (this.AppliedCureAmount != null)
                    hashCode = hashCode * 59 + this.AppliedCureAmount.GetHashCode();
                if (this.LEInitialGuid != null)
                    hashCode = hashCode * 59 + this.LEInitialGuid.GetHashCode();
                if (this.LELatestGuid != null)
                    hashCode = hashCode * 59 + this.LELatestGuid.GetHashCode();
                if (this.CDInitialGuid != null)
                    hashCode = hashCode * 59 + this.CDInitialGuid.GetHashCode();
                if (this.CDLatestGuid != null)
                    hashCode = hashCode * 59 + this.CDLatestGuid.GetHashCode();
                if (this.CannotDecreaseLEBaselineGuid != null)
                    hashCode = hashCode * 59 + this.CannotDecreaseLEBaselineGuid.GetHashCode();
                if (this.CannotDecreaseCDBaselineGuid != null)
                    hashCode = hashCode * 59 + this.CannotDecreaseCDBaselineGuid.GetHashCode();
                if (this.CannotIncreaseLEBaselineGuid != null)
                    hashCode = hashCode * 59 + this.CannotIncreaseLEBaselineGuid.GetHashCode();
                if (this.CannotIncreaseCDBaselineGuid != null)
                    hashCode = hashCode * 59 + this.CannotIncreaseCDBaselineGuid.GetHashCode();
                if (this.CannotIncrease10LEBaselineGuid != null)
                    hashCode = hashCode * 59 + this.CannotIncrease10LEBaselineGuid.GetHashCode();
                if (this.CannotIncrease10CDBaselineGuid != null)
                    hashCode = hashCode * 59 + this.CannotIncrease10CDBaselineGuid.GetHashCode();
                if (this.CDPostConGuid != null)
                    hashCode = hashCode * 59 + this.CDPostConGuid.GetHashCode();
                if (this.SafeHarborGuid != null)
                    hashCode = hashCode * 59 + this.SafeHarborGuid.GetHashCode();
                if (this.SSPLGuid != null)
                    hashCode = hashCode * 59 + this.SSPLGuid.GetHashCode();
                if (this.LEBaselineUsedCannotDecrease != null)
                    hashCode = hashCode * 59 + this.LEBaselineUsedCannotDecrease.GetHashCode();
                if (this.LEBaselineUsedCannotIncrease != null)
                    hashCode = hashCode * 59 + this.LEBaselineUsedCannotIncrease.GetHashCode();
                if (this.LEBaselineUsedCannotIncrease10 != null)
                    hashCode = hashCode * 59 + this.LEBaselineUsedCannotIncrease10.GetHashCode();
                if (this.LEInitialDTGuid != null)
                    hashCode = hashCode * 59 + this.LEInitialDTGuid.GetHashCode();
                if (this.CDRecentAppliedCure != null)
                    hashCode = hashCode * 59 + this.CDRecentAppliedCure.GetHashCode();
                if (this.DisclosureLogGUIDForECD != null)
                    hashCode = hashCode * 59 + this.DisclosureLogGUIDForECD.GetHashCode();
                if (this.DisclosureLogGUIDReceivedForECD != null)
                    hashCode = hashCode * 59 + this.DisclosureLogGUIDReceivedForECD.GetHashCode();
                if (this.LERevisedSentDateGuid != null)
                    hashCode = hashCode * 59 + this.LERevisedSentDateGuid.GetHashCode();
                if (this.LEInitialReceivedDateGuid != null)
                    hashCode = hashCode * 59 + this.LEInitialReceivedDateGuid.GetHashCode();
                if (this.LERevisedReceivedDateGuid != null)
                    hashCode = hashCode * 59 + this.LERevisedReceivedDateGuid.GetHashCode();
                if (this.CDInitialReceivedDateGuid != null)
                    hashCode = hashCode * 59 + this.CDInitialReceivedDateGuid.GetHashCode();
                if (this.CDRevisedReceivedDateGuid != null)
                    hashCode = hashCode * 59 + this.CDRevisedReceivedDateGuid.GetHashCode();
                if (this.CureAppliedToLenderCredit != null)
                    hashCode = hashCode * 59 + this.CureAppliedToLenderCredit.GetHashCode();
                if (this.CureAppliedToPrincipalReduction != null)
                    hashCode = hashCode * 59 + this.CureAppliedToPrincipalReduction.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
