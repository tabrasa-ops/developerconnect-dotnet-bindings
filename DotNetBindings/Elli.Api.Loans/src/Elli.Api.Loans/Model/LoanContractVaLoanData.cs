/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// LoanContractVaLoanData
    /// </summary>
    [DataContract]
    public partial class LoanContractVaLoanData :  IEquatable<LoanContractVaLoanData>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Acres
        /// </summary>
        [DataMember(Name="acres", EmitDefaultValue=false)]
        public double? Acres { get; set; }

        /// <summary>
        /// Gets or Sets AdministratorAddress
        /// </summary>
        [DataMember(Name="administratorAddress", EmitDefaultValue=false)]
        public string AdministratorAddress { get; set; }

        /// <summary>
        /// Gets or Sets AdministratorCity
        /// </summary>
        [DataMember(Name="administratorCity", EmitDefaultValue=false)]
        public string AdministratorCity { get; set; }

        /// <summary>
        /// Gets or Sets AdministratorContact
        /// </summary>
        [DataMember(Name="administratorContact", EmitDefaultValue=false)]
        public string AdministratorContact { get; set; }

        /// <summary>
        /// Gets or Sets AdministratorName
        /// </summary>
        [DataMember(Name="administratorName", EmitDefaultValue=false)]
        public string AdministratorName { get; set; }

        /// <summary>
        /// Gets or Sets AdministratorPostalCode
        /// </summary>
        [DataMember(Name="administratorPostalCode", EmitDefaultValue=false)]
        public string AdministratorPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets AdministratorState
        /// </summary>
        [DataMember(Name="administratorState", EmitDefaultValue=false)]
        public string AdministratorState { get; set; }

        /// <summary>
        /// Gets or Sets AgeOfProperty
        /// </summary>
        [DataMember(Name="ageOfProperty", EmitDefaultValue=false)]
        public int? AgeOfProperty { get; set; }

        /// <summary>
        /// Gets or Sets AmountSpentOnEnergyImprovements
        /// </summary>
        [DataMember(Name="amountSpentOnEnergyImprovements", EmitDefaultValue=false)]
        public double? AmountSpentOnEnergyImprovements { get; set; }

        /// <summary>
        /// Gets or Sets AnnualGroundRent
        /// </summary>
        [DataMember(Name="annualGroundRent", EmitDefaultValue=false)]
        public double? AnnualGroundRent { get; set; }

        /// <summary>
        /// Gets or Sets AnnualMaintenanceAssessment
        /// </summary>
        [DataMember(Name="annualMaintenanceAssessment", EmitDefaultValue=false)]
        public double? AnnualMaintenanceAssessment { get; set; }

        /// <summary>
        /// Gets or Sets AnnualRealEstateTaxes
        /// </summary>
        [DataMember(Name="annualRealEstateTaxes", EmitDefaultValue=false)]
        public double? AnnualRealEstateTaxes { get; set; }

        /// <summary>
        /// Gets or Sets AppraisalType
        /// </summary>
        [DataMember(Name="appraisalType", EmitDefaultValue=false)]
        public string AppraisalType { get; set; }

        /// <summary>
        /// Gets or Sets AvailableForInspectionAMIndicator
        /// </summary>
        [DataMember(Name="availableForInspectionAMIndicator", EmitDefaultValue=false)]
        public bool? AvailableForInspectionAMIndicator { get; set; }

        /// <summary>
        /// Gets or Sets AvailableForInspectionDateAndTime
        /// </summary>
        [DataMember(Name="availableForInspectionDateAndTime", EmitDefaultValue=false)]
        public string AvailableForInspectionDateAndTime { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerPaidDiscountPointsTotalAmount
        /// </summary>
        [DataMember(Name="borrowerPaidDiscountPointsTotalAmount", EmitDefaultValue=false)]
        public double? BorrowerPaidDiscountPointsTotalAmount { get; set; }

        /// <summary>
        /// Gets or Sets BuildingType
        /// </summary>
        [DataMember(Name="buildingType", EmitDefaultValue=false)]
        public string BuildingType { get; set; }

        /// <summary>
        /// Gets or Sets BuyerPurchasingLotSeparately
        /// </summary>
        [DataMember(Name="buyerPurchasingLotSeparately", EmitDefaultValue=false)]
        public bool? BuyerPurchasingLotSeparately { get; set; }

        /// <summary>
        /// Gets or Sets CashPaymentFromVeteran
        /// </summary>
        [DataMember(Name="cashPaymentFromVeteran", EmitDefaultValue=false)]
        public double? CashPaymentFromVeteran { get; set; }

        /// <summary>
        /// Gets or Sets ClaimDisabilityBenefits
        /// </summary>
        [DataMember(Name="claimDisabilityBenefits", EmitDefaultValue=false)]
        public string ClaimDisabilityBenefits { get; set; }

        /// <summary>
        /// Gets or Sets ClothesWasherIndicator
        /// </summary>
        [DataMember(Name="clothesWasherIndicator", EmitDefaultValue=false)]
        public bool? ClothesWasherIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ConstructionCompletedDate
        /// </summary>
        [DataMember(Name="constructionCompletedDate", EmitDefaultValue=false)]
        public DateTime? ConstructionCompletedDate { get; set; }

        /// <summary>
        /// Gets or Sets ConstructionPlan
        /// </summary>
        [DataMember(Name="constructionPlan", EmitDefaultValue=false)]
        public string ConstructionPlan { get; set; }

        /// <summary>
        /// Gets or Sets ConstructionWarrantyIncluded
        /// </summary>
        [DataMember(Name="constructionWarrantyIncluded", EmitDefaultValue=false)]
        public bool? ConstructionWarrantyIncluded { get; set; }

        /// <summary>
        /// Gets or Sets ContractNoApprovedByVA
        /// </summary>
        [DataMember(Name="contractNoApprovedByVA", EmitDefaultValue=false)]
        public string ContractNoApprovedByVA { get; set; }

        /// <summary>
        /// Gets or Sets CreditScore
        /// </summary>
        [DataMember(Name="creditScore", EmitDefaultValue=false)]
        public int? CreditScore { get; set; }

        /// <summary>
        /// Gets or Sets CurrentlyOnMilitaryDuty
        /// </summary>
        [DataMember(Name="currentlyOnMilitaryDuty", EmitDefaultValue=false)]
        public bool? CurrentlyOnMilitaryDuty { get; set; }

        /// <summary>
        /// Gets or Sets DateOfAssignment
        /// </summary>
        [DataMember(Name="dateOfAssignment", EmitDefaultValue=false)]
        public DateTime? DateOfAssignment { get; set; }

        /// <summary>
        /// Gets or Sets DateSAR
        /// </summary>
        [DataMember(Name="dateSAR", EmitDefaultValue=false)]
        public DateTime? DateSAR { get; set; }

        /// <summary>
        /// Gets or Sets DiscountPercentage
        /// </summary>
        [DataMember(Name="discountPercentage", EmitDefaultValue=false)]
        public double? DiscountPercentage { get; set; }

        /// <summary>
        /// Gets or Sets DiscountPoint
        /// </summary>
        [DataMember(Name="discountPoint", EmitDefaultValue=false)]
        public double? DiscountPoint { get; set; }

        /// <summary>
        /// Gets or Sets DishwasherIndicator
        /// </summary>
        [DataMember(Name="dishwasherIndicator", EmitDefaultValue=false)]
        public bool? DishwasherIndicator { get; set; }

        /// <summary>
        /// Gets or Sets DryerIndicator
        /// </summary>
        [DataMember(Name="dryerIndicator", EmitDefaultValue=false)]
        public bool? DryerIndicator { get; set; }

        /// <summary>
        /// Gets or Sets EmailToBeNotifiedWhenUploaded
        /// </summary>
        [DataMember(Name="emailToBeNotifiedWhenUploaded", EmitDefaultValue=false)]
        public string EmailToBeNotifiedWhenUploaded { get; set; }

        /// <summary>
        /// Gets or Sets EnergyImprovementsAdditionOfFeature
        /// </summary>
        [DataMember(Name="energyImprovementsAdditionOfFeature", EmitDefaultValue=false)]
        public bool? EnergyImprovementsAdditionOfFeature { get; set; }

        /// <summary>
        /// Gets or Sets EntitlementCode
        /// </summary>
        [DataMember(Name="entitlementCode", EmitDefaultValue=false)]
        public string EntitlementCode { get; set; }

        /// <summary>
        /// Gets or Sets EquipmentOtherDescription
        /// </summary>
        [DataMember(Name="equipmentOtherDescription", EmitDefaultValue=false)]
        public string EquipmentOtherDescription { get; set; }

        /// <summary>
        /// Gets or Sets FinalDiscountAmount
        /// </summary>
        [DataMember(Name="finalDiscountAmount", EmitDefaultValue=false)]
        public double? FinalDiscountAmount { get; set; }

        /// <summary>
        /// Gets or Sets FinalFundingFeeAmount
        /// </summary>
        [DataMember(Name="finalFundingFeeAmount", EmitDefaultValue=false)]
        public double? FinalFundingFeeAmount { get; set; }

        /// <summary>
        /// Gets or Sets FirstTimeUse
        /// </summary>
        [DataMember(Name="firstTimeUse", EmitDefaultValue=false)]
        public bool? FirstTimeUse { get; set; }

        /// <summary>
        /// Gets or Sets FundingFeeExempt
        /// </summary>
        [DataMember(Name="fundingFeeExempt", EmitDefaultValue=false)]
        public bool? FundingFeeExempt { get; set; }

        /// <summary>
        /// Gets or Sets GarbageDisposalIndicator
        /// </summary>
        [DataMember(Name="garbageDisposalIndicator", EmitDefaultValue=false)]
        public bool? GarbageDisposalIndicator { get; set; }

        /// <summary>
        /// Gets or Sets InitialTotal
        /// </summary>
        [DataMember(Name="initialTotal", EmitDefaultValue=false)]
        public double? InitialTotal { get; set; }

        /// <summary>
        /// Gets or Sets InspectionWillBeMadeBy
        /// </summary>
        [DataMember(Name="inspectionWillBeMadeBy", EmitDefaultValue=false)]
        public string InspectionWillBeMadeBy { get; set; }

        /// <summary>
        /// Gets or Sets Insulation
        /// </summary>
        [DataMember(Name="insulation", EmitDefaultValue=false)]
        public bool? Insulation { get; set; }

        /// <summary>
        /// Gets or Sets InsuranceType
        /// </summary>
        [DataMember(Name="insuranceType", EmitDefaultValue=false)]
        public string InsuranceType { get; set; }

        /// <summary>
        /// Gets or Sets IrregularLotSizeInSquareFeet
        /// </summary>
        [DataMember(Name="irregularLotSizeInSquareFeet", EmitDefaultValue=false)]
        public int? IrregularLotSizeInSquareFeet { get; set; }

        /// <summary>
        /// Gets or Sets IsDelinquent30Days
        /// </summary>
        [DataMember(Name="isDelinquent30Days", EmitDefaultValue=false)]
        public bool? IsDelinquent30Days { get; set; }

        /// <summary>
        /// Gets or Sets KeysAtAddress
        /// </summary>
        [DataMember(Name="keysAtAddress", EmitDefaultValue=false)]
        public string KeysAtAddress { get; set; }

        /// <summary>
        /// Gets or Sets LeaseholdType
        /// </summary>
        [DataMember(Name="leaseholdType", EmitDefaultValue=false)]
        public string LeaseholdType { get; set; }

        /// <summary>
        /// Gets or Sets LenderSAR
        /// </summary>
        [DataMember(Name="lenderSAR", EmitDefaultValue=false)]
        public string LenderSAR { get; set; }

        /// <summary>
        /// Gets or Sets LoanAnalysisRemarks1
        /// </summary>
        [DataMember(Name="loanAnalysisRemarks1", EmitDefaultValue=false)]
        public string LoanAnalysisRemarks1 { get; set; }

        /// <summary>
        /// Gets or Sets LoanAnalysisRemarks2
        /// </summary>
        [DataMember(Name="loanAnalysisRemarks2", EmitDefaultValue=false)]
        public string LoanAnalysisRemarks2 { get; set; }

        /// <summary>
        /// Gets or Sets LoanAnalysisRemarks3
        /// </summary>
        [DataMember(Name="loanAnalysisRemarks3", EmitDefaultValue=false)]
        public string LoanAnalysisRemarks3 { get; set; }

        /// <summary>
        /// Gets or Sets LoanAnalysisRemarks4
        /// </summary>
        [DataMember(Name="loanAnalysisRemarks4", EmitDefaultValue=false)]
        public string LoanAnalysisRemarks4 { get; set; }

        /// <summary>
        /// Gets or Sets LoanAnalysisRemarks5
        /// </summary>
        [DataMember(Name="loanAnalysisRemarks5", EmitDefaultValue=false)]
        public string LoanAnalysisRemarks5 { get; set; }

        /// <summary>
        /// Gets or Sets LoanAnalysisRemarks6
        /// </summary>
        [DataMember(Name="loanAnalysisRemarks6", EmitDefaultValue=false)]
        public string LoanAnalysisRemarks6 { get; set; }

        /// <summary>
        /// Gets or Sets LoanAnalysisRemarks7
        /// </summary>
        [DataMember(Name="loanAnalysisRemarks7", EmitDefaultValue=false)]
        public string LoanAnalysisRemarks7 { get; set; }

        /// <summary>
        /// Gets or Sets LoanAnalysisRemarks8
        /// </summary>
        [DataMember(Name="loanAnalysisRemarks8", EmitDefaultValue=false)]
        public string LoanAnalysisRemarks8 { get; set; }

        /// <summary>
        /// Gets or Sets LoanAnalysisRemarks9
        /// </summary>
        [DataMember(Name="loanAnalysisRemarks9", EmitDefaultValue=false)]
        public string LoanAnalysisRemarks9 { get; set; }

        /// <summary>
        /// Gets or Sets LoanCode
        /// </summary>
        [DataMember(Name="loanCode", EmitDefaultValue=false)]
        public string LoanCode { get; set; }

        /// <summary>
        /// Gets or Sets LoanProcedure
        /// </summary>
        [DataMember(Name="loanProcedure", EmitDefaultValue=false)]
        public string LoanProcedure { get; set; }

        /// <summary>
        /// Gets or Sets LoanProcessedUnderAU
        /// </summary>
        [DataMember(Name="loanProcessedUnderAU", EmitDefaultValue=false)]
        public bool? LoanProcessedUnderAU { get; set; }

        /// <summary>
        /// Gets or Sets LoanSummaryRemarks1
        /// </summary>
        [DataMember(Name="loanSummaryRemarks1", EmitDefaultValue=false)]
        public string LoanSummaryRemarks1 { get; set; }

        /// <summary>
        /// Gets or Sets LoanSummaryRemarks2
        /// </summary>
        [DataMember(Name="loanSummaryRemarks2", EmitDefaultValue=false)]
        public string LoanSummaryRemarks2 { get; set; }

        /// <summary>
        /// Gets or Sets LoanSummaryRemarks3
        /// </summary>
        [DataMember(Name="loanSummaryRemarks3", EmitDefaultValue=false)]
        public string LoanSummaryRemarks3 { get; set; }

        /// <summary>
        /// Gets or Sets LoanSummaryRemarks4
        /// </summary>
        [DataMember(Name="loanSummaryRemarks4", EmitDefaultValue=false)]
        public string LoanSummaryRemarks4 { get; set; }

        /// <summary>
        /// Gets or Sets LoanSummaryRemarks5
        /// </summary>
        [DataMember(Name="loanSummaryRemarks5", EmitDefaultValue=false)]
        public string LoanSummaryRemarks5 { get; set; }

        /// <summary>
        /// Gets or Sets LoanSummaryRemarks6
        /// </summary>
        [DataMember(Name="loanSummaryRemarks6", EmitDefaultValue=false)]
        public string LoanSummaryRemarks6 { get; set; }

        /// <summary>
        /// Gets or Sets LoanSummaryRemarks7
        /// </summary>
        [DataMember(Name="loanSummaryRemarks7", EmitDefaultValue=false)]
        public string LoanSummaryRemarks7 { get; set; }

        /// <summary>
        /// Gets or Sets LoanSummaryRemarks8
        /// </summary>
        [DataMember(Name="loanSummaryRemarks8", EmitDefaultValue=false)]
        public string LoanSummaryRemarks8 { get; set; }

        /// <summary>
        /// Gets or Sets LotDimensions
        /// </summary>
        [DataMember(Name="lotDimensions", EmitDefaultValue=false)]
        public string LotDimensions { get; set; }

        /// <summary>
        /// Gets or Sets MailingAddress
        /// </summary>
        [DataMember(Name="mailingAddress", EmitDefaultValue=false)]
        public string MailingAddress { get; set; }

        /// <summary>
        /// Gets or Sets MailingCity
        /// </summary>
        [DataMember(Name="mailingCity", EmitDefaultValue=false)]
        public string MailingCity { get; set; }

        /// <summary>
        /// Gets or Sets MailingPostalCode
        /// </summary>
        [DataMember(Name="mailingPostalCode", EmitDefaultValue=false)]
        public string MailingPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets MailingState
        /// </summary>
        [DataMember(Name="mailingState", EmitDefaultValue=false)]
        public string MailingState { get; set; }

        /// <summary>
        /// Gets or Sets ManufacturedHome
        /// </summary>
        [DataMember(Name="manufacturedHome", EmitDefaultValue=false)]
        public string ManufacturedHome { get; set; }

        /// <summary>
        /// Gets or Sets MCRVNumber
        /// </summary>
        [DataMember(Name="mCRVNumber", EmitDefaultValue=false)]
        public string MCRVNumber { get; set; }

        /// <summary>
        /// Gets or Sets MilitaryBranchOfService
        /// </summary>
        [DataMember(Name="militaryBranchOfService", EmitDefaultValue=false)]
        public string MilitaryBranchOfService { get; set; }

        /// <summary>
        /// Gets or Sets MilitaryServices
        /// </summary>
        [DataMember(Name="militaryServices", EmitDefaultValue=false)]
        public List<LoanContractVaLoanDataMilitaryServices> MilitaryServices { get; set; }

        /// <summary>
        /// Gets or Sets MineralRightsReserved
        /// </summary>
        [DataMember(Name="mineralRightsReserved", EmitDefaultValue=false)]
        public string MineralRightsReserved { get; set; }

        /// <summary>
        /// Gets or Sets NameOfOccupant
        /// </summary>
        [DataMember(Name="nameOfOccupant", EmitDefaultValue=false)]
        public string NameOfOccupant { get; set; }

        /// <summary>
        /// Gets or Sets NameOfOwner
        /// </summary>
        [DataMember(Name="nameOfOwner", EmitDefaultValue=false)]
        public string NameOfOwner { get; set; }

        /// <summary>
        /// Gets or Sets NameOfWarrantyProgram
        /// </summary>
        [DataMember(Name="nameOfWarrantyProgram", EmitDefaultValue=false)]
        public string NameOfWarrantyProgram { get; set; }

        /// <summary>
        /// Gets or Sets NegativeRents
        /// </summary>
        [DataMember(Name="negativeRents", EmitDefaultValue=false)]
        public double? NegativeRents { get; set; }

        /// <summary>
        /// Gets or Sets NoEnergyImprovements
        /// </summary>
        [DataMember(Name="noEnergyImprovements", EmitDefaultValue=false)]
        public bool? NoEnergyImprovements { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfBuildings
        /// </summary>
        [DataMember(Name="numberOfBuildings", EmitDefaultValue=false)]
        public string NumberOfBuildings { get; set; }

        /// <summary>
        /// Gets or Sets OccupantTelephone
        /// </summary>
        [DataMember(Name="occupantTelephone", EmitDefaultValue=false)]
        public string OccupantTelephone { get; set; }

        /// <summary>
        /// Gets or Sets OnMilitaryDutyFollowingSeparation
        /// </summary>
        [DataMember(Name="onMilitaryDutyFollowingSeparation", EmitDefaultValue=false)]
        public bool? OnMilitaryDutyFollowingSeparation { get; set; }

        /// <summary>
        /// Gets or Sets OriginalInterestRate
        /// </summary>
        [DataMember(Name="originalInterestRate", EmitDefaultValue=false)]
        public double? OriginalInterestRate { get; set; }

        /// <summary>
        /// Gets or Sets OriginalLoanAmount
        /// </summary>
        [DataMember(Name="originalLoanAmount", EmitDefaultValue=false)]
        public double? OriginalLoanAmount { get; set; }

        /// <summary>
        /// Gets or Sets OriginalTerm
        /// </summary>
        [DataMember(Name="originalTerm", EmitDefaultValue=false)]
        public int? OriginalTerm { get; set; }

        /// <summary>
        /// Gets or Sets OriginalValueEstimateChanged
        /// </summary>
        [DataMember(Name="originalValueEstimateChanged", EmitDefaultValue=false)]
        public bool? OriginalValueEstimateChanged { get; set; }

        /// <summary>
        /// Gets or Sets OriginationFeeAmount
        /// </summary>
        [DataMember(Name="originationFeeAmount", EmitDefaultValue=false)]
        public double? OriginationFeeAmount { get; set; }

        /// <summary>
        /// Gets or Sets OtherClosingCosts
        /// </summary>
        [DataMember(Name="otherClosingCosts", EmitDefaultValue=false)]
        public double? OtherClosingCosts { get; set; }

        /// <summary>
        /// Gets or Sets OtherImprovements
        /// </summary>
        [DataMember(Name="otherImprovements", EmitDefaultValue=false)]
        public bool? OtherImprovements { get; set; }

        /// <summary>
        /// Gets or Sets PaidInFullVALoanNumber
        /// </summary>
        [DataMember(Name="paidInFullVALoanNumber", EmitDefaultValue=false)]
        public string PaidInFullVALoanNumber { get; set; }

        /// <summary>
        /// Gets or Sets PayoffIndicator1
        /// </summary>
        [DataMember(Name="payoffIndicator1", EmitDefaultValue=false)]
        public bool? PayoffIndicator1 { get; set; }

        /// <summary>
        /// Gets or Sets PayoffIndicator2
        /// </summary>
        [DataMember(Name="payoffIndicator2", EmitDefaultValue=false)]
        public bool? PayoffIndicator2 { get; set; }

        /// <summary>
        /// Gets or Sets PayoffIndicator3
        /// </summary>
        [DataMember(Name="payoffIndicator3", EmitDefaultValue=false)]
        public bool? PayoffIndicator3 { get; set; }

        /// <summary>
        /// Gets or Sets PayoffIndicator4
        /// </summary>
        [DataMember(Name="payoffIndicator4", EmitDefaultValue=false)]
        public bool? PayoffIndicator4 { get; set; }

        /// <summary>
        /// Gets or Sets PayoffIndicator5
        /// </summary>
        [DataMember(Name="payoffIndicator5", EmitDefaultValue=false)]
        public bool? PayoffIndicator5 { get; set; }

        /// <summary>
        /// Gets or Sets PayoffIndicator6
        /// </summary>
        [DataMember(Name="payoffIndicator6", EmitDefaultValue=false)]
        public bool? PayoffIndicator6 { get; set; }

        /// <summary>
        /// Gets or Sets PayoffIndicator7
        /// </summary>
        [DataMember(Name="payoffIndicator7", EmitDefaultValue=false)]
        public bool? PayoffIndicator7 { get; set; }

        /// <summary>
        /// Gets or Sets PayoffIndicator8
        /// </summary>
        [DataMember(Name="payoffIndicator8", EmitDefaultValue=false)]
        public bool? PayoffIndicator8 { get; set; }

        /// <summary>
        /// Gets or Sets PayoffIndicator9
        /// </summary>
        [DataMember(Name="payoffIndicator9", EmitDefaultValue=false)]
        public bool? PayoffIndicator9 { get; set; }

        /// <summary>
        /// Gets or Sets PlansSubmitted
        /// </summary>
        [DataMember(Name="plansSubmitted", EmitDefaultValue=false)]
        public string PlansSubmitted { get; set; }

        /// <summary>
        /// Gets or Sets POCAddress
        /// </summary>
        [DataMember(Name="pOCAddress", EmitDefaultValue=false)]
        public string POCAddress { get; set; }

        /// <summary>
        /// Gets or Sets POCCity
        /// </summary>
        [DataMember(Name="pOCCity", EmitDefaultValue=false)]
        public string POCCity { get; set; }

        /// <summary>
        /// Gets or Sets POCName
        /// </summary>
        [DataMember(Name="pOCName", EmitDefaultValue=false)]
        public string POCName { get; set; }

        /// <summary>
        /// Gets or Sets POCPhone
        /// </summary>
        [DataMember(Name="pOCPhone", EmitDefaultValue=false)]
        public string POCPhone { get; set; }

        /// <summary>
        /// Gets or Sets POCState
        /// </summary>
        [DataMember(Name="pOCState", EmitDefaultValue=false)]
        public string POCState { get; set; }

        /// <summary>
        /// Gets or Sets POCZipCode
        /// </summary>
        [DataMember(Name="pOCZipCode", EmitDefaultValue=false)]
        public string POCZipCode { get; set; }

        /// <summary>
        /// Gets or Sets PreliminaryDiscountAmount
        /// </summary>
        [DataMember(Name="preliminaryDiscountAmount", EmitDefaultValue=false)]
        public double? PreliminaryDiscountAmount { get; set; }

        /// <summary>
        /// Gets or Sets PreliminaryFundingFeeAmount
        /// </summary>
        [DataMember(Name="preliminaryFundingFeeAmount", EmitDefaultValue=false)]
        public double? PreliminaryFundingFeeAmount { get; set; }

        /// <summary>
        /// Gets or Sets PreliminaryTotal
        /// </summary>
        [DataMember(Name="preliminaryTotal", EmitDefaultValue=false)]
        public double? PreliminaryTotal { get; set; }

        /// <summary>
        /// Gets or Sets PreviousVALoanIndicator
        /// </summary>
        [DataMember(Name="previousVALoanIndicator", EmitDefaultValue=false)]
        public bool? PreviousVALoanIndicator { get; set; }

        /// <summary>
        /// Gets or Sets PreviousVaLoans
        /// </summary>
        [DataMember(Name="previousVaLoans", EmitDefaultValue=false)]
        public List<LoanContractVaLoanDataPreviousVaLoans> PreviousVaLoans { get; set; }

        /// <summary>
        /// Gets or Sets PriorLoanType
        /// </summary>
        [DataMember(Name="priorLoanType", EmitDefaultValue=false)]
        public string PriorLoanType { get; set; }

        /// <summary>
        /// Gets or Sets PropertyDesignation
        /// </summary>
        [DataMember(Name="propertyDesignation", EmitDefaultValue=false)]
        public string PropertyDesignation { get; set; }

        /// <summary>
        /// Gets or Sets PropertyGrossLivingArea
        /// </summary>
        [DataMember(Name="propertyGrossLivingArea", EmitDefaultValue=false)]
        public int? PropertyGrossLivingArea { get; set; }

        /// <summary>
        /// Gets or Sets PropertyLegalDescription1
        /// </summary>
        [DataMember(Name="propertyLegalDescription1", EmitDefaultValue=false)]
        public string PropertyLegalDescription1 { get; set; }

        /// <summary>
        /// Gets or Sets PropertyLegalDescription2
        /// </summary>
        [DataMember(Name="propertyLegalDescription2", EmitDefaultValue=false)]
        public string PropertyLegalDescription2 { get; set; }

        /// <summary>
        /// Gets or Sets PropertyLegalDescription3
        /// </summary>
        [DataMember(Name="propertyLegalDescription3", EmitDefaultValue=false)]
        public string PropertyLegalDescription3 { get; set; }

        /// <summary>
        /// Gets or Sets PropertyLegalDescription4
        /// </summary>
        [DataMember(Name="propertyLegalDescription4", EmitDefaultValue=false)]
        public string PropertyLegalDescription4 { get; set; }

        /// <summary>
        /// Gets or Sets PropertyOccupancyType
        /// </summary>
        [DataMember(Name="propertyOccupancyType", EmitDefaultValue=false)]
        public string PropertyOccupancyType { get; set; }

        /// <summary>
        /// Gets or Sets ProposedSaleContractAttached
        /// </summary>
        [DataMember(Name="proposedSaleContractAttached", EmitDefaultValue=false)]
        public bool? ProposedSaleContractAttached { get; set; }

        /// <summary>
        /// Gets or Sets PurposeOfLoan
        /// </summary>
        [DataMember(Name="purposeOfLoan", EmitDefaultValue=false)]
        public string PurposeOfLoan { get; set; }

        /// <summary>
        /// Gets or Sets RangeOvenIndicator
        /// </summary>
        [DataMember(Name="rangeOvenIndicator", EmitDefaultValue=false)]
        public bool? RangeOvenIndicator { get; set; }

        /// <summary>
        /// Gets or Sets RefrigeratorIndicator
        /// </summary>
        [DataMember(Name="refrigeratorIndicator", EmitDefaultValue=false)]
        public bool? RefrigeratorIndicator { get; set; }

        /// <summary>
        /// Gets or Sets Rent
        /// </summary>
        [DataMember(Name="rent", EmitDefaultValue=false)]
        public string Rent { get; set; }

        /// <summary>
        /// Gets or Sets ReplacementOfSystem
        /// </summary>
        [DataMember(Name="replacementOfSystem", EmitDefaultValue=false)]
        public bool? ReplacementOfSystem { get; set; }

        /// <summary>
        /// Gets or Sets RiskClasification
        /// </summary>
        [DataMember(Name="riskClasification", EmitDefaultValue=false)]
        public string RiskClasification { get; set; }

        /// <summary>
        /// Gets or Sets ServiceNumber
        /// </summary>
        [DataMember(Name="serviceNumber", EmitDefaultValue=false)]
        public string ServiceNumber { get; set; }

        /// <summary>
        /// Gets or Sets SolarHeatingOrCooling
        /// </summary>
        [DataMember(Name="solarHeatingOrCooling", EmitDefaultValue=false)]
        public bool? SolarHeatingOrCooling { get; set; }

        /// <summary>
        /// Gets or Sets SpecialAssessmentComments1
        /// </summary>
        [DataMember(Name="specialAssessmentComments1", EmitDefaultValue=false)]
        public string SpecialAssessmentComments1 { get; set; }

        /// <summary>
        /// Gets or Sets SpecialAssessmentComments2
        /// </summary>
        [DataMember(Name="specialAssessmentComments2", EmitDefaultValue=false)]
        public string SpecialAssessmentComments2 { get; set; }

        /// <summary>
        /// Gets or Sets SpecialAssessmentComments3
        /// </summary>
        [DataMember(Name="specialAssessmentComments3", EmitDefaultValue=false)]
        public string SpecialAssessmentComments3 { get; set; }

        /// <summary>
        /// Gets or Sets StreetAccess
        /// </summary>
        [DataMember(Name="streetAccess", EmitDefaultValue=false)]
        public string StreetAccess { get; set; }

        /// <summary>
        /// Gets or Sets StreetMaintenance
        /// </summary>
        [DataMember(Name="streetMaintenance", EmitDefaultValue=false)]
        public string StreetMaintenance { get; set; }

        /// <summary>
        /// Gets or Sets SystemUsed
        /// </summary>
        [DataMember(Name="systemUsed", EmitDefaultValue=false)]
        public string SystemUsed { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets TitleLimitations1
        /// </summary>
        [DataMember(Name="titleLimitations1", EmitDefaultValue=false)]
        public string TitleLimitations1 { get; set; }

        /// <summary>
        /// Gets or Sets TitleLimitations2
        /// </summary>
        [DataMember(Name="titleLimitations2", EmitDefaultValue=false)]
        public string TitleLimitations2 { get; set; }

        /// <summary>
        /// Gets or Sets TitleLimitations3
        /// </summary>
        [DataMember(Name="titleLimitations3", EmitDefaultValue=false)]
        public string TitleLimitations3 { get; set; }

        /// <summary>
        /// Gets or Sets TotalBaths
        /// </summary>
        [DataMember(Name="totalBaths", EmitDefaultValue=false)]
        public double? TotalBaths { get; set; }

        /// <summary>
        /// Gets or Sets TotalBedrooms
        /// </summary>
        [DataMember(Name="totalBedrooms", EmitDefaultValue=false)]
        public int? TotalBedrooms { get; set; }

        /// <summary>
        /// Gets or Sets TotalDebtMonthlyPayment
        /// </summary>
        [DataMember(Name="totalDebtMonthlyPayment", EmitDefaultValue=false)]
        public double? TotalDebtMonthlyPayment { get; set; }

        /// <summary>
        /// Gets or Sets TotalDiscountPointCharged
        /// </summary>
        [DataMember(Name="totalDiscountPointCharged", EmitDefaultValue=false)]
        public double? TotalDiscountPointCharged { get; set; }

        /// <summary>
        /// Gets or Sets TotalDiscountPointsCharged
        /// </summary>
        [DataMember(Name="totalDiscountPointsCharged", EmitDefaultValue=false)]
        public double? TotalDiscountPointsCharged { get; set; }

        /// <summary>
        /// Gets or Sets TotalForMaxLoanAmount
        /// </summary>
        [DataMember(Name="totalForMaxLoanAmount", EmitDefaultValue=false)]
        public double? TotalForMaxLoanAmount { get; set; }

        /// <summary>
        /// Gets or Sets TotalRooms
        /// </summary>
        [DataMember(Name="totalRooms", EmitDefaultValue=false)]
        public int? TotalRooms { get; set; }

        /// <summary>
        /// Gets or Sets TypeOfHybridARM
        /// </summary>
        [DataMember(Name="typeOfHybridARM", EmitDefaultValue=false)]
        public string TypeOfHybridARM { get; set; }

        /// <summary>
        /// Gets or Sets TypeOfMortgage
        /// </summary>
        [DataMember(Name="typeOfMortgage", EmitDefaultValue=false)]
        public string TypeOfMortgage { get; set; }

        /// <summary>
        /// Gets or Sets TypeOfOwnsership
        /// </summary>
        [DataMember(Name="typeOfOwnsership", EmitDefaultValue=false)]
        public string TypeOfOwnsership { get; set; }

        /// <summary>
        /// Gets or Sets TypeOfStructure
        /// </summary>
        [DataMember(Name="typeOfStructure", EmitDefaultValue=false)]
        public string TypeOfStructure { get; set; }

        /// <summary>
        /// Gets or Sets TypeOfVeteran
        /// </summary>
        [DataMember(Name="typeOfVeteran", EmitDefaultValue=false)]
        public string TypeOfVeteran { get; set; }

        /// <summary>
        /// Gets or Sets UtilitiesElectricDescription
        /// </summary>
        [DataMember(Name="utilitiesElectricDescription", EmitDefaultValue=false)]
        public string UtilitiesElectricDescription { get; set; }

        /// <summary>
        /// Gets or Sets UtilitiesGasDescription
        /// </summary>
        [DataMember(Name="utilitiesGasDescription", EmitDefaultValue=false)]
        public string UtilitiesGasDescription { get; set; }

        /// <summary>
        /// Gets or Sets UtilitiesSewerDescription
        /// </summary>
        [DataMember(Name="utilitiesSewerDescription", EmitDefaultValue=false)]
        public string UtilitiesSewerDescription { get; set; }

        /// <summary>
        /// Gets or Sets UtilitiesWaterDescription
        /// </summary>
        [DataMember(Name="utilitiesWaterDescription", EmitDefaultValue=false)]
        public string UtilitiesWaterDescription { get; set; }

        /// <summary>
        /// Gets or Sets VABenefitRelatedIndebtedness
        /// </summary>
        [DataMember(Name="vABenefitRelatedIndebtedness", EmitDefaultValue=false)]
        public string VABenefitRelatedIndebtedness { get; set; }

        /// <summary>
        /// Gets or Sets VABuilderIDNo
        /// </summary>
        [DataMember(Name="vABuilderIDNo", EmitDefaultValue=false)]
        public string VABuilderIDNo { get; set; }

        /// <summary>
        /// Gets or Sets VAClaimFolderNumber
        /// </summary>
        [DataMember(Name="vAClaimFolderNumber", EmitDefaultValue=false)]
        public string VAClaimFolderNumber { get; set; }

        /// <summary>
        /// Gets or Sets VAClaimNumber
        /// </summary>
        [DataMember(Name="vAClaimNumber", EmitDefaultValue=false)]
        public string VAClaimNumber { get; set; }

        /// <summary>
        /// Gets or Sets VaLoanSummaryApplicantType
        /// </summary>
        [DataMember(Name="vaLoanSummaryApplicantType", EmitDefaultValue=false)]
        public string VaLoanSummaryApplicantType { get; set; }

        /// <summary>
        /// Gets or Sets VentFanIndicator
        /// </summary>
        [DataMember(Name="ventFanIndicator", EmitDefaultValue=false)]
        public bool? VentFanIndicator { get; set; }

        /// <summary>
        /// Gets or Sets VeteranDischargedIndicator
        /// </summary>
        [DataMember(Name="veteranDischargedIndicator", EmitDefaultValue=false)]
        public bool? VeteranDischargedIndicator { get; set; }

        /// <summary>
        /// Gets or Sets VeteranServiceType
        /// </summary>
        [DataMember(Name="veteranServiceType", EmitDefaultValue=false)]
        public string VeteranServiceType { get; set; }

        /// <summary>
        /// Gets or Sets WarrantorAddress
        /// </summary>
        [DataMember(Name="warrantorAddress", EmitDefaultValue=false)]
        public string WarrantorAddress { get; set; }

        /// <summary>
        /// Gets or Sets WarrantorCity
        /// </summary>
        [DataMember(Name="warrantorCity", EmitDefaultValue=false)]
        public string WarrantorCity { get; set; }

        /// <summary>
        /// Gets or Sets WarrantorName
        /// </summary>
        [DataMember(Name="warrantorName", EmitDefaultValue=false)]
        public string WarrantorName { get; set; }

        /// <summary>
        /// Gets or Sets WarrantorPhone
        /// </summary>
        [DataMember(Name="warrantorPhone", EmitDefaultValue=false)]
        public string WarrantorPhone { get; set; }

        /// <summary>
        /// Gets or Sets WarrantorPostalCode
        /// </summary>
        [DataMember(Name="warrantorPostalCode", EmitDefaultValue=false)]
        public string WarrantorPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets WarrantorState
        /// </summary>
        [DataMember(Name="warrantorState", EmitDefaultValue=false)]
        public string WarrantorState { get; set; }

        /// <summary>
        /// Gets or Sets WarrantyProgramExpirationDate
        /// </summary>
        [DataMember(Name="warrantyProgramExpirationDate", EmitDefaultValue=false)]
        public DateTime? WarrantyProgramExpirationDate { get; set; }

        /// <summary>
        /// Gets or Sets WWCarpetIndicator
        /// </summary>
        [DataMember(Name="wWCarpetIndicator", EmitDefaultValue=false)]
        public bool? WWCarpetIndicator { get; set; }

        /// <summary>
        /// Gets or Sets VAOriginalMonthlyPayment
        /// </summary>
        [DataMember(Name="vAOriginalMonthlyPayment", EmitDefaultValue=false)]
        public double? VAOriginalMonthlyPayment { get; set; }

        /// <summary>
        /// Gets or Sets VAOriginalAmortizationType
        /// </summary>
        [DataMember(Name="vAOriginalAmortizationType", EmitDefaultValue=false)]
        public string VAOriginalAmortizationType { get; set; }

        /// <summary>
        /// Gets or Sets VARecoupmentMonthlyDecreaseInPayment
        /// </summary>
        [DataMember(Name="vARecoupmentMonthlyDecreaseInPayment", EmitDefaultValue=false)]
        public double? VARecoupmentMonthlyDecreaseInPayment { get; set; }

        /// <summary>
        /// Gets or Sets VARecoupmentTotalClosingCosts
        /// </summary>
        [DataMember(Name="vARecoupmentTotalClosingCosts", EmitDefaultValue=false)]
        public double? VARecoupmentTotalClosingCosts { get; set; }

        /// <summary>
        /// Gets or Sets VARecoupmentExcludePrepaids
        /// </summary>
        [DataMember(Name="vARecoupmentExcludePrepaids", EmitDefaultValue=false)]
        public bool? VARecoupmentExcludePrepaids { get; set; }

        /// <summary>
        /// Gets or Sets VARecoupmentClosingCosts
        /// </summary>
        [DataMember(Name="vARecoupmentClosingCosts", EmitDefaultValue=false)]
        public int? VARecoupmentClosingCosts { get; set; }

        /// <summary>
        /// Gets or Sets VARecoupmentYears
        /// </summary>
        [DataMember(Name="vARecoupmentYears", EmitDefaultValue=false)]
        public int? VARecoupmentYears { get; set; }

        /// <summary>
        /// Gets or Sets VARecoupmentMonths
        /// </summary>
        [DataMember(Name="vARecoupmentMonths", EmitDefaultValue=false)]
        public int? VARecoupmentMonths { get; set; }

        /// <summary>
        /// Gets or Sets VALatePaymentIn6Months
        /// </summary>
        [DataMember(Name="vALatePaymentIn6Months", EmitDefaultValue=false)]
        public bool? VALatePaymentIn6Months { get; set; }

        /// <summary>
        /// Gets or Sets VAIsDelinquent30Days
        /// </summary>
        [DataMember(Name="vAIsDelinquent30Days", EmitDefaultValue=false)]
        public bool? VAIsDelinquent30Days { get; set; }

        /// <summary>
        /// Gets or Sets TotalMonthlyPayment
        /// </summary>
        [DataMember(Name="totalMonthlyPayment", EmitDefaultValue=false)]
        public double? TotalMonthlyPayment { get; set; }

        /// <summary>
        /// Gets or Sets TotalProposedMonthlyPayment
        /// </summary>
        [DataMember(Name="totalProposedMonthlyPayment", EmitDefaultValue=false)]
        public double? TotalProposedMonthlyPayment { get; set; }

        /// <summary>
        /// Gets or Sets ExcludeTaxesInsuranceIndicator
        /// </summary>
        [DataMember(Name="excludeTaxesInsuranceIndicator", EmitDefaultValue=false)]
        public bool? ExcludeTaxesInsuranceIndicator { get; set; }

        /// <summary>
        /// Gets or Sets ApplicantBirthDate
        /// </summary>
        [DataMember(Name="applicantBirthDate", EmitDefaultValue=false)]
        public DateTime? ApplicantBirthDate { get; set; }

        /// <summary>
        /// Gets or Sets ApplicantEmailAddressText
        /// </summary>
        [DataMember(Name="applicantEmailAddressText", EmitDefaultValue=false)]
        public string ApplicantEmailAddressText { get; set; }

        /// <summary>
        /// Gets or Sets ApplicantHomePhoneNumber
        /// </summary>
        [DataMember(Name="applicantHomePhoneNumber", EmitDefaultValue=false)]
        public string ApplicantHomePhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets ApplicantFirstNameWithMiddleName
        /// </summary>
        [DataMember(Name="applicantFirstNameWithMiddleName", EmitDefaultValue=false)]
        public string ApplicantFirstNameWithMiddleName { get; set; }

        /// <summary>
        /// Gets or Sets ApplicantLastNameWithSuffix
        /// </summary>
        [DataMember(Name="applicantLastNameWithSuffix", EmitDefaultValue=false)]
        public string ApplicantLastNameWithSuffix { get; set; }

        /// <summary>
        /// Gets or Sets ApplicantTaxIdentificationIdentifier
        /// </summary>
        [DataMember(Name="applicantTaxIdentificationIdentifier", EmitDefaultValue=false)]
        public string ApplicantTaxIdentificationIdentifier { get; set; }

        /// <summary>
        /// Gets or Sets ApplicantHmdaGenderType
        /// </summary>
        [DataMember(Name="applicantHmdaGenderType", EmitDefaultValue=false)]
        public string ApplicantHmdaGenderType { get; set; }

        /// <summary>
        /// Gets or Sets ApplicantAddressStreetLine1
        /// </summary>
        [DataMember(Name="applicantAddressStreetLine1", EmitDefaultValue=false)]
        public string ApplicantAddressStreetLine1 { get; set; }

        /// <summary>
        /// Gets or Sets ApplicantAddressCity
        /// </summary>
        [DataMember(Name="applicantAddressCity", EmitDefaultValue=false)]
        public string ApplicantAddressCity { get; set; }

        /// <summary>
        /// Gets or Sets ApplicantAddressState
        /// </summary>
        [DataMember(Name="applicantAddressState", EmitDefaultValue=false)]
        public string ApplicantAddressState { get; set; }

        /// <summary>
        /// Gets or Sets ApplicantAddressPostalCode
        /// </summary>
        [DataMember(Name="applicantAddressPostalCode", EmitDefaultValue=false)]
        public string ApplicantAddressPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets VABuilderDescription
        /// </summary>
        [DataMember(Name="vABuilderDescription", EmitDefaultValue=false)]
        public string VABuilderDescription { get; set; }

        /// <summary>
        /// Gets or Sets AutomaticProcedure
        /// </summary>
        [DataMember(Name="automaticProcedure", EmitDefaultValue=false)]
        public bool? AutomaticProcedure { get; set; }

        /// <summary>
        /// Gets or Sets PriorApprovalProcedure
        /// </summary>
        [DataMember(Name="priorApprovalProcedure", EmitDefaultValue=false)]
        public bool? PriorApprovalProcedure { get; set; }

        /// <summary>
        /// Gets or Sets FirstChattelLoanType
        /// </summary>
        [DataMember(Name="firstChattelLoanType", EmitDefaultValue=false)]
        public bool? FirstChattelLoanType { get; set; }

        /// <summary>
        /// Gets or Sets UnsecuredLoanType
        /// </summary>
        [DataMember(Name="unsecuredLoanType", EmitDefaultValue=false)]
        public bool? UnsecuredLoanType { get; set; }

        /// <summary>
        /// Gets or Sets OtherLoanType
        /// </summary>
        [DataMember(Name="otherLoanType", EmitDefaultValue=false)]
        public bool? OtherLoanType { get; set; }

        /// <summary>
        /// Gets or Sets OtherDescriptionLoanType
        /// </summary>
        [DataMember(Name="otherDescriptionLoanType", EmitDefaultValue=false)]
        public string OtherDescriptionLoanType { get; set; }

        /// <summary>
        /// Gets or Sets OtherEstateProperty
        /// </summary>
        [DataMember(Name="otherEstateProperty", EmitDefaultValue=false)]
        public bool? OtherEstateProperty { get; set; }

        /// <summary>
        /// Gets or Sets OtherDescriptionEstateProperty
        /// </summary>
        [DataMember(Name="otherDescriptionEstateProperty", EmitDefaultValue=false)]
        public string OtherDescriptionEstateProperty { get; set; }

        /// <summary>
        /// Gets or Sets AnnualSpecialAssessment
        /// </summary>
        [DataMember(Name="annualSpecialAssessment", EmitDefaultValue=false)]
        public double? AnnualSpecialAssessment { get; set; }

        /// <summary>
        /// Gets or Sets TotalUnpaidSpecialAssessments
        /// </summary>
        [DataMember(Name="totalUnpaidSpecialAssessments", EmitDefaultValue=false)]
        public double? TotalUnpaidSpecialAssessments { get; set; }

        /// <summary>
        /// Gets or Sets NonrealtyDescription
        /// </summary>
        [DataMember(Name="nonrealtyDescription", EmitDefaultValue=false)]
        public string NonrealtyDescription { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalSecurityDescription
        /// </summary>
        [DataMember(Name="additionalSecurityDescription", EmitDefaultValue=false)]
        public string AdditionalSecurityDescription { get; set; }

        /// <summary>
        /// Gets or Sets DateAquiredLand
        /// </summary>
        [DataMember(Name="dateAquiredLand", EmitDefaultValue=false)]
        public DateTime? DateAquiredLand { get; set; }

        /// <summary>
        /// Gets or Sets LandPurchasePrice
        /// </summary>
        [DataMember(Name="landPurchasePrice", EmitDefaultValue=false)]
        public double? LandPurchasePrice { get; set; }

        /// <summary>
        /// Gets or Sets AmountTypeWithheld
        /// </summary>
        [DataMember(Name="amountTypeWithheld", EmitDefaultValue=false)]
        public string AmountTypeWithheld { get; set; }

        /// <summary>
        /// Gets or Sets AmountWithheld
        /// </summary>
        [DataMember(Name="amountWithheld", EmitDefaultValue=false)]
        public double? AmountWithheld { get; set; }

        /// <summary>
        /// Gets or Sets ReasonableValueCompleted
        /// </summary>
        [DataMember(Name="reasonableValueCompleted", EmitDefaultValue=false)]
        public bool? ReasonableValueCompleted { get; set; }

        /// <summary>
        /// Gets or Sets DisabilityAmountCollected
        /// </summary>
        [DataMember(Name="disabilityAmountCollected", EmitDefaultValue=false)]
        public double? DisabilityAmountCollected { get; set; }

        /// <summary>
        /// Gets or Sets PestReportFee
        /// </summary>
        [DataMember(Name="pestReportFee", EmitDefaultValue=false)]
        public double? PestReportFee { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingSARName
        /// </summary>
        [DataMember(Name="vATrackingSARName", EmitDefaultValue=false)]
        public string VATrackingSARName { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingSARID
        /// </summary>
        [DataMember(Name="vATrackingSARID", EmitDefaultValue=false)]
        public string VATrackingSARID { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingIsSARLAPPCertified
        /// </summary>
        [DataMember(Name="vATrackingIsSARLAPPCertified", EmitDefaultValue=false)]
        public bool? VATrackingIsSARLAPPCertified { get; set; }

        /// <summary>
        /// Gets or Sets VAAppraisalSentDate
        /// </summary>
        [DataMember(Name="vAAppraisalSentDate", EmitDefaultValue=false)]
        public DateTime? VAAppraisalSentDate { get; set; }

        /// <summary>
        /// Gets or Sets VANOVDateReceived
        /// </summary>
        [DataMember(Name="vANOVDateReceived", EmitDefaultValue=false)]
        public DateTime? VANOVDateReceived { get; set; }

        /// <summary>
        /// Gets or Sets VANOVDateReviewed
        /// </summary>
        [DataMember(Name="vANOVDateReviewed", EmitDefaultValue=false)]
        public DateTime? VANOVDateReviewed { get; set; }

        /// <summary>
        /// Gets or Sets VANOVIssuedDate
        /// </summary>
        [DataMember(Name="vANOVIssuedDate", EmitDefaultValue=false)]
        public DateTime? VANOVIssuedDate { get; set; }

        /// <summary>
        /// Gets or Sets VADateNOVAppraisalMailedToBorrower
        /// </summary>
        [DataMember(Name="vADateNOVAppraisalMailedToBorrower", EmitDefaultValue=false)]
        public DateTime? VADateNOVAppraisalMailedToBorrower { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingOrderedDate
        /// </summary>
        [DataMember(Name="vATrackingOrderedDate", EmitDefaultValue=false)]
        public DateTime? VATrackingOrderedDate { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingCOEIssueDate
        /// </summary>
        [DataMember(Name="vATrackingCOEIssueDate", EmitDefaultValue=false)]
        public DateTime? VATrackingCOEIssueDate { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingCOEIssueHistory
        /// </summary>
        [DataMember(Name="vATrackingCOEIssueHistory", EmitDefaultValue=false)]
        public string VATrackingCOEIssueHistory { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingPaidDate
        /// </summary>
        [DataMember(Name="vATrackingPaidDate", EmitDefaultValue=false)]
        public DateTime? VATrackingPaidDate { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingReceiptReceived
        /// </summary>
        [DataMember(Name="vATrackingReceiptReceived", EmitDefaultValue=false)]
        public bool? VATrackingReceiptReceived { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingLoanGuaranteeCertReceipt
        /// </summary>
        [DataMember(Name="vATrackingLoanGuaranteeCertReceipt", EmitDefaultValue=false)]
        public DateTime? VATrackingLoanGuaranteeCertReceipt { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingGSAExclusionaryListChecked
        /// </summary>
        [DataMember(Name="vATrackingGSAExclusionaryListChecked", EmitDefaultValue=false)]
        public bool? VATrackingGSAExclusionaryListChecked { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingCertOfCommitmentIssued
        /// </summary>
        [DataMember(Name="vATrackingCertOfCommitmentIssued", EmitDefaultValue=false)]
        public DateTime? VATrackingCertOfCommitmentIssued { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingMasterCommitmentLockExpired
        /// </summary>
        [DataMember(Name="vATrackingMasterCommitmentLockExpired", EmitDefaultValue=false)]
        public DateTime? VATrackingMasterCommitmentLockExpired { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingFinalApprovalCommitmentDate
        /// </summary>
        [DataMember(Name="vATrackingFinalApprovalCommitmentDate", EmitDefaultValue=false)]
        public DateTime? VATrackingFinalApprovalCommitmentDate { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingPurchaseContractDate
        /// </summary>
        [DataMember(Name="vATrackingPurchaseContractDate", EmitDefaultValue=false)]
        public DateTime? VATrackingPurchaseContractDate { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingInuranceFloodPolicy
        /// </summary>
        [DataMember(Name="vATrackingInuranceFloodPolicy", EmitDefaultValue=false)]
        public bool? VATrackingInuranceFloodPolicy { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingInuranceHazardPolicy
        /// </summary>
        [DataMember(Name="vATrackingInuranceHazardPolicy", EmitDefaultValue=false)]
        public bool? VATrackingInuranceHazardPolicy { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingInuranceWoodDestroyingPolicy
        /// </summary>
        [DataMember(Name="vATrackingInuranceWoodDestroyingPolicy", EmitDefaultValue=false)]
        public bool? VATrackingInuranceWoodDestroyingPolicy { get; set; }

        /// <summary>
        /// Gets or Sets VATrackingInuranceWindOrHailPolicy
        /// </summary>
        [DataMember(Name="vATrackingInuranceWindOrHailPolicy", EmitDefaultValue=false)]
        public bool? VATrackingInuranceWindOrHailPolicy { get; set; }

        /// <summary>
        /// Gets or Sets VAQualificationCountryRegion
        /// </summary>
        [DataMember(Name="vAQualificationCountryRegion", EmitDefaultValue=false)]
        public string VAQualificationCountryRegion { get; set; }

        /// <summary>
        /// Gets or Sets VAQualification2ndTierEntitlement
        /// </summary>
        [DataMember(Name="vAQualification2ndTierEntitlement", EmitDefaultValue=false)]
        public string VAQualification2ndTierEntitlement { get; set; }

        /// <summary>
        /// Gets or Sets VAQualificationCountyLimits
        /// </summary>
        [DataMember(Name="vAQualificationCountyLimits", EmitDefaultValue=false)]
        public double? VAQualificationCountyLimits { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanContractVaLoanData {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Acres: ").Append(Acres).Append("\n");
            sb.Append("  AdministratorAddress: ").Append(AdministratorAddress).Append("\n");
            sb.Append("  AdministratorCity: ").Append(AdministratorCity).Append("\n");
            sb.Append("  AdministratorContact: ").Append(AdministratorContact).Append("\n");
            sb.Append("  AdministratorName: ").Append(AdministratorName).Append("\n");
            sb.Append("  AdministratorPostalCode: ").Append(AdministratorPostalCode).Append("\n");
            sb.Append("  AdministratorState: ").Append(AdministratorState).Append("\n");
            sb.Append("  AgeOfProperty: ").Append(AgeOfProperty).Append("\n");
            sb.Append("  AmountSpentOnEnergyImprovements: ").Append(AmountSpentOnEnergyImprovements).Append("\n");
            sb.Append("  AnnualGroundRent: ").Append(AnnualGroundRent).Append("\n");
            sb.Append("  AnnualMaintenanceAssessment: ").Append(AnnualMaintenanceAssessment).Append("\n");
            sb.Append("  AnnualRealEstateTaxes: ").Append(AnnualRealEstateTaxes).Append("\n");
            sb.Append("  AppraisalType: ").Append(AppraisalType).Append("\n");
            sb.Append("  AvailableForInspectionAMIndicator: ").Append(AvailableForInspectionAMIndicator).Append("\n");
            sb.Append("  AvailableForInspectionDateAndTime: ").Append(AvailableForInspectionDateAndTime).Append("\n");
            sb.Append("  BorrowerPaidDiscountPointsTotalAmount: ").Append(BorrowerPaidDiscountPointsTotalAmount).Append("\n");
            sb.Append("  BuildingType: ").Append(BuildingType).Append("\n");
            sb.Append("  BuyerPurchasingLotSeparately: ").Append(BuyerPurchasingLotSeparately).Append("\n");
            sb.Append("  CashPaymentFromVeteran: ").Append(CashPaymentFromVeteran).Append("\n");
            sb.Append("  ClaimDisabilityBenefits: ").Append(ClaimDisabilityBenefits).Append("\n");
            sb.Append("  ClothesWasherIndicator: ").Append(ClothesWasherIndicator).Append("\n");
            sb.Append("  ConstructionCompletedDate: ").Append(ConstructionCompletedDate).Append("\n");
            sb.Append("  ConstructionPlan: ").Append(ConstructionPlan).Append("\n");
            sb.Append("  ConstructionWarrantyIncluded: ").Append(ConstructionWarrantyIncluded).Append("\n");
            sb.Append("  ContractNoApprovedByVA: ").Append(ContractNoApprovedByVA).Append("\n");
            sb.Append("  CreditScore: ").Append(CreditScore).Append("\n");
            sb.Append("  CurrentlyOnMilitaryDuty: ").Append(CurrentlyOnMilitaryDuty).Append("\n");
            sb.Append("  DateOfAssignment: ").Append(DateOfAssignment).Append("\n");
            sb.Append("  DateSAR: ").Append(DateSAR).Append("\n");
            sb.Append("  DiscountPercentage: ").Append(DiscountPercentage).Append("\n");
            sb.Append("  DiscountPoint: ").Append(DiscountPoint).Append("\n");
            sb.Append("  DishwasherIndicator: ").Append(DishwasherIndicator).Append("\n");
            sb.Append("  DryerIndicator: ").Append(DryerIndicator).Append("\n");
            sb.Append("  EmailToBeNotifiedWhenUploaded: ").Append(EmailToBeNotifiedWhenUploaded).Append("\n");
            sb.Append("  EnergyImprovementsAdditionOfFeature: ").Append(EnergyImprovementsAdditionOfFeature).Append("\n");
            sb.Append("  EntitlementCode: ").Append(EntitlementCode).Append("\n");
            sb.Append("  EquipmentOtherDescription: ").Append(EquipmentOtherDescription).Append("\n");
            sb.Append("  FinalDiscountAmount: ").Append(FinalDiscountAmount).Append("\n");
            sb.Append("  FinalFundingFeeAmount: ").Append(FinalFundingFeeAmount).Append("\n");
            sb.Append("  FirstTimeUse: ").Append(FirstTimeUse).Append("\n");
            sb.Append("  FundingFeeExempt: ").Append(FundingFeeExempt).Append("\n");
            sb.Append("  GarbageDisposalIndicator: ").Append(GarbageDisposalIndicator).Append("\n");
            sb.Append("  InitialTotal: ").Append(InitialTotal).Append("\n");
            sb.Append("  InspectionWillBeMadeBy: ").Append(InspectionWillBeMadeBy).Append("\n");
            sb.Append("  Insulation: ").Append(Insulation).Append("\n");
            sb.Append("  InsuranceType: ").Append(InsuranceType).Append("\n");
            sb.Append("  IrregularLotSizeInSquareFeet: ").Append(IrregularLotSizeInSquareFeet).Append("\n");
            sb.Append("  IsDelinquent30Days: ").Append(IsDelinquent30Days).Append("\n");
            sb.Append("  KeysAtAddress: ").Append(KeysAtAddress).Append("\n");
            sb.Append("  LeaseholdType: ").Append(LeaseholdType).Append("\n");
            sb.Append("  LenderSAR: ").Append(LenderSAR).Append("\n");
            sb.Append("  LoanAnalysisRemarks1: ").Append(LoanAnalysisRemarks1).Append("\n");
            sb.Append("  LoanAnalysisRemarks2: ").Append(LoanAnalysisRemarks2).Append("\n");
            sb.Append("  LoanAnalysisRemarks3: ").Append(LoanAnalysisRemarks3).Append("\n");
            sb.Append("  LoanAnalysisRemarks4: ").Append(LoanAnalysisRemarks4).Append("\n");
            sb.Append("  LoanAnalysisRemarks5: ").Append(LoanAnalysisRemarks5).Append("\n");
            sb.Append("  LoanAnalysisRemarks6: ").Append(LoanAnalysisRemarks6).Append("\n");
            sb.Append("  LoanAnalysisRemarks7: ").Append(LoanAnalysisRemarks7).Append("\n");
            sb.Append("  LoanAnalysisRemarks8: ").Append(LoanAnalysisRemarks8).Append("\n");
            sb.Append("  LoanAnalysisRemarks9: ").Append(LoanAnalysisRemarks9).Append("\n");
            sb.Append("  LoanCode: ").Append(LoanCode).Append("\n");
            sb.Append("  LoanProcedure: ").Append(LoanProcedure).Append("\n");
            sb.Append("  LoanProcessedUnderAU: ").Append(LoanProcessedUnderAU).Append("\n");
            sb.Append("  LoanSummaryRemarks1: ").Append(LoanSummaryRemarks1).Append("\n");
            sb.Append("  LoanSummaryRemarks2: ").Append(LoanSummaryRemarks2).Append("\n");
            sb.Append("  LoanSummaryRemarks3: ").Append(LoanSummaryRemarks3).Append("\n");
            sb.Append("  LoanSummaryRemarks4: ").Append(LoanSummaryRemarks4).Append("\n");
            sb.Append("  LoanSummaryRemarks5: ").Append(LoanSummaryRemarks5).Append("\n");
            sb.Append("  LoanSummaryRemarks6: ").Append(LoanSummaryRemarks6).Append("\n");
            sb.Append("  LoanSummaryRemarks7: ").Append(LoanSummaryRemarks7).Append("\n");
            sb.Append("  LoanSummaryRemarks8: ").Append(LoanSummaryRemarks8).Append("\n");
            sb.Append("  LotDimensions: ").Append(LotDimensions).Append("\n");
            sb.Append("  MailingAddress: ").Append(MailingAddress).Append("\n");
            sb.Append("  MailingCity: ").Append(MailingCity).Append("\n");
            sb.Append("  MailingPostalCode: ").Append(MailingPostalCode).Append("\n");
            sb.Append("  MailingState: ").Append(MailingState).Append("\n");
            sb.Append("  ManufacturedHome: ").Append(ManufacturedHome).Append("\n");
            sb.Append("  MCRVNumber: ").Append(MCRVNumber).Append("\n");
            sb.Append("  MilitaryBranchOfService: ").Append(MilitaryBranchOfService).Append("\n");
            sb.Append("  MilitaryServices: ").Append(MilitaryServices).Append("\n");
            sb.Append("  MineralRightsReserved: ").Append(MineralRightsReserved).Append("\n");
            sb.Append("  NameOfOccupant: ").Append(NameOfOccupant).Append("\n");
            sb.Append("  NameOfOwner: ").Append(NameOfOwner).Append("\n");
            sb.Append("  NameOfWarrantyProgram: ").Append(NameOfWarrantyProgram).Append("\n");
            sb.Append("  NegativeRents: ").Append(NegativeRents).Append("\n");
            sb.Append("  NoEnergyImprovements: ").Append(NoEnergyImprovements).Append("\n");
            sb.Append("  NumberOfBuildings: ").Append(NumberOfBuildings).Append("\n");
            sb.Append("  OccupantTelephone: ").Append(OccupantTelephone).Append("\n");
            sb.Append("  OnMilitaryDutyFollowingSeparation: ").Append(OnMilitaryDutyFollowingSeparation).Append("\n");
            sb.Append("  OriginalInterestRate: ").Append(OriginalInterestRate).Append("\n");
            sb.Append("  OriginalLoanAmount: ").Append(OriginalLoanAmount).Append("\n");
            sb.Append("  OriginalTerm: ").Append(OriginalTerm).Append("\n");
            sb.Append("  OriginalValueEstimateChanged: ").Append(OriginalValueEstimateChanged).Append("\n");
            sb.Append("  OriginationFeeAmount: ").Append(OriginationFeeAmount).Append("\n");
            sb.Append("  OtherClosingCosts: ").Append(OtherClosingCosts).Append("\n");
            sb.Append("  OtherImprovements: ").Append(OtherImprovements).Append("\n");
            sb.Append("  PaidInFullVALoanNumber: ").Append(PaidInFullVALoanNumber).Append("\n");
            sb.Append("  PayoffIndicator1: ").Append(PayoffIndicator1).Append("\n");
            sb.Append("  PayoffIndicator2: ").Append(PayoffIndicator2).Append("\n");
            sb.Append("  PayoffIndicator3: ").Append(PayoffIndicator3).Append("\n");
            sb.Append("  PayoffIndicator4: ").Append(PayoffIndicator4).Append("\n");
            sb.Append("  PayoffIndicator5: ").Append(PayoffIndicator5).Append("\n");
            sb.Append("  PayoffIndicator6: ").Append(PayoffIndicator6).Append("\n");
            sb.Append("  PayoffIndicator7: ").Append(PayoffIndicator7).Append("\n");
            sb.Append("  PayoffIndicator8: ").Append(PayoffIndicator8).Append("\n");
            sb.Append("  PayoffIndicator9: ").Append(PayoffIndicator9).Append("\n");
            sb.Append("  PlansSubmitted: ").Append(PlansSubmitted).Append("\n");
            sb.Append("  POCAddress: ").Append(POCAddress).Append("\n");
            sb.Append("  POCCity: ").Append(POCCity).Append("\n");
            sb.Append("  POCName: ").Append(POCName).Append("\n");
            sb.Append("  POCPhone: ").Append(POCPhone).Append("\n");
            sb.Append("  POCState: ").Append(POCState).Append("\n");
            sb.Append("  POCZipCode: ").Append(POCZipCode).Append("\n");
            sb.Append("  PreliminaryDiscountAmount: ").Append(PreliminaryDiscountAmount).Append("\n");
            sb.Append("  PreliminaryFundingFeeAmount: ").Append(PreliminaryFundingFeeAmount).Append("\n");
            sb.Append("  PreliminaryTotal: ").Append(PreliminaryTotal).Append("\n");
            sb.Append("  PreviousVALoanIndicator: ").Append(PreviousVALoanIndicator).Append("\n");
            sb.Append("  PreviousVaLoans: ").Append(PreviousVaLoans).Append("\n");
            sb.Append("  PriorLoanType: ").Append(PriorLoanType).Append("\n");
            sb.Append("  PropertyDesignation: ").Append(PropertyDesignation).Append("\n");
            sb.Append("  PropertyGrossLivingArea: ").Append(PropertyGrossLivingArea).Append("\n");
            sb.Append("  PropertyLegalDescription1: ").Append(PropertyLegalDescription1).Append("\n");
            sb.Append("  PropertyLegalDescription2: ").Append(PropertyLegalDescription2).Append("\n");
            sb.Append("  PropertyLegalDescription3: ").Append(PropertyLegalDescription3).Append("\n");
            sb.Append("  PropertyLegalDescription4: ").Append(PropertyLegalDescription4).Append("\n");
            sb.Append("  PropertyOccupancyType: ").Append(PropertyOccupancyType).Append("\n");
            sb.Append("  ProposedSaleContractAttached: ").Append(ProposedSaleContractAttached).Append("\n");
            sb.Append("  PurposeOfLoan: ").Append(PurposeOfLoan).Append("\n");
            sb.Append("  RangeOvenIndicator: ").Append(RangeOvenIndicator).Append("\n");
            sb.Append("  RefrigeratorIndicator: ").Append(RefrigeratorIndicator).Append("\n");
            sb.Append("  Rent: ").Append(Rent).Append("\n");
            sb.Append("  ReplacementOfSystem: ").Append(ReplacementOfSystem).Append("\n");
            sb.Append("  RiskClasification: ").Append(RiskClasification).Append("\n");
            sb.Append("  ServiceNumber: ").Append(ServiceNumber).Append("\n");
            sb.Append("  SolarHeatingOrCooling: ").Append(SolarHeatingOrCooling).Append("\n");
            sb.Append("  SpecialAssessmentComments1: ").Append(SpecialAssessmentComments1).Append("\n");
            sb.Append("  SpecialAssessmentComments2: ").Append(SpecialAssessmentComments2).Append("\n");
            sb.Append("  SpecialAssessmentComments3: ").Append(SpecialAssessmentComments3).Append("\n");
            sb.Append("  StreetAccess: ").Append(StreetAccess).Append("\n");
            sb.Append("  StreetMaintenance: ").Append(StreetMaintenance).Append("\n");
            sb.Append("  SystemUsed: ").Append(SystemUsed).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  TitleLimitations1: ").Append(TitleLimitations1).Append("\n");
            sb.Append("  TitleLimitations2: ").Append(TitleLimitations2).Append("\n");
            sb.Append("  TitleLimitations3: ").Append(TitleLimitations3).Append("\n");
            sb.Append("  TotalBaths: ").Append(TotalBaths).Append("\n");
            sb.Append("  TotalBedrooms: ").Append(TotalBedrooms).Append("\n");
            sb.Append("  TotalDebtMonthlyPayment: ").Append(TotalDebtMonthlyPayment).Append("\n");
            sb.Append("  TotalDiscountPointCharged: ").Append(TotalDiscountPointCharged).Append("\n");
            sb.Append("  TotalDiscountPointsCharged: ").Append(TotalDiscountPointsCharged).Append("\n");
            sb.Append("  TotalForMaxLoanAmount: ").Append(TotalForMaxLoanAmount).Append("\n");
            sb.Append("  TotalRooms: ").Append(TotalRooms).Append("\n");
            sb.Append("  TypeOfHybridARM: ").Append(TypeOfHybridARM).Append("\n");
            sb.Append("  TypeOfMortgage: ").Append(TypeOfMortgage).Append("\n");
            sb.Append("  TypeOfOwnsership: ").Append(TypeOfOwnsership).Append("\n");
            sb.Append("  TypeOfStructure: ").Append(TypeOfStructure).Append("\n");
            sb.Append("  TypeOfVeteran: ").Append(TypeOfVeteran).Append("\n");
            sb.Append("  UtilitiesElectricDescription: ").Append(UtilitiesElectricDescription).Append("\n");
            sb.Append("  UtilitiesGasDescription: ").Append(UtilitiesGasDescription).Append("\n");
            sb.Append("  UtilitiesSewerDescription: ").Append(UtilitiesSewerDescription).Append("\n");
            sb.Append("  UtilitiesWaterDescription: ").Append(UtilitiesWaterDescription).Append("\n");
            sb.Append("  VABenefitRelatedIndebtedness: ").Append(VABenefitRelatedIndebtedness).Append("\n");
            sb.Append("  VABuilderIDNo: ").Append(VABuilderIDNo).Append("\n");
            sb.Append("  VAClaimFolderNumber: ").Append(VAClaimFolderNumber).Append("\n");
            sb.Append("  VAClaimNumber: ").Append(VAClaimNumber).Append("\n");
            sb.Append("  VaLoanSummaryApplicantType: ").Append(VaLoanSummaryApplicantType).Append("\n");
            sb.Append("  VentFanIndicator: ").Append(VentFanIndicator).Append("\n");
            sb.Append("  VeteranDischargedIndicator: ").Append(VeteranDischargedIndicator).Append("\n");
            sb.Append("  VeteranServiceType: ").Append(VeteranServiceType).Append("\n");
            sb.Append("  WarrantorAddress: ").Append(WarrantorAddress).Append("\n");
            sb.Append("  WarrantorCity: ").Append(WarrantorCity).Append("\n");
            sb.Append("  WarrantorName: ").Append(WarrantorName).Append("\n");
            sb.Append("  WarrantorPhone: ").Append(WarrantorPhone).Append("\n");
            sb.Append("  WarrantorPostalCode: ").Append(WarrantorPostalCode).Append("\n");
            sb.Append("  WarrantorState: ").Append(WarrantorState).Append("\n");
            sb.Append("  WarrantyProgramExpirationDate: ").Append(WarrantyProgramExpirationDate).Append("\n");
            sb.Append("  WWCarpetIndicator: ").Append(WWCarpetIndicator).Append("\n");
            sb.Append("  VAOriginalMonthlyPayment: ").Append(VAOriginalMonthlyPayment).Append("\n");
            sb.Append("  VAOriginalAmortizationType: ").Append(VAOriginalAmortizationType).Append("\n");
            sb.Append("  VARecoupmentMonthlyDecreaseInPayment: ").Append(VARecoupmentMonthlyDecreaseInPayment).Append("\n");
            sb.Append("  VARecoupmentTotalClosingCosts: ").Append(VARecoupmentTotalClosingCosts).Append("\n");
            sb.Append("  VARecoupmentExcludePrepaids: ").Append(VARecoupmentExcludePrepaids).Append("\n");
            sb.Append("  VARecoupmentClosingCosts: ").Append(VARecoupmentClosingCosts).Append("\n");
            sb.Append("  VARecoupmentYears: ").Append(VARecoupmentYears).Append("\n");
            sb.Append("  VARecoupmentMonths: ").Append(VARecoupmentMonths).Append("\n");
            sb.Append("  VALatePaymentIn6Months: ").Append(VALatePaymentIn6Months).Append("\n");
            sb.Append("  VAIsDelinquent30Days: ").Append(VAIsDelinquent30Days).Append("\n");
            sb.Append("  TotalMonthlyPayment: ").Append(TotalMonthlyPayment).Append("\n");
            sb.Append("  TotalProposedMonthlyPayment: ").Append(TotalProposedMonthlyPayment).Append("\n");
            sb.Append("  ExcludeTaxesInsuranceIndicator: ").Append(ExcludeTaxesInsuranceIndicator).Append("\n");
            sb.Append("  ApplicantBirthDate: ").Append(ApplicantBirthDate).Append("\n");
            sb.Append("  ApplicantEmailAddressText: ").Append(ApplicantEmailAddressText).Append("\n");
            sb.Append("  ApplicantHomePhoneNumber: ").Append(ApplicantHomePhoneNumber).Append("\n");
            sb.Append("  ApplicantFirstNameWithMiddleName: ").Append(ApplicantFirstNameWithMiddleName).Append("\n");
            sb.Append("  ApplicantLastNameWithSuffix: ").Append(ApplicantLastNameWithSuffix).Append("\n");
            sb.Append("  ApplicantTaxIdentificationIdentifier: ").Append(ApplicantTaxIdentificationIdentifier).Append("\n");
            sb.Append("  ApplicantHmdaGenderType: ").Append(ApplicantHmdaGenderType).Append("\n");
            sb.Append("  ApplicantAddressStreetLine1: ").Append(ApplicantAddressStreetLine1).Append("\n");
            sb.Append("  ApplicantAddressCity: ").Append(ApplicantAddressCity).Append("\n");
            sb.Append("  ApplicantAddressState: ").Append(ApplicantAddressState).Append("\n");
            sb.Append("  ApplicantAddressPostalCode: ").Append(ApplicantAddressPostalCode).Append("\n");
            sb.Append("  VABuilderDescription: ").Append(VABuilderDescription).Append("\n");
            sb.Append("  AutomaticProcedure: ").Append(AutomaticProcedure).Append("\n");
            sb.Append("  PriorApprovalProcedure: ").Append(PriorApprovalProcedure).Append("\n");
            sb.Append("  FirstChattelLoanType: ").Append(FirstChattelLoanType).Append("\n");
            sb.Append("  UnsecuredLoanType: ").Append(UnsecuredLoanType).Append("\n");
            sb.Append("  OtherLoanType: ").Append(OtherLoanType).Append("\n");
            sb.Append("  OtherDescriptionLoanType: ").Append(OtherDescriptionLoanType).Append("\n");
            sb.Append("  OtherEstateProperty: ").Append(OtherEstateProperty).Append("\n");
            sb.Append("  OtherDescriptionEstateProperty: ").Append(OtherDescriptionEstateProperty).Append("\n");
            sb.Append("  AnnualSpecialAssessment: ").Append(AnnualSpecialAssessment).Append("\n");
            sb.Append("  TotalUnpaidSpecialAssessments: ").Append(TotalUnpaidSpecialAssessments).Append("\n");
            sb.Append("  NonrealtyDescription: ").Append(NonrealtyDescription).Append("\n");
            sb.Append("  AdditionalSecurityDescription: ").Append(AdditionalSecurityDescription).Append("\n");
            sb.Append("  DateAquiredLand: ").Append(DateAquiredLand).Append("\n");
            sb.Append("  LandPurchasePrice: ").Append(LandPurchasePrice).Append("\n");
            sb.Append("  AmountTypeWithheld: ").Append(AmountTypeWithheld).Append("\n");
            sb.Append("  AmountWithheld: ").Append(AmountWithheld).Append("\n");
            sb.Append("  ReasonableValueCompleted: ").Append(ReasonableValueCompleted).Append("\n");
            sb.Append("  DisabilityAmountCollected: ").Append(DisabilityAmountCollected).Append("\n");
            sb.Append("  PestReportFee: ").Append(PestReportFee).Append("\n");
            sb.Append("  VATrackingSARName: ").Append(VATrackingSARName).Append("\n");
            sb.Append("  VATrackingSARID: ").Append(VATrackingSARID).Append("\n");
            sb.Append("  VATrackingIsSARLAPPCertified: ").Append(VATrackingIsSARLAPPCertified).Append("\n");
            sb.Append("  VAAppraisalSentDate: ").Append(VAAppraisalSentDate).Append("\n");
            sb.Append("  VANOVDateReceived: ").Append(VANOVDateReceived).Append("\n");
            sb.Append("  VANOVDateReviewed: ").Append(VANOVDateReviewed).Append("\n");
            sb.Append("  VANOVIssuedDate: ").Append(VANOVIssuedDate).Append("\n");
            sb.Append("  VADateNOVAppraisalMailedToBorrower: ").Append(VADateNOVAppraisalMailedToBorrower).Append("\n");
            sb.Append("  VATrackingOrderedDate: ").Append(VATrackingOrderedDate).Append("\n");
            sb.Append("  VATrackingCOEIssueDate: ").Append(VATrackingCOEIssueDate).Append("\n");
            sb.Append("  VATrackingCOEIssueHistory: ").Append(VATrackingCOEIssueHistory).Append("\n");
            sb.Append("  VATrackingPaidDate: ").Append(VATrackingPaidDate).Append("\n");
            sb.Append("  VATrackingReceiptReceived: ").Append(VATrackingReceiptReceived).Append("\n");
            sb.Append("  VATrackingLoanGuaranteeCertReceipt: ").Append(VATrackingLoanGuaranteeCertReceipt).Append("\n");
            sb.Append("  VATrackingGSAExclusionaryListChecked: ").Append(VATrackingGSAExclusionaryListChecked).Append("\n");
            sb.Append("  VATrackingCertOfCommitmentIssued: ").Append(VATrackingCertOfCommitmentIssued).Append("\n");
            sb.Append("  VATrackingMasterCommitmentLockExpired: ").Append(VATrackingMasterCommitmentLockExpired).Append("\n");
            sb.Append("  VATrackingFinalApprovalCommitmentDate: ").Append(VATrackingFinalApprovalCommitmentDate).Append("\n");
            sb.Append("  VATrackingPurchaseContractDate: ").Append(VATrackingPurchaseContractDate).Append("\n");
            sb.Append("  VATrackingInuranceFloodPolicy: ").Append(VATrackingInuranceFloodPolicy).Append("\n");
            sb.Append("  VATrackingInuranceHazardPolicy: ").Append(VATrackingInuranceHazardPolicy).Append("\n");
            sb.Append("  VATrackingInuranceWoodDestroyingPolicy: ").Append(VATrackingInuranceWoodDestroyingPolicy).Append("\n");
            sb.Append("  VATrackingInuranceWindOrHailPolicy: ").Append(VATrackingInuranceWindOrHailPolicy).Append("\n");
            sb.Append("  VAQualificationCountryRegion: ").Append(VAQualificationCountryRegion).Append("\n");
            sb.Append("  VAQualification2ndTierEntitlement: ").Append(VAQualification2ndTierEntitlement).Append("\n");
            sb.Append("  VAQualificationCountyLimits: ").Append(VAQualificationCountyLimits).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanContractVaLoanData);
        }

        /// <summary>
        /// Returns true if LoanContractVaLoanData instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanContractVaLoanData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanContractVaLoanData input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Acres == input.Acres ||
                    (this.Acres != null &&
                    this.Acres.Equals(input.Acres))
                ) && 
                (
                    this.AdministratorAddress == input.AdministratorAddress ||
                    (this.AdministratorAddress != null &&
                    this.AdministratorAddress.Equals(input.AdministratorAddress))
                ) && 
                (
                    this.AdministratorCity == input.AdministratorCity ||
                    (this.AdministratorCity != null &&
                    this.AdministratorCity.Equals(input.AdministratorCity))
                ) && 
                (
                    this.AdministratorContact == input.AdministratorContact ||
                    (this.AdministratorContact != null &&
                    this.AdministratorContact.Equals(input.AdministratorContact))
                ) && 
                (
                    this.AdministratorName == input.AdministratorName ||
                    (this.AdministratorName != null &&
                    this.AdministratorName.Equals(input.AdministratorName))
                ) && 
                (
                    this.AdministratorPostalCode == input.AdministratorPostalCode ||
                    (this.AdministratorPostalCode != null &&
                    this.AdministratorPostalCode.Equals(input.AdministratorPostalCode))
                ) && 
                (
                    this.AdministratorState == input.AdministratorState ||
                    (this.AdministratorState != null &&
                    this.AdministratorState.Equals(input.AdministratorState))
                ) && 
                (
                    this.AgeOfProperty == input.AgeOfProperty ||
                    (this.AgeOfProperty != null &&
                    this.AgeOfProperty.Equals(input.AgeOfProperty))
                ) && 
                (
                    this.AmountSpentOnEnergyImprovements == input.AmountSpentOnEnergyImprovements ||
                    (this.AmountSpentOnEnergyImprovements != null &&
                    this.AmountSpentOnEnergyImprovements.Equals(input.AmountSpentOnEnergyImprovements))
                ) && 
                (
                    this.AnnualGroundRent == input.AnnualGroundRent ||
                    (this.AnnualGroundRent != null &&
                    this.AnnualGroundRent.Equals(input.AnnualGroundRent))
                ) && 
                (
                    this.AnnualMaintenanceAssessment == input.AnnualMaintenanceAssessment ||
                    (this.AnnualMaintenanceAssessment != null &&
                    this.AnnualMaintenanceAssessment.Equals(input.AnnualMaintenanceAssessment))
                ) && 
                (
                    this.AnnualRealEstateTaxes == input.AnnualRealEstateTaxes ||
                    (this.AnnualRealEstateTaxes != null &&
                    this.AnnualRealEstateTaxes.Equals(input.AnnualRealEstateTaxes))
                ) && 
                (
                    this.AppraisalType == input.AppraisalType ||
                    (this.AppraisalType != null &&
                    this.AppraisalType.Equals(input.AppraisalType))
                ) && 
                (
                    this.AvailableForInspectionAMIndicator == input.AvailableForInspectionAMIndicator ||
                    (this.AvailableForInspectionAMIndicator != null &&
                    this.AvailableForInspectionAMIndicator.Equals(input.AvailableForInspectionAMIndicator))
                ) && 
                (
                    this.AvailableForInspectionDateAndTime == input.AvailableForInspectionDateAndTime ||
                    (this.AvailableForInspectionDateAndTime != null &&
                    this.AvailableForInspectionDateAndTime.Equals(input.AvailableForInspectionDateAndTime))
                ) && 
                (
                    this.BorrowerPaidDiscountPointsTotalAmount == input.BorrowerPaidDiscountPointsTotalAmount ||
                    (this.BorrowerPaidDiscountPointsTotalAmount != null &&
                    this.BorrowerPaidDiscountPointsTotalAmount.Equals(input.BorrowerPaidDiscountPointsTotalAmount))
                ) && 
                (
                    this.BuildingType == input.BuildingType ||
                    (this.BuildingType != null &&
                    this.BuildingType.Equals(input.BuildingType))
                ) && 
                (
                    this.BuyerPurchasingLotSeparately == input.BuyerPurchasingLotSeparately ||
                    (this.BuyerPurchasingLotSeparately != null &&
                    this.BuyerPurchasingLotSeparately.Equals(input.BuyerPurchasingLotSeparately))
                ) && 
                (
                    this.CashPaymentFromVeteran == input.CashPaymentFromVeteran ||
                    (this.CashPaymentFromVeteran != null &&
                    this.CashPaymentFromVeteran.Equals(input.CashPaymentFromVeteran))
                ) && 
                (
                    this.ClaimDisabilityBenefits == input.ClaimDisabilityBenefits ||
                    (this.ClaimDisabilityBenefits != null &&
                    this.ClaimDisabilityBenefits.Equals(input.ClaimDisabilityBenefits))
                ) && 
                (
                    this.ClothesWasherIndicator == input.ClothesWasherIndicator ||
                    (this.ClothesWasherIndicator != null &&
                    this.ClothesWasherIndicator.Equals(input.ClothesWasherIndicator))
                ) && 
                (
                    this.ConstructionCompletedDate == input.ConstructionCompletedDate ||
                    (this.ConstructionCompletedDate != null &&
                    this.ConstructionCompletedDate.Equals(input.ConstructionCompletedDate))
                ) && 
                (
                    this.ConstructionPlan == input.ConstructionPlan ||
                    (this.ConstructionPlan != null &&
                    this.ConstructionPlan.Equals(input.ConstructionPlan))
                ) && 
                (
                    this.ConstructionWarrantyIncluded == input.ConstructionWarrantyIncluded ||
                    (this.ConstructionWarrantyIncluded != null &&
                    this.ConstructionWarrantyIncluded.Equals(input.ConstructionWarrantyIncluded))
                ) && 
                (
                    this.ContractNoApprovedByVA == input.ContractNoApprovedByVA ||
                    (this.ContractNoApprovedByVA != null &&
                    this.ContractNoApprovedByVA.Equals(input.ContractNoApprovedByVA))
                ) && 
                (
                    this.CreditScore == input.CreditScore ||
                    (this.CreditScore != null &&
                    this.CreditScore.Equals(input.CreditScore))
                ) && 
                (
                    this.CurrentlyOnMilitaryDuty == input.CurrentlyOnMilitaryDuty ||
                    (this.CurrentlyOnMilitaryDuty != null &&
                    this.CurrentlyOnMilitaryDuty.Equals(input.CurrentlyOnMilitaryDuty))
                ) && 
                (
                    this.DateOfAssignment == input.DateOfAssignment ||
                    (this.DateOfAssignment != null &&
                    this.DateOfAssignment.Equals(input.DateOfAssignment))
                ) && 
                (
                    this.DateSAR == input.DateSAR ||
                    (this.DateSAR != null &&
                    this.DateSAR.Equals(input.DateSAR))
                ) && 
                (
                    this.DiscountPercentage == input.DiscountPercentage ||
                    (this.DiscountPercentage != null &&
                    this.DiscountPercentage.Equals(input.DiscountPercentage))
                ) && 
                (
                    this.DiscountPoint == input.DiscountPoint ||
                    (this.DiscountPoint != null &&
                    this.DiscountPoint.Equals(input.DiscountPoint))
                ) && 
                (
                    this.DishwasherIndicator == input.DishwasherIndicator ||
                    (this.DishwasherIndicator != null &&
                    this.DishwasherIndicator.Equals(input.DishwasherIndicator))
                ) && 
                (
                    this.DryerIndicator == input.DryerIndicator ||
                    (this.DryerIndicator != null &&
                    this.DryerIndicator.Equals(input.DryerIndicator))
                ) && 
                (
                    this.EmailToBeNotifiedWhenUploaded == input.EmailToBeNotifiedWhenUploaded ||
                    (this.EmailToBeNotifiedWhenUploaded != null &&
                    this.EmailToBeNotifiedWhenUploaded.Equals(input.EmailToBeNotifiedWhenUploaded))
                ) && 
                (
                    this.EnergyImprovementsAdditionOfFeature == input.EnergyImprovementsAdditionOfFeature ||
                    (this.EnergyImprovementsAdditionOfFeature != null &&
                    this.EnergyImprovementsAdditionOfFeature.Equals(input.EnergyImprovementsAdditionOfFeature))
                ) && 
                (
                    this.EntitlementCode == input.EntitlementCode ||
                    (this.EntitlementCode != null &&
                    this.EntitlementCode.Equals(input.EntitlementCode))
                ) && 
                (
                    this.EquipmentOtherDescription == input.EquipmentOtherDescription ||
                    (this.EquipmentOtherDescription != null &&
                    this.EquipmentOtherDescription.Equals(input.EquipmentOtherDescription))
                ) && 
                (
                    this.FinalDiscountAmount == input.FinalDiscountAmount ||
                    (this.FinalDiscountAmount != null &&
                    this.FinalDiscountAmount.Equals(input.FinalDiscountAmount))
                ) && 
                (
                    this.FinalFundingFeeAmount == input.FinalFundingFeeAmount ||
                    (this.FinalFundingFeeAmount != null &&
                    this.FinalFundingFeeAmount.Equals(input.FinalFundingFeeAmount))
                ) && 
                (
                    this.FirstTimeUse == input.FirstTimeUse ||
                    (this.FirstTimeUse != null &&
                    this.FirstTimeUse.Equals(input.FirstTimeUse))
                ) && 
                (
                    this.FundingFeeExempt == input.FundingFeeExempt ||
                    (this.FundingFeeExempt != null &&
                    this.FundingFeeExempt.Equals(input.FundingFeeExempt))
                ) && 
                (
                    this.GarbageDisposalIndicator == input.GarbageDisposalIndicator ||
                    (this.GarbageDisposalIndicator != null &&
                    this.GarbageDisposalIndicator.Equals(input.GarbageDisposalIndicator))
                ) && 
                (
                    this.InitialTotal == input.InitialTotal ||
                    (this.InitialTotal != null &&
                    this.InitialTotal.Equals(input.InitialTotal))
                ) && 
                (
                    this.InspectionWillBeMadeBy == input.InspectionWillBeMadeBy ||
                    (this.InspectionWillBeMadeBy != null &&
                    this.InspectionWillBeMadeBy.Equals(input.InspectionWillBeMadeBy))
                ) && 
                (
                    this.Insulation == input.Insulation ||
                    (this.Insulation != null &&
                    this.Insulation.Equals(input.Insulation))
                ) && 
                (
                    this.InsuranceType == input.InsuranceType ||
                    (this.InsuranceType != null &&
                    this.InsuranceType.Equals(input.InsuranceType))
                ) && 
                (
                    this.IrregularLotSizeInSquareFeet == input.IrregularLotSizeInSquareFeet ||
                    (this.IrregularLotSizeInSquareFeet != null &&
                    this.IrregularLotSizeInSquareFeet.Equals(input.IrregularLotSizeInSquareFeet))
                ) && 
                (
                    this.IsDelinquent30Days == input.IsDelinquent30Days ||
                    (this.IsDelinquent30Days != null &&
                    this.IsDelinquent30Days.Equals(input.IsDelinquent30Days))
                ) && 
                (
                    this.KeysAtAddress == input.KeysAtAddress ||
                    (this.KeysAtAddress != null &&
                    this.KeysAtAddress.Equals(input.KeysAtAddress))
                ) && 
                (
                    this.LeaseholdType == input.LeaseholdType ||
                    (this.LeaseholdType != null &&
                    this.LeaseholdType.Equals(input.LeaseholdType))
                ) && 
                (
                    this.LenderSAR == input.LenderSAR ||
                    (this.LenderSAR != null &&
                    this.LenderSAR.Equals(input.LenderSAR))
                ) && 
                (
                    this.LoanAnalysisRemarks1 == input.LoanAnalysisRemarks1 ||
                    (this.LoanAnalysisRemarks1 != null &&
                    this.LoanAnalysisRemarks1.Equals(input.LoanAnalysisRemarks1))
                ) && 
                (
                    this.LoanAnalysisRemarks2 == input.LoanAnalysisRemarks2 ||
                    (this.LoanAnalysisRemarks2 != null &&
                    this.LoanAnalysisRemarks2.Equals(input.LoanAnalysisRemarks2))
                ) && 
                (
                    this.LoanAnalysisRemarks3 == input.LoanAnalysisRemarks3 ||
                    (this.LoanAnalysisRemarks3 != null &&
                    this.LoanAnalysisRemarks3.Equals(input.LoanAnalysisRemarks3))
                ) && 
                (
                    this.LoanAnalysisRemarks4 == input.LoanAnalysisRemarks4 ||
                    (this.LoanAnalysisRemarks4 != null &&
                    this.LoanAnalysisRemarks4.Equals(input.LoanAnalysisRemarks4))
                ) && 
                (
                    this.LoanAnalysisRemarks5 == input.LoanAnalysisRemarks5 ||
                    (this.LoanAnalysisRemarks5 != null &&
                    this.LoanAnalysisRemarks5.Equals(input.LoanAnalysisRemarks5))
                ) && 
                (
                    this.LoanAnalysisRemarks6 == input.LoanAnalysisRemarks6 ||
                    (this.LoanAnalysisRemarks6 != null &&
                    this.LoanAnalysisRemarks6.Equals(input.LoanAnalysisRemarks6))
                ) && 
                (
                    this.LoanAnalysisRemarks7 == input.LoanAnalysisRemarks7 ||
                    (this.LoanAnalysisRemarks7 != null &&
                    this.LoanAnalysisRemarks7.Equals(input.LoanAnalysisRemarks7))
                ) && 
                (
                    this.LoanAnalysisRemarks8 == input.LoanAnalysisRemarks8 ||
                    (this.LoanAnalysisRemarks8 != null &&
                    this.LoanAnalysisRemarks8.Equals(input.LoanAnalysisRemarks8))
                ) && 
                (
                    this.LoanAnalysisRemarks9 == input.LoanAnalysisRemarks9 ||
                    (this.LoanAnalysisRemarks9 != null &&
                    this.LoanAnalysisRemarks9.Equals(input.LoanAnalysisRemarks9))
                ) && 
                (
                    this.LoanCode == input.LoanCode ||
                    (this.LoanCode != null &&
                    this.LoanCode.Equals(input.LoanCode))
                ) && 
                (
                    this.LoanProcedure == input.LoanProcedure ||
                    (this.LoanProcedure != null &&
                    this.LoanProcedure.Equals(input.LoanProcedure))
                ) && 
                (
                    this.LoanProcessedUnderAU == input.LoanProcessedUnderAU ||
                    (this.LoanProcessedUnderAU != null &&
                    this.LoanProcessedUnderAU.Equals(input.LoanProcessedUnderAU))
                ) && 
                (
                    this.LoanSummaryRemarks1 == input.LoanSummaryRemarks1 ||
                    (this.LoanSummaryRemarks1 != null &&
                    this.LoanSummaryRemarks1.Equals(input.LoanSummaryRemarks1))
                ) && 
                (
                    this.LoanSummaryRemarks2 == input.LoanSummaryRemarks2 ||
                    (this.LoanSummaryRemarks2 != null &&
                    this.LoanSummaryRemarks2.Equals(input.LoanSummaryRemarks2))
                ) && 
                (
                    this.LoanSummaryRemarks3 == input.LoanSummaryRemarks3 ||
                    (this.LoanSummaryRemarks3 != null &&
                    this.LoanSummaryRemarks3.Equals(input.LoanSummaryRemarks3))
                ) && 
                (
                    this.LoanSummaryRemarks4 == input.LoanSummaryRemarks4 ||
                    (this.LoanSummaryRemarks4 != null &&
                    this.LoanSummaryRemarks4.Equals(input.LoanSummaryRemarks4))
                ) && 
                (
                    this.LoanSummaryRemarks5 == input.LoanSummaryRemarks5 ||
                    (this.LoanSummaryRemarks5 != null &&
                    this.LoanSummaryRemarks5.Equals(input.LoanSummaryRemarks5))
                ) && 
                (
                    this.LoanSummaryRemarks6 == input.LoanSummaryRemarks6 ||
                    (this.LoanSummaryRemarks6 != null &&
                    this.LoanSummaryRemarks6.Equals(input.LoanSummaryRemarks6))
                ) && 
                (
                    this.LoanSummaryRemarks7 == input.LoanSummaryRemarks7 ||
                    (this.LoanSummaryRemarks7 != null &&
                    this.LoanSummaryRemarks7.Equals(input.LoanSummaryRemarks7))
                ) && 
                (
                    this.LoanSummaryRemarks8 == input.LoanSummaryRemarks8 ||
                    (this.LoanSummaryRemarks8 != null &&
                    this.LoanSummaryRemarks8.Equals(input.LoanSummaryRemarks8))
                ) && 
                (
                    this.LotDimensions == input.LotDimensions ||
                    (this.LotDimensions != null &&
                    this.LotDimensions.Equals(input.LotDimensions))
                ) && 
                (
                    this.MailingAddress == input.MailingAddress ||
                    (this.MailingAddress != null &&
                    this.MailingAddress.Equals(input.MailingAddress))
                ) && 
                (
                    this.MailingCity == input.MailingCity ||
                    (this.MailingCity != null &&
                    this.MailingCity.Equals(input.MailingCity))
                ) && 
                (
                    this.MailingPostalCode == input.MailingPostalCode ||
                    (this.MailingPostalCode != null &&
                    this.MailingPostalCode.Equals(input.MailingPostalCode))
                ) && 
                (
                    this.MailingState == input.MailingState ||
                    (this.MailingState != null &&
                    this.MailingState.Equals(input.MailingState))
                ) && 
                (
                    this.ManufacturedHome == input.ManufacturedHome ||
                    (this.ManufacturedHome != null &&
                    this.ManufacturedHome.Equals(input.ManufacturedHome))
                ) && 
                (
                    this.MCRVNumber == input.MCRVNumber ||
                    (this.MCRVNumber != null &&
                    this.MCRVNumber.Equals(input.MCRVNumber))
                ) && 
                (
                    this.MilitaryBranchOfService == input.MilitaryBranchOfService ||
                    (this.MilitaryBranchOfService != null &&
                    this.MilitaryBranchOfService.Equals(input.MilitaryBranchOfService))
                ) && 
                (
                    this.MilitaryServices == input.MilitaryServices ||
                    this.MilitaryServices != null &&
                    this.MilitaryServices.SequenceEqual(input.MilitaryServices)
                ) && 
                (
                    this.MineralRightsReserved == input.MineralRightsReserved ||
                    (this.MineralRightsReserved != null &&
                    this.MineralRightsReserved.Equals(input.MineralRightsReserved))
                ) && 
                (
                    this.NameOfOccupant == input.NameOfOccupant ||
                    (this.NameOfOccupant != null &&
                    this.NameOfOccupant.Equals(input.NameOfOccupant))
                ) && 
                (
                    this.NameOfOwner == input.NameOfOwner ||
                    (this.NameOfOwner != null &&
                    this.NameOfOwner.Equals(input.NameOfOwner))
                ) && 
                (
                    this.NameOfWarrantyProgram == input.NameOfWarrantyProgram ||
                    (this.NameOfWarrantyProgram != null &&
                    this.NameOfWarrantyProgram.Equals(input.NameOfWarrantyProgram))
                ) && 
                (
                    this.NegativeRents == input.NegativeRents ||
                    (this.NegativeRents != null &&
                    this.NegativeRents.Equals(input.NegativeRents))
                ) && 
                (
                    this.NoEnergyImprovements == input.NoEnergyImprovements ||
                    (this.NoEnergyImprovements != null &&
                    this.NoEnergyImprovements.Equals(input.NoEnergyImprovements))
                ) && 
                (
                    this.NumberOfBuildings == input.NumberOfBuildings ||
                    (this.NumberOfBuildings != null &&
                    this.NumberOfBuildings.Equals(input.NumberOfBuildings))
                ) && 
                (
                    this.OccupantTelephone == input.OccupantTelephone ||
                    (this.OccupantTelephone != null &&
                    this.OccupantTelephone.Equals(input.OccupantTelephone))
                ) && 
                (
                    this.OnMilitaryDutyFollowingSeparation == input.OnMilitaryDutyFollowingSeparation ||
                    (this.OnMilitaryDutyFollowingSeparation != null &&
                    this.OnMilitaryDutyFollowingSeparation.Equals(input.OnMilitaryDutyFollowingSeparation))
                ) && 
                (
                    this.OriginalInterestRate == input.OriginalInterestRate ||
                    (this.OriginalInterestRate != null &&
                    this.OriginalInterestRate.Equals(input.OriginalInterestRate))
                ) && 
                (
                    this.OriginalLoanAmount == input.OriginalLoanAmount ||
                    (this.OriginalLoanAmount != null &&
                    this.OriginalLoanAmount.Equals(input.OriginalLoanAmount))
                ) && 
                (
                    this.OriginalTerm == input.OriginalTerm ||
                    (this.OriginalTerm != null &&
                    this.OriginalTerm.Equals(input.OriginalTerm))
                ) && 
                (
                    this.OriginalValueEstimateChanged == input.OriginalValueEstimateChanged ||
                    (this.OriginalValueEstimateChanged != null &&
                    this.OriginalValueEstimateChanged.Equals(input.OriginalValueEstimateChanged))
                ) && 
                (
                    this.OriginationFeeAmount == input.OriginationFeeAmount ||
                    (this.OriginationFeeAmount != null &&
                    this.OriginationFeeAmount.Equals(input.OriginationFeeAmount))
                ) && 
                (
                    this.OtherClosingCosts == input.OtherClosingCosts ||
                    (this.OtherClosingCosts != null &&
                    this.OtherClosingCosts.Equals(input.OtherClosingCosts))
                ) && 
                (
                    this.OtherImprovements == input.OtherImprovements ||
                    (this.OtherImprovements != null &&
                    this.OtherImprovements.Equals(input.OtherImprovements))
                ) && 
                (
                    this.PaidInFullVALoanNumber == input.PaidInFullVALoanNumber ||
                    (this.PaidInFullVALoanNumber != null &&
                    this.PaidInFullVALoanNumber.Equals(input.PaidInFullVALoanNumber))
                ) && 
                (
                    this.PayoffIndicator1 == input.PayoffIndicator1 ||
                    (this.PayoffIndicator1 != null &&
                    this.PayoffIndicator1.Equals(input.PayoffIndicator1))
                ) && 
                (
                    this.PayoffIndicator2 == input.PayoffIndicator2 ||
                    (this.PayoffIndicator2 != null &&
                    this.PayoffIndicator2.Equals(input.PayoffIndicator2))
                ) && 
                (
                    this.PayoffIndicator3 == input.PayoffIndicator3 ||
                    (this.PayoffIndicator3 != null &&
                    this.PayoffIndicator3.Equals(input.PayoffIndicator3))
                ) && 
                (
                    this.PayoffIndicator4 == input.PayoffIndicator4 ||
                    (this.PayoffIndicator4 != null &&
                    this.PayoffIndicator4.Equals(input.PayoffIndicator4))
                ) && 
                (
                    this.PayoffIndicator5 == input.PayoffIndicator5 ||
                    (this.PayoffIndicator5 != null &&
                    this.PayoffIndicator5.Equals(input.PayoffIndicator5))
                ) && 
                (
                    this.PayoffIndicator6 == input.PayoffIndicator6 ||
                    (this.PayoffIndicator6 != null &&
                    this.PayoffIndicator6.Equals(input.PayoffIndicator6))
                ) && 
                (
                    this.PayoffIndicator7 == input.PayoffIndicator7 ||
                    (this.PayoffIndicator7 != null &&
                    this.PayoffIndicator7.Equals(input.PayoffIndicator7))
                ) && 
                (
                    this.PayoffIndicator8 == input.PayoffIndicator8 ||
                    (this.PayoffIndicator8 != null &&
                    this.PayoffIndicator8.Equals(input.PayoffIndicator8))
                ) && 
                (
                    this.PayoffIndicator9 == input.PayoffIndicator9 ||
                    (this.PayoffIndicator9 != null &&
                    this.PayoffIndicator9.Equals(input.PayoffIndicator9))
                ) && 
                (
                    this.PlansSubmitted == input.PlansSubmitted ||
                    (this.PlansSubmitted != null &&
                    this.PlansSubmitted.Equals(input.PlansSubmitted))
                ) && 
                (
                    this.POCAddress == input.POCAddress ||
                    (this.POCAddress != null &&
                    this.POCAddress.Equals(input.POCAddress))
                ) && 
                (
                    this.POCCity == input.POCCity ||
                    (this.POCCity != null &&
                    this.POCCity.Equals(input.POCCity))
                ) && 
                (
                    this.POCName == input.POCName ||
                    (this.POCName != null &&
                    this.POCName.Equals(input.POCName))
                ) && 
                (
                    this.POCPhone == input.POCPhone ||
                    (this.POCPhone != null &&
                    this.POCPhone.Equals(input.POCPhone))
                ) && 
                (
                    this.POCState == input.POCState ||
                    (this.POCState != null &&
                    this.POCState.Equals(input.POCState))
                ) && 
                (
                    this.POCZipCode == input.POCZipCode ||
                    (this.POCZipCode != null &&
                    this.POCZipCode.Equals(input.POCZipCode))
                ) && 
                (
                    this.PreliminaryDiscountAmount == input.PreliminaryDiscountAmount ||
                    (this.PreliminaryDiscountAmount != null &&
                    this.PreliminaryDiscountAmount.Equals(input.PreliminaryDiscountAmount))
                ) && 
                (
                    this.PreliminaryFundingFeeAmount == input.PreliminaryFundingFeeAmount ||
                    (this.PreliminaryFundingFeeAmount != null &&
                    this.PreliminaryFundingFeeAmount.Equals(input.PreliminaryFundingFeeAmount))
                ) && 
                (
                    this.PreliminaryTotal == input.PreliminaryTotal ||
                    (this.PreliminaryTotal != null &&
                    this.PreliminaryTotal.Equals(input.PreliminaryTotal))
                ) && 
                (
                    this.PreviousVALoanIndicator == input.PreviousVALoanIndicator ||
                    (this.PreviousVALoanIndicator != null &&
                    this.PreviousVALoanIndicator.Equals(input.PreviousVALoanIndicator))
                ) && 
                (
                    this.PreviousVaLoans == input.PreviousVaLoans ||
                    this.PreviousVaLoans != null &&
                    this.PreviousVaLoans.SequenceEqual(input.PreviousVaLoans)
                ) && 
                (
                    this.PriorLoanType == input.PriorLoanType ||
                    (this.PriorLoanType != null &&
                    this.PriorLoanType.Equals(input.PriorLoanType))
                ) && 
                (
                    this.PropertyDesignation == input.PropertyDesignation ||
                    (this.PropertyDesignation != null &&
                    this.PropertyDesignation.Equals(input.PropertyDesignation))
                ) && 
                (
                    this.PropertyGrossLivingArea == input.PropertyGrossLivingArea ||
                    (this.PropertyGrossLivingArea != null &&
                    this.PropertyGrossLivingArea.Equals(input.PropertyGrossLivingArea))
                ) && 
                (
                    this.PropertyLegalDescription1 == input.PropertyLegalDescription1 ||
                    (this.PropertyLegalDescription1 != null &&
                    this.PropertyLegalDescription1.Equals(input.PropertyLegalDescription1))
                ) && 
                (
                    this.PropertyLegalDescription2 == input.PropertyLegalDescription2 ||
                    (this.PropertyLegalDescription2 != null &&
                    this.PropertyLegalDescription2.Equals(input.PropertyLegalDescription2))
                ) && 
                (
                    this.PropertyLegalDescription3 == input.PropertyLegalDescription3 ||
                    (this.PropertyLegalDescription3 != null &&
                    this.PropertyLegalDescription3.Equals(input.PropertyLegalDescription3))
                ) && 
                (
                    this.PropertyLegalDescription4 == input.PropertyLegalDescription4 ||
                    (this.PropertyLegalDescription4 != null &&
                    this.PropertyLegalDescription4.Equals(input.PropertyLegalDescription4))
                ) && 
                (
                    this.PropertyOccupancyType == input.PropertyOccupancyType ||
                    (this.PropertyOccupancyType != null &&
                    this.PropertyOccupancyType.Equals(input.PropertyOccupancyType))
                ) && 
                (
                    this.ProposedSaleContractAttached == input.ProposedSaleContractAttached ||
                    (this.ProposedSaleContractAttached != null &&
                    this.ProposedSaleContractAttached.Equals(input.ProposedSaleContractAttached))
                ) && 
                (
                    this.PurposeOfLoan == input.PurposeOfLoan ||
                    (this.PurposeOfLoan != null &&
                    this.PurposeOfLoan.Equals(input.PurposeOfLoan))
                ) && 
                (
                    this.RangeOvenIndicator == input.RangeOvenIndicator ||
                    (this.RangeOvenIndicator != null &&
                    this.RangeOvenIndicator.Equals(input.RangeOvenIndicator))
                ) && 
                (
                    this.RefrigeratorIndicator == input.RefrigeratorIndicator ||
                    (this.RefrigeratorIndicator != null &&
                    this.RefrigeratorIndicator.Equals(input.RefrigeratorIndicator))
                ) && 
                (
                    this.Rent == input.Rent ||
                    (this.Rent != null &&
                    this.Rent.Equals(input.Rent))
                ) && 
                (
                    this.ReplacementOfSystem == input.ReplacementOfSystem ||
                    (this.ReplacementOfSystem != null &&
                    this.ReplacementOfSystem.Equals(input.ReplacementOfSystem))
                ) && 
                (
                    this.RiskClasification == input.RiskClasification ||
                    (this.RiskClasification != null &&
                    this.RiskClasification.Equals(input.RiskClasification))
                ) && 
                (
                    this.ServiceNumber == input.ServiceNumber ||
                    (this.ServiceNumber != null &&
                    this.ServiceNumber.Equals(input.ServiceNumber))
                ) && 
                (
                    this.SolarHeatingOrCooling == input.SolarHeatingOrCooling ||
                    (this.SolarHeatingOrCooling != null &&
                    this.SolarHeatingOrCooling.Equals(input.SolarHeatingOrCooling))
                ) && 
                (
                    this.SpecialAssessmentComments1 == input.SpecialAssessmentComments1 ||
                    (this.SpecialAssessmentComments1 != null &&
                    this.SpecialAssessmentComments1.Equals(input.SpecialAssessmentComments1))
                ) && 
                (
                    this.SpecialAssessmentComments2 == input.SpecialAssessmentComments2 ||
                    (this.SpecialAssessmentComments2 != null &&
                    this.SpecialAssessmentComments2.Equals(input.SpecialAssessmentComments2))
                ) && 
                (
                    this.SpecialAssessmentComments3 == input.SpecialAssessmentComments3 ||
                    (this.SpecialAssessmentComments3 != null &&
                    this.SpecialAssessmentComments3.Equals(input.SpecialAssessmentComments3))
                ) && 
                (
                    this.StreetAccess == input.StreetAccess ||
                    (this.StreetAccess != null &&
                    this.StreetAccess.Equals(input.StreetAccess))
                ) && 
                (
                    this.StreetMaintenance == input.StreetMaintenance ||
                    (this.StreetMaintenance != null &&
                    this.StreetMaintenance.Equals(input.StreetMaintenance))
                ) && 
                (
                    this.SystemUsed == input.SystemUsed ||
                    (this.SystemUsed != null &&
                    this.SystemUsed.Equals(input.SystemUsed))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.TitleLimitations1 == input.TitleLimitations1 ||
                    (this.TitleLimitations1 != null &&
                    this.TitleLimitations1.Equals(input.TitleLimitations1))
                ) && 
                (
                    this.TitleLimitations2 == input.TitleLimitations2 ||
                    (this.TitleLimitations2 != null &&
                    this.TitleLimitations2.Equals(input.TitleLimitations2))
                ) && 
                (
                    this.TitleLimitations3 == input.TitleLimitations3 ||
                    (this.TitleLimitations3 != null &&
                    this.TitleLimitations3.Equals(input.TitleLimitations3))
                ) && 
                (
                    this.TotalBaths == input.TotalBaths ||
                    (this.TotalBaths != null &&
                    this.TotalBaths.Equals(input.TotalBaths))
                ) && 
                (
                    this.TotalBedrooms == input.TotalBedrooms ||
                    (this.TotalBedrooms != null &&
                    this.TotalBedrooms.Equals(input.TotalBedrooms))
                ) && 
                (
                    this.TotalDebtMonthlyPayment == input.TotalDebtMonthlyPayment ||
                    (this.TotalDebtMonthlyPayment != null &&
                    this.TotalDebtMonthlyPayment.Equals(input.TotalDebtMonthlyPayment))
                ) && 
                (
                    this.TotalDiscountPointCharged == input.TotalDiscountPointCharged ||
                    (this.TotalDiscountPointCharged != null &&
                    this.TotalDiscountPointCharged.Equals(input.TotalDiscountPointCharged))
                ) && 
                (
                    this.TotalDiscountPointsCharged == input.TotalDiscountPointsCharged ||
                    (this.TotalDiscountPointsCharged != null &&
                    this.TotalDiscountPointsCharged.Equals(input.TotalDiscountPointsCharged))
                ) && 
                (
                    this.TotalForMaxLoanAmount == input.TotalForMaxLoanAmount ||
                    (this.TotalForMaxLoanAmount != null &&
                    this.TotalForMaxLoanAmount.Equals(input.TotalForMaxLoanAmount))
                ) && 
                (
                    this.TotalRooms == input.TotalRooms ||
                    (this.TotalRooms != null &&
                    this.TotalRooms.Equals(input.TotalRooms))
                ) && 
                (
                    this.TypeOfHybridARM == input.TypeOfHybridARM ||
                    (this.TypeOfHybridARM != null &&
                    this.TypeOfHybridARM.Equals(input.TypeOfHybridARM))
                ) && 
                (
                    this.TypeOfMortgage == input.TypeOfMortgage ||
                    (this.TypeOfMortgage != null &&
                    this.TypeOfMortgage.Equals(input.TypeOfMortgage))
                ) && 
                (
                    this.TypeOfOwnsership == input.TypeOfOwnsership ||
                    (this.TypeOfOwnsership != null &&
                    this.TypeOfOwnsership.Equals(input.TypeOfOwnsership))
                ) && 
                (
                    this.TypeOfStructure == input.TypeOfStructure ||
                    (this.TypeOfStructure != null &&
                    this.TypeOfStructure.Equals(input.TypeOfStructure))
                ) && 
                (
                    this.TypeOfVeteran == input.TypeOfVeteran ||
                    (this.TypeOfVeteran != null &&
                    this.TypeOfVeteran.Equals(input.TypeOfVeteran))
                ) && 
                (
                    this.UtilitiesElectricDescription == input.UtilitiesElectricDescription ||
                    (this.UtilitiesElectricDescription != null &&
                    this.UtilitiesElectricDescription.Equals(input.UtilitiesElectricDescription))
                ) && 
                (
                    this.UtilitiesGasDescription == input.UtilitiesGasDescription ||
                    (this.UtilitiesGasDescription != null &&
                    this.UtilitiesGasDescription.Equals(input.UtilitiesGasDescription))
                ) && 
                (
                    this.UtilitiesSewerDescription == input.UtilitiesSewerDescription ||
                    (this.UtilitiesSewerDescription != null &&
                    this.UtilitiesSewerDescription.Equals(input.UtilitiesSewerDescription))
                ) && 
                (
                    this.UtilitiesWaterDescription == input.UtilitiesWaterDescription ||
                    (this.UtilitiesWaterDescription != null &&
                    this.UtilitiesWaterDescription.Equals(input.UtilitiesWaterDescription))
                ) && 
                (
                    this.VABenefitRelatedIndebtedness == input.VABenefitRelatedIndebtedness ||
                    (this.VABenefitRelatedIndebtedness != null &&
                    this.VABenefitRelatedIndebtedness.Equals(input.VABenefitRelatedIndebtedness))
                ) && 
                (
                    this.VABuilderIDNo == input.VABuilderIDNo ||
                    (this.VABuilderIDNo != null &&
                    this.VABuilderIDNo.Equals(input.VABuilderIDNo))
                ) && 
                (
                    this.VAClaimFolderNumber == input.VAClaimFolderNumber ||
                    (this.VAClaimFolderNumber != null &&
                    this.VAClaimFolderNumber.Equals(input.VAClaimFolderNumber))
                ) && 
                (
                    this.VAClaimNumber == input.VAClaimNumber ||
                    (this.VAClaimNumber != null &&
                    this.VAClaimNumber.Equals(input.VAClaimNumber))
                ) && 
                (
                    this.VaLoanSummaryApplicantType == input.VaLoanSummaryApplicantType ||
                    (this.VaLoanSummaryApplicantType != null &&
                    this.VaLoanSummaryApplicantType.Equals(input.VaLoanSummaryApplicantType))
                ) && 
                (
                    this.VentFanIndicator == input.VentFanIndicator ||
                    (this.VentFanIndicator != null &&
                    this.VentFanIndicator.Equals(input.VentFanIndicator))
                ) && 
                (
                    this.VeteranDischargedIndicator == input.VeteranDischargedIndicator ||
                    (this.VeteranDischargedIndicator != null &&
                    this.VeteranDischargedIndicator.Equals(input.VeteranDischargedIndicator))
                ) && 
                (
                    this.VeteranServiceType == input.VeteranServiceType ||
                    (this.VeteranServiceType != null &&
                    this.VeteranServiceType.Equals(input.VeteranServiceType))
                ) && 
                (
                    this.WarrantorAddress == input.WarrantorAddress ||
                    (this.WarrantorAddress != null &&
                    this.WarrantorAddress.Equals(input.WarrantorAddress))
                ) && 
                (
                    this.WarrantorCity == input.WarrantorCity ||
                    (this.WarrantorCity != null &&
                    this.WarrantorCity.Equals(input.WarrantorCity))
                ) && 
                (
                    this.WarrantorName == input.WarrantorName ||
                    (this.WarrantorName != null &&
                    this.WarrantorName.Equals(input.WarrantorName))
                ) && 
                (
                    this.WarrantorPhone == input.WarrantorPhone ||
                    (this.WarrantorPhone != null &&
                    this.WarrantorPhone.Equals(input.WarrantorPhone))
                ) && 
                (
                    this.WarrantorPostalCode == input.WarrantorPostalCode ||
                    (this.WarrantorPostalCode != null &&
                    this.WarrantorPostalCode.Equals(input.WarrantorPostalCode))
                ) && 
                (
                    this.WarrantorState == input.WarrantorState ||
                    (this.WarrantorState != null &&
                    this.WarrantorState.Equals(input.WarrantorState))
                ) && 
                (
                    this.WarrantyProgramExpirationDate == input.WarrantyProgramExpirationDate ||
                    (this.WarrantyProgramExpirationDate != null &&
                    this.WarrantyProgramExpirationDate.Equals(input.WarrantyProgramExpirationDate))
                ) && 
                (
                    this.WWCarpetIndicator == input.WWCarpetIndicator ||
                    (this.WWCarpetIndicator != null &&
                    this.WWCarpetIndicator.Equals(input.WWCarpetIndicator))
                ) && 
                (
                    this.VAOriginalMonthlyPayment == input.VAOriginalMonthlyPayment ||
                    (this.VAOriginalMonthlyPayment != null &&
                    this.VAOriginalMonthlyPayment.Equals(input.VAOriginalMonthlyPayment))
                ) && 
                (
                    this.VAOriginalAmortizationType == input.VAOriginalAmortizationType ||
                    (this.VAOriginalAmortizationType != null &&
                    this.VAOriginalAmortizationType.Equals(input.VAOriginalAmortizationType))
                ) && 
                (
                    this.VARecoupmentMonthlyDecreaseInPayment == input.VARecoupmentMonthlyDecreaseInPayment ||
                    (this.VARecoupmentMonthlyDecreaseInPayment != null &&
                    this.VARecoupmentMonthlyDecreaseInPayment.Equals(input.VARecoupmentMonthlyDecreaseInPayment))
                ) && 
                (
                    this.VARecoupmentTotalClosingCosts == input.VARecoupmentTotalClosingCosts ||
                    (this.VARecoupmentTotalClosingCosts != null &&
                    this.VARecoupmentTotalClosingCosts.Equals(input.VARecoupmentTotalClosingCosts))
                ) && 
                (
                    this.VARecoupmentExcludePrepaids == input.VARecoupmentExcludePrepaids ||
                    (this.VARecoupmentExcludePrepaids != null &&
                    this.VARecoupmentExcludePrepaids.Equals(input.VARecoupmentExcludePrepaids))
                ) && 
                (
                    this.VARecoupmentClosingCosts == input.VARecoupmentClosingCosts ||
                    (this.VARecoupmentClosingCosts != null &&
                    this.VARecoupmentClosingCosts.Equals(input.VARecoupmentClosingCosts))
                ) && 
                (
                    this.VARecoupmentYears == input.VARecoupmentYears ||
                    (this.VARecoupmentYears != null &&
                    this.VARecoupmentYears.Equals(input.VARecoupmentYears))
                ) && 
                (
                    this.VARecoupmentMonths == input.VARecoupmentMonths ||
                    (this.VARecoupmentMonths != null &&
                    this.VARecoupmentMonths.Equals(input.VARecoupmentMonths))
                ) && 
                (
                    this.VALatePaymentIn6Months == input.VALatePaymentIn6Months ||
                    (this.VALatePaymentIn6Months != null &&
                    this.VALatePaymentIn6Months.Equals(input.VALatePaymentIn6Months))
                ) && 
                (
                    this.VAIsDelinquent30Days == input.VAIsDelinquent30Days ||
                    (this.VAIsDelinquent30Days != null &&
                    this.VAIsDelinquent30Days.Equals(input.VAIsDelinquent30Days))
                ) && 
                (
                    this.TotalMonthlyPayment == input.TotalMonthlyPayment ||
                    (this.TotalMonthlyPayment != null &&
                    this.TotalMonthlyPayment.Equals(input.TotalMonthlyPayment))
                ) && 
                (
                    this.TotalProposedMonthlyPayment == input.TotalProposedMonthlyPayment ||
                    (this.TotalProposedMonthlyPayment != null &&
                    this.TotalProposedMonthlyPayment.Equals(input.TotalProposedMonthlyPayment))
                ) && 
                (
                    this.ExcludeTaxesInsuranceIndicator == input.ExcludeTaxesInsuranceIndicator ||
                    (this.ExcludeTaxesInsuranceIndicator != null &&
                    this.ExcludeTaxesInsuranceIndicator.Equals(input.ExcludeTaxesInsuranceIndicator))
                ) && 
                (
                    this.ApplicantBirthDate == input.ApplicantBirthDate ||
                    (this.ApplicantBirthDate != null &&
                    this.ApplicantBirthDate.Equals(input.ApplicantBirthDate))
                ) && 
                (
                    this.ApplicantEmailAddressText == input.ApplicantEmailAddressText ||
                    (this.ApplicantEmailAddressText != null &&
                    this.ApplicantEmailAddressText.Equals(input.ApplicantEmailAddressText))
                ) && 
                (
                    this.ApplicantHomePhoneNumber == input.ApplicantHomePhoneNumber ||
                    (this.ApplicantHomePhoneNumber != null &&
                    this.ApplicantHomePhoneNumber.Equals(input.ApplicantHomePhoneNumber))
                ) && 
                (
                    this.ApplicantFirstNameWithMiddleName == input.ApplicantFirstNameWithMiddleName ||
                    (this.ApplicantFirstNameWithMiddleName != null &&
                    this.ApplicantFirstNameWithMiddleName.Equals(input.ApplicantFirstNameWithMiddleName))
                ) && 
                (
                    this.ApplicantLastNameWithSuffix == input.ApplicantLastNameWithSuffix ||
                    (this.ApplicantLastNameWithSuffix != null &&
                    this.ApplicantLastNameWithSuffix.Equals(input.ApplicantLastNameWithSuffix))
                ) && 
                (
                    this.ApplicantTaxIdentificationIdentifier == input.ApplicantTaxIdentificationIdentifier ||
                    (this.ApplicantTaxIdentificationIdentifier != null &&
                    this.ApplicantTaxIdentificationIdentifier.Equals(input.ApplicantTaxIdentificationIdentifier))
                ) && 
                (
                    this.ApplicantHmdaGenderType == input.ApplicantHmdaGenderType ||
                    (this.ApplicantHmdaGenderType != null &&
                    this.ApplicantHmdaGenderType.Equals(input.ApplicantHmdaGenderType))
                ) && 
                (
                    this.ApplicantAddressStreetLine1 == input.ApplicantAddressStreetLine1 ||
                    (this.ApplicantAddressStreetLine1 != null &&
                    this.ApplicantAddressStreetLine1.Equals(input.ApplicantAddressStreetLine1))
                ) && 
                (
                    this.ApplicantAddressCity == input.ApplicantAddressCity ||
                    (this.ApplicantAddressCity != null &&
                    this.ApplicantAddressCity.Equals(input.ApplicantAddressCity))
                ) && 
                (
                    this.ApplicantAddressState == input.ApplicantAddressState ||
                    (this.ApplicantAddressState != null &&
                    this.ApplicantAddressState.Equals(input.ApplicantAddressState))
                ) && 
                (
                    this.ApplicantAddressPostalCode == input.ApplicantAddressPostalCode ||
                    (this.ApplicantAddressPostalCode != null &&
                    this.ApplicantAddressPostalCode.Equals(input.ApplicantAddressPostalCode))
                ) && 
                (
                    this.VABuilderDescription == input.VABuilderDescription ||
                    (this.VABuilderDescription != null &&
                    this.VABuilderDescription.Equals(input.VABuilderDescription))
                ) && 
                (
                    this.AutomaticProcedure == input.AutomaticProcedure ||
                    (this.AutomaticProcedure != null &&
                    this.AutomaticProcedure.Equals(input.AutomaticProcedure))
                ) && 
                (
                    this.PriorApprovalProcedure == input.PriorApprovalProcedure ||
                    (this.PriorApprovalProcedure != null &&
                    this.PriorApprovalProcedure.Equals(input.PriorApprovalProcedure))
                ) && 
                (
                    this.FirstChattelLoanType == input.FirstChattelLoanType ||
                    (this.FirstChattelLoanType != null &&
                    this.FirstChattelLoanType.Equals(input.FirstChattelLoanType))
                ) && 
                (
                    this.UnsecuredLoanType == input.UnsecuredLoanType ||
                    (this.UnsecuredLoanType != null &&
                    this.UnsecuredLoanType.Equals(input.UnsecuredLoanType))
                ) && 
                (
                    this.OtherLoanType == input.OtherLoanType ||
                    (this.OtherLoanType != null &&
                    this.OtherLoanType.Equals(input.OtherLoanType))
                ) && 
                (
                    this.OtherDescriptionLoanType == input.OtherDescriptionLoanType ||
                    (this.OtherDescriptionLoanType != null &&
                    this.OtherDescriptionLoanType.Equals(input.OtherDescriptionLoanType))
                ) && 
                (
                    this.OtherEstateProperty == input.OtherEstateProperty ||
                    (this.OtherEstateProperty != null &&
                    this.OtherEstateProperty.Equals(input.OtherEstateProperty))
                ) && 
                (
                    this.OtherDescriptionEstateProperty == input.OtherDescriptionEstateProperty ||
                    (this.OtherDescriptionEstateProperty != null &&
                    this.OtherDescriptionEstateProperty.Equals(input.OtherDescriptionEstateProperty))
                ) && 
                (
                    this.AnnualSpecialAssessment == input.AnnualSpecialAssessment ||
                    (this.AnnualSpecialAssessment != null &&
                    this.AnnualSpecialAssessment.Equals(input.AnnualSpecialAssessment))
                ) && 
                (
                    this.TotalUnpaidSpecialAssessments == input.TotalUnpaidSpecialAssessments ||
                    (this.TotalUnpaidSpecialAssessments != null &&
                    this.TotalUnpaidSpecialAssessments.Equals(input.TotalUnpaidSpecialAssessments))
                ) && 
                (
                    this.NonrealtyDescription == input.NonrealtyDescription ||
                    (this.NonrealtyDescription != null &&
                    this.NonrealtyDescription.Equals(input.NonrealtyDescription))
                ) && 
                (
                    this.AdditionalSecurityDescription == input.AdditionalSecurityDescription ||
                    (this.AdditionalSecurityDescription != null &&
                    this.AdditionalSecurityDescription.Equals(input.AdditionalSecurityDescription))
                ) && 
                (
                    this.DateAquiredLand == input.DateAquiredLand ||
                    (this.DateAquiredLand != null &&
                    this.DateAquiredLand.Equals(input.DateAquiredLand))
                ) && 
                (
                    this.LandPurchasePrice == input.LandPurchasePrice ||
                    (this.LandPurchasePrice != null &&
                    this.LandPurchasePrice.Equals(input.LandPurchasePrice))
                ) && 
                (
                    this.AmountTypeWithheld == input.AmountTypeWithheld ||
                    (this.AmountTypeWithheld != null &&
                    this.AmountTypeWithheld.Equals(input.AmountTypeWithheld))
                ) && 
                (
                    this.AmountWithheld == input.AmountWithheld ||
                    (this.AmountWithheld != null &&
                    this.AmountWithheld.Equals(input.AmountWithheld))
                ) && 
                (
                    this.ReasonableValueCompleted == input.ReasonableValueCompleted ||
                    (this.ReasonableValueCompleted != null &&
                    this.ReasonableValueCompleted.Equals(input.ReasonableValueCompleted))
                ) && 
                (
                    this.DisabilityAmountCollected == input.DisabilityAmountCollected ||
                    (this.DisabilityAmountCollected != null &&
                    this.DisabilityAmountCollected.Equals(input.DisabilityAmountCollected))
                ) && 
                (
                    this.PestReportFee == input.PestReportFee ||
                    (this.PestReportFee != null &&
                    this.PestReportFee.Equals(input.PestReportFee))
                ) && 
                (
                    this.VATrackingSARName == input.VATrackingSARName ||
                    (this.VATrackingSARName != null &&
                    this.VATrackingSARName.Equals(input.VATrackingSARName))
                ) && 
                (
                    this.VATrackingSARID == input.VATrackingSARID ||
                    (this.VATrackingSARID != null &&
                    this.VATrackingSARID.Equals(input.VATrackingSARID))
                ) && 
                (
                    this.VATrackingIsSARLAPPCertified == input.VATrackingIsSARLAPPCertified ||
                    (this.VATrackingIsSARLAPPCertified != null &&
                    this.VATrackingIsSARLAPPCertified.Equals(input.VATrackingIsSARLAPPCertified))
                ) && 
                (
                    this.VAAppraisalSentDate == input.VAAppraisalSentDate ||
                    (this.VAAppraisalSentDate != null &&
                    this.VAAppraisalSentDate.Equals(input.VAAppraisalSentDate))
                ) && 
                (
                    this.VANOVDateReceived == input.VANOVDateReceived ||
                    (this.VANOVDateReceived != null &&
                    this.VANOVDateReceived.Equals(input.VANOVDateReceived))
                ) && 
                (
                    this.VANOVDateReviewed == input.VANOVDateReviewed ||
                    (this.VANOVDateReviewed != null &&
                    this.VANOVDateReviewed.Equals(input.VANOVDateReviewed))
                ) && 
                (
                    this.VANOVIssuedDate == input.VANOVIssuedDate ||
                    (this.VANOVIssuedDate != null &&
                    this.VANOVIssuedDate.Equals(input.VANOVIssuedDate))
                ) && 
                (
                    this.VADateNOVAppraisalMailedToBorrower == input.VADateNOVAppraisalMailedToBorrower ||
                    (this.VADateNOVAppraisalMailedToBorrower != null &&
                    this.VADateNOVAppraisalMailedToBorrower.Equals(input.VADateNOVAppraisalMailedToBorrower))
                ) && 
                (
                    this.VATrackingOrderedDate == input.VATrackingOrderedDate ||
                    (this.VATrackingOrderedDate != null &&
                    this.VATrackingOrderedDate.Equals(input.VATrackingOrderedDate))
                ) && 
                (
                    this.VATrackingCOEIssueDate == input.VATrackingCOEIssueDate ||
                    (this.VATrackingCOEIssueDate != null &&
                    this.VATrackingCOEIssueDate.Equals(input.VATrackingCOEIssueDate))
                ) && 
                (
                    this.VATrackingCOEIssueHistory == input.VATrackingCOEIssueHistory ||
                    (this.VATrackingCOEIssueHistory != null &&
                    this.VATrackingCOEIssueHistory.Equals(input.VATrackingCOEIssueHistory))
                ) && 
                (
                    this.VATrackingPaidDate == input.VATrackingPaidDate ||
                    (this.VATrackingPaidDate != null &&
                    this.VATrackingPaidDate.Equals(input.VATrackingPaidDate))
                ) && 
                (
                    this.VATrackingReceiptReceived == input.VATrackingReceiptReceived ||
                    (this.VATrackingReceiptReceived != null &&
                    this.VATrackingReceiptReceived.Equals(input.VATrackingReceiptReceived))
                ) && 
                (
                    this.VATrackingLoanGuaranteeCertReceipt == input.VATrackingLoanGuaranteeCertReceipt ||
                    (this.VATrackingLoanGuaranteeCertReceipt != null &&
                    this.VATrackingLoanGuaranteeCertReceipt.Equals(input.VATrackingLoanGuaranteeCertReceipt))
                ) && 
                (
                    this.VATrackingGSAExclusionaryListChecked == input.VATrackingGSAExclusionaryListChecked ||
                    (this.VATrackingGSAExclusionaryListChecked != null &&
                    this.VATrackingGSAExclusionaryListChecked.Equals(input.VATrackingGSAExclusionaryListChecked))
                ) && 
                (
                    this.VATrackingCertOfCommitmentIssued == input.VATrackingCertOfCommitmentIssued ||
                    (this.VATrackingCertOfCommitmentIssued != null &&
                    this.VATrackingCertOfCommitmentIssued.Equals(input.VATrackingCertOfCommitmentIssued))
                ) && 
                (
                    this.VATrackingMasterCommitmentLockExpired == input.VATrackingMasterCommitmentLockExpired ||
                    (this.VATrackingMasterCommitmentLockExpired != null &&
                    this.VATrackingMasterCommitmentLockExpired.Equals(input.VATrackingMasterCommitmentLockExpired))
                ) && 
                (
                    this.VATrackingFinalApprovalCommitmentDate == input.VATrackingFinalApprovalCommitmentDate ||
                    (this.VATrackingFinalApprovalCommitmentDate != null &&
                    this.VATrackingFinalApprovalCommitmentDate.Equals(input.VATrackingFinalApprovalCommitmentDate))
                ) && 
                (
                    this.VATrackingPurchaseContractDate == input.VATrackingPurchaseContractDate ||
                    (this.VATrackingPurchaseContractDate != null &&
                    this.VATrackingPurchaseContractDate.Equals(input.VATrackingPurchaseContractDate))
                ) && 
                (
                    this.VATrackingInuranceFloodPolicy == input.VATrackingInuranceFloodPolicy ||
                    (this.VATrackingInuranceFloodPolicy != null &&
                    this.VATrackingInuranceFloodPolicy.Equals(input.VATrackingInuranceFloodPolicy))
                ) && 
                (
                    this.VATrackingInuranceHazardPolicy == input.VATrackingInuranceHazardPolicy ||
                    (this.VATrackingInuranceHazardPolicy != null &&
                    this.VATrackingInuranceHazardPolicy.Equals(input.VATrackingInuranceHazardPolicy))
                ) && 
                (
                    this.VATrackingInuranceWoodDestroyingPolicy == input.VATrackingInuranceWoodDestroyingPolicy ||
                    (this.VATrackingInuranceWoodDestroyingPolicy != null &&
                    this.VATrackingInuranceWoodDestroyingPolicy.Equals(input.VATrackingInuranceWoodDestroyingPolicy))
                ) && 
                (
                    this.VATrackingInuranceWindOrHailPolicy == input.VATrackingInuranceWindOrHailPolicy ||
                    (this.VATrackingInuranceWindOrHailPolicy != null &&
                    this.VATrackingInuranceWindOrHailPolicy.Equals(input.VATrackingInuranceWindOrHailPolicy))
                ) && 
                (
                    this.VAQualificationCountryRegion == input.VAQualificationCountryRegion ||
                    (this.VAQualificationCountryRegion != null &&
                    this.VAQualificationCountryRegion.Equals(input.VAQualificationCountryRegion))
                ) && 
                (
                    this.VAQualification2ndTierEntitlement == input.VAQualification2ndTierEntitlement ||
                    (this.VAQualification2ndTierEntitlement != null &&
                    this.VAQualification2ndTierEntitlement.Equals(input.VAQualification2ndTierEntitlement))
                ) && 
                (
                    this.VAQualificationCountyLimits == input.VAQualificationCountyLimits ||
                    (this.VAQualificationCountyLimits != null &&
                    this.VAQualificationCountyLimits.Equals(input.VAQualificationCountyLimits))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Acres != null)
                    hashCode = hashCode * 59 + this.Acres.GetHashCode();
                if (this.AdministratorAddress != null)
                    hashCode = hashCode * 59 + this.AdministratorAddress.GetHashCode();
                if (this.AdministratorCity != null)
                    hashCode = hashCode * 59 + this.AdministratorCity.GetHashCode();
                if (this.AdministratorContact != null)
                    hashCode = hashCode * 59 + this.AdministratorContact.GetHashCode();
                if (this.AdministratorName != null)
                    hashCode = hashCode * 59 + this.AdministratorName.GetHashCode();
                if (this.AdministratorPostalCode != null)
                    hashCode = hashCode * 59 + this.AdministratorPostalCode.GetHashCode();
                if (this.AdministratorState != null)
                    hashCode = hashCode * 59 + this.AdministratorState.GetHashCode();
                if (this.AgeOfProperty != null)
                    hashCode = hashCode * 59 + this.AgeOfProperty.GetHashCode();
                if (this.AmountSpentOnEnergyImprovements != null)
                    hashCode = hashCode * 59 + this.AmountSpentOnEnergyImprovements.GetHashCode();
                if (this.AnnualGroundRent != null)
                    hashCode = hashCode * 59 + this.AnnualGroundRent.GetHashCode();
                if (this.AnnualMaintenanceAssessment != null)
                    hashCode = hashCode * 59 + this.AnnualMaintenanceAssessment.GetHashCode();
                if (this.AnnualRealEstateTaxes != null)
                    hashCode = hashCode * 59 + this.AnnualRealEstateTaxes.GetHashCode();
                if (this.AppraisalType != null)
                    hashCode = hashCode * 59 + this.AppraisalType.GetHashCode();
                if (this.AvailableForInspectionAMIndicator != null)
                    hashCode = hashCode * 59 + this.AvailableForInspectionAMIndicator.GetHashCode();
                if (this.AvailableForInspectionDateAndTime != null)
                    hashCode = hashCode * 59 + this.AvailableForInspectionDateAndTime.GetHashCode();
                if (this.BorrowerPaidDiscountPointsTotalAmount != null)
                    hashCode = hashCode * 59 + this.BorrowerPaidDiscountPointsTotalAmount.GetHashCode();
                if (this.BuildingType != null)
                    hashCode = hashCode * 59 + this.BuildingType.GetHashCode();
                if (this.BuyerPurchasingLotSeparately != null)
                    hashCode = hashCode * 59 + this.BuyerPurchasingLotSeparately.GetHashCode();
                if (this.CashPaymentFromVeteran != null)
                    hashCode = hashCode * 59 + this.CashPaymentFromVeteran.GetHashCode();
                if (this.ClaimDisabilityBenefits != null)
                    hashCode = hashCode * 59 + this.ClaimDisabilityBenefits.GetHashCode();
                if (this.ClothesWasherIndicator != null)
                    hashCode = hashCode * 59 + this.ClothesWasherIndicator.GetHashCode();
                if (this.ConstructionCompletedDate != null)
                    hashCode = hashCode * 59 + this.ConstructionCompletedDate.GetHashCode();
                if (this.ConstructionPlan != null)
                    hashCode = hashCode * 59 + this.ConstructionPlan.GetHashCode();
                if (this.ConstructionWarrantyIncluded != null)
                    hashCode = hashCode * 59 + this.ConstructionWarrantyIncluded.GetHashCode();
                if (this.ContractNoApprovedByVA != null)
                    hashCode = hashCode * 59 + this.ContractNoApprovedByVA.GetHashCode();
                if (this.CreditScore != null)
                    hashCode = hashCode * 59 + this.CreditScore.GetHashCode();
                if (this.CurrentlyOnMilitaryDuty != null)
                    hashCode = hashCode * 59 + this.CurrentlyOnMilitaryDuty.GetHashCode();
                if (this.DateOfAssignment != null)
                    hashCode = hashCode * 59 + this.DateOfAssignment.GetHashCode();
                if (this.DateSAR != null)
                    hashCode = hashCode * 59 + this.DateSAR.GetHashCode();
                if (this.DiscountPercentage != null)
                    hashCode = hashCode * 59 + this.DiscountPercentage.GetHashCode();
                if (this.DiscountPoint != null)
                    hashCode = hashCode * 59 + this.DiscountPoint.GetHashCode();
                if (this.DishwasherIndicator != null)
                    hashCode = hashCode * 59 + this.DishwasherIndicator.GetHashCode();
                if (this.DryerIndicator != null)
                    hashCode = hashCode * 59 + this.DryerIndicator.GetHashCode();
                if (this.EmailToBeNotifiedWhenUploaded != null)
                    hashCode = hashCode * 59 + this.EmailToBeNotifiedWhenUploaded.GetHashCode();
                if (this.EnergyImprovementsAdditionOfFeature != null)
                    hashCode = hashCode * 59 + this.EnergyImprovementsAdditionOfFeature.GetHashCode();
                if (this.EntitlementCode != null)
                    hashCode = hashCode * 59 + this.EntitlementCode.GetHashCode();
                if (this.EquipmentOtherDescription != null)
                    hashCode = hashCode * 59 + this.EquipmentOtherDescription.GetHashCode();
                if (this.FinalDiscountAmount != null)
                    hashCode = hashCode * 59 + this.FinalDiscountAmount.GetHashCode();
                if (this.FinalFundingFeeAmount != null)
                    hashCode = hashCode * 59 + this.FinalFundingFeeAmount.GetHashCode();
                if (this.FirstTimeUse != null)
                    hashCode = hashCode * 59 + this.FirstTimeUse.GetHashCode();
                if (this.FundingFeeExempt != null)
                    hashCode = hashCode * 59 + this.FundingFeeExempt.GetHashCode();
                if (this.GarbageDisposalIndicator != null)
                    hashCode = hashCode * 59 + this.GarbageDisposalIndicator.GetHashCode();
                if (this.InitialTotal != null)
                    hashCode = hashCode * 59 + this.InitialTotal.GetHashCode();
                if (this.InspectionWillBeMadeBy != null)
                    hashCode = hashCode * 59 + this.InspectionWillBeMadeBy.GetHashCode();
                if (this.Insulation != null)
                    hashCode = hashCode * 59 + this.Insulation.GetHashCode();
                if (this.InsuranceType != null)
                    hashCode = hashCode * 59 + this.InsuranceType.GetHashCode();
                if (this.IrregularLotSizeInSquareFeet != null)
                    hashCode = hashCode * 59 + this.IrregularLotSizeInSquareFeet.GetHashCode();
                if (this.IsDelinquent30Days != null)
                    hashCode = hashCode * 59 + this.IsDelinquent30Days.GetHashCode();
                if (this.KeysAtAddress != null)
                    hashCode = hashCode * 59 + this.KeysAtAddress.GetHashCode();
                if (this.LeaseholdType != null)
                    hashCode = hashCode * 59 + this.LeaseholdType.GetHashCode();
                if (this.LenderSAR != null)
                    hashCode = hashCode * 59 + this.LenderSAR.GetHashCode();
                if (this.LoanAnalysisRemarks1 != null)
                    hashCode = hashCode * 59 + this.LoanAnalysisRemarks1.GetHashCode();
                if (this.LoanAnalysisRemarks2 != null)
                    hashCode = hashCode * 59 + this.LoanAnalysisRemarks2.GetHashCode();
                if (this.LoanAnalysisRemarks3 != null)
                    hashCode = hashCode * 59 + this.LoanAnalysisRemarks3.GetHashCode();
                if (this.LoanAnalysisRemarks4 != null)
                    hashCode = hashCode * 59 + this.LoanAnalysisRemarks4.GetHashCode();
                if (this.LoanAnalysisRemarks5 != null)
                    hashCode = hashCode * 59 + this.LoanAnalysisRemarks5.GetHashCode();
                if (this.LoanAnalysisRemarks6 != null)
                    hashCode = hashCode * 59 + this.LoanAnalysisRemarks6.GetHashCode();
                if (this.LoanAnalysisRemarks7 != null)
                    hashCode = hashCode * 59 + this.LoanAnalysisRemarks7.GetHashCode();
                if (this.LoanAnalysisRemarks8 != null)
                    hashCode = hashCode * 59 + this.LoanAnalysisRemarks8.GetHashCode();
                if (this.LoanAnalysisRemarks9 != null)
                    hashCode = hashCode * 59 + this.LoanAnalysisRemarks9.GetHashCode();
                if (this.LoanCode != null)
                    hashCode = hashCode * 59 + this.LoanCode.GetHashCode();
                if (this.LoanProcedure != null)
                    hashCode = hashCode * 59 + this.LoanProcedure.GetHashCode();
                if (this.LoanProcessedUnderAU != null)
                    hashCode = hashCode * 59 + this.LoanProcessedUnderAU.GetHashCode();
                if (this.LoanSummaryRemarks1 != null)
                    hashCode = hashCode * 59 + this.LoanSummaryRemarks1.GetHashCode();
                if (this.LoanSummaryRemarks2 != null)
                    hashCode = hashCode * 59 + this.LoanSummaryRemarks2.GetHashCode();
                if (this.LoanSummaryRemarks3 != null)
                    hashCode = hashCode * 59 + this.LoanSummaryRemarks3.GetHashCode();
                if (this.LoanSummaryRemarks4 != null)
                    hashCode = hashCode * 59 + this.LoanSummaryRemarks4.GetHashCode();
                if (this.LoanSummaryRemarks5 != null)
                    hashCode = hashCode * 59 + this.LoanSummaryRemarks5.GetHashCode();
                if (this.LoanSummaryRemarks6 != null)
                    hashCode = hashCode * 59 + this.LoanSummaryRemarks6.GetHashCode();
                if (this.LoanSummaryRemarks7 != null)
                    hashCode = hashCode * 59 + this.LoanSummaryRemarks7.GetHashCode();
                if (this.LoanSummaryRemarks8 != null)
                    hashCode = hashCode * 59 + this.LoanSummaryRemarks8.GetHashCode();
                if (this.LotDimensions != null)
                    hashCode = hashCode * 59 + this.LotDimensions.GetHashCode();
                if (this.MailingAddress != null)
                    hashCode = hashCode * 59 + this.MailingAddress.GetHashCode();
                if (this.MailingCity != null)
                    hashCode = hashCode * 59 + this.MailingCity.GetHashCode();
                if (this.MailingPostalCode != null)
                    hashCode = hashCode * 59 + this.MailingPostalCode.GetHashCode();
                if (this.MailingState != null)
                    hashCode = hashCode * 59 + this.MailingState.GetHashCode();
                if (this.ManufacturedHome != null)
                    hashCode = hashCode * 59 + this.ManufacturedHome.GetHashCode();
                if (this.MCRVNumber != null)
                    hashCode = hashCode * 59 + this.MCRVNumber.GetHashCode();
                if (this.MilitaryBranchOfService != null)
                    hashCode = hashCode * 59 + this.MilitaryBranchOfService.GetHashCode();
                if (this.MilitaryServices != null)
                    hashCode = hashCode * 59 + this.MilitaryServices.GetHashCode();
                if (this.MineralRightsReserved != null)
                    hashCode = hashCode * 59 + this.MineralRightsReserved.GetHashCode();
                if (this.NameOfOccupant != null)
                    hashCode = hashCode * 59 + this.NameOfOccupant.GetHashCode();
                if (this.NameOfOwner != null)
                    hashCode = hashCode * 59 + this.NameOfOwner.GetHashCode();
                if (this.NameOfWarrantyProgram != null)
                    hashCode = hashCode * 59 + this.NameOfWarrantyProgram.GetHashCode();
                if (this.NegativeRents != null)
                    hashCode = hashCode * 59 + this.NegativeRents.GetHashCode();
                if (this.NoEnergyImprovements != null)
                    hashCode = hashCode * 59 + this.NoEnergyImprovements.GetHashCode();
                if (this.NumberOfBuildings != null)
                    hashCode = hashCode * 59 + this.NumberOfBuildings.GetHashCode();
                if (this.OccupantTelephone != null)
                    hashCode = hashCode * 59 + this.OccupantTelephone.GetHashCode();
                if (this.OnMilitaryDutyFollowingSeparation != null)
                    hashCode = hashCode * 59 + this.OnMilitaryDutyFollowingSeparation.GetHashCode();
                if (this.OriginalInterestRate != null)
                    hashCode = hashCode * 59 + this.OriginalInterestRate.GetHashCode();
                if (this.OriginalLoanAmount != null)
                    hashCode = hashCode * 59 + this.OriginalLoanAmount.GetHashCode();
                if (this.OriginalTerm != null)
                    hashCode = hashCode * 59 + this.OriginalTerm.GetHashCode();
                if (this.OriginalValueEstimateChanged != null)
                    hashCode = hashCode * 59 + this.OriginalValueEstimateChanged.GetHashCode();
                if (this.OriginationFeeAmount != null)
                    hashCode = hashCode * 59 + this.OriginationFeeAmount.GetHashCode();
                if (this.OtherClosingCosts != null)
                    hashCode = hashCode * 59 + this.OtherClosingCosts.GetHashCode();
                if (this.OtherImprovements != null)
                    hashCode = hashCode * 59 + this.OtherImprovements.GetHashCode();
                if (this.PaidInFullVALoanNumber != null)
                    hashCode = hashCode * 59 + this.PaidInFullVALoanNumber.GetHashCode();
                if (this.PayoffIndicator1 != null)
                    hashCode = hashCode * 59 + this.PayoffIndicator1.GetHashCode();
                if (this.PayoffIndicator2 != null)
                    hashCode = hashCode * 59 + this.PayoffIndicator2.GetHashCode();
                if (this.PayoffIndicator3 != null)
                    hashCode = hashCode * 59 + this.PayoffIndicator3.GetHashCode();
                if (this.PayoffIndicator4 != null)
                    hashCode = hashCode * 59 + this.PayoffIndicator4.GetHashCode();
                if (this.PayoffIndicator5 != null)
                    hashCode = hashCode * 59 + this.PayoffIndicator5.GetHashCode();
                if (this.PayoffIndicator6 != null)
                    hashCode = hashCode * 59 + this.PayoffIndicator6.GetHashCode();
                if (this.PayoffIndicator7 != null)
                    hashCode = hashCode * 59 + this.PayoffIndicator7.GetHashCode();
                if (this.PayoffIndicator8 != null)
                    hashCode = hashCode * 59 + this.PayoffIndicator8.GetHashCode();
                if (this.PayoffIndicator9 != null)
                    hashCode = hashCode * 59 + this.PayoffIndicator9.GetHashCode();
                if (this.PlansSubmitted != null)
                    hashCode = hashCode * 59 + this.PlansSubmitted.GetHashCode();
                if (this.POCAddress != null)
                    hashCode = hashCode * 59 + this.POCAddress.GetHashCode();
                if (this.POCCity != null)
                    hashCode = hashCode * 59 + this.POCCity.GetHashCode();
                if (this.POCName != null)
                    hashCode = hashCode * 59 + this.POCName.GetHashCode();
                if (this.POCPhone != null)
                    hashCode = hashCode * 59 + this.POCPhone.GetHashCode();
                if (this.POCState != null)
                    hashCode = hashCode * 59 + this.POCState.GetHashCode();
                if (this.POCZipCode != null)
                    hashCode = hashCode * 59 + this.POCZipCode.GetHashCode();
                if (this.PreliminaryDiscountAmount != null)
                    hashCode = hashCode * 59 + this.PreliminaryDiscountAmount.GetHashCode();
                if (this.PreliminaryFundingFeeAmount != null)
                    hashCode = hashCode * 59 + this.PreliminaryFundingFeeAmount.GetHashCode();
                if (this.PreliminaryTotal != null)
                    hashCode = hashCode * 59 + this.PreliminaryTotal.GetHashCode();
                if (this.PreviousVALoanIndicator != null)
                    hashCode = hashCode * 59 + this.PreviousVALoanIndicator.GetHashCode();
                if (this.PreviousVaLoans != null)
                    hashCode = hashCode * 59 + this.PreviousVaLoans.GetHashCode();
                if (this.PriorLoanType != null)
                    hashCode = hashCode * 59 + this.PriorLoanType.GetHashCode();
                if (this.PropertyDesignation != null)
                    hashCode = hashCode * 59 + this.PropertyDesignation.GetHashCode();
                if (this.PropertyGrossLivingArea != null)
                    hashCode = hashCode * 59 + this.PropertyGrossLivingArea.GetHashCode();
                if (this.PropertyLegalDescription1 != null)
                    hashCode = hashCode * 59 + this.PropertyLegalDescription1.GetHashCode();
                if (this.PropertyLegalDescription2 != null)
                    hashCode = hashCode * 59 + this.PropertyLegalDescription2.GetHashCode();
                if (this.PropertyLegalDescription3 != null)
                    hashCode = hashCode * 59 + this.PropertyLegalDescription3.GetHashCode();
                if (this.PropertyLegalDescription4 != null)
                    hashCode = hashCode * 59 + this.PropertyLegalDescription4.GetHashCode();
                if (this.PropertyOccupancyType != null)
                    hashCode = hashCode * 59 + this.PropertyOccupancyType.GetHashCode();
                if (this.ProposedSaleContractAttached != null)
                    hashCode = hashCode * 59 + this.ProposedSaleContractAttached.GetHashCode();
                if (this.PurposeOfLoan != null)
                    hashCode = hashCode * 59 + this.PurposeOfLoan.GetHashCode();
                if (this.RangeOvenIndicator != null)
                    hashCode = hashCode * 59 + this.RangeOvenIndicator.GetHashCode();
                if (this.RefrigeratorIndicator != null)
                    hashCode = hashCode * 59 + this.RefrigeratorIndicator.GetHashCode();
                if (this.Rent != null)
                    hashCode = hashCode * 59 + this.Rent.GetHashCode();
                if (this.ReplacementOfSystem != null)
                    hashCode = hashCode * 59 + this.ReplacementOfSystem.GetHashCode();
                if (this.RiskClasification != null)
                    hashCode = hashCode * 59 + this.RiskClasification.GetHashCode();
                if (this.ServiceNumber != null)
                    hashCode = hashCode * 59 + this.ServiceNumber.GetHashCode();
                if (this.SolarHeatingOrCooling != null)
                    hashCode = hashCode * 59 + this.SolarHeatingOrCooling.GetHashCode();
                if (this.SpecialAssessmentComments1 != null)
                    hashCode = hashCode * 59 + this.SpecialAssessmentComments1.GetHashCode();
                if (this.SpecialAssessmentComments2 != null)
                    hashCode = hashCode * 59 + this.SpecialAssessmentComments2.GetHashCode();
                if (this.SpecialAssessmentComments3 != null)
                    hashCode = hashCode * 59 + this.SpecialAssessmentComments3.GetHashCode();
                if (this.StreetAccess != null)
                    hashCode = hashCode * 59 + this.StreetAccess.GetHashCode();
                if (this.StreetMaintenance != null)
                    hashCode = hashCode * 59 + this.StreetMaintenance.GetHashCode();
                if (this.SystemUsed != null)
                    hashCode = hashCode * 59 + this.SystemUsed.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.TitleLimitations1 != null)
                    hashCode = hashCode * 59 + this.TitleLimitations1.GetHashCode();
                if (this.TitleLimitations2 != null)
                    hashCode = hashCode * 59 + this.TitleLimitations2.GetHashCode();
                if (this.TitleLimitations3 != null)
                    hashCode = hashCode * 59 + this.TitleLimitations3.GetHashCode();
                if (this.TotalBaths != null)
                    hashCode = hashCode * 59 + this.TotalBaths.GetHashCode();
                if (this.TotalBedrooms != null)
                    hashCode = hashCode * 59 + this.TotalBedrooms.GetHashCode();
                if (this.TotalDebtMonthlyPayment != null)
                    hashCode = hashCode * 59 + this.TotalDebtMonthlyPayment.GetHashCode();
                if (this.TotalDiscountPointCharged != null)
                    hashCode = hashCode * 59 + this.TotalDiscountPointCharged.GetHashCode();
                if (this.TotalDiscountPointsCharged != null)
                    hashCode = hashCode * 59 + this.TotalDiscountPointsCharged.GetHashCode();
                if (this.TotalForMaxLoanAmount != null)
                    hashCode = hashCode * 59 + this.TotalForMaxLoanAmount.GetHashCode();
                if (this.TotalRooms != null)
                    hashCode = hashCode * 59 + this.TotalRooms.GetHashCode();
                if (this.TypeOfHybridARM != null)
                    hashCode = hashCode * 59 + this.TypeOfHybridARM.GetHashCode();
                if (this.TypeOfMortgage != null)
                    hashCode = hashCode * 59 + this.TypeOfMortgage.GetHashCode();
                if (this.TypeOfOwnsership != null)
                    hashCode = hashCode * 59 + this.TypeOfOwnsership.GetHashCode();
                if (this.TypeOfStructure != null)
                    hashCode = hashCode * 59 + this.TypeOfStructure.GetHashCode();
                if (this.TypeOfVeteran != null)
                    hashCode = hashCode * 59 + this.TypeOfVeteran.GetHashCode();
                if (this.UtilitiesElectricDescription != null)
                    hashCode = hashCode * 59 + this.UtilitiesElectricDescription.GetHashCode();
                if (this.UtilitiesGasDescription != null)
                    hashCode = hashCode * 59 + this.UtilitiesGasDescription.GetHashCode();
                if (this.UtilitiesSewerDescription != null)
                    hashCode = hashCode * 59 + this.UtilitiesSewerDescription.GetHashCode();
                if (this.UtilitiesWaterDescription != null)
                    hashCode = hashCode * 59 + this.UtilitiesWaterDescription.GetHashCode();
                if (this.VABenefitRelatedIndebtedness != null)
                    hashCode = hashCode * 59 + this.VABenefitRelatedIndebtedness.GetHashCode();
                if (this.VABuilderIDNo != null)
                    hashCode = hashCode * 59 + this.VABuilderIDNo.GetHashCode();
                if (this.VAClaimFolderNumber != null)
                    hashCode = hashCode * 59 + this.VAClaimFolderNumber.GetHashCode();
                if (this.VAClaimNumber != null)
                    hashCode = hashCode * 59 + this.VAClaimNumber.GetHashCode();
                if (this.VaLoanSummaryApplicantType != null)
                    hashCode = hashCode * 59 + this.VaLoanSummaryApplicantType.GetHashCode();
                if (this.VentFanIndicator != null)
                    hashCode = hashCode * 59 + this.VentFanIndicator.GetHashCode();
                if (this.VeteranDischargedIndicator != null)
                    hashCode = hashCode * 59 + this.VeteranDischargedIndicator.GetHashCode();
                if (this.VeteranServiceType != null)
                    hashCode = hashCode * 59 + this.VeteranServiceType.GetHashCode();
                if (this.WarrantorAddress != null)
                    hashCode = hashCode * 59 + this.WarrantorAddress.GetHashCode();
                if (this.WarrantorCity != null)
                    hashCode = hashCode * 59 + this.WarrantorCity.GetHashCode();
                if (this.WarrantorName != null)
                    hashCode = hashCode * 59 + this.WarrantorName.GetHashCode();
                if (this.WarrantorPhone != null)
                    hashCode = hashCode * 59 + this.WarrantorPhone.GetHashCode();
                if (this.WarrantorPostalCode != null)
                    hashCode = hashCode * 59 + this.WarrantorPostalCode.GetHashCode();
                if (this.WarrantorState != null)
                    hashCode = hashCode * 59 + this.WarrantorState.GetHashCode();
                if (this.WarrantyProgramExpirationDate != null)
                    hashCode = hashCode * 59 + this.WarrantyProgramExpirationDate.GetHashCode();
                if (this.WWCarpetIndicator != null)
                    hashCode = hashCode * 59 + this.WWCarpetIndicator.GetHashCode();
                if (this.VAOriginalMonthlyPayment != null)
                    hashCode = hashCode * 59 + this.VAOriginalMonthlyPayment.GetHashCode();
                if (this.VAOriginalAmortizationType != null)
                    hashCode = hashCode * 59 + this.VAOriginalAmortizationType.GetHashCode();
                if (this.VARecoupmentMonthlyDecreaseInPayment != null)
                    hashCode = hashCode * 59 + this.VARecoupmentMonthlyDecreaseInPayment.GetHashCode();
                if (this.VARecoupmentTotalClosingCosts != null)
                    hashCode = hashCode * 59 + this.VARecoupmentTotalClosingCosts.GetHashCode();
                if (this.VARecoupmentExcludePrepaids != null)
                    hashCode = hashCode * 59 + this.VARecoupmentExcludePrepaids.GetHashCode();
                if (this.VARecoupmentClosingCosts != null)
                    hashCode = hashCode * 59 + this.VARecoupmentClosingCosts.GetHashCode();
                if (this.VARecoupmentYears != null)
                    hashCode = hashCode * 59 + this.VARecoupmentYears.GetHashCode();
                if (this.VARecoupmentMonths != null)
                    hashCode = hashCode * 59 + this.VARecoupmentMonths.GetHashCode();
                if (this.VALatePaymentIn6Months != null)
                    hashCode = hashCode * 59 + this.VALatePaymentIn6Months.GetHashCode();
                if (this.VAIsDelinquent30Days != null)
                    hashCode = hashCode * 59 + this.VAIsDelinquent30Days.GetHashCode();
                if (this.TotalMonthlyPayment != null)
                    hashCode = hashCode * 59 + this.TotalMonthlyPayment.GetHashCode();
                if (this.TotalProposedMonthlyPayment != null)
                    hashCode = hashCode * 59 + this.TotalProposedMonthlyPayment.GetHashCode();
                if (this.ExcludeTaxesInsuranceIndicator != null)
                    hashCode = hashCode * 59 + this.ExcludeTaxesInsuranceIndicator.GetHashCode();
                if (this.ApplicantBirthDate != null)
                    hashCode = hashCode * 59 + this.ApplicantBirthDate.GetHashCode();
                if (this.ApplicantEmailAddressText != null)
                    hashCode = hashCode * 59 + this.ApplicantEmailAddressText.GetHashCode();
                if (this.ApplicantHomePhoneNumber != null)
                    hashCode = hashCode * 59 + this.ApplicantHomePhoneNumber.GetHashCode();
                if (this.ApplicantFirstNameWithMiddleName != null)
                    hashCode = hashCode * 59 + this.ApplicantFirstNameWithMiddleName.GetHashCode();
                if (this.ApplicantLastNameWithSuffix != null)
                    hashCode = hashCode * 59 + this.ApplicantLastNameWithSuffix.GetHashCode();
                if (this.ApplicantTaxIdentificationIdentifier != null)
                    hashCode = hashCode * 59 + this.ApplicantTaxIdentificationIdentifier.GetHashCode();
                if (this.ApplicantHmdaGenderType != null)
                    hashCode = hashCode * 59 + this.ApplicantHmdaGenderType.GetHashCode();
                if (this.ApplicantAddressStreetLine1 != null)
                    hashCode = hashCode * 59 + this.ApplicantAddressStreetLine1.GetHashCode();
                if (this.ApplicantAddressCity != null)
                    hashCode = hashCode * 59 + this.ApplicantAddressCity.GetHashCode();
                if (this.ApplicantAddressState != null)
                    hashCode = hashCode * 59 + this.ApplicantAddressState.GetHashCode();
                if (this.ApplicantAddressPostalCode != null)
                    hashCode = hashCode * 59 + this.ApplicantAddressPostalCode.GetHashCode();
                if (this.VABuilderDescription != null)
                    hashCode = hashCode * 59 + this.VABuilderDescription.GetHashCode();
                if (this.AutomaticProcedure != null)
                    hashCode = hashCode * 59 + this.AutomaticProcedure.GetHashCode();
                if (this.PriorApprovalProcedure != null)
                    hashCode = hashCode * 59 + this.PriorApprovalProcedure.GetHashCode();
                if (this.FirstChattelLoanType != null)
                    hashCode = hashCode * 59 + this.FirstChattelLoanType.GetHashCode();
                if (this.UnsecuredLoanType != null)
                    hashCode = hashCode * 59 + this.UnsecuredLoanType.GetHashCode();
                if (this.OtherLoanType != null)
                    hashCode = hashCode * 59 + this.OtherLoanType.GetHashCode();
                if (this.OtherDescriptionLoanType != null)
                    hashCode = hashCode * 59 + this.OtherDescriptionLoanType.GetHashCode();
                if (this.OtherEstateProperty != null)
                    hashCode = hashCode * 59 + this.OtherEstateProperty.GetHashCode();
                if (this.OtherDescriptionEstateProperty != null)
                    hashCode = hashCode * 59 + this.OtherDescriptionEstateProperty.GetHashCode();
                if (this.AnnualSpecialAssessment != null)
                    hashCode = hashCode * 59 + this.AnnualSpecialAssessment.GetHashCode();
                if (this.TotalUnpaidSpecialAssessments != null)
                    hashCode = hashCode * 59 + this.TotalUnpaidSpecialAssessments.GetHashCode();
                if (this.NonrealtyDescription != null)
                    hashCode = hashCode * 59 + this.NonrealtyDescription.GetHashCode();
                if (this.AdditionalSecurityDescription != null)
                    hashCode = hashCode * 59 + this.AdditionalSecurityDescription.GetHashCode();
                if (this.DateAquiredLand != null)
                    hashCode = hashCode * 59 + this.DateAquiredLand.GetHashCode();
                if (this.LandPurchasePrice != null)
                    hashCode = hashCode * 59 + this.LandPurchasePrice.GetHashCode();
                if (this.AmountTypeWithheld != null)
                    hashCode = hashCode * 59 + this.AmountTypeWithheld.GetHashCode();
                if (this.AmountWithheld != null)
                    hashCode = hashCode * 59 + this.AmountWithheld.GetHashCode();
                if (this.ReasonableValueCompleted != null)
                    hashCode = hashCode * 59 + this.ReasonableValueCompleted.GetHashCode();
                if (this.DisabilityAmountCollected != null)
                    hashCode = hashCode * 59 + this.DisabilityAmountCollected.GetHashCode();
                if (this.PestReportFee != null)
                    hashCode = hashCode * 59 + this.PestReportFee.GetHashCode();
                if (this.VATrackingSARName != null)
                    hashCode = hashCode * 59 + this.VATrackingSARName.GetHashCode();
                if (this.VATrackingSARID != null)
                    hashCode = hashCode * 59 + this.VATrackingSARID.GetHashCode();
                if (this.VATrackingIsSARLAPPCertified != null)
                    hashCode = hashCode * 59 + this.VATrackingIsSARLAPPCertified.GetHashCode();
                if (this.VAAppraisalSentDate != null)
                    hashCode = hashCode * 59 + this.VAAppraisalSentDate.GetHashCode();
                if (this.VANOVDateReceived != null)
                    hashCode = hashCode * 59 + this.VANOVDateReceived.GetHashCode();
                if (this.VANOVDateReviewed != null)
                    hashCode = hashCode * 59 + this.VANOVDateReviewed.GetHashCode();
                if (this.VANOVIssuedDate != null)
                    hashCode = hashCode * 59 + this.VANOVIssuedDate.GetHashCode();
                if (this.VADateNOVAppraisalMailedToBorrower != null)
                    hashCode = hashCode * 59 + this.VADateNOVAppraisalMailedToBorrower.GetHashCode();
                if (this.VATrackingOrderedDate != null)
                    hashCode = hashCode * 59 + this.VATrackingOrderedDate.GetHashCode();
                if (this.VATrackingCOEIssueDate != null)
                    hashCode = hashCode * 59 + this.VATrackingCOEIssueDate.GetHashCode();
                if (this.VATrackingCOEIssueHistory != null)
                    hashCode = hashCode * 59 + this.VATrackingCOEIssueHistory.GetHashCode();
                if (this.VATrackingPaidDate != null)
                    hashCode = hashCode * 59 + this.VATrackingPaidDate.GetHashCode();
                if (this.VATrackingReceiptReceived != null)
                    hashCode = hashCode * 59 + this.VATrackingReceiptReceived.GetHashCode();
                if (this.VATrackingLoanGuaranteeCertReceipt != null)
                    hashCode = hashCode * 59 + this.VATrackingLoanGuaranteeCertReceipt.GetHashCode();
                if (this.VATrackingGSAExclusionaryListChecked != null)
                    hashCode = hashCode * 59 + this.VATrackingGSAExclusionaryListChecked.GetHashCode();
                if (this.VATrackingCertOfCommitmentIssued != null)
                    hashCode = hashCode * 59 + this.VATrackingCertOfCommitmentIssued.GetHashCode();
                if (this.VATrackingMasterCommitmentLockExpired != null)
                    hashCode = hashCode * 59 + this.VATrackingMasterCommitmentLockExpired.GetHashCode();
                if (this.VATrackingFinalApprovalCommitmentDate != null)
                    hashCode = hashCode * 59 + this.VATrackingFinalApprovalCommitmentDate.GetHashCode();
                if (this.VATrackingPurchaseContractDate != null)
                    hashCode = hashCode * 59 + this.VATrackingPurchaseContractDate.GetHashCode();
                if (this.VATrackingInuranceFloodPolicy != null)
                    hashCode = hashCode * 59 + this.VATrackingInuranceFloodPolicy.GetHashCode();
                if (this.VATrackingInuranceHazardPolicy != null)
                    hashCode = hashCode * 59 + this.VATrackingInuranceHazardPolicy.GetHashCode();
                if (this.VATrackingInuranceWoodDestroyingPolicy != null)
                    hashCode = hashCode * 59 + this.VATrackingInuranceWoodDestroyingPolicy.GetHashCode();
                if (this.VATrackingInuranceWindOrHailPolicy != null)
                    hashCode = hashCode * 59 + this.VATrackingInuranceWindOrHailPolicy.GetHashCode();
                if (this.VAQualificationCountryRegion != null)
                    hashCode = hashCode * 59 + this.VAQualificationCountryRegion.GetHashCode();
                if (this.VAQualification2ndTierEntitlement != null)
                    hashCode = hashCode * 59 + this.VAQualification2ndTierEntitlement.GetHashCode();
                if (this.VAQualificationCountyLimits != null)
                    hashCode = hashCode * 59 + this.VAQualificationCountyLimits.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
